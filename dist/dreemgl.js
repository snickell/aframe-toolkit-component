/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 107);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///(webpack)/buildin/amd-define.js?");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/process/browser.js?");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(235)\nvar ieee754 = __webpack_require__(236)\nvar isArray = __webpack_require__(237)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/buffer/index.js?");

/***/ }),
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _ballrotate = __webpack_require__(9);\n\nvar _ballrotate2 = _interopRequireDefault(_ballrotate);\n\nvar _circle = __webpack_require__(10);\n\nvar _circle2 = _interopRequireDefault(_circle);\n\nvar _cone = __webpack_require__(11);\n\nvar _cone2 = _interopRequireDefault(_cone);\n\nvar _cube = __webpack_require__(12);\n\nvar _cube2 = _interopRequireDefault(_cube);\n\nvar _cylinder = __webpack_require__(13);\n\nvar _cylinder2 = _interopRequireDefault(_cylinder);\n\nvar _model = __webpack_require__(14);\n\nvar _model2 = _interopRequireDefault(_model);\n\nvar _morph3d = __webpack_require__(15);\n\nvar _morph3d2 = _interopRequireDefault(_morph3d);\n\nvar _plane = __webpack_require__(16);\n\nvar _plane2 = _interopRequireDefault(_plane);\n\nvar _rect = __webpack_require__(17);\n\nvar _rect2 = _interopRequireDefault(_rect);\n\nvar _roundedrect = __webpack_require__(18);\n\nvar _roundedrect2 = _interopRequireDefault(_roundedrect);\n\nvar _shape3d = __webpack_require__(19);\n\nvar _shape3d2 = _interopRequireDefault(_shape3d);\n\nvar _sphere = __webpack_require__(20);\n\nvar _sphere2 = _interopRequireDefault(_sphere);\n\nvar _spherecone = __webpack_require__(21);\n\nvar _spherecone2 = _interopRequireDefault(_spherecone);\n\nvar _teapot = __webpack_require__(22);\n\nvar _teapot2 = _interopRequireDefault(_teapot);\n\nvar _wiresphere = __webpack_require__(23);\n\nvar _wiresphere2 = _interopRequireDefault(_wiresphere);\n\nvar _draggable = __webpack_require__(24);\n\nvar _draggable2 = _interopRequireDefault(_draggable);\n\nvar _blend = __webpack_require__(25);\n\nvar _blend2 = _interopRequireDefault(_blend);\n\nvar _blur = __webpack_require__(26);\n\nvar _blur2 = _interopRequireDefault(_blur);\n\nvar _dpad = __webpack_require__(27);\n\nvar _dpad2 = _interopRequireDefault(_dpad);\n\nvar _keyboard = __webpack_require__(28);\n\nvar _keyboard2 = _interopRequireDefault(_keyboard);\n\nvar _knob = __webpack_require__(29);\n\nvar _knob2 = _interopRequireDefault(_knob);\n\nvar _xypad = __webpack_require__(30);\n\nvar _xypad2 = _interopRequireDefault(_xypad);\n\nvar _album = __webpack_require__(31);\n\nvar _album2 = _interopRequireDefault(_album);\n\nvar _debug = __webpack_require__(32);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _labtext = __webpack_require__(33);\n\nvar _labtext2 = _interopRequireDefault(_labtext);\n\nvar _outputs = __webpack_require__(34);\n\nvar _outputs2 = _interopRequireDefault(_outputs);\n\nvar _shaderviz = __webpack_require__(35);\n\nvar _shaderviz2 = _interopRequireDefault(_shaderviz);\n\nvar _debugd = __webpack_require__(36);\n\nvar _debugd2 = _interopRequireDefault(_debugd);\n\nvar _map = __webpack_require__(37);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _omdb = __webpack_require__(38);\n\nvar _omdb2 = _interopRequireDefault(_omdb);\n\nvar _webrequest = __webpack_require__(39);\n\nvar _webrequest2 = _interopRequireDefault(_webrequest);\n\nvar _iot = __webpack_require__(40);\n\nvar _iot2 = _interopRequireDefault(_iot);\n\nvar _accelerometer = __webpack_require__(41);\n\nvar _accelerometer2 = _interopRequireDefault(_accelerometer);\n\nvar _gyroscope = __webpack_require__(42);\n\nvar _gyroscope2 = _interopRequireDefault(_gyroscope);\n\nvar _light = __webpack_require__(43);\n\nvar _light2 = _interopRequireDefault(_light);\n\nvar _proximity = __webpack_require__(44);\n\nvar _proximity2 = _interopRequireDefault(_proximity);\n\nvar _astio = __webpack_require__(45);\n\nvar _astio2 = _interopRequireDefault(_astio);\n\nvar _composition = __webpack_require__(46);\n\nvar _composition2 = _interopRequireDefault(_composition);\n\nvar _dataset = __webpack_require__(47);\n\nvar _dataset2 = _interopRequireDefault(_dataset);\n\nvar _fileio = __webpack_require__(48);\n\nvar _fileio2 = _interopRequireDefault(_fileio);\n\nvar _role = __webpack_require__(49);\n\nvar _role2 = _interopRequireDefault(_role);\n\nvar _service = __webpack_require__(50);\n\nvar _service2 = _interopRequireDefault(_service);\n\nvar _sourceset = __webpack_require__(51);\n\nvar _sourceset2 = _interopRequireDefault(_sourceset);\n\nvar _tests = __webpack_require__(52);\n\nvar _tests2 = _interopRequireDefault(_tests);\n\nvar _bargraphic = __webpack_require__(53);\n\nvar _bargraphic2 = _interopRequireDefault(_bargraphic);\n\nvar _blurview = __webpack_require__(54);\n\nvar _blurview2 = _interopRequireDefault(_blurview);\n\nvar _button = __webpack_require__(55);\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _cadgrid = __webpack_require__(56);\n\nvar _cadgrid2 = _interopRequireDefault(_cadgrid);\n\nvar _checkbox = __webpack_require__(57);\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _drawer = __webpack_require__(58);\n\nvar _drawer2 = _interopRequireDefault(_drawer);\n\nvar _foldcontainer = __webpack_require__(59);\n\nvar _foldcontainer2 = _interopRequireDefault(_foldcontainer);\n\nvar _icon = __webpack_require__(60);\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _knob3 = __webpack_require__(61);\n\nvar _knob4 = _interopRequireDefault(_knob3);\n\nvar _label = __webpack_require__(62);\n\nvar _label2 = _interopRequireDefault(_label);\n\nvar _labelset = __webpack_require__(63);\n\nvar _labelset2 = _interopRequireDefault(_labelset);\n\nvar _lifeview = __webpack_require__(64);\n\nvar _lifeview2 = _interopRequireDefault(_lifeview);\n\nvar _menubar = __webpack_require__(65);\n\nvar _menubar2 = _interopRequireDefault(_menubar);\n\nvar _menubutton = __webpack_require__(66);\n\nvar _menubutton2 = _interopRequireDefault(_menubutton);\n\nvar _noisegrid = __webpack_require__(67);\n\nvar _noisegrid2 = _interopRequireDefault(_noisegrid);\n\nvar _numberbox = __webpack_require__(68);\n\nvar _numberbox2 = _interopRequireDefault(_numberbox);\n\nvar _radiobutton = __webpack_require__(69);\n\nvar _radiobutton2 = _interopRequireDefault(_radiobutton);\n\nvar _screen = __webpack_require__(70);\n\nvar _screen2 = _interopRequireDefault(_screen);\n\nvar _scrollbar = __webpack_require__(71);\n\nvar _scrollbar2 = _interopRequireDefault(_scrollbar);\n\nvar _slider = __webpack_require__(72);\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _speakergrid = __webpack_require__(73);\n\nvar _speakergrid2 = _interopRequireDefault(_speakergrid);\n\nvar _splitcontainer = __webpack_require__(74);\n\nvar _splitcontainer2 = _interopRequireDefault(_splitcontainer);\n\nvar _stackcontainer = __webpack_require__(75);\n\nvar _stackcontainer2 = _interopRequireDefault(_stackcontainer);\n\nvar _tabbar = __webpack_require__(76);\n\nvar _tabbar2 = _interopRequireDefault(_tabbar);\n\nvar _textbox = __webpack_require__(77);\n\nvar _textbox2 = _interopRequireDefault(_textbox);\n\nvar _tintview = __webpack_require__(78);\n\nvar _tintview2 = _interopRequireDefault(_tintview);\n\nvar _treeview = __webpack_require__(79);\n\nvar _treeview2 = _interopRequireDefault(_treeview);\n\nvar _view = __webpack_require__(80);\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _audioplayer = __webpack_require__(81);\n\nvar _audioplayer2 = _interopRequireDefault(_audioplayer);\n\nvar _colorpicker = __webpack_require__(82);\n\nvar _colorpicker2 = _interopRequireDefault(_colorpicker);\n\nvar _docviewer = __webpack_require__(83);\n\nvar _docviewer2 = _interopRequireDefault(_docviewer);\n\nvar _jseditor = __webpack_require__(84);\n\nvar _jseditor2 = _interopRequireDefault(_jseditor);\n\nvar _jsviewer = __webpack_require__(85);\n\nvar _jsviewer2 = _interopRequireDefault(_jsviewer);\n\nvar _geo = __webpack_require__(86);\n\nvar _geo2 = _interopRequireDefault(_geo);\n\nvar _map3 = __webpack_require__(87);\n\nvar _map4 = _interopRequireDefault(_map3);\n\nvar _mapbuffers = __webpack_require__(88);\n\nvar _mapbuffers2 = _interopRequireDefault(_mapbuffers);\n\nvar _mapstyle = __webpack_require__(89);\n\nvar _mapstyle2 = _interopRequireDefault(_mapstyle);\n\nvar _urlfetch = __webpack_require__(90);\n\nvar _urlfetch2 = _interopRequireDefault(_urlfetch);\n\nvar _markdown = __webpack_require__(91);\n\nvar _markdown2 = _interopRequireDefault(_markdown);\n\nvar _palette = __webpack_require__(92);\n\nvar _palette2 = _interopRequireDefault(_palette);\n\nvar _propeditor = __webpack_require__(93);\n\nvar _propeditor2 = _interopRequireDefault(_propeditor);\n\nvar _propviewer = __webpack_require__(94);\n\nvar _propviewer2 = _interopRequireDefault(_propviewer);\n\nvar _radiogroup = __webpack_require__(95);\n\nvar _radiogroup2 = _interopRequireDefault(_radiogroup);\n\nvar _searchbox = __webpack_require__(96);\n\nvar _searchbox2 = _interopRequireDefault(_searchbox);\n\nvar _slideviewer = __webpack_require__(97);\n\nvar _slideviewer2 = _interopRequireDefault(_slideviewer);\n\nvar _table = __webpack_require__(98);\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _background = __webpack_require__(99);\n\nvar _background2 = _interopRequireDefault(_background);\n\nvar _events = __webpack_require__(100);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _labels = __webpack_require__(101);\n\nvar _labels2 = _interopRequireDefault(_labels);\n\nvar _scrollbar3 = __webpack_require__(102);\n\nvar _scrollbar4 = _interopRequireDefault(_scrollbar3);\n\nvar _timeline = __webpack_require__(103);\n\nvar _timeline2 = _interopRequireDefault(_timeline);\n\nvar _toolkit = __webpack_require__(104);\n\nvar _toolkit2 = _interopRequireDefault(_toolkit);\n\nvar _tracker = __webpack_require__(105);\n\nvar _tracker2 = _interopRequireDefault(_tracker);\n\nvar _videoplayer = __webpack_require__(106);\n\nvar _videoplayer2 = _interopRequireDefault(_videoplayer);\n\nvar _animate = __webpack_require__(108);\n\nvar _animate2 = _interopRequireDefault(_animate);\n\nvar _compositionbase = __webpack_require__(109);\n\nvar _compositionbase2 = _interopRequireDefault(_compositionbase);\n\nvar _compositionclient = __webpack_require__(110);\n\nvar _compositionclient2 = _interopRequireDefault(_compositionclient);\n\nvar _device = __webpack_require__(111);\n\nvar _device2 = _interopRequireDefault(_device);\n\nvar _glslgen = __webpack_require__(112);\n\nvar _glslgen2 = _interopRequireDefault(_glslgen);\n\nvar _gltypes = __webpack_require__(113);\n\nvar _gltypes2 = _interopRequireDefault(_gltypes);\n\nvar _keyboard3 = __webpack_require__(114);\n\nvar _keyboard4 = _interopRequireDefault(_keyboard3);\n\nvar _math = __webpack_require__(115);\n\nvar _math2 = _interopRequireDefault(_math);\n\nvar _midi = __webpack_require__(116);\n\nvar _midi2 = _interopRequireDefault(_midi);\n\nvar _node = __webpack_require__(117);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _pointer = __webpack_require__(118);\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _render = __webpack_require__(119);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _shader = __webpack_require__(120);\n\nvar _shader2 = _interopRequireDefault(_shader);\n\nvar _texture = __webpack_require__(121);\n\nvar _texture2 = _interopRequireDefault(_texture);\n\nvar _worker = __webpack_require__(122);\n\nvar _worker2 = _interopRequireDefault(_worker);\n\nvar _ansicolor = __webpack_require__(123);\n\nvar _ansicolor2 = _interopRequireDefault(_ansicolor);\n\nvar _dump = __webpack_require__(124);\n\nvar _dump2 = _interopRequireDefault(_dump);\n\nvar _trace = __webpack_require__(125);\n\nvar _trace2 = _interopRequireDefault(_trace);\n\nvar _basicgeometry = __webpack_require__(126);\n\nvar _basicgeometry2 = _interopRequireDefault(_basicgeometry);\n\nvar _morphgeometry = __webpack_require__(127);\n\nvar _morphgeometry2 = _interopRequireDefault(_morphgeometry);\n\nvar _acorndef = __webpack_require__(128);\n\nvar _acorndef2 = _interopRequireDefault(_acorndef);\n\nvar _acornserializer = __webpack_require__(129);\n\nvar _acornserializer2 = _interopRequireDefault(_acornserializer);\n\nvar _astdumper = __webpack_require__(130);\n\nvar _astdumper2 = _interopRequireDefault(_astdumper);\n\nvar _astscanner = __webpack_require__(131);\n\nvar _astscanner2 = _interopRequireDefault(_astscanner);\n\nvar _astwalker = __webpack_require__(132);\n\nvar _astwalker2 = _interopRequireDefault(_astwalker);\n\nvar _htmlparser = __webpack_require__(133);\n\nvar _htmlparser2 = _interopRequireDefault(_htmlparser);\n\nvar _imageparser = __webpack_require__(134);\n\nvar _imageparser2 = _interopRequireDefault(_imageparser);\n\nvar _jsdocgen = __webpack_require__(135);\n\nvar _jsdocgen2 = _interopRequireDefault(_jsdocgen);\n\nvar _jsformatter = __webpack_require__(136);\n\nvar _jsformatter2 = _interopRequireDefault(_jsformatter);\n\nvar _onejsdef = __webpack_require__(137);\n\nvar _onejsdef2 = _interopRequireDefault(_onejsdef);\n\nvar _onejsgen = __webpack_require__(138);\n\nvar _onejsgen2 = _interopRequireDefault(_onejsgen);\n\nvar _onejsparser = __webpack_require__(139);\n\nvar _onejsparser2 = _interopRequireDefault(_onejsparser);\n\nvar _onejsserialize = __webpack_require__(140);\n\nvar _onejsserialize2 = _interopRequireDefault(_onejsserialize);\n\nvar _onejswalk = __webpack_require__(141);\n\nvar _onejswalk2 = _interopRequireDefault(_onejswalk);\n\nvar _scripterror = __webpack_require__(142);\n\nvar _scripterror2 = _interopRequireDefault(_scripterror);\n\nvar _wiredwalker = __webpack_require__(143);\n\nvar _wiredwalker2 = _interopRequireDefault(_wiredwalker);\n\nvar _bootdali = __webpack_require__(144);\n\nvar _bootdali2 = _interopRequireDefault(_bootdali);\n\nvar _compositiondali = __webpack_require__(145);\n\nvar _compositiondali2 = _interopRequireDefault(_compositiondali);\n\nvar _dali_actor = __webpack_require__(146);\n\nvar _dali_actor2 = _interopRequireDefault(_dali_actor);\n\nvar _dali_api = __webpack_require__(147);\n\nvar _dali_api2 = _interopRequireDefault(_dali_api);\n\nvar _dali_geometry = __webpack_require__(148);\n\nvar _dali_geometry2 = _interopRequireDefault(_dali_geometry);\n\nvar _dali_layer = __webpack_require__(149);\n\nvar _dali_layer2 = _interopRequireDefault(_dali_layer);\n\nvar _dali_material = __webpack_require__(150);\n\nvar _dali_material2 = _interopRequireDefault(_dali_material);\n\nvar _dali_renderer = __webpack_require__(151);\n\nvar _dali_renderer2 = _interopRequireDefault(_dali_renderer);\n\nvar _dali_shader = __webpack_require__(152);\n\nvar _dali_shader2 = _interopRequireDefault(_dali_shader);\n\nvar _daliwrapper = __webpack_require__(153);\n\nvar _daliwrapper2 = _interopRequireDefault(_daliwrapper);\n\nvar _devicedali = __webpack_require__(154);\n\nvar _devicedali2 = _interopRequireDefault(_devicedali);\n\nvar _drawpassdali = __webpack_require__(155);\n\nvar _drawpassdali2 = _interopRequireDefault(_drawpassdali);\n\nvar _keyboarddali = __webpack_require__(156);\n\nvar _keyboarddali2 = _interopRequireDefault(_keyboarddali);\n\nvar _pointerdali = __webpack_require__(157);\n\nvar _pointerdali2 = _interopRequireDefault(_pointerdali);\n\nvar _shaderdali = __webpack_require__(158);\n\nvar _shaderdali2 = _interopRequireDefault(_shaderdali);\n\nvar _texturedali = __webpack_require__(159);\n\nvar _texturedali2 = _interopRequireDefault(_texturedali);\n\nvar _workerdali = __webpack_require__(160);\n\nvar _workerdali2 = _interopRequireDefault(_workerdali);\n\nvar _bootheadless = __webpack_require__(161);\n\nvar _bootheadless2 = _interopRequireDefault(_bootheadless);\n\nvar _compositionheadless = __webpack_require__(162);\n\nvar _compositionheadless2 = _interopRequireDefault(_compositionheadless);\n\nvar _deviceheadless = __webpack_require__(163);\n\nvar _deviceheadless2 = _interopRequireDefault(_deviceheadless);\n\nvar _drawpassheadless = __webpack_require__(164);\n\nvar _drawpassheadless2 = _interopRequireDefault(_drawpassheadless);\n\nvar _headless_actor = __webpack_require__(165);\n\nvar _headless_actor2 = _interopRequireDefault(_headless_actor);\n\nvar _headless_api = __webpack_require__(166);\n\nvar _headless_api2 = _interopRequireDefault(_headless_api);\n\nvar _headless_geometry = __webpack_require__(167);\n\nvar _headless_geometry2 = _interopRequireDefault(_headless_geometry);\n\nvar _headless_layer = __webpack_require__(168);\n\nvar _headless_layer2 = _interopRequireDefault(_headless_layer);\n\nvar _headless_material = __webpack_require__(169);\n\nvar _headless_material2 = _interopRequireDefault(_headless_material);\n\nvar _headless_renderer = __webpack_require__(170);\n\nvar _headless_renderer2 = _interopRequireDefault(_headless_renderer);\n\nvar _headless_shader = __webpack_require__(171);\n\nvar _headless_shader2 = _interopRequireDefault(_headless_shader);\n\nvar _keyboardheadless = __webpack_require__(172);\n\nvar _keyboardheadless2 = _interopRequireDefault(_keyboardheadless);\n\nvar _pointerheadless = __webpack_require__(173);\n\nvar _pointerheadless2 = _interopRequireDefault(_pointerheadless);\n\nvar _shaderheadless = __webpack_require__(174);\n\nvar _shaderheadless2 = _interopRequireDefault(_shaderheadless);\n\nvar _textureheadless = __webpack_require__(175);\n\nvar _textureheadless2 = _interopRequireDefault(_textureheadless);\n\nvar _workerheadless = __webpack_require__(176);\n\nvar _workerheadless2 = _interopRequireDefault(_workerheadless);\n\nvar _bootnodegl = __webpack_require__(177);\n\nvar _bootnodegl2 = _interopRequireDefault(_bootnodegl);\n\nvar _compositionnodegl = __webpack_require__(178);\n\nvar _compositionnodegl2 = _interopRequireDefault(_compositionnodegl);\n\nvar _devicenodegl = __webpack_require__(179);\n\nvar _devicenodegl2 = _interopRequireDefault(_devicenodegl);\n\nvar _drawpassnodegl = __webpack_require__(180);\n\nvar _drawpassnodegl2 = _interopRequireDefault(_drawpassnodegl);\n\nvar _keyboardnodegl = __webpack_require__(181);\n\nvar _keyboardnodegl2 = _interopRequireDefault(_keyboardnodegl);\n\nvar _pointernodegl = __webpack_require__(182);\n\nvar _pointernodegl2 = _interopRequireDefault(_pointernodegl);\n\nvar _shadernodegl = __webpack_require__(183);\n\nvar _shadernodegl2 = _interopRequireDefault(_shadernodegl);\n\nvar _texturenodegl = __webpack_require__(184);\n\nvar _texturenodegl2 = _interopRequireDefault(_texturenodegl);\n\nvar _workernodegl = __webpack_require__(185);\n\nvar _workernodegl2 = _interopRequireDefault(_workernodegl);\n\nvar _compositionnodejs = __webpack_require__(186);\n\nvar _compositionnodejs2 = _interopRequireDefault(_compositionnodejs);\n\nvar _devicenodejs = __webpack_require__(187);\n\nvar _devicenodejs2 = _interopRequireDefault(_devicenodejs);\n\nvar _midinodejs = __webpack_require__(188);\n\nvar _midinodejs2 = _interopRequireDefault(_midinodejs);\n\nvar _shadernodejs = __webpack_require__(189);\n\nvar _shadernodejs2 = _interopRequireDefault(_shadernodejs);\n\nvar _texturenodejs = __webpack_require__(190);\n\nvar _texturenodejs2 = _interopRequireDefault(_texturenodejs);\n\nvar _workernodejs = __webpack_require__(191);\n\nvar _workernodejs2 = _interopRequireDefault(_workernodejs);\n\nvar _compositionwebgl = __webpack_require__(192);\n\nvar _compositionwebgl2 = _interopRequireDefault(_compositionwebgl);\n\nvar _debugwebgl = __webpack_require__(193);\n\nvar _debugwebgl2 = _interopRequireDefault(_debugwebgl);\n\nvar _devicewebgl = __webpack_require__(194);\n\nvar _devicewebgl2 = _interopRequireDefault(_devicewebgl);\n\nvar _drawpasswebgl = __webpack_require__(195);\n\nvar _drawpasswebgl2 = _interopRequireDefault(_drawpasswebgl);\n\nvar _keyboardwebgl = __webpack_require__(196);\n\nvar _keyboardwebgl2 = _interopRequireDefault(_keyboardwebgl);\n\nvar _midiwebgl = __webpack_require__(197);\n\nvar _midiwebgl2 = _interopRequireDefault(_midiwebgl);\n\nvar _pointerwebgl = __webpack_require__(198);\n\nvar _pointerwebgl2 = _interopRequireDefault(_pointerwebgl);\n\nvar _shaderwebgl = __webpack_require__(199);\n\nvar _shaderwebgl2 = _interopRequireDefault(_shaderwebgl);\n\nvar _texturewebgl = __webpack_require__(200);\n\nvar _texturewebgl2 = _interopRequireDefault(_texturewebgl);\n\nvar _workerwebgl = __webpack_require__(201);\n\nvar _workerwebgl2 = _interopRequireDefault(_workerwebgl);\n\nvar _busclient = __webpack_require__(202);\n\nvar _busclient2 = _interopRequireDefault(_busclient);\n\nvar _busserver = __webpack_require__(203);\n\nvar _busserver2 = _interopRequireDefault(_busserver);\n\nvar _rpchub = __webpack_require__(204);\n\nvar _rpchub2 = _interopRequireDefault(_rpchub);\n\nvar _rpcproxy = __webpack_require__(205);\n\nvar _rpcproxy2 = _interopRequireDefault(_rpcproxy);\n\nvar _webrtc = __webpack_require__(206);\n\nvar _webrtc2 = _interopRequireDefault(_webrtc);\n\nvar _worker3 = __webpack_require__(207);\n\nvar _worker4 = _interopRequireDefault(_worker3);\n\nvar _childpromise = __webpack_require__(208);\n\nvar _childpromise2 = _interopRequireDefault(_childpromise);\n\nvar _compositionserver = __webpack_require__(209);\n\nvar _compositionserver2 = _interopRequireDefault(_compositionserver);\n\nvar _docbuilder = __webpack_require__(210);\n\nvar _docbuilder2 = _interopRequireDefault(_docbuilder);\n\nvar _externalapps = __webpack_require__(211);\n\nvar _externalapps2 = _interopRequireDefault(_externalapps);\n\nvar _filewatcher = __webpack_require__(212);\n\nvar _filewatcher2 = _interopRequireDefault(_filewatcher);\n\nvar _gitsync = __webpack_require__(213);\n\nvar _gitsync2 = _interopRequireDefault(_gitsync);\n\nvar _mimefromfile = __webpack_require__(214);\n\nvar _mimefromfile2 = _interopRequireDefault(_mimefromfile);\n\nvar _nodehttp = __webpack_require__(215);\n\nvar _nodehttp2 = _interopRequireDefault(_nodehttp);\n\nvar _nodewebsocket = __webpack_require__(216);\n\nvar _nodewebsocket2 = _interopRequireDefault(_nodewebsocket);\n\nvar _rootserver = __webpack_require__(217);\n\nvar _rootserver2 = _interopRequireDefault(_rootserver);\n\nvar _runmonitor = __webpack_require__(218);\n\nvar _runmonitor2 = _interopRequireDefault(_runmonitor);\n\nvar _xmlconverter = __webpack_require__(219);\n\nvar _xmlconverter2 = _interopRequireDefault(_xmlconverter);\n\nvar _colorlib = __webpack_require__(220);\n\nvar _colorlib2 = _interopRequireDefault(_colorlib);\n\nvar _demolib = __webpack_require__(221);\n\nvar _demolib2 = _interopRequireDefault(_demolib);\n\nvar _materiallib = __webpack_require__(222);\n\nvar _materiallib2 = _interopRequireDefault(_materiallib);\n\nvar _mathlib = __webpack_require__(223);\n\nvar _mathlib2 = _interopRequireDefault(_mathlib);\n\nvar _noiselib = __webpack_require__(224);\n\nvar _noiselib2 = _interopRequireDefault(_noiselib);\n\nvar _palettelib = __webpack_require__(225);\n\nvar _palettelib2 = _interopRequireDefault(_palettelib);\n\nvar _shapelib = __webpack_require__(226);\n\nvar _shapelib2 = _interopRequireDefault(_shapelib);\n\nvar _cursorset = __webpack_require__(227);\n\nvar _cursorset2 = _interopRequireDefault(_cursorset);\n\nvar _singlecursor = __webpack_require__(228);\n\nvar _singlecursor2 = _interopRequireDefault(_singlecursor);\n\nvar _textboximpl = __webpack_require__(229);\n\nvar _textboximpl2 = _interopRequireDefault(_textboximpl);\n\nvar _cursorshader = __webpack_require__(230);\n\nvar _cursorshader2 = _interopRequireDefault(_cursorshader);\n\nvar _fontsdfgen = __webpack_require__(231);\n\nvar _fontsdfgen2 = _interopRequireDefault(_fontsdfgen);\n\nvar _markershader = __webpack_require__(232);\n\nvar _markershader2 = _interopRequireDefault(_markershader);\n\nvar _typefaceshader = __webpack_require__(233);\n\nvar _typefaceshader2 = _interopRequireDefault(_typefaceshader);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./library.js\n// module id = 6\n// module chunks = 0\n\n//# sourceURL=webpack:///./library.js?");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, setImmediate, process) {\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\nvar _library = __webpack_require__(6);\n\nvar _library2 = _interopRequireDefault(_library);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Micro AMD module loader for browser and node.js and basic system homogenisation library\n\n// READ FIRST\n// The nodejs server is CLIENT-SIDE-MIDDELWARE for prototyping and development\n// not a web-facing backend.\n// dreemGL is not optimized to be a neat NPM module, fit into browserify or express or otherwise\n// be a grab-and-use JS thing that respects the constraints that this would requireDreem.\n// Also any nodejs code is NOT deploy-safe because of the automatic RPC system and should\n// NOT be put webfacing as is.\n// And since it keeps websocket connections to all clients for live reloading\n// and RPC, it will rapidly stop working if faced with any large number of connections.\n// The RPC is by default broadcast and does NOT have cross client security considerations\n// A packaging solution for deploying any dreemGL to a webpage is on the todo list\n\n// Notes on the design and edgeconditions of dreemGL:\n// dreemGL has a decent amount of global types and values. yes. globals.\n// dreemGL is a prototyping toolkit, and aimed at quickly being able to do certain things\n// having globals helps there and most have been carefully chosen to be global.\n// Also all the math things are global, in math.js to be more GLSL-like in JS.\n// The prototypes of Float32Array are modified to add the GLSL swizzle (.xyxy) apis.\n// The nodeJS Module loader is hooked to allow for loading the custom AMD extension\n// you see in dreemGL, which fuses classes with modules. And this may have some\n// compatibility repercussions for some modules that assume 'define' works a certain way\n// If you need to require nodejs modules using the require provided by define,\n// use require('module') dont use './' or '/' these are interpreted as defineDreem.js modules\n// The browser require will ignore require('module') so if you stick to a clean\n// classdef it can safely load up 'nodejs' classes to inspect their interfaces for RPC\n// All these choices are to support the design goals of dreemGL some of which are:\n// - be a low cognitive overhead prototyping toolkit\n// - symmetrical loading of the entire 'app' in both nodejs and browser for automatic\n//   rpc interface handling\n// - low jank, all rendering in JS (the timeline is super important here)\n// - do not transcompile anything and run in browser and node with same files\n// - optimized live editability and reloading of all class hierarchy parts (thats the reason\n//   the modulesystem + classes are fused)\n\n\nconsole.log(\"Ordering? ====?\");\n\nconsole.log(\"loading Define\");\n\n(function define_module() {\n\n\tvar config_define;\n\tif (typeof window !== 'undefined') config_define = window.define;else if (typeof self !== 'undefined') config_define = self.define;else if (typeof global !== 'undefined') config_define = global.define;\n\n\t// the main define function\n\tfunction defineDreem(factory, pkg) {\n\t\tif (pkg !== undefined) {\n\t\t\t// precompiled version\n\t\t\tdefineDreem.factory[pkg] = factory;\n\t\t\treturn;\n\t\t}\n\t\tdefineDreem.last_factory = factory; // store for the script tag\n\t\t// continue calling\n\t\tif (defineDreem.define) defineDreem.defineDreem(factory);\n\t}\n\n\tif (typeof window !== 'undefined') window.define = __webpack_require__(0), defineDreem.$environment = 'browser';else if (typeof self !== 'undefined') self.define = __webpack_require__(0), defineDreem.$environment = 'worker';else if (typeof global !== 'undefined') {\n\t\tObject.defineProperty(global, \"define\", {\n\t\t\tvalue: __webpack_require__(0),\n\t\t\twritable: false\n\t\t});\n\t\tdefineDreem.$environment = 'nodejs';\n\t} else defineDreem.$environment = 'v8';\n\n\t// default config variables\n\tdefineDreem.inner = define_module;\n\n\tdefineDreem.$root = '';\n\tdefineDreem.$system = '$root/system';\n\n\tdefineDreem.local_classes = {};\n\tdefineDreem.local_require_stack = [];\n\tdefineDreem.ignore_reload = {};\n\n\tdefineDreem.partial_reload = true;\n\tdefineDreem.reload_id = 0;\n\n\t// turns on debug naming of classes (very useful)\n\tdefineDreem.debug = true;\n\n\t// copy configuration onto define\n\tif ((typeof config_define === \"undefined\" ? \"undefined\" : _typeof(config_define)) == 'object') for (var key in config_define) {\n\t\t__webpack_require__(0)[key] = config_define[key];\n\t}\n\n\t// storage structures\n\tdefineDreem.module = {};\n\tdefineDreem.factory = {};\n\n\t// File path handling utilities\n\n\n\tdefineDreem.fileName = function (file) {\n\t\tfile = file.replace(/\\\\/g, '/');\n\t\tvar file = file.slice(defineDreem.filePath(file).length);\n\t\tif (file.charAt(0) == '/') return file.slice(1);\n\t\treturn file;\n\t};\n\n\tdefineDreem.filePath = function (file) {\n\t\tif (!file) return '';\n\t\tfile = file.replace(/\\.\\//g, '');\n\t\tvar m = file.match(/([\\s\\S]*)\\/[^\\/]*$/);\n\t\treturn m ? m[1] : '';\n\t};\n\n\tdefineDreem.fileExt = function (file) {\n\t\t// parse from the last . to end\n\t\tvar m = file.match(/\\.([^.\\/]+)($|\\?)/);\n\t\tif (!m) return '';\n\t\treturn m[1].toLowerCase();\n\t};\n\n\tdefineDreem.fileBase = function (file) {\n\t\tvar fn = defineDreem.fileName(file);\n\t\tvar idx = fn.lastIndexOf('.');\n\t\tif (idx !== -1) return fn.slice(0, idx);\n\t\treturn fn;\n\t};\n\n\tdefineDreem.cleanPath = function (path) {\n\t\treturn path.replace(/^\\/+/, '/').replace(/([^:])\\/+/g, '$1/');\n\t};\n\n\tdefineDreem.joinPath = function (base, relative, rx) {\n\t\tif (relative.charAt(0) != '.') {\n\t\t\t// relative is already absolute\n\t\t\tif (relative.charAt(0) == '/' || relative.indexOf(':') != -1) {\n\t\t\t\treturn relative;\n\t\t\t}\n\t\t\tvar path = base + '/' + relative;\n\t\t\treturn defineDreem.cleanPath(path);\n\t\t}\n\t\tbase = base.split(rx || /\\//);\n\t\trelative = relative.replace(/\\.\\.\\//g, function () {\n\t\t\tbase.pop();return '';\n\t\t}).replace(/\\.\\//g, '');\n\t\treturn defineDreem.cleanPath(base.join('/') + '/' + relative);\n\t};\n\n\t// constrain the path to any $symbol/ directory\n\tdefineDreem.safePath = function (name) {\n\t\tname = name.replace(/\\\\/g, '/');\n\t\tvar id = name.indexOf('..');\n\t\tif (id !== -1) {\n\t\t\tvar base = name.slice(0, id);\n\t\t\tvar rel = name.slice(id);\n\t\t\tvar path = defineDreem.joinPath(base, rel);\n\t\t\tif (path.indexOf('..') !== -1) return undefined;\n\t\t\tif (path.indexOf('./') !== -1) return undefined;\n\t\t\tif (path.charAt(0) !== '$') return undefined;\n\t\t\treturn path;\n\t\t}\n\t\tif (name.charAt(0) !== '$') return undefined;\n\t\tif (name.indexOf('./') !== -1) return undefined;\n\t\treturn name;\n\t};\n\n\tdefineDreem.expandVariables = function (str) {\n\t\treturn defineDreem.cleanPath(str.replace(/(\\$[a-zA-Z0-9]+[a-zA-Z0-9]*)/g, function (all, lut) {\n\t\t\tif (!(lut in __webpack_require__(0))) {\n\t\t\t\tthrow new Error(\"Cannot find \" + lut + \" used in require\");\n\t\t\t}\n\t\t\treturn defineDreem.expandVariables(__webpack_require__(0)[lut]);\n\t\t}));\n\t};\n\n\tdefineDreem.lookupFileType = function (type) {\n\t\ttype = type.toLowerCase();\n\n\t\tif (type === 'json') return 'json';\n\t\tif (type === 'txt' || type === 'obj' || type === 'text' || type === 'md') return 'text';\n\n\t\treturn 'arraybuffer';\n\t};\n\n\tdefineDreem.processFileType = function (type, blob) {\n\t\tif (type === 'glf') return defineDreem.parseGLF(blob);\n\t\treturn blob;\n\t};\n\t/*\n \tdefineDreem.global = function(object){\n \t\tvar glob = typeof process !== 'undefined'? global: typeof window !=='undefined'? window: self\n \t\tfor(var key in object){\n \t\t\tglob[key] = object[key]\n \t\t}\n \t}\n */\n\t// returns a class dir you can use, has / appended already\n\tdefineDreem.classPath = function (cls) {\n\t\tif (cls.prototype) cls = cls.prototype;\n\t\tvar mod = cls.constructor.module;\n\t\tvar fn = mod.filename.replace(/\\\\/g, '/');\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tvar path = defineDreem.expandVariables(__webpack_require__(0)['$' + key]);\n\t\t\tif (fn.indexOf(path) === 0) {\n\t\t\t\t// Return the class path as a symbol base\n\t\t\t\tvar ext = fn.slice(path.length);\n\t\t\t\treturn defineDreem.filePath('$' + key + (ext.charAt(0) !== '/' ? '/' : '') + ext) + '/';\n\t\t\t}\n\t\t}\n\t};\n\n\tdefineDreem.deferPromise = function () {\n\t\tvar res, rej;\n\t\tvar prom = new defineDreem.Promise(function (ires, irej) {\n\t\t\tres = ires, rej = irej;\n\t\t});\n\t\tprom.resolve = res;\n\t\tprom.reject = rej;\n\t\treturn prom;\n\t};\n\n\t//  require implementation\n\n\n\tdefineDreem.localRequire = function (base_path, from_file) {\n\t\tfunction require(dep_path, ext) {\n\n\t\t\tconsole.warn(\"disabled requireDreem(\", dep_path, ext, \")\");\n\t\t\treturn;\n\n\t\t\t// skip nodejs style includes\n\t\t\tvar abs_path = defineDreem.joinPath(base_path, defineDreem.expandVariables(dep_path));\n\t\t\tif (!ext && !defineDreem.fileExt(abs_path)) abs_path = abs_path + '.js';\n\n\t\t\t// lets look it up\n\t\t\tvar module = defineDreem.module[abs_path];\n\t\t\tif (module) return module.exports;\n\n\t\t\t// otherwise lets initialize the module\n\t\t\tvar factory = defineDreem.factory[abs_path];\n\n\t\t\tif (!factory && dep_path.indexOf('$') === -1 && dep_path.charAt(0) !== '.') {\n\t\t\t\t//console.log(abs_path)\n\t\t\t\t//console.log('skipping', dep_path)\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// lets reverse our path\n\n\n\t\t\tmodule = { exports: {}, factory: factory, id: abs_path, filename: abs_path };\n\t\t\tdefineDreem.module[abs_path] = module;\n\t\t\tif (factory === null) return null; // its not an AMD module, but accept that\n\t\t\tif (!factory) throw new Error(\"Cannot find factory for module (file not found): \" + dep_path + \" > \" + abs_path);\n\n\t\t\t// call the factory\n\t\t\tif (typeof factory == 'function') {\n\t\t\t\tvar localreq = defineDreem.localRequire(defineDreem.filePath(abs_path), abs_path);\n\n\t\t\t\tlocalreq.module = module;\n\n\t\t\t\tdefineDreem.local_require_stack.push(localreq);\n\t\t\t\ttry {\n\t\t\t\t\tvar ret = factory.call(module.exports, localreq, module.exports, module);\n\t\t\t\t} finally {\n\t\t\t\t\tdefineDreem.local_require_stack.pop();\n\t\t\t\t}\n\t\t\t\tif (ret !== undefined) module.exports = ret;\n\t\t\t} else module.exports = factory;\n\t\t\t// post process hook\n\t\t\tif (defineDreem.atModule) defineDreem.atModule(module);\n\n\t\t\treturn module.exports;\n\t\t}\n\n\t\trequireDreem.loaded = function (path, ext) {\n\t\t\tvar dep_path = defineDreem.joinPath(base_path, defineDreem.expandVariables(path));\n\t\t\tif (defineDreem.factory[dep_path]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\trequireDreem.async = function (path, ext) {\n\t\t\tvar dep_path = defineDreem.joinPath(base_path, defineDreem.expandVariables(path));\n\t\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\t\tif (defineDreem.factory[dep_path]) {\n\t\t\t\t\t// if its already asynchronously loading..\n\t\t\t\t\tvar module = require(path, ext);\n\t\t\t\t\treturn resolve(module);\n\t\t\t\t}\n\t\t\t\tdefineDreem.loadAsync(dep_path, from_file, ext).then(function () {\n\t\t\t\t\tvar module = require(path, ext);\n\t\t\t\t\tresolve(module);\n\t\t\t\t}, reject);\n\t\t\t});\n\t\t};\n\n\t\trequireDreem.reloadAsync = function (path) {\n\n\t\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\n\t\t\t\tdefineDreem.reload_id++;\n\n\t\t\t\t// lets wipe the old module\n\t\t\t\tvar old_module = defineDreem.module[path];\n\t\t\t\tvar old_factory = defineDreem.factory[path];\n\n\t\t\t\tdefineDreem.module[path] = defineDreem.factory[path] = undefined;\n\n\t\t\t\t// lets require it async\n\t\t\t\tdefineDreem.requireDreem.async(path).then(function (new_class) {\n\t\t\t\t\t// fetch all modules dependent on this class, and all dependent on those\n\t\t\t\t\t// and cause them to reinitialize\n\t\t\t\t\tfunction wipe_module(name) {\n\t\t\t\t\t\t//console.log(\"Reloading \"+defineDreem.fileName(name))\n\t\t\t\t\t\tfor (var key in defineDreem.factory) {\n\t\t\t\t\t\t\tvar fac = defineDreem.factory[key];\n\t\t\t\t\t\t\tif (!fac) continue;\n\t\t\t\t\t\t\tvar deps = fac.deps;\n\t\t\t\t\t\t\tif (key !== name && defineDreem.module[key] && deps && deps.indexOf(name) !== -1) {\n\t\t\t\t\t\t\t\t// remove module\n\t\t\t\t\t\t\t\tdefineDreem.module[key] = undefined;\n\t\t\t\t\t\t\t\t// try to wipe all modules that depend our this one\n\t\t\t\t\t\t\t\twipe_module(key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twipe_module(path);\n\n\t\t\t\t\tresolve(defineDreem.module[path]);\n\t\t\t\t}).catch(function (error) {\n\n\t\t\t\t\tdefineDreem.module[path] = old_module;\n\t\t\t\t\tdefineDreem.factory[path] = old_factory;\n\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\treturn require;\n\t};\n\n\tdefineDreem.require = defineDreem.localRequire('', 'root');\n\n\tdefineDreem.findRequiresInFactory = function (factory, req) {\n\t\tvar search = factory.toString();\n\n\t\tif (factory.body) search += '\\n' + factory.body.toString();\n\t\tif (factory.depstring) search += '\\n' + factory.depstring.toString();\n\n\t\treq = req || [];\n\t\t// bail out if we redefine require\n\t\tif (search.match(/function\\s+require/) || search.match(/var\\s+require/)) {\n\t\t\treturn req;\n\t\t}\n\n\t\tsearch.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '').replace(/([^:]|^)\\/\\/[^\\n]*/g, '$1').replace(/require\\s*\\(\\s*[\"']([^\"']+)[\"']\\s*\\)/g, function (m, path) {\n\n\t\t\treq.push(path);\n\t\t});\n\n\t\t// fetch string baseclasses for nested classes and add them\n\t\tvar baserx = new RegExp(/define\\.class\\s*\\(\\s*(?:this\\s*,\\s*['\"][$_\\w]+['\"]\\s*,\\s*)?(?:['\"]([^\"']+)['\"]\\s*,\\s*)function/g);\n\n\t\twhile ((result = baserx.exec(search)) !== null) {\n\t\t\treq.push(result[1]);\n\t\t}\n\n\t\treturn req;\n\t};\n\n\tdefineDreem.buildClassArgs = function (fn) {\n\t\t// Ideally these regexps are better, not vastly slower but maybe proper specwise matching for stuff, its a bit rough now\n\t\t// This is otherwise known as a 'really bad idea'. However this makes the modules work easily, with a relatively small collision risk.\n\t\tvar str = fn.toString();\n\n\t\tstr = str.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '').replace(/\\/\\/[^\\n]*/g, '');\n\n\t\tvar result;\n\t\tvar output = [];\n\t\tvar result = str.match(/function\\s*[$_\\w]*\\s*\\(([$_\\w,\\s]*)\\)/);\n\n\t\tvar map = result[1].split(/\\s*,\\s*/);\n\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\tif (map[i] !== '') output.push(map[i].trim());\n\t\t} // now fetch all the fast classdeps\n\t\tvar matchrx = new RegExp(/define\\.class\\s*\\(\\s*(?:this\\s*,\\s*['\"][$_\\w]+['\"]\\s*,\\s*)?(?:(?:['\"][[^\"']+['\"]|[$_\\w]+)\\s*,\\s*)?function\\s*[$_\\w]*\\s*\\(([$_\\w,\\s]*)\\)\\s*\\{/g);\n\n\t\twhile ((result = matchrx.exec(str)) !== null) {\n\t\t\toutput.push('$$');\n\t\t\tvar map = result[1].split(/\\s*,\\s*/);\n\t\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\t\tif (map[i] !== '') output.push(map[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t};\n\n\t// Class implementation\n\n\n\tdefineDreem.builtinClassArgs = {\n\t\texports: 1, module: 2, require: 3, constructor: 1, baseclass: 5, outer: 6\n\t};\n\n\tdefineDreem.walkClassArgs = function (map, callback) {\n\t\tvar path = './';\n\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\tvar arg = map[i];\n\t\t\tvar builtin = defineDreem.builtinClassArgs[arg];\n\t\t\tif (builtin) {\n\t\t\t\tcallback(builtin, undefined, i);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (arg === '$$') {\n\t\t\t\tpath = './';\n\t\t\t} else if (arg.charAt(0) === '$') {\n\t\t\t\tif (arg.charAt(arg.length - 1) === '$') {\n\t\t\t\t\t// $blabla$\n\t\t\t\t\tpath = '$' + arg.slice(1).replace(/\\$/g, '/');\n\t\t\t\t} else {\n\t\t\t\t\tif (arg.charAt(1) === '$') {\n\t\t\t\t\t\tcallback(undefined, './' + arg.slice(2).replace(/\\$/g, '/'), i); // local absolute path\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(undefined, '$' + arg.slice(1).replace(/\\$/g, '/'), i); // absolute path\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // relative path processor\n\t\t\telse if (arg.charAt(arg.length - 1) === '$') {\n\t\t\t\t\tpath += arg.replace(/\\$/g, '/');\n\t\t\t\t} else {\n\t\t\t\t\t// callback\n\t\t\t\t\tcallback(undefined, path + arg.replace(/\\$/g, '/'), i);\n\t\t\t\t}\n\t\t}\n\t};\n\n\tdefineDreem.applyBody = function (body, Constructor, baseclass, require) {\n\t\tif ((typeof body === \"undefined\" ? \"undefined\" : _typeof(body)) == 'object' && body) {\n\t\t\tfor (var key in body) {\n\t\t\t\tConstructor.prototype[key] = body[key];\n\t\t\t}return;\n\t\t}\n\t\tif (typeof body !== 'function') return;\n\n\t\t// named arguments for the class body\n\t\tvar classargs = body.classargs;\n\t\tif (!classargs) classargs = body.classargs = defineDreem.buildClassArgs(body);\n\n\t\t// allright lets go figure out our body arguments.\n\t\tvar args = [];\n\t\tthis.walkClassArgs(classargs, function (builtin, path, i) {\n\t\t\tif (builtin) {\n\t\t\t\tif (builtin === 1) args[i] = Constructor;else if (builtin === 2) args[i] = Constructor.module;else if (builtin === 3) {\n\t\t\t\t\tif (!require) throw new Error('You cant get require on the class body as argument here');\n\t\t\t\t\targs[i] = require;\n\t\t\t\t} else if (builtin === 4) args[i] = Constructor.prototype;else if (builtin === 5) args[i] = baseclass ? baseclass.prototype : undefined;else if (builtin === 6) args[i] = body.outer;\n\t\t\t} else {\n\n\t\t\t\targs[i] = require(path);\n\t\t\t\targs[i].nested_module = Constructor.module;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Constructor, 'body', { value: body });\n\t\tbody.class_args = args;\n\t\treturn body.apply(Constructor.prototype, args);\n\t};\n\n\tdefineDreem.EnvironmentStub = function (dep) {\n\t\tthis.dep = dep;\n\t};\n\n\tdefineDreem.makeClass = function (baseclass, body, require, module, nested_module, outer_this, in_name) {\n\n\t\tfunction MyConstructor() {\n\t\t\t// if called without new, just do a new\n\t\t\tvar obj = this;\n\n\t\t\tif (!(obj instanceof MyConstructor)) {\n\t\t\t\tvar constructor = defineDreem.atConstructor ? defineDreem.atConstructor(MyConstructor, arguments[0]) : MyConstructor;\n\t\t\t\tobj = Object.create(constructor.prototype);\n\t\t\t\tObject.defineProperty(obj, 'constructor', { value: constructor });\n\t\t\t}\n\n\t\t\tvar outer = MyConstructor.outer;\n\t\t\t// pass on the classroot property\n\t\t\tif (outer !== undefined) {\n\t\t\t\tif (obj.outer === undefined) obj.outer = outer;\n\t\t\t}\n\n\t\t\tif (obj._atConstructor) obj._atConstructor.apply(obj, arguments);\n\n\t\t\tif (obj.atConstructor) {\n\t\t\t\tobj.atConstructor.apply(obj, arguments);\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (defineDreem.debug) {\n\t\t\tvar fnname;\n\t\t\tif (in_name) {\n\t\t\t\tfnname = in_name;\n\t\t\t} else if (body && (body.classname || body.name)) {\n\t\t\t\tfnname = body.classname || body.name;\n\t\t\t} else if (module) {\n\t\t\t\tfnname = defineDreem.fileBase(module.filename).replace(/\\.|\\-|\\s/g, '_'); //.replace(/\\.js/g,'').replace(/\\./g,'_').replace(/\\//g,'_')\n\t\t\t} else {\n\t\t\t\t// lets make an fnname based on our callstack\n\t\t\t\tvar origin = new Error().stack.split(/\\n/)[3].match(/\\/([a-zA-Z0-9\\.]+)\\:(\\d+)\\:\\d+\\)/);\n\t\t\t\tif (!origin || origin[1] === 'defineDreem.js') {\n\t\t\t\t\tfnname = 'extend';\n\t\t\t\t\tif (baseclass && baseclass.prototype.constructor) fnname += '_' + baseclass.prototype.constructor.name;\n\t\t\t\t} else fnname = origin[1].replace(/\\.js/g, '').replace(/\\.|\\-|\\s/g, '_').replace(/\\//g, '_') + '_' + origin[2];\n\t\t\t}\n\t\t\tvar code = 'return ' + MyConstructor.toString().replace(/MyConstructor/g, fnname);\n\t\t\tvar Constructor = new Function(code)();\n\t\t} else {\n\t\t\tvar Constructor = MyConstructor;\n\t\t}\n\n\t\tvar final_at_extend = Array.isArray(body) ? body : [];\n\n\t\tif (baseclass) {\n\t\t\tConstructor.prototype = Object.create(baseclass.prototype);\n\t\t\tObject.defineProperty(Constructor.prototype, 'constructor', { value: Constructor });\n\t\t}\n\n\t\tObject.defineProperty(Constructor, 'extend', { value: function value(body, outer_this, in_name) {\n\t\t\t\t//if(this.prototype.constructor === defineDreem.StubbedClass) return defineDreem.StubbedClass\n\t\t\t\treturn defineDreem.makeClass(this, body, require, undefined, this.nested_module, outer_this, in_name);\n\t\t\t} });\n\n\t\tObject.defineProperty(Constructor, 'overlay', { value: function value(body) {\n\t\t\t\treturn defineDreem.applyBody(body, this, baseclass);\n\t\t\t} });\n\n\t\tObject.defineProperty(Constructor, 'mixin', { value: function value(body) {\n\t\t\t\tvar obj = body;\n\t\t\t\tif (typeof body === 'function') obj = body.prototype;\n\t\t\t\tvar out = this.prototype;\n\t\t\t\tfor (var key in obj) {\n\t\t\t\t\tout[key] = obj[key];\n\t\t\t\t}\n\t\t\t} });\n\n\t\tObject.defineProperty(Constructor, 'body', { value: body });\n\n\t\tif (outer_this) Constructor.outer = outer_this;\n\n\t\tif (Array.isArray(body)) {\n\t\t\tif (Constructor.prototype.atExtend) body.push(Constructor.prototype);\n\t\t} else {\n\t\t\tif (module) {\n\t\t\t\tif (body && body.mixin) module.exports = Constructor.prototype;else module.exports = Constructor;\n\n\t\t\t\tObject.defineProperty(Constructor, 'module', { value: module });\n\n\t\t\t\tdefineDreem.applyBody(body, Constructor, baseclass, require);\n\t\t\t} else if (nested_module) {\n\t\t\t\tObject.defineProperty(Constructor, 'module', { value: nested_module });\n\t\t\t\tdefineDreem.applyBody(body, Constructor, baseclass);\n\t\t\t} else {\n\t\t\t\tdefineDreem.applyBody(body, Constructor, baseclass);\n\t\t\t}\n\n\t\t\tif (Constructor.prototype.atExtend) Constructor.prototype.atExtend();\n\n\t\t\t// call atExtend on nested classes so outer class bodies can apply properties on nested classes\n\t\t\tif (final_at_extend.length) {\n\t\t\t\tfor (var i = 0; i < final_at_extend.length; i++) {\n\t\t\t\t\tfinal_at_extend[i].atExtend();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Constructor;\n\t};\n\n\tdefineDreem.mixin = function (body, body2) {\n\t\tif (typeof body2 === 'function') body = body2;\n\t\tbody.mixin = true;\n\t\treturn defineDreem.class.apply(__webpack_require__(0), arguments);\n\t};\n\n\tdefineDreem.packagedClass = function (packaged, args) {\n\t\targs[args.length - 1].packaged = packaged;\n\t\tdefineDreem.class.apply(__webpack_require__(0), args);\n\t};\n\n\t// defineDreem.class('base', function(){})                2\n\t// defineDreem.class(function(){})                        1\n\t// defineDreem.class(this, 'prop', 'base', function(){})  4\n\n\tdefineDreem.class = function () {\n\t\t// lets make a class\n\t\tvar base_class;\n\t\tvar body;\n\t\tvar is_inner;\n\t\tif (arguments.length >= 3) {\n\t\t\t// inner class\n\t\t\tis_inner = true;\n\t\t\tvar outer_this = arguments[0];\n\t\t\tvar classname = arguments[1];\n\t\t\tObject.defineProperty(outer_this, classname, {\n\t\t\t\tget: function get() {\n\t\t\t\t\tvar cls = this['_' + classname];\n\t\t\t\t\tif (cls) cls.outer = this;\n\t\t\t\t\treturn cls;\n\t\t\t\t},\n\t\t\t\tset: function set(value) {\n\t\t\t\t\t// lets kick the class off\n\t\t\t\t\tif (this.atInnerClassAssign) return this.atInnerClassAssign(classname, value);\n\n\t\t\t\t\t// default\n\t\t\t\t\tif (value === undefined || value === null || value === 0) {\n\t\t\t\t\t\tthis['_' + classname] = undefined;\n\t\t\t\t\t\tif (this.atInnerClassAssign) this.atInnerClassAssign(classname, undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof value === 'function' && Object.getPrototypeOf(value.prototype) !== Object.prototype) {\n\t\t\t\t\t\tthis['_' + classname] = value;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise use it as an extend\n\t\t\t\t\tvar cls = this['_' + classname];\n\t\t\t\t\t// ok so the problem here is, that if we are inherited\n\t\t\t\t\tthis['_' + classname] = cls.extend(value, this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (arguments.length > 3) {\n\t\t\t\tbase_class = arguments[2];\n\t\t\t\tbody = arguments[3];\n\t\t\t} else {\n\t\t\t\tbody = arguments[2];\n\t\t\t}\n\t\t\tif (typeof body === 'function') {\n\t\t\t\tbody.classname = classname;\n\t\t\t\tbody.outer = outer_this;\n\t\t\t}\n\t\t} else if (arguments.length > 1) {\n\t\t\t// class with baseclass\n\t\t\tbase_class = arguments[0];\n\t\t\tbody = arguments[1];\n\t\t} else {\n\t\t\tbody = arguments[0];\n\t\t}\n\n\t\tfunction moduleFactory(require, exports, module) {\n\t\t\tvar base;\n\t\t\tif (typeof base_class === 'string') base = require(base_class);else if (base_class) base = base_class;\n\t\t\tdefineDreem.makeClass(base, body, require, module, undefined, outer_this);\n\t\t}\n\n\t\t// make an argmap\n\t\tbody.classargs = defineDreem.buildClassArgs(body);\n\t\t// lets parse the named argument pattern for the body\n\t\tmoduleFactory.body = body;\n\t\tmoduleFactory.deps = [];\n\n\t\t// put the baseclass on the deps\n\t\tif (base_class && typeof base_class === 'string') {\n\t\t\tmoduleFactory.baseclass = defineDreem.expandVariables(base_class);\n\t\t\tmoduleFactory.deps.push(defineDreem.expandVariables(base_class));\n\t\t\tmoduleFactory.depstring = 'requireDreem(\"' + base_class + '\")';\n\t\t}\n\n\t\t// add automatic requires\n\t\tif (body.classargs) {\n\t\t\tdefineDreem.walkClassArgs(body.classargs, function (builtin, requirepath) {\n\t\t\t\tif (builtin) return;\n\t\t\t\tif (!moduleFactory.depstring) moduleFactory.depstring = '';\n\t\t\t\tmoduleFactory.deps.push(defineDreem.expandVariables(requirepath));\n\t\t\t\tmoduleFactory.depstring += 'requireDreem(\"' + requirepath + '\")';\n\t\t\t\tif (!base_class) base_class = requirepath;\n\t\t\t});\n\t\t}\n\n\t\t// if we have a local_require_stack we are a define inside a class or module body\n\t\t// so then treat it as a local class\n\t\tif (defineDreem.local_require_stack.length) {\n\t\t\tvar outer_require = defineDreem.local_require_stack[defineDreem.local_require_stack.length - 1];\n\t\t\tvar outer_module = outer_requireDreem.module;\n\t\t\tvar module = { exports: {}, filename: outer_module.filename, factory: moduleFactory, outer: outer_module };\n\t\t\tmoduleFactory(outer_require, module.exports, module);\n\n\t\t\tif (outer_this) {\n\t\t\t\touter_this['_' + classname] = module.exports;\n\t\t\t\tif (outer_this.atInnerClassAssign) outer_this.atInnerClassAssign(classname, module.exports);\n\t\t\t\tif (!outer_this.hasOwnProperty('_inner_classes')) outer_this._inner_classes = Object.create(outer_this._inner_classes || {});\n\t\t\t\touter_this._inner_classes[classname] = module.exports;\n\t\t\t}\n\n\t\t\treturn module.exports;\n\t\t}\n\t\t//if(typeof arguments[arguments.length - 1] == 'string'){ // packaged\n\t\t//\tdefineDreem(moduleFactory, arguments[arguments.length - 1])\n\t\t//}\n\t\t//else{ // unpackaged\n\t\tdefineDreem(moduleFactory, body.packaged);\n\t\t//}\n\t};\n\n\t// Implementation of a debug promise\n\n\n\tdefineDreem.debugPromiseLib = function (exports) {\n\t\t// Use polyfill for setImmediate for performance gains\n\t\tvar asap = Promise.immediateFn || typeof setImmediate === 'function' && setImmediate || function (fn) {\n\t\t\tsetTimeout(fn, 1);\n\t\t};\n\n\t\t// Polyfill for Function.prototype.bind\n\t\tfunction bind(fn, thisArg) {\n\t\t\treturn function () {\n\t\t\t\tfn.apply(thisArg, arguments);\n\t\t\t};\n\t\t}\n\n\t\tvar isArray = Array.isArray || function (value) {\n\t\t\treturn Object.prototype.toString.call(value) === \"[object Array]\";\n\t\t};\n\n\t\tfunction Promise(fn) {\n\t\t\tif (_typeof(this) !== 'object') throw new TypeError('Promises must be constructed via new');\n\t\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t\tthis._state = null;\n\t\t\tthis._value = null;\n\t\t\tthis._deferreds = [];\n\n\t\t\tdoResolve(fn, bind(resolve, this), bind(reject, this));\n\t\t}\n\n\t\tfunction handle(deferred) {\n\t\t\tvar me = this;\n\t\t\tif (this._state === null) {\n\t\t\t\tthis._deferreds.push(deferred);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tasap(function () {\n\t\t\t\tvar cb = me._state ? deferred.onFulfilled : deferred.onRejected;\n\t\t\t\tif (cb === null) {\n\t\t\t\t\t(me._state ? deferred.resolve : deferred.reject)(me._value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar ret;\n\t\t\t\t//try {\n\t\t\t\tret = cb(me._value);\n\t\t\t\t//}\n\t\t\t\t//catch (e) {\n\t\t\t\t//\tdeferred.reject(e)\n\t\t\t\t//\treturn;\n\t\t\t\t//}\n\t\t\t\tdeferred.resolve(ret);\n\t\t\t});\n\t\t}\n\n\t\tfunction resolve(newValue) {\n\t\t\t//try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === this) throw new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (newValue && ((typeof newValue === \"undefined\" ? \"undefined\" : _typeof(newValue)) === 'object' || typeof newValue === 'function')) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), bind(resolve, this), bind(reject, this));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._state = true;\n\t\t\tthis._value = newValue;\n\t\t\tfinale.call(this);\n\t\t\t//} catch (e) { reject.call(this, e); }\n\t\t}\n\n\t\tfunction reject(newValue) {\n\t\t\tthis._state = false;\n\t\t\tthis._value = newValue;\n\t\t\tfinale.call(this);\n\t\t}\n\n\t\tfunction finale() {\n\t\t\tfor (var i = 0, len = this._deferreds.length; i < len; i++) {\n\t\t\t\thandle.call(this, this._deferreds[i]);\n\t\t\t}\n\t\t\tthis._deferreds = null;\n\t\t}\n\n\t\tfunction Handler(onFulfilled, onRejected, resolve, reject) {\n\t\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\t\tthis.resolve = resolve;\n\t\t\tthis.reject = reject;\n\t\t}\n\n\t\tfunction doResolve(fn, onFulfilled, onRejected) {\n\t\t\tvar done = false;\n\t\t\ttry {\n\t\t\t\tfn(function (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tonFulfilled(value);\n\t\t\t\t}, function (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tonRejected(reason);\n\t\t\t\t});\n\t\t\t} catch (ex) {\n\t\t\t\tif (done) return;\n\t\t\t\tdone = true;\n\t\t\t\tonRejected(ex);\n\t\t\t}\n\t\t}\n\n\t\tPromise.prototype['catch'] = function (onRejected) {\n\t\t\treturn this.then(null, onRejected);\n\t\t};\n\n\t\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t\tvar me = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\thandle.call(me, new Handler(onFulfilled, onRejected, resolve, reject));\n\t\t\t});\n\t\t};\n\n\t\tPromise.all = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments.length === 1 && isArray(arguments[0]) ? arguments[0] : arguments);\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (args.length === 0) return resolve([]);\n\t\t\t\tvar remaining = args.length;\n\t\t\t\tfunction res(i, val) {\n\t\t\t\t\t//try {\n\t\t\t\t\tif (val && ((typeof val === \"undefined\" ? \"undefined\" : _typeof(val)) === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(val, function (val) {\n\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t}, reject);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t\t//} catch (ex) {\n\t\t\t\t\t//\treject(ex)\n\t\t\t\t\t//}\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\tres(i, args[i]);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tPromise.resolve = function (value) {\n\t\t\tif (value && (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) === 'object' && value.constructor === Promise) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tresolve(value);\n\t\t\t});\n\t\t};\n\n\t\tPromise.reject = function (value) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\treject(value);\n\t\t\t});\n\t\t};\n\n\t\tPromise.race = function (values) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn Promise;\n\t};\n\t// check if we are in debug mode\n\tdefineDreem.Promise = defineDreem.debugPromiseLib();\n\n\tdefineDreem.startLoader = function () {};\n\n\tdefineDreem.endLoader = function () {};\n\n\tdefineDreem.getReloadID = function () {\n\t\tvar num = defineDreem.reload_id;\n\t\tvar s = '';\n\t\twhile (num % 26) {\n\t\t\ts += String.fromCharCode(num % 26 + 97);\n\t\t\tnum = Math.floor(num / 26);\n\t\t}\n\t\treturn s;\n\t};\n\n\t// Packaged\n\n\n\tfunction define_packaged() {\n\t\tdefineDreem.require = defineDreem.localRequire('');\n\t}\n\n\t// Browser\n\n\n\tfunction define_browser() {\n\t\t// browser implementation\n\n\t\t// if define was already defined use it as a config store\n\t\t// storage structures\n\t\tdefineDreem.cputhreads = navigator.hardwareConcurrency || 2;\n\t\tdefineDreem.download_queue = {};\n\t\tdefineDreem.script_tags = {};\n\t\t// the require function passed into the factory is local\n\t\tvar app_root = defineDreem.filePath(window.location.href);\n\n\t\tdefineDreem.getModule = function (name) {\n\t\t\tvar expanded = defineDreem.expandVariables(name);\n\t\t\treturn defineDreem.module[expanded];\n\t\t};\n\n\t\t// loadAsync is the resource loader\n\t\tdefineDreem.loadAsync = function (files, from_file, inext) {\n\n\t\t\tfunction loadResource(url, from_file, recurblock, module_deps) {\n\n\t\t\t\tvar ext = inext === undefined ? defineDreem.fileExt(url) : inext;\n\t\t\t\tvar abs_url, fac_url;\n\n\t\t\t\tif (url.indexOf('http:') === 0 || url.indexOf('https:') === 0) {\n\t\t\t\t\t// we are fetching a url..\n\t\t\t\t\tfac_url = url;\n\t\t\t\t\tabs_url = defineDreem.$root + '/proxy?' + encodeURIComponent(url);\n\t\t\t\t} else {\n\t\t\t\t\tabs_url = defineDreem.expandVariables(url);\n\t\t\t\t\tif (!ext) ext = 'js', abs_url += '.' + ext;\n\t\t\t\t\tfac_url = abs_url;\n\t\t\t\t}\n\n\t\t\t\tif (defineDreem.reload_id) abs_url += '?' + defineDreem.getReloadID();\n\n\t\t\t\tif (module_deps && module_deps.indexOf(fac_url) === -1) module_deps.push(fac_url);\n\n\t\t\t\tif (defineDreem.factory[fac_url]) return new defineDreem.Promise(function (resolve) {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\n\t\t\t\tvar prom = defineDreem.download_queue[abs_url];\n\n\t\t\t\tif (prom) {\n\t\t\t\t\tif (recurblock) return new defineDreem.Promise(function (resolve) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t\t\treturn prom;\n\t\t\t\t}\n\n\t\t\t\tif (ext === 'js') {\n\t\t\t\t\tprom = loadScript(fac_url, abs_url, from_file);\n\t\t\t\t} else if (ext === 'jpg' || ext === 'jpeg' || ext === 'gif' || ext === 'png') {\n\t\t\t\t\tprom = loadImage(fac_url, abs_url, from_file);\n\t\t\t\t} else prom = loadXHR(fac_url, abs_url, from_file, ext);\n\t\t\t\tdefineDreem.download_queue[abs_url] = prom;\n\t\t\t\treturn prom;\n\t\t\t}\n\n\t\t\tfunction loadImage(facurl, url, from_file) {\n\t\t\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.src = url;\n\t\t\t\t\timg.onerror = function () {\n\t\t\t\t\t\tvar err = \"Error loading \" + url + \" from \" + from_file;\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t};\n\t\t\t\t\timg.onload = function () {\n\t\t\t\t\t\tdefineDreem.factory[facurl] = img;\n\t\t\t\t\t\tresolve(img);\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction loadXHR(facurl, url, from_file, type) {\n\t\t\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\t\t// todo, make type do other things\n\t\t\t\t\treq.responseType = defineDreem.lookupFileType(type);\n\n\t\t\t\t\treq.open(\"GET\", url, true);\n\t\t\t\t\treq.onerror = function () {\n\t\t\t\t\t\tvar err = \"Error loading \" + url + \" from \" + from_file;\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t};\n\t\t\t\t\treq.onreadystatechange = function () {\n\t\t\t\t\t\tif (req.readyState == 4) {\n\t\t\t\t\t\t\tif (req.status != 200) {\n\t\t\t\t\t\t\t\tvar err = \"Error loading \" + url + \" from \" + from_file;\n\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar blob = defineDreem.processFileType(type, req.response);\n\t\t\t\t\t\t\tdefineDreem.factory[facurl] = blob;\n\n\t\t\t\t\t\t\t// do a post process on the file type\n\t\t\t\t\t\t\tresolve(blob);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\treq.send();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// insert by script tag\n\t\t\tfunction loadScript(facurl, url, from_file) {\n\t\t\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\n\t\t\t\t\tvar script = document.createElement('script');\n\t\t\t\t\tvar base_path = defineDreem.filePath(url);\n\n\t\t\t\t\tdefineDreem.script_tags[location.origin + url] = script;\n\n\t\t\t\t\tscript.type = 'text/javascript';\n\n\t\t\t\t\t//defineDreem.script_tags[url] = script\n\t\t\t\t\twindow.onerror = function (error, url, line) {\n\t\t\t\t\t\tvar script = defineDreem.script_tags[url];\n\t\t\t\t\t\tif (script) script.onerror(error, url, line);\n\t\t\t\t\t};\n\n\t\t\t\t\tfunction onLoad() {\n\t\t\t\t\t\t//for(var key in this)console.log(keys)\n\t\t\t\t\t\t//console.log(\"ONLOAD!\", Object.keys(this))\n\t\t\t\t\t\tif (this.rejected) return;\n\t\t\t\t\t\t// pull out the last factor\n\t\t\t\t\t\tvar factory = defineDreem.last_factory;\n\n\t\t\t\t\t\tdefineDreem.factory[facurl] = factory;\n\n\t\t\t\t\t\tif (!factory) return reject(\"Factory is null for \" + url + \" from file \" + from_file + \" : \" + facurl);\n\n\t\t\t\t\t\tvar module_deps = factory.deps = [];\n\n\t\t\t\t\t\tdefineDreem.last_factory = undefined;\n\n\t\t\t\t\t\t// parse the function for other requires\n\t\t\t\t\t\tPromise.all(defineDreem.findRequiresInFactory(factory).map(function (path) {\n\t\t\t\t\t\t\t// ignore nodejs style module requires\n\t\t\t\t\t\t\tif (path.indexOf('$') === -1 && path.charAt(0) !== '.') {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar dep_path = defineDreem.joinPath(base_path, defineDreem.expandVariables(path));\n\n\t\t\t\t\t\t\treturn loadResource(dep_path, url, true, module_deps);\n\t\t\t\t\t\t})).then(function () {\n\t\t\t\t\t\t\tresolve(factory);\n\t\t\t\t\t\t\treject = undefined;\n\t\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tscript.onerror = function (exception, path, line) {\n\t\t\t\t\t\tvar error = \"Error loading \" + url + \" from \" + from_file;\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\tthis.rejected = true;\n\t\t\t\t\t\tif (reject) reject({ error: error, exception: exception, path: path, line: line });else {\n\t\t\t\t\t\t\tdefineDreem.showException({ error: error, exception: exception, path: path, line: line });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tscript.onload = onLoad;\n\t\t\t\t\tscript.onreadystatechange = function () {\n\t\t\t\t\t\tconsole.log(script.readyState);\n\t\t\t\t\t\tif (script.readyState == 'loaded' || script.readyState == 'complete') onLoad();\n\t\t\t\t\t};\n\t\t\t\t\tdefineDreem.in_body_exec = false;\n\n\t\t\t\t\tscript.src = url;\n\n\t\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (Array.isArray(files)) {\n\t\t\t\treturn Promise.all(files.map(function (file) {\n\t\t\t\t\treturn loadResource(file, from_file);\n\t\t\t\t}));\n\t\t\t} else return loadResource(files, from_file);\n\t\t};\n\n\t\t// make it available globally\n\t\twindow.define = __webpack_require__(0);\n\n\t\tdefineDreem.hideException = function () {\n\t\t\tif (defineDreem.exception_div) {\n\t\t\t\tdefineDreem.exception_div.parentNode.removeChild(defineDreem.exception_div);\n\t\t\t\tdefineDreem.exception_div = undefined;\n\t\t\t}\n\t\t};\n\n\t\tdefineDreem.showException = function (exc) {\n\t\t\tif (Object.keys(exc).length === 0) exc = { error: exc.stack, exception: exc.toString(), path: \"\", line: \"\"\n\t\t\t\t// lets append the div\n\t\t\t};var div = defineDreem.exception_div = document.createElement('div');\n\t\t\tdiv.style.cssText = 'position:absolute;left:10;top:10;padding:30px;background-color:white;border-radius:10px;border:2px dotted #ffc0c0;color:#202020;margin:20px;margin-left:20px;font-size:14pt;font-family:arial, helvetica;';\n\n\t\t\tdiv.innerHTML = \"<b>DreemGL has encountered a problem!</b><br/>\" + exc.error + \"<br/><div>\" + exc.exception + \"<br/><br/><div style='color:black'><a href='view-source:\" + exc.path + \"#\" + exc.line + \"'>in \" + exc.path + \" on line \" + exc.line + \"</a></div>\";\n\t\t\tdocument.body.appendChild(div);\n\t\t};\n\n\t\t// boot up using the MAIN property\n\t\tif (defineDreem.main) {\n\t\t\tdefineDreem.loadAsync(defineDreem.main, 'main').then(function () {\n\t\t\t\tif (defineDreem.atMain) setTimeout(function () {\n\t\t\t\t\tdefineDreem.atMain(defineDreem.require, defineDreem.main);\n\t\t\t\t}, 0);\n\t\t\t}, function (exc) {\n\t\t\t\tif (defineDreem.atException) defineDreem.atException(exc);else {\n\t\t\t\t\tdefineDreem.showException(exc);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar backoff = 1;\n\t\tdefineDreem.autoreloadConnect = function () {\n\t\t\treturn; // SETH: don't reconnect, we don't want RPC\n\t\t\tif (this.reload_socket) {\n\t\t\t\tthis.reload_socket.onclose = undefined;\n\t\t\t\tthis.reload_socket.onerror = undefined;\n\t\t\t\tthis.reload_socket.onmessage = undefined;\n\t\t\t\tthis.reload_socket.onopen = undefined;\n\t\t\t\tthis.reload_socket.close();\n\t\t\t\tthis.reload_socket = undefined;\n\t\t\t}\n\t\t\tthis.reload_socket = new WebSocket((location.href.indexOf('https') === 0 ? 'wss://' : 'ws://') + location.host);\n\n\t\t\tthis.reload_socket.onopen = function () {\n\t\t\t\tbackoff = 1;\n\t\t\t};\n\n\t\t\tthis.reload_socket.onerror = function () {};\n\n\t\t\tthis.reload_socket.onclose = function () {\n\t\t\t\tif ((backoff *= 2) > 1000) backoff = 1000;\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tdefineDreem.autoreloadConnect();\n\t\t\t\t}, backoff);\n\t\t\t};\n\n\t\t\tthis.reload_socket.onmessage = function (event) {\n\t\t\t\tvar msg = JSON.parse(event.data);\n\t\t\t\tif (msg.type === 'filechange') {\n\t\t\t\t\tif (defineDreem.ignore_reload && defineDreem.ignore_reload[msg.file]) return console.log(\"Ignoring file change on \" + msg.file);\n\t\t\t\t\tvar old_module = defineDreem.module[msg.file];\n\t\t\t\t\tdefineDreem.hideException();\n\t\t\t\t\tif (defineDreem.partial_reload && old_module && typeof old_module.exports === 'function') {\n\t\t\t\t\t\tdefineDreem.requireDreem.reloadAsync(msg.file).then(function () {\n\t\t\t\t\t\t\tif (defineDreem.atMain) defineDreem.atMain(defineDreem.require, defineDreem.main);\n\t\t\t\t\t\t}).catch(function (exception) {\n\t\t\t\t\t\t\tdefineDreem.showException(exception);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//if (old_module){\n\t\t\t\t\t\t//alert('filechange!' + msg.file)\n\t\t\t\t\t\tconsole.clear();\n\t\t\t\t\t\tlocation.href = location.href; // reload on filechange\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.type === 'close') {\n\t\t\t\t\twindow.close(); // close the window\n\t\t\t\t} else if (msg.type === 'delay') {\n\t\t\t\t\t// a delay refresh message\n\t\t\t\t\tconsole.log('Got delay refresh from server!');\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tconsole.clear();\n\t\t\t\t\t\tlocation.href = location.href;\n\t\t\t\t\t}, 1500);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tdefineDreem.autoreloadConnect();\n\t}\n\n\t// NodeJS\n\n\n\t// SETH: we don't need the nodejs version, and cannot webpack it\n\t/*\n \tfunction define_nodejs(){ // nodeJS implementation\n \t\tmodule.exports = global.define = define\n \n \t\tdefineDreem.$root = defineDreem.filePath(process.mainModule.filename.replace(/\\\\/g,'/'))\n \n \t\tvar http = requireDreem(\"http\")\n \t\tvar url = requireDreem(\"url\")\n \t\tvar fs = requireDreem(\"fs\")\n \t\tvar path = requireDreem(\"path\")\n \n \t\tvar root = defineDreem.expandVariables(defineDreem.$root)\n \n \t\tdefineDreem.makeCacheDir = function(name){\n \t\t\tvar cache_dir = path.join(root+'/cache')\n \t\t\tif(!fs.existsSync(cache_dir)) fs.mkdirSync(cache_dir)\n \n \t\t\tvar cache_node =  path.join(root+'/cache/'+name)\n \t\t\tif(!fs.existsSync(cache_node)) fs.mkdirSync(cache_node)\n \t\t\treturn cache_node\n \t\t}\n \n \t\tvar cache_path_root = defineDreem.makeCacheDir('node')\n \n \t\tdefineDreem.mapToCacheDir = function(name){\n \t\t\treturn cache_path_root + url.parse(defineDreem.expandVariables(name)).path\n \t\t}\n \n \t\tdefineDreem.getModule = function(name){\n \t\t\tvar expanded = defineDreem.expandVariables(name)\n \t\t\tif(expanded.indexOf('://')!==-1){\n \t\t\t\texpanded = defineDreem.mapToCacheDir(expanded)\n \t\t\t}\n \t\t\tvar module = defineDreem.module[expanded]\n \t\t\treturn module\n \t\t}\n \n \t\t// fetch it async!\n \t\tdefineDreem.httpGetCached = function(httpurl){\n \t\t\treturn new defineDreem.Promise(function(resolve, reject){\n \t\t\t\tvar myurl = url.parse(httpurl)\n \t\t\t\t// ok turn this url into a cachepath\n \n \t\t\t\t// lets make some dirs\n \t\t\t\tvar path = defineDreem.filePath(myurl.path)\n \t\t\t\tvar dirs = path.split('/')\n \t\t\t\tvar total = cache_path_root + '/'\n \t\t\t\tfor(var i = 0; i < dirs.length; i++){\n \t\t\t\t\ttotal += dirs[i]\n \t\t\t\t\tif(!fs.existsSync(total)) fs.mkdirSync(total)\n \t\t\t\t\ttotal += '/'\n \t\t\t\t}\n \n \t\t\t\tvar cache_path = cache_path_root + myurl.path\n \n \t\t\t\t// then we read our files ETag\n \t\t\t\tvar headers = {'client-type':'nodejs'}\n \t\t\t\tfs.stat(cache_path, function(err, stat){\n \t\t\t\t\tif(!err){ // build etag\n \t\t\t\t\t\theaders['if-none-match'] = stat.mtime.getTime() + '_' + stat.size\n \t\t\t\t\t}\n \t\t\t\t\thttp.get({\n \t\t\t\t\t\thost: myurl.hostname,\n \t\t\t\t\t\tport: myurl.port,\n \t\t\t\t\t\tpath: myurl.path,\n \t\t\t\t\t\theaders:headers\n \t\t\t\t\t},\n \t\t\t\t\tfunction(res){\n \t\t\t\t\t\t//console.log(res)\n \t\t\t\t\t\tif(res.statusCode === 200){\n \n \t\t\t\t\t\t}\n \t\t\t\t\t\telse if(res.statusCode === 304){ // cached\n \t\t\t\t\t\t\treturn resolve({path:cache_path, type:res.headers['content-type']})\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse reject({path:myurl.path,code:res.statusCode})\n \t\t\t\t\t\tif(res.headers['content-type'] === 'text/json' && defineDreem.fileExt(cache_path) === '') cache_path += '.json'\n \t\t\t\t\t\t// lets write it to disk\n \t\t\t\t\t\tvar str = fs.createWriteStream(cache_path)\n \t\t\t\t\t\tres.pipe(str)\n \n \t\t\t\t\t\tstr.on('finish', function(){\n \t\t\t\t\t\t\t// lets set the exact timestamp on our file\n \t\t\t\t\t\t\tif(res.headers.mtime){\n \t\t\t\t\t\t\t\tvar time = res.headers.mtime / 1000\n \t\t\t\t\t\t\t\tfs.utimes(cache_path, time, time)\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tresolve({path:cache_path, type:res.headers['content-type']})\n \t\t\t\t\t\t})\n \t\t\t\t\t})\n \t\t\t\t})\n \t\t\t})\n \t\t}\n \n \t\t// hook compile to keep track of module objects\n \t\tvar Module = requireDreem(\"module\")\n \t\tvar modules = []\n \t\tvar original_paths = []\n \t\tvar _compile = Module.prototype._compile\n \t\tModule.prototype._compile = function(content, filename){\n \t\t\tmodules.push(this)\n \t\t\ttry {\n \t\t\t\tvar ret = _compile.call(this, content, filename)\n \t\t\t}\n \t\t\t//catch(e){ throw e}\n \t\t\t//catch(e){\n \t\t\t//\tconsole.log(e.linenumber)\n \t\t//\t}\n \t\t\tfinally {\n \t\t\t\tmodules.pop()\n \t\t\t}\n \t\t\treturn ret\n \t\t}\n \n \t\tdefineDreem.download_queue = {}\n \n \t\tdefineDreem.define = function(factory) {\n \n \t\t\tif(factory instanceof Array) throw new Error(\"injects-style not supported\")\n \n \t\t\tvar module = modules[modules.length - 1] || requireDreem.main\n \t\t\t//console.log(original_paths)\n \t\t\t// store module and factory just like in the other envs\n \t\t\tdefineDreem.module[module.filename] = module\n \t\t\tdefineDreem.factory[module.filename] = factory\n \n \t\t\tfunction loadModuleAsync(modurl, includefrom){\n \t\t\t\tmodurl = modurl.replace(/\\\\/g , '/' );\n \t\t\t\tvar parsedmodurl = url.parse(modurl)\n \t\t\t\tvar base_path = defineDreem.filePath(modurl)\n \n \t\t\t\t// block reentry\n \t\t\t\tif(defineDreem.download_queue[modurl]){\n \t\t\t\t\treturn new defineDreem.Promise(function(resolve, reject){\n \n \t\t\t\t\t\tresolve( cache_path_root + url.parse(modurl).path )\n \t\t\t\t\t})\n \t\t\t\t\t//return defineDreem.download_queue[modurl]//\n \t\t\t\t}\n \n \t\t\t\t// we need to fetch the url, then look at its dependencies, fetch those\n \t\t\t\treturn defineDreem.download_queue[modurl] = new defineDreem.Promise(function(resolve, reject){\n \t\t\t\t\t// lets make sure we dont already have the module in our system\n \t\t\t\t\tdefineDreem.httpGetCached(modurl).then(function(result){\n \n \t\t\t\t\t\t// the root\n \t\t\t\t\t\tif(result.type === 'text/json' && defineDreem.fileExt(parsedmodurl.path) === ''){\n \t\t\t\t\t\t\tvar data = JSON.parse(fs.readFileSync(result.path).toString())\n \t\t\t\t\t\t\t// alright we get a boot file\n \t\t\t\t\t\t\t// set our root properly\n \t\t\t\t\t\t\tvar mathmodule = defineDreem.getModule('$system/base/math.js')\n \n \t\t\t\t\t\t\t// lets re-assign math\n \t\t\t\t\t\t\tdefineDreem.paths = data.paths\n \t\t\t\t\t\t\tfor(var key in data.paths){\n \t\t\t\t\t\t\t\tdefine['$'+key] = '$root/'+key\n \t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t\tdefineDreem.paths.root =\n \t\t\t\t\t\t\tdefineDreem.$root = 'http://'+parsedmodurl.hostname+':'+parsedmodurl.port+'/'\n \t\t\t\t\t\t\tvar math2 = defineDreem.mapToCacheDir('$system/base/math.js')\n \t\t\t\t\t\t\tdefineDreem.module[math2] = mathmodule\n \n \n \t\t\t\t\t\t\t// alright now, lets load up the root\n \t\t\t\t\t\t\tloadModuleAsync(defineDreem.expandVariables(data.boot), modurl).then(function(result){\n \t\t\t\t\t\t\t\t// ok so,\n \t\t\t\t\t\t\t\tresolve(result)\n \t\t\t\t\t\t\t})\n \t\t\t\t\t\t\treturn\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif(result.type.indexOf('javascript') !== -1){\n \t\t\t\t\t\t\t// lets load up the module, without initializing it\n \t\t\t\t\t\t\tdefineDreem.process_factory = true\n \n \t\t\t\t\t\t\t// open the fucker\n \t\t\t\t\t\t\ttry{\n \t\t\t\t\t\t\t\t//!TODO, make a neater way to fetch the module dependencies (dont require it twice)\n \t\t\t\t\t\t\t\trequire(result.path)\n \t\t\t\t\t\t\t\t// and lets remove it again immediately\n \t\t\t\t\t\t\t\tdelete Module._cache[result.path.indexOf(\"\\\\\") !== -1?result.path.replace(/\\//g, '\\\\'):result.path]\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tcatch(e){\n \t\t\t\t\t\t\t\tconsole.log(e.stack)\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tvar factory = defineDreem.process_factory\n \t\t\t\t\t\t\tdefineDreem.process_factory = false\n \t\t\t\t\t\t\t// alright we have a defineDreem.process_factory call we can now use.\n \t\t\t\t\t\t\tif(factory === true){\n \t\t\t\t\t\t\t\treturn resolve(result.path)\n \t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t\tPromise.all(defineDreem.findRequiresInFactory(factory).map(function(path){\n \n \t\t\t\t\t\t\t\t// ignore nodejs style module requires\n \t\t\t\t\t\t\t\tvar dep_path\n \t\t\t\t\t\t\t\tif(path.indexOf('://') !== -1){\n \t\t\t\t\t\t\t\t\tdep_path = path\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\telse if(path.indexOf('$') === -1 && path.charAt(0) !== '.'){\n \t\t\t\t\t\t\t\t\treturn null\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\telse dep_path = defineDreem.joinPath(base_path, defineDreem.expandVariables(path))\n \n \t\t\t\t\t\t\t\tvar ext = defineDreem.fileExt(dep_path)\n \t\t\t\t\t\t\t\tif(!ext) dep_path += '.js'\n \n \t\t\t\t\t\t\t\treturn loadModuleAsync(dep_path, modurl)\n \n \t\t\t\t\t\t\t})).then(function(){\n \t\t\t\t\t\t\t\t// lets finish up our factory\n \t\t\t\t\t\t\t\tresolve(result.path)\n \t\t\t\t\t\t\t}).catch(function(error){\n \t\t\t\t\t\t\t\tconsole.log(\"CAUGHT ERROR \", error)\n \t\t\t\t\t\t\t})\n \n \t\t\t\t\t\t\treturn\n \t\t\t\t\t\t\t// lets initialize the module\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn resolve(result.path)\n \n \t\t\t\t\t}).catch(function(err){\n \t\t\t\t\t\tconsole.log(\"Error in \"+modurl+\" from \"+includefrom,err,err.stack)\n \t\t\t\t\t})\n \t\t\t\t})\n \t\t\t}\n \n \n \t\t\tfunction noderequirewrapper(iname) {\n \t\t\t\tvar name = iname\n \t\t\t\tif(arguments.length != 1) throw new Error(\"Unsupported require style\")\n \t\t\t\ttry{\n \t\t\t\t\tname = defineDreem.expandVariables(name)\n \t\t\t\t}\n \t\t\t\tcatch(e){\n \t\t\t\t\tconsole.log(\"Cannot find \"+e+\" in module \"+module.filename)\n \t\t\t\t\tthrow e\n \t\t\t\t}\n \n \t\t\t\tif(name.indexOf('://') !== -1){\n \t\t\t\t\tname = defineDreem.mapToCacheDir(name)\n \t\t\t\t}\n \n \t\t\t\tvar full_name = name;\n \t\t\t\ttry{\n \t\t\t\t\tfull_name = Module._resolveFilename(name, module)\n \t\t\t\t}\n \t\t\t\tcatch(e){\n \t\t\t\t\t// Don't generate an error becaues the image might be\n \t\t\t\t\t// remote, or a relative path was specified.\n \t\t\t\t}\n \t\t\t\tif (full_name instanceof Array) full_name = full_name[0]\n \n \t\t\t\tif(defineDreem.atRequire && ((full_name.charAt(0) == '/') || (full_name.indexOf('\\\\') >= 0)) ){\n \t\t\t\t\tdefineDreem.atRequire(full_name)\n \t\t\t\t}\n \n \t\t\t\t// we cant require non js files\n \t\t\t\tvar ext = defineDreem.fileExt(full_name)\n \t\t\t\tif(ext !== '' && ext !== 'js'){\n \t\t\t\t\tif(ext === 'jpg' || ext === 'jpeg' || ext === 'gif' || ext === 'png'){\n \t\t\t\t\t\t// Construct a Texture.Image object given its path\n \t\t\t\t\t\tif(defineDreem.loadImage) return defineDreem.loadImage(full_name)\n \t\t\t\t\t\treturn undefined\n \t\t\t\t\t}\n \t\t\t\t\telse{\n \t\t\t\t\t\t// read it as an arraybuffer\n \t\t\t\t\t\tvar buffer = fs.readFileSync(full_name)\n \t\t\t\t\t\tvar ab = new ArrayBuffer(buffer.length)\n \t\t\t\t\t\tvar view = new Uint8Array(ab)\n \t\t\t\t\t\tfor (var i = 0; i < buffer.length; ++i) {\n \t\t\t\t\t\t    view[i] = buffer[i]\n \t\t\t\t\t\t}\n \t\t\t\t\t\treturn defineDreem.processFileType(ext, ab)\n \t\t\t\t\t\t//console.log(full_name)\n \t\t\t\t\t}\n \t\t\t\t\treturn undefined\n \t\t\t\t}\n \n \t\t\t\tvar old_stack = defineDreem.local_require_stack\n \t\t\t\tdefineDreem.local_require_stack = []\n \n \t\t\t\ttry{\n \t\t\t\t\tvar ret = require(full_name)\n \t\t\t\t}\n \t\t\t\t//catch(e){\n \n \t\t\t\t//\tconsole.log(e.stack)\n \t\t\t\tfinally{\n \t\t\t\t\tdefineDreem.local_require_stack = old_stack\n \t\t\t\t}\n \t\t\t\treturn ret\n \t\t\t}\n \n \t\t\tnoderequirewrapper.clearCache = function(name){\n \t\t\t\tModule._cache = {}\n \t\t\t}\n \n \t\t\tnoderequirewrapper.module = module\n \n \t\t\tnoderequirewrapper.loaded = function(path, ext){\n \t\t\t\tvar dep_path = defineDreem.joinPath(cache_path_root, defineDreem.expandVariables(path))\n \t\t\t\tif(defineDreem.factory[dep_path]){\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t}\n \n \t\t\tnoderequirewrapper.async = function(modname){\n \t\t\t\t// For dali (and probably nodejs) relative paths must be made\n \t\t\t\t// absolute to where the example is located. Retrieval\n \t\t\t\t// method is different if running from a remote server\n \t\t\t\tvar remote = (defineDreem.$example.indexOf('://') !== -1);\n \n \t\t\t\tif (defineDreem.$platform == 'dali') {\n \t\t\t\t\t// Remote, relative\n \t\t\t\t\tif (remote && modname.indexOf('./') == 0) {\n \t\t\t\t\t\tmodname = defineDreem.$example + modname.substring(2)\n \t\t\t\t\t\treturn defineDreem.httpGetCached(modname);\n \t\t\t\t\t}\n \n \t\t\t\t\t// Remote, absolute\n \t\t\t\t\tif (remote && modname.indexOf('/') == 0) {\n \t\t\t\t\t\tvar p = defineDreem.$example.indexOf('/', 8);\n \t\t\t\t\t\tmodname = defineDreem.$example.substring(0, p) + modname;\n \t\t\t\t\t\treturn defineDreem.httpGetCached(modname);\n \t\t\t\t\t}\n \n \t\t\t\t\t// Local, relative\n \t\t\t\t\tif (modname.indexOf('./') == 0) {\n \t\t\t\t\t\tmodname = '$root/' + defineDreem.$example + modname.substring(2)\n \t\t\t\t\t\tmodname = defineDreem.expandVariables(modname);\n \n \t\t\t\t\t\treturn new defineDreem.Promise(function(resolve, reject) {\n \t\t\t\t\t\t\treturn resolve(defineDreem.loadImage(modname));\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \n \t\t\t\t\t// Local, absolute\n \t\t\t\t\tif (modname.indexOf('/') == 0) {\n \t\t\t\t\t\tmodname = '$root' + modname\n \t\t\t\t\t\tmodname = defineDreem.expandVariables(modname);\n \n \t\t\t\t\t\treturn new defineDreem.Promise(function(resolve, reject) {\n \t\t\t\t\t\t\treturn resolve(defineDreem.loadImage(modname));\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \n \t\t\t\t\tif (remote && modname.indexOf('://') === -1)\n \t\t\t\t\t\tmodname = defineDreem.$example + '/' + modname\n \n \t\t\t\t\tmodname = defineDreem.expandVariables(modname)\n \t\t\t\t}\n \n \t\t\t\tif (defineDreem.$platform == 'dali' && modname.indexOf('./') == 0)\n \t\t\t\t\tmodname = '$root' + '/' + defineDreem.$example + '/' + modname;\n \n \t\t\t\tif(typeof modname !== 'string') throw new Error(\"module name in requireDreem.async not a string\")\n \t\t\t\tmodname = defineDreem.expandVariables(modname)\n \n \t\t\t\t// Query if module is in local file system (DALI)\n \t\t\t\tvar fs = requireDreem(\"fs\")\n \t\t\t\ttry {\n \t\t\t\t\tstats = fs.lstatSync(modname)\n \t\t\t\t\tvar data = fs.readFileSync(modname)\n \t\t\t\t\treturn new defineDreem.Promise(function(resolve, reject){\n \t\t\t\t\t\tresolve(data)\n \t\t\t\t\t})\n \t\t\t\t}\n \t\t\t\tcatch(e) {\n \t\t\t\t}\n \n \t\t\t\treturn new defineDreem.Promise(function(resolve, reject){\n \t\t\t\t\tloadModuleAsync(modname, \"root\").then(function(path){\n \t\t\t\t\t\tresolve(noderequirewrapper(path))\n \t\t\t\t\t}).catch(function(e){\n \t\t\t\t\t\tconsole.log(\"ERROR\", e.stack)\n \t\t\t\t\t})\n \t\t\t\t})\n \t\t\t}\n \n \t\t\tmodule.factory = factory\n \n \t\t\tif (typeof factory !== \"function\") return module.exports = factory\n \n \t\t\t// we are being used for requireDreem.async\n \t\t\tif(defineDreem.process_factory){\n \t\t\t\tdefineDreem.process_factory = factory\n \t\t\t\treturn\n \t\t\t}\n \n \t\t\tdefineDreem.local_require_stack.push(noderequirewrapper)\n \t\t\ttry{\n \t\t\t\tvar ret = factory.call(module.exports, noderequirewrapper, module.exports, module)\n \t\t\t}\n \t\t\tfinally{\n \t\t\t\tdefineDreem.local_require_stack.pop()\n \t\t\t}\n \n \t\t\tif(ret !== undefined) module.exports = ret\n \n \t\t\tif(defineDreem.atModule) defineDreem.atModule(module)\n \t\t}\n \n \t\tglobal.defineDreem.require = require\n \t\tglobal.defineDreem.module = {}\n \t\tglobal.defineDreem.factory = {}\n \t\t// fetch a new require for the main module and return that\n \t\tdefineDreem.defineDreem(function(requireDreem){\n \t\t\tmodule.exports = require\n \t\t})\n \t}\n */\n\n\t// Worker\n\n\n\tfunction define_worker() {\n\t\tself.define = __webpack_require__(0);\n\n\t\tdefineDreem.define = function (body) {};\n\t}\n\n\t// Struct implementation\n\n\n\tdefineDreem.prim = {\n\t\tint8: function int8(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\tuint8: function uint8(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\tint16: function int16(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\tuint16: function uint16(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\tint32: function int32(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\tuint32: function uint32(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseInt(value);\n\t\t},\n\t\thalf: function half(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseFloat(value);\n\t\t},\n\t\tfloat32: function float32(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseFloat(value);\n\t\t},\n\t\tfloat64: function float64(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn parseFloat(value);\n\t\t},\n\t\tbool: function boolean(value) {\n\t\t\tif (value && value.isArray) return value;\n\t\t\treturn value ? true : false;\n\t\t}\n\t};\n\n\tdefineDreem.struct = function (def, id) {\n\n\t\tfunction getStructArrayType(type) {\n\t\t\tvar def = type.def;\n\t\t\tif (def.prim) return type;\n\t\t\tvar tt, mt;\n\t\t\tfor (var key in def) {\n\t\t\t\tif (typeof def[key] !== 'string') {\n\t\t\t\t\tmt = getStructArrayType(def[key]);\n\t\t\t\t\tif (mt !== tt) {\n\t\t\t\t\t\tif (tt === undefined) tt = mt;else return null; // mixed type\n\t\t\t\t\t} else tt = mt;\n\t\t\t\t}\n\t\t\t}return tt;\n\t\t}\n\n\t\tfunction getStructSize(def) {\n\t\t\tif (def.prim) return 1;\n\t\t\tvar size = 0;\n\t\t\tfor (var key in def) {\n\t\t\t\tif (typeof def[key] !== 'string') size += getStructSize(def[key].def);\n\t\t\t}return size;\n\t\t}\n\n\t\tvar myprim = getStructArrayType({ def: def });\n\t\tvar myarray = myprim ? myprim.def.array : null;\n\t\tvar mysize = getStructSize(def);\n\t\tvar Struct;\n\t\tif (def.prim) {\n\t\t\tStruct = defineDreem.prim[id];\n\t\t\tStruct.bytes = def.bytes;\n\t\t\tStruct.primitive = true;\n\t\t} else {\n\t\t\tvar MyStruct = function MyStruct() {\n\t\t\t\tvar out = new myarray(mysize),\n\t\t\t\t    len = arguments.length;\n\t\t\t\tout.toJSON = function () {\n\n\t\t\t\t\tvar res = [];\n\t\t\t\t\tres.push.apply(res, this);\n\t\t\t\t\treturn { ____struct: this.struct.id, data: res };\n\t\t\t\t};\n\t\t\t\tout.struct = MyStruct;\n\t\t\t\tif (len === 0) return out;\n\t\t\t\tvar arg0 = arguments[0];\n\t\t\t\tif (len === 1 && typeof arg0 !== 'string') {\n\t\t\t\t\tif (arg0 && arg0.isArray) return arg0;\n\t\t\t\t\tif (typeof arg0 === 'number') {\n\t\t\t\t\t\t// copy struct\n\t\t\t\t\t\tfor (var i = 0; i < mysize; i++) {\n\t\t\t\t\t\t\tout[i] = arg0;\n\t\t\t\t\t\t}return out;\n\t\t\t\t\t}\n\t\t\t\t\t// treat as array\n\t\t\t\t\tif (arg0 === null || arg0 === undefined) return out;\n\t\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\t\tvar iter = Math.min(mysize, arg0.length);\n\t\t\t\t\t\tfor (var i = 0; i < iter; i++) {\n\t\t\t\t\t\t\tout[i] = arg0[i];\n\t\t\t\t\t\t}for (; i < mysize; i++) {\n\t\t\t\t\t\t\tout[i] = 1;\n\t\t\t\t\t\t}return out;\n\t\t\t\t\t}\n\t\t\t\t\tif (arg0.struct) {\n\t\t\t\t\t\tvar iter = Math.min(mysize, arg0.struct.slots);\n\t\t\t\t\t\tfor (var i = 0; i < iter; i++) {\n\t\t\t\t\t\t\tout[i] = arg0[i];\n\t\t\t\t\t\t}for (; i < mysize; i++) {\n\t\t\t\t\t\t\tout[i] = 1;\n\t\t\t\t\t\t}return out;\n\t\t\t\t\t}\n\t\t\t\t\tif (arg0.____struct && arg0.data) {\n\t\t\t\t\t\tvar data = arg0.data;\n\t\t\t\t\t\tfor (var i = 0; i < mysize; i++) {\n\t\t\t\t\t\t\tout[i] = data[i];\n\t\t\t\t\t\t}return out;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(\"TODO implement object constructing for type: \" + (typeof arg0 === \"undefined\" ? \"undefined\" : _typeof(arg0)));\n\t\t\t\t\treturn out;\n\t\t\t\t}\n\t\t\t\tif (len === mysize) {\n\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\tout[i] = arguments[i];\n\t\t\t\t\t}return out;\n\t\t\t\t}\n\t\t\t\tif (typeof arg0 === 'string') {\n\t\t\t\t\tMyStruct.fromString.apply(out, arguments);\n\t\t\t\t\treturn out;\n\t\t\t\t}\n\n\t\t\t\tvar outoff = 0;\n\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\tvar item = arguments[i];\n\t\t\t\t\tif (typeof item == 'number') out[outoff++] = item;else outoff = defineDreem.arraySplat(out, outoff, item, 0, 1);\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t};\n\n\t\t\tif (defineDreem.debug && id) {\n\t\t\t\t// give the thing a name we can read\n\t\t\t\tvar fnname = id;\n\t\t\t\tvar code = 'return ' + MyStruct.toString().replace(/MyStruct/g, fnname);\n\t\t\t\tStruct = new Function('myarray', 'mysize', code)(myarray, mysize);\n\t\t\t} else {\n\t\t\t\tStruct = MyStruct;\n\t\t\t}\n\t\t\tif (myprim) Struct.bytes = mysize * myprim.bytes;\n\t\t}\n\n\t\tStruct.slots = mysize;\n\t\tStruct.struct = Struct;\n\t\tStruct.def = def;\n\t\tStruct.primary = myprim;\n\n\t\tStruct.copy = function (src, o) {\n\t\t\tif (!o) {\n\t\t\t\to = new myarray(src.buffer.slice(0));\n\t\t\t\to.struct = Struct;\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tfor (var i = 0; i < o.length; i++) {\n\t\t\t\to[i] = src[i];\n\t\t\t}\n\t\t};\n\n\t\tStruct.keyInfo = function (key) {\n\t\t\tvar type = this.def[key];\n\t\t\tif (typeof type === 'string') type = this.def[type];\n\t\t\t// ok lets compute the offset of type\n\t\t\tvar offset = 0;\n\t\t\tfor (var ikey in this.def) {\n\t\t\t\tif (ikey == key) break;\n\t\t\t\tvar itype = this.def[ikey];\n\t\t\t\toffset += itype.bytes;\n\t\t\t}\n\t\t\treturn { offset: offset, type: type };\n\t\t};\n\n\t\tStruct.keyType = function (key) {\n\t\t\t// look it up normally\n\t\t\tvar type = this.def[key];\n\t\t\tif (typeof type === 'string') return this.def[type];\n\t\t\tif (type !== undefined) return type;\n\t\t\t// parse swizzled vector and gl types\n\t\t\tvar i = 0,\n\t\t\t    ch,\n\t\t\t    l = key.length;\n\t\t\tif (l <= 1 && l > 4) return;\n\n\t\t\tif (mysize === 2) {\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// xy\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 120 && ch !== 121) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// rg\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 114 && ch !== 103) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// st\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 115 && ch !== 116) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (mysize === 3) {\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// xyz\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 120 && ch !== 121 && ch !== 122) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// rgb\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 114 && ch !== 103 && ch !== 98) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// stp\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 115 && ch !== 116 && ch !== 112) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (mysize === 4) {\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// xyzw\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 120 && ch !== 121 && ch !== 122 && ch !== 119) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// rgba\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 114 && ch !== 103 && ch !== 98 && ch !== 97) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (i < l) {\n\t\t\t\t\t// stpq\n\t\t\t\t\tch = key.charCodeAt(i++);\n\t\t\t\t\tif (ch !== 115 && ch !== 116 && ch !== 112 && ch !== 113) {\n\t\t\t\t\t\ti = 0;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i == l) {\n\t\t\t\tvar swiz = defineDreem.typemap.swizzle[myprim.def.type];\n\t\t\t\tif (!swiz) return;\n\t\t\t\treturn swiz[l];\n\t\t\t}\n\t\t};\n\n\t\tif (id !== undefined) Struct.id = id;\n\n\t\tStruct.chunked = function (chunk_size) {\n\t\t\tvar obj = Object.create(this.chunked_type);\n\t\t\tobj.constructor = this;\n\t\t};\n\n\t\tStruct.array = function (length) {\n\t\t\tif (!length) length = 0;\n\t\t\tvar init_array;\n\t\t\tif ((typeof length === \"undefined\" ? \"undefined\" : _typeof(length)) == 'object') {\n\t\t\t\t// constructor\n\t\t\t\tif (!Array.isArray(length)) throw new Error('Can only initialize arrays with arrays');\n\t\t\t\tinit_array = length;\n\t\t\t\tlength = init_array.length;\n\t\t\t\tif (typeof init_array[0] == 'number') length /= mysize;\n\t\t\t}\n\n\t\t\t// fixed size wrapper\n\t\t\tvar obj = Object.create(this.array_type);\n\t\t\tobj.constructor = Struct;\n\t\t\tobj.arrayconstructor = myarray;\n\t\t\tobj.array = new myarray(mysize * length);\n\t\t\tobj.length = 0;\n\t\t\tobj.allocated = length;\n\t\t\tobj.slots = mysize;\n\t\t\tobj.stride = mysize * myprim.bytes;\n\t\t\tobj.struct = this;\n\n\t\t\tif (init_array) {\n\t\t\t\tif (typeof init_array[0] == 'number') {\n\t\t\t\t\tfor (var i = 0; i < init_array.length; i++) {\n\t\t\t\t\t\tobj.array[i] = init_array[i];\n\t\t\t\t\t}obj.length = length;\n\t\t\t\t} else length = parseInt(defineDreem.arraySplat(this.array, 0, init_array, 0, 1) / mysize);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\n\t\tStruct.quad = function () {\n\t\t\tif (arguments.length == 1) return this.array(arguments[0] * 6);\n\t\t\tvar array = this.array(6);\n\t\t\tarray.pushQuad.apply(array, arguments);\n\t\t\treturn array;\n\t\t};\n\n\t\tStruct.array_type = Object.create(defineDreem.struct.array_type);\n\t\tStruct.chunked_type = Object.create(Struct.array_type);\n\t\t// copy over chunked functions\n\t\tfor (var keys = Object.keys(defineDreem.struct.chunked_type), i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tStruct.chunked_type[key] = defineDreem.struct.chunked_type[key];\n\t\t}\n\n\t\tStruct.extend = function (body) {\n\t\t\tvar PrevConstruct = this;\n\t\t\tfunction InheritStruct() {\n\t\t\t\treturn PrevConstruct.apply(null, arguments);\n\t\t\t}\n\t\t\t// copy over prevConstruct\n\t\t\tfor (var key in PrevConstruct) {\n\t\t\t\tInheritStruct[key] = PrevConstruct[key];\n\t\t\t}\n\t\t\tvar array = InheritStruct.array_type = Object.create(PrevConstruct.array_type);\n\t\t\tvar chunk = InheritStruct.chunked_type = Object.create(array);\n\t\t\t// copy over chunked keys\n\t\t\tfor (var keys = Object.keys(PrevConstruct.chunked_type), i = 0; i < keys.length; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tchunk[key] = PrevConstruct.chunked_type[key];\n\t\t\t}\n\n\t\t\tbody.call(array, InheritStruct, array, chunk);\n\t\t\treturn InheritStruct;\n\t\t};\n\n\t\treturn Struct;\n\t};\n\n\tdefineDreem.arraySplat = function (out, ioutoff, inp, inpoff, depth) {\n\t\tvar outoff = ioutoff;\n\t\tfor (var i = inpoff, len = inp.length; i < len; i++) {\n\t\t\tvar item = inp[i];\n\t\t\tif (typeof item == 'number') out[outoff++] = item;else if (typeof item === 'string') {\n\t\t\t\tdefineDreem.arraySplat(out, outoff, vec4(item), 0, depth++);\n\t\t\t} else if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') outoff = defineDreem.arraySplat(out, outoff, item, 0, depth++);\n\t\t}\n\t\treturn outoff;\n\t};\n\n\tdefineDreem.structFromJSON = function (node, binary) {\n\t\tif ((typeof node === \"undefined\" ? \"undefined\" : _typeof(node)) === \"object\" && node) {\n\t\t\tif (node.____struct) {\n\t\t\t\tvar lookup = defineDreem.typemap.types[node.____struct];\n\t\t\t\treturn lookup.apply(null, node.data);\n\t\t\t} else if (node.____binary !== undefined) {\n\t\t\t\treturn new defineDreem.typedArrayTypes[node.type](binary[node.____binary]);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(node)) {\n\t\t\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\t\t\tnode[i] = defineDreem.structFromJSON(node[i], binary);\n\t\t\t\t\t}\n\t\t\t\t} else for (var key in node) {\n\t\t\t\t\tnode[key] = defineDreem.structFromJSON(node[key], binary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t};\n\n\tdefineDreem.typedArrayTypes = {\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array\n\t};\n\n\tdefineDreem.makeJSONSafe = function (obj, binary, stack) {\n\t\tif (obj === undefined || obj === null) return obj;\n\t\tif (typeof obj === 'function') return null;\n\t\tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) !== 'object') return obj;\n\t\tif (!stack) stack = [];\n\t\tstack.push(obj);\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\t\tvar prop = obj[i];\n\t\t\t\tif (stack.indexOf(prop) === -1) {\n\t\t\t\t\tout[i] = defineDreem.makeJSONSafe(prop, binary, stack);\n\t\t\t\t} else {\n\t\t\t\t\tout[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.pop();\n\t\t\treturn out;\n\t\t}\n\n\t\tif (typeof obj.toJSON === 'function') {\n\t\t\tstack.pop();\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (obj.buffer instanceof ArrayBuffer) {\n\t\t\tvar msg = { ____binary: binary.length, type: obj.constructor.name };\n\t\t\tbinary.push({ data: obj, msg: msg });\n\t\t\tstack.pop();\n\t\t\treturn msg;\n\t\t}\n\n\t\tvar out = {};\n\t\tfor (var key in obj) {\n\t\t\tvar prop = obj[key];\n\t\t\tif ((typeof prop === \"undefined\" ? \"undefined\" : _typeof(prop)) == 'object') {\n\t\t\t\tif (stack.indexOf(prop) === -1) {\n\t\t\t\t\tout[key] = defineDreem.makeJSONSafe(prop, binary, stack);\n\t\t\t\t} else {\n\t\t\t\t\tout[key] = null;\n\t\t\t\t}\n\t\t\t} else if (typeof prop == 'function') out[key] = null;else out[key] = prop;\n\t\t}\n\t\tstack.pop();\n\t\treturn out;\n\t};\n\n\tdefineDreem.isSafeJSON = function (obj, stack) {\n\t\tif (obj === undefined || obj === null) return true;\n\t\tif (typeof obj === 'function') return false;\n\t\tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) !== 'object') return true;\n\t\tif (!stack) stack = [];\n\t\tstack.push(obj);\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\t\tif (!defineDreem.isSafeJSON(obj[i])) return false;\n\t\t\t}\n\t\t\tstack.pop();\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof obj.toJSON === 'function') return true;\n\n\t\tif (Object.getPrototypeOf(obj) !== Object.prototype) return false;\n\n\t\tfor (var key in obj) {\n\t\t\tvar prop = obj[key];\n\t\t\tif ((typeof prop === \"undefined\" ? \"undefined\" : _typeof(prop)) == 'object') {\n\t\t\t\tif (stack.indexOf(prop) != -1) return false; // circular\n\t\t\t\tif (!defineDreem.isSafeJSON(prop, stack)) return false;\n\t\t\t} else if (typeof prop == 'function') return false;\n\t\t\t// probably json safe then\n\t\t}\n\t\tstack.pop();\n\t\treturn true;\n\t};\n\n\tdefineDreem.struct.array_type = {};\n\tfunction structArray(self) {\n\n\t\t// lets return the struct at index\n\t\tself.get = function (index) {\n\t\t\tvar out = this.array.subarray(this.slots * index);\n\t\t\tout.struct = Struct;\n\t\t\treturn out;\n\t\t};\n\n\t\tself.ensureSize = function (length) {\n\t\t\tif (length > this.allocated) {\n\t\t\t\t// lets double the size of the buffer\n\t\t\t\tvar oldsize = this.allocated * this.slots;\n\n\t\t\t\tif (length > this.allocated * 2) this.allocated = length;else this.allocated = this.allocated * 2; // exponential strategy\n\n\t\t\t\tvar oldarray = this.array;\n\t\t\t\tvar newarray = new this.arrayconstructor(this.allocated * this.slots);\n\t\t\t\tfor (var i = 0; i < oldsize; i++) {\n\t\t\t\t\tnewarray[i] = oldarray[i];\n\t\t\t\t}this.array = newarray;\n\t\t\t}\n\t\t};\n\n\t\tself.set = function (index) {\n\t\t\tif (index >= this.allocated) this.ensureSize(index);\n\t\t\tif (index >= this.length) this.length = index + 1;\n\t\t\tvar len = arguments.length - 1,\n\t\t\t    base = index * this.slots;\n\t\t\tthis.clean = false;\n\t\t\tif (len === this.slots) for (var i = 0; i < len; i++) {\n\t\t\t\tthis.array[base + i] = arguments[i + 1];\n\t\t\t} else defineDreem.arraySplat(this.array, base, arguments, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\tself.push = function () {\n\t\t\tthis.length++;\n\t\t\tif (this.length >= this.allocated) this.ensureSize(this.length);\n\t\t\tthis.clean = false;\n\t\t\tvar base = (this.length - 1) * this.slots;\n\t\t\tvar len = arguments.length;\n\t\t\tif (len === this.slots) for (var i = 0; i < len; i++) {\n\t\t\t\tthis.array[base + i] = arguments[i];\n\t\t\t} else defineDreem.arraySplat(this.array, base, arguments, 0);\n\t\t};\n\n\t\t// triangle strip\n\t\tself.lengthStrip = function () {\n\t\t\tif (this.length % 2) throw new Error('Non aligned strip size');\n\t\t\treturn this.length / 2;\n\t\t};\n\n\t\tself.setStrip = function (index) {\n\t\t\tthis.clean = false;\n\t\t\tvar arglen = arguments.length - 1;\n\t\t\tvar slots = this.slots;\n\t\t\tif (arglen !== slots * 2) throw new Error('Please use individual components to set a quad');\n\t\t\tvar needed = index * 2;\n\t\t\tif (needed >= this.allocated) this.ensureSize(needed);\n\t\t\tif (needed >= this.length) this.length = needed + 2;\n\t\t\tvar off = needed * slots;\n\t\t\tvar out = this.array;\n\t\t\tfor (var i = 0; i < slots; i++) {\n\t\t\t\t// iterate the components\n\t\t\t\tout[off + i] = arguments[i + 1];\n\t\t\t\tout[off + i + 1 * slots] = arguments[i + 1 * slots + 1];\n\t\t\t}\n\t\t};\n\n\t\tself.pushStrip = function () {\n\t\t\tthis.clean = false;\n\t\t\tvar slots = this.slots;\n\t\t\tif (arguments.length !== slots * 2) throw new Error('Please use individual components to set a quad for ' + slots);\n\t\t\tvar off = this.length * slots;\n\t\t\tthis.length += 2;\n\t\t\tif (this.length >= this.allocated) {\n\t\t\t\tthis.ensureSize(this.length);\n\t\t\t}\n\t\t\t// ok so lets just write it out\n\t\t\tvar out = this.array;\n\t\t\tfor (var i = 0; i < slots; i++) {\n\t\t\t\t// iterate the components\n\t\t\t\tout[off + i] = arguments[i];\n\t\t\t\tout[off + i + slots] = arguments[i + slots];\n\t\t\t}\n\t\t};\n\n\t\t// Simple quad geometry api\n\t\t// 0___14\n\t\t// |   /|\n\t\t// |  / |\n\t\t// | /  |\n\t\t// |/   |\n\t\t// 23---5\n\n\t\t// lets return a single slot\n\t\tself.getQuad = function (pos) {\n\t\t\t// can we return a Float32Array on one of the quad corners?\n\t\t\tconsole.log('implement getquad');\n\t\t};\n\n\t\tself.lengthQuad = function () {\n\t\t\tif (this.length % 6) throw new Error('Non aligned quad size');\n\t\t\treturn this.length / 6;\n\t\t};\n\n\t\tself.setQuad = function (index) {\n\t\t\tthis.clean = false;\n\t\t\tvar arglen = arguments.length - 1;\n\t\t\tvar slots = this.slots;\n\t\t\tif (arglen !== slots * 4) throw new Error('Please use individual components to set a quad');\n\t\t\tvar needed = index * 6;\n\t\t\tif (needed >= this.allocated) this.ensureSize(needed);\n\t\t\tif (needed >= this.length) this.length = needed + 6;\n\t\t\t// ok so lets just write it out\n\t\t\tvar off = needed * slots;\n\t\t\tvar out = this.array;\n\t\t\tfor (var i = 0; i < slots; i++) {\n\t\t\t\t// iterate the components\n\t\t\t\tout[off + i] = arguments[i + 1];\n\t\t\t\tout[off + i + 1 * slots] = out[off + i + 4 * slots] = arguments[i + 1 * slots + 1];\n\t\t\t\tout[off + i + 2 * slots] = out[off + i + 3 * slots] = arguments[i + 2 * slots + 1];\n\t\t\t\tout[off + i + 5 * slots] = arguments[i + 3 * slots + 1];\n\t\t\t}\n\t\t};\n\n\t\t// Optional params: topleft, topright, bottomleft, bottomright\n\t\tself.pushQuad = function () {\n\t\t\tthis.clean = false;\n\t\t\tvar slots = this.slots;\n\t\t\tif (arguments.length !== slots * 4) throw new Error('Please use individual components to set a quad for ' + slots);\n\t\t\tvar off = this.length * slots;\n\t\t\tthis.length += 6;\n\t\t\tif (this.length >= this.allocated) {\n\t\t\t\tthis.ensureSize(this.length);\n\t\t\t}\n\t\t\t// ok so lets just write it out\n\t\t\tvar out = this.array;\n\t\t\tfor (var i = 0; i < slots; i++) {\n\t\t\t\t// iterate the components\n\t\t\t\tout[off + i] = arguments[i];\n\t\t\t\tout[off + i + 1 * slots] = out[off + i + 4 * slots] = arguments[i + 1 * slots];\n\t\t\t\tout[off + i + 2 * slots] = out[off + i + 3 * slots] = arguments[i + 2 * slots];\n\t\t\t\tout[off + i + 5 * slots] = arguments[i + 3 * slots];\n\t\t\t}\n\t\t};\n\n\t\tself.isArray = true;\n\n\t\treturn self;\n\t}\n\n\t// we inherit from array\n\tstructArray(defineDreem.struct.array_type);\n\tdefineDreem.struct.chunked_type = Object.create(defineDreem.struct.array_type);\n\tfunction structChunked(self) {\n\t\tself.isChunked = true;\n\t\treturn self;\n\t}\n\n\tstructChunked(defineDreem.struct.chunked_type);\n\n\t// Font loader. Yes i know this file is getting too large, but otherwise i get need loader-loaders.\n\n\n\tdefineDreem.parseGLF = function (blob) {\n\t\t// arg. we need to forward ref vec2 and ivec2\n\t\t// how do we do this.\n\n\t\tif (!blob) return;\n\t\tif (blob._parsedFont) return blob._parsedFont;\n\n\t\t// lets parse the font\n\t\tvar vuint16 = new Uint16Array(blob);\n\t\tvar vuint32 = new Uint32Array(blob);\n\t\tvar vfloat32 = new Float32Array(blob);\n\t\tvar vuint8 = new Uint8Array(blob);\n\n\t\tvar font = {};\n\t\tvar pixel_type;\n\t\tif (vuint32[0] == 0x02F01175) {\n\t\t\t// baked format\n\t\t\tfont.baked = true;\n\t\t\t// lets parse the glyph set\n\t\t\tfont.tex_geom = ivec2(vuint16[2], vuint16[3]);\n\t\t\tfont.tex_geom_f = vec2(font.tex_geom[0], font.tex_geom[1]);\n\t\t\tvar length = font.count = vuint32[2];\n\n\t\t\tif (length > 10000) throw new Error('Font seems incorrect');\n\t\t\tvar off = 3;\n\n\t\t\tvar glyphs = font.glyphs = {};\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar unicode = vuint32[off++];\n\t\t\t\tvar glyph = {\n\t\t\t\t\tmin_x: vfloat32[off++],\n\t\t\t\t\tmin_y: vfloat32[off++],\n\t\t\t\t\tmax_x: vfloat32[off++],\n\t\t\t\t\tmax_y: vfloat32[off++],\n\t\t\t\t\tadvance: vfloat32[off++],\n\t\t\t\t\ttmin_x: vfloat32[off++],\n\t\t\t\t\ttmin_y: vfloat32[off++],\n\t\t\t\t\ttmax_x: vfloat32[off++],\n\t\t\t\t\ttmax_y: vfloat32[off++]\n\t\t\t\t};\n\t\t\t\tglyphs[unicode] = glyph;\n\t\t\t\tglyph.width = glyph.max_x - glyph.min_x;\n\t\t\t\tglyph.height = glyph.max_y - glyph.min_y;\n\t\t\t}\n\t\t\tfont.tex_array = blob.slice(off * 4);\n\t\t\tif (font.tex_array.byteLength === font.tex_geom[0] * font.tex_geom[1]) {\n\t\t\t\tpixel_type = 1 << 6; // luminance\n\t\t\t} else {\n\t\t\t\tpixel_type = 1 << 1; // RGBA\n\t\t\t}\n\t\t} else if (vuint32[0] == 0x01F01175) {\n\t\t\t// glyphy format\n\t\t\t// lets parse the glyph set\n\t\t\tfont.tex_geom = ivec2(vuint16[2], vuint16[3]);\n\t\t\tfont.item_geom = ivec2(vuint16[4], vuint16[5]);\n\t\t\tfont.tex_geom_f = vec2(font.tex_geom[0], font.tex_geom[1]);\n\t\t\tfont.item_geom_f = vec2(font.item_geom[0], font.item_geom[1]);\n\n\t\t\tvar length = font.count = vuint32[3] / (7 * 4);\n\n\t\t\tif (length > 10000) throw new Error('Font seems incorrect');\n\t\t\tvar off = 4;\n\n\t\t\tvar glyphs = font.glyphs = Object.create(null);\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar unicode = vuint32[off++];\n\t\t\t\tvar glyph = glyphs[unicode] = {\n\t\t\t\t\tmin_x: vfloat32[off++],\n\t\t\t\t\tmin_y: vfloat32[off++],\n\t\t\t\t\tmax_x: vfloat32[off++],\n\t\t\t\t\tmax_y: vfloat32[off++],\n\t\t\t\t\tadvance: vfloat32[off++],\n\t\t\t\t\tnominal_w: vuint8[off * 4],\n\t\t\t\t\tnominal_h: vuint8[off * 4 + 1],\n\t\t\t\t\tatlas_x: vuint8[off * 4 + 2],\n\t\t\t\t\tatlas_y: vuint8[off * 4 + 3]\n\t\t\t\t};\n\t\t\t\toff++;\n\t\t\t\tglyph.width = glyph.max_x - glyph.min_x;\n\t\t\t\tglyph.height = glyph.max_y - glyph.min_y;\n\t\t\t}\n\t\t\tfont.tex_array = blob.slice(off * 4);\n\t\t\tpixel_type = 1 << 1; // RGBA\n\t\t} else throw new Error('Error in font file');\n\n\t\tif (!(32 in font.glyphs)) font.count++;\n\t\tfont.glyphs[32] = { // space\n\t\t\tmin_x: 0,\n\t\t\tmin_y: -0.3,\n\t\t\tmax_x: 0.5,\n\t\t\tmax_y: 1.,\n\t\t\ttmin_x: 0,\n\t\t\ttmin_y: 0,\n\t\t\ttmax_x: 24,\n\t\t\ttmax_y: 24,\n\t\t\tnominal_w: 24,\n\t\t\tnominal_h: 24,\n\t\t\tadvance: 0.5,\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t\tif (!(10 in font.glyphs)) font.count++;\n\t\tfont.glyphs[10] = { // tab\n\t\t\tmin_x: 0,\n\t\t\tmin_y: -0.3,\n\t\t\tmax_x: 2,\n\t\t\tmax_y: 1.,\n\t\t\ttmin_x: 0,\n\t\t\ttmin_y: 0,\n\t\t\ttmax_x: 24 * 4,\n\t\t\ttmax_y: 24,\n\t\t\tnominal_w: 24 * 4,\n\t\t\tnominal_h: 24,\n\t\t\tadvance: 2,\n\t\t\twidth: 2,\n\t\t\theight: 1\n\t\t};\n\t\tif (!(9 in font.glyphs)) font.count++;\n\t\tfont.glyphs[9] = { // tab\n\t\t\tmin_x: 0,\n\t\t\tmin_y: -0.3,\n\t\t\tmax_x: 2,\n\t\t\tmax_y: 1.,\n\t\t\ttmin_x: 0,\n\t\t\ttmin_y: 0,\n\t\t\ttmax_x: 24 * 4,\n\t\t\ttmax_y: 24,\n\t\t\tnominal_w: 24 * 4,\n\t\t\tnominal_h: 24,\n\t\t\tadvance: 2,\n\t\t\twidth: 2,\n\t\t\theight: 1\n\t\t};\n\n\t\tfont.texture = { type: pixel_type, array: font.tex_array, size: font.tex_geom };\n\n\t\treturn font;\n\t};\n\n\tfunction defineGlobals(exports) {\n\t\texports.RAD = 1;\n\t\texports.DEG = 0.017453292519943295;\n\t\texports.PI = 3.141592653589793;\n\t\texports.PI2 = 6.283185307179586;\n\t\texports.E = 2.718281828459045;\n\t\texports.LN2 = 0.6931471805599453;\n\t\texports.LN10 = 2.302585092994046;\n\t\texports.LOG2E = 1.4426950408889634;\n\t\texports.LOG10E = 0.4342944819032518;\n\t\texports.SQRT_1_2 = 0.70710678118654757;\n\t\texports.SQRT2 = 1.4142135623730951;\n\n\t\t// primitive types\n\t\texports.string = String;\n\t\texports.boolean = exports.bool = defineDreem.struct({ prim: true, type: 'bool', bytes: 4, array: Int32Array }, 'bool');\n\t\texports.float = exports.float32 = defineDreem.struct({ prim: true, type: 'float32', bytes: 4, array: Float32Array }, 'float32');\n\t\texports.double = exports.float64 = defineDreem.struct({ prim: true, type: 'float64', bytes: 8, array: Float64Array }, 'float64');\n\t\texports.int8 = defineDreem.struct({ prim: true, type: 'int8', bytes: 1, array: Int8Array }, 'int8');\n\t\texports.uint8 = defineDreem.struct({ prim: true, type: 'uint8', bytes: 1, array: Uint8Array }, 'uint8');\n\t\texports.half = defineDreem.struct({ prim: true, type: 'half', bytes: 2, array: Int16Array }, 'half');\n\t\texports.short = exports.int16 = defineDreem.struct({ prim: true, type: 'int16', bytes: 2, array: Int16Array }, 'int16');\n\t\texports.uint16 = defineDreem.struct({ prim: true, type: 'uint16', bytes: 1, array: Uint16Array }, 'uint16');\n\t\texports.long = exports.int = exports.int32 = defineDreem.struct({ prim: true, type: 'int32', bytes: 4, array: Int32Array }, 'int32');\n\t\texports.uint32 = defineDreem.struct({ prim: true, type: 'uint32', bytes: 4, array: Uint32Array }, 'uint32');\n\n\t\t// Int vectors\n\t\texports.ivec2 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y',\n\t\t\ts: 'x', t: 'y',\n\t\t\tx: exports.int32,\n\t\t\ty: exports.int32\n\t\t}, 'ivec2');\n\n\t\texports.ivec3 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y', b: 'z',\n\t\t\ts: 'x', t: 'y', p: 'z',\n\t\t\tx: exports.int32,\n\t\t\ty: exports.int32,\n\t\t\tz: exports.int32\n\t\t}, 'ivec3');\n\n\t\texports.ivec4 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y', b: 'z', a: 'w',\n\t\t\ts: 'x', t: 'y', p: 'z', q: 'w',\n\t\t\tx: exports.int32,\n\t\t\ty: exports.int32,\n\t\t\tz: exports.int32,\n\t\t\tw: exports.int32\n\t\t}, 'ivec4');\n\n\t\t// Bool vectors\n\t\texports.bvec2 = defineDreem.struct({\n\t\t\tx: exports.boolean,\n\t\t\ty: exports.boolean\n\t\t}, 'bvec2');\n\n\t\texports.bvec3 = defineDreem.struct({\n\t\t\tx: exports.boolean,\n\t\t\ty: exports.boolean,\n\t\t\tz: exports.boolean\n\t\t}, 'bvec3');\n\n\t\texports.bvec4 = defineDreem.struct({\n\t\t\tx: exports.boolean,\n\t\t\ty: exports.boolean,\n\t\t\tz: exports.boolean,\n\t\t\tw: exports.boolean\n\t\t}, 'bvec4');\n\n\t\t// vec2 type\n\t\texports.vec2 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y',\n\t\t\ts: 'x', t: 'y',\n\t\t\tx: exports.float32,\n\t\t\ty: exports.float32\n\t\t}, 'vec2');\n\n\t\t// vec3 API\n\t\texports.vec3 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y', b: 'z',\n\t\t\ts: 'x', t: 'y', p: 'z',\n\t\t\tx: exports.float32, y: exports.float32, z: exports.float32\n\t\t}, 'vec3');\n\n\t\t// vec4 API\n\t\texports.vec4 = defineDreem.struct({\n\t\t\tr: 'x', g: 'y', b: 'z', a: 'w',\n\t\t\ts: 'x', t: 'y', p: 'z', q: 'w',\n\t\t\tx: exports.float32, y: exports.float32, z: exports.float32, w: exports.float32\n\t\t}, 'vec4');\n\n\t\texports.mat2 = defineDreem.struct({\n\t\t\ta: exports.float32, b: exports.float32, c: exports.float32, d: exports.float32\n\t\t}, 'mat2');\n\n\t\t// mat3\n\t\texports.mat3 = defineDreem.struct({\n\t\t\ta: exports.float32, b: exports.float32, c: exports.float32,\n\t\t\td: exports.float32, e: exports.float32, f: exports.float32,\n\t\t\tg: exports.float32, h: exports.float32, i: exports.float32\n\t\t}, 'mat3');\n\n\t\t// mat4\n\t\texports.mat4 = defineDreem.struct({\n\t\t\ta: exports.float32, b: exports.float32, c: exports.float32, d: exports.float32,\n\t\t\te: exports.float32, f: exports.float32, g: exports.float32, h: exports.float32,\n\t\t\ti: exports.float32, j: exports.float32, k: exports.float32, l: exports.float32,\n\t\t\tm: exports.float32, n: exports.float32, o: exports.float32, p: exports.float32\n\t\t}, 'mat4');\n\n\t\texports.quat = defineDreem.struct({\n\t\t\tx: exports.float32,\n\t\t\ty: exports.float32,\n\t\t\tz: exports.float32,\n\t\t\tw: exports.float32\n\t\t}, 'quat');\n\n\t\texports.Enum = function Enum() {\n\t\t\tvar matchset = Array.prototype.slice.call(arguments);\n\t\t\tvar origset = Array.prototype.slice.call(arguments);\n\n\t\t\tfunction enumCanon(v) {\n\t\t\t\tif (v.indexOf('-') !== -1) v = v.replace(/\\-/g, '');\n\t\t\t\treturn v.toLowerCase();\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < matchset.length; i++) {\n\t\t\t\tmatchset[i] = enumCanon(matchset[i]);\n\t\t\t}function Enum(value) {\n\t\t\t\tvar index = -1;\n\t\t\t\tif (typeof value !== 'string') {\n\t\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\t\tindex = value;\n\t\t\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\t\t\tif (value) index = 1;else index = 0;\n\t\t\t\t\t} else index = matchset.indexOf(enumCanon(value));\n\t\t\t\t} else index = matchset.indexOf(enumCanon(value));\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tconsole.error('Invalid enum value: \"' + value + '\" ' + origset.join('|'));\n\t\t\t\t\treturn types[0];\n\t\t\t\t}\n\t\t\t\treturn origset[index];\n\t\t\t}\n\t\t\tEnum.values = origset;\n\t\t\treturn Enum;\n\t\t};\n\n\t\t// global functions\n\t\texports.flow = function (value) {\n\t\t\tconsole.log('global>', value);\n\t\t\treturn value;\n\t\t};\n\n\t\t// basic math API\n\t\tfunction typeFn(fn) {\n\t\t\treturn function (v) {\n\t\t\t\tif (typeof v == 'number') return fn(v);\n\t\t\t\tvar out = v.struct();\n\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\tout[i] = fn(v[i]);\n\t\t\t\t}return out;\n\t\t\t};\n\t\t}\n\t\tfunction typeFn2(fn) {\n\t\t\treturn function (v, w) {\n\t\t\t\tif (typeof v == 'number') return fn(v, w);\n\t\t\t\tvar out = v.struct();\n\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\tout[i] = fn(v[i], w[i]);\n\t\t\t\t}return out;\n\t\t\t};\n\t\t}\n\t\tfunction typeFn3(fn) {\n\t\t\treturn function (v, w, x) {\n\t\t\t\tif (typeof v == 'number') return fn(v, w, x);\n\t\t\t\tvar out = v.struct();\n\t\t\t\tif (typeof w == 'number') {\n\t\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\t\tout[i] = fn(v[i], w, x);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\t\tout[i] = fn(v[i], w[i], x[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t};\n\t\t}\n\n\t\texports.sin = typeFn(Math.sin);\n\t\texports.cos = typeFn(Math.cos);\n\t\texports.tan = typeFn(Math.tan);\n\t\texports.asin = typeFn(Math.asin);\n\t\texports.acos = typeFn(Math.acos);\n\t\texports.atan = typeFn(Math.atan);\n\t\texports.atan2 = typeFn2(Math.atan2);\n\t\texports.pow = typeFn2(Math.pow);\n\t\texports.exp = typeFn(Math.exp);\n\t\texports.log = typeFn(Math.log);\n\t\texports.exp2 = typeFn(function (v) {\n\t\t\treturn Math.pow(2, v);\n\t\t});\n\t\texports.log2 = typeFn(Math.log2);\n\t\texports.sqrt = typeFn(Math.sqrt);\n\t\texports.inversesqrt = typeFn(function (v) {\n\t\t\treturn 1 / Math.sqrt(v);\n\t\t});\n\t\texports.abs = typeFn(Math.abs);\n\t\texports.floor = typeFn(Math.floor);\n\t\texports.round = typeFn(Math.round);\n\t\texports.ceil = typeFn(Math.ceil);\n\t\texports.min = typeFn2(Math.min);\n\t\texports.max = typeFn2(Math.max);\n\t\texports.mod = typeFn2(function (a, b) {\n\t\t\treturn a % b;\n\t\t});\n\t\texports.random = Math.random;\n\n\t\texports.sign = typeFn(function (v) {\n\t\t\tif (v === 0) return 0;\n\t\t\tif (v < 0) return -1;\n\t\t\treturn 1;\n\t\t});\n\n\t\texports.fract = typeFn(function (v) {\n\t\t\treturn v - Math.floor(v);\n\t\t});\n\n\t\texports.clamp = typeFn3(function (v, mi, ma) {\n\t\t\tif (v < mi) return mi;\n\t\t\tif (v > ma) return ma;\n\t\t\treturn v;\n\t\t});\n\n\t\texports.mix = function (a, b, f, o) {\n\t\t\tif (typeof a === 'number') {\n\t\t\t\treturn a + f * (b - a);\n\t\t\t}\n\t\t\to = o || a.struct();\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = a[i] + f * (b[i] - a[i]);\n\t\t\t}\n\t\t\treturn o;\n\t\t};\n\n\t\texports.smoothstep = function (e0, e1, v) {};\n\n\t\texports.length = function () {};\n\n\t\texports.distance = function (a, b) {};\n\n\t\texports.dot = function (a, b) {};\n\n\t\texports.cross = function (a, b) {};\n\n\t\texports.normalize = function () {};\n\n\t\t// events are passthrough types\n\t\texports.Event = function Event(arg) {\n\t\t\treturn arg;\n\t\t};\n\n\t\t// mark is a class that holds a mark and a value, use it to mark values going into a setter\n\t\texports.Mark = function Mark(value, mark) {\n\t\t\tvar obj = this;\n\t\t\tif (!(obj instanceof Mark)) {\n\t\t\t\tobj = Object.create(Mark.prototype);\n\t\t\t\tObject.defineProperty(obj, 'constructor', { value: Mark });\n\t\t\t}\n\t\t\tobj.value = value;\n\t\t\tobj.mark = arguments.length > 1 ? mark : true;\n\t\t\treturn obj;\n\t\t};\n\n\t\t// parsing a wired function as string\n\t\texports.wire = function wire(fn) {\n\t\t\tif (typeof fn !== 'function') {\n\t\t\t\tsrc = \"return \" + fn.toString();\n\t\t\t\tfn = new Function('find', 'rpc', src);\n\t\t\t}\n\t\t\tfn.is_wired = true;\n\t\t\treturn fn;\n\t\t};\n\n\t\texports.Config = function Config(object) {\n\t\t\tvar obj = Object.create(Config.prototype);\n\t\t\tobj.constructor = Config;\n\t\t\tobj.config = object;\n\t\t\treturn obj;\n\t\t};\n\n\t\texports.Animate = function (track) {\n\t\t\tvar obj = Object.create(Animate.prototype);\n\t\t\tobj.constructor = Animate;\n\t\t\tobj.track = track;\n\t\t\treturn obj;\n\t\t};\n\t}\n\n\tdefineGlobals(typeof process !== 'undefined' ? global : typeof window !== 'undefined' ? window : self);\n\n\t// store the types on define\n\tdefineDreem.typeToString = function (type) {\n\t\tif (type === String) return 'String';\n\t\tif (type === Object) return 'Object';\n\t\treturn type.id;\n\t};\n\n\tdefineDreem.stringToType = function (str) {\n\t\tif (str === 'String') return String;\n\t\tif (str === 'Object') return Object;\n\t\treturn defineDreem.typemap.types[str];\n\t};\n\n\tdefineDreem.typemap = {\n\t\ttypes: {\n\t\t\tint: int,\n\t\t\tint32: int32,\n\t\t\tuint32: uint32,\n\t\t\tfloat: float,\n\t\t\tfloat32: float32,\n\t\t\tfloat64: float64,\n\t\t\tvec2: vec2,\n\t\t\tvec3: vec3,\n\t\t\tvec4: vec4,\n\t\t\tivec2: ivec2,\n\t\t\tivec3: ivec3,\n\t\t\tivec4: ivec4,\n\t\t\tbvec2: bvec2,\n\t\t\tbvec3: bvec3,\n\t\t\tbvec4: bvec4,\n\t\t\tmat2: mat2,\n\t\t\tmat3: mat3,\n\t\t\tmat4: mat4\n\t\t},\n\t\tswizzle: {\n\t\t\tbool: { 2: bvec2, 3: bvec3, 4: bvec4 },\n\t\t\tint32: { 2: ivec2, 3: ivec3, 4: ivec4 },\n\t\t\tfloat32: { 2: vec2, 3: vec3, 4: vec4 }\n\t\t}\n\t};\n\n\tfunction defineComponent(proto, name, index) {\n\t\tObject.defineProperty(proto, name, { get: function get() {\n\t\t\t\treturn this[index];\n\t\t\t}, set: function set(v) {\n\t\t\t\tthis[index] = v;\n\t\t\t\tif (this.atChange) this.atChange(index);\n\t\t\t} });\n\t}\n\n\tfunction defineSwiz2(proto, name, i0, i1, vec) {\n\t\tObject.defineProperty(proto, name, { get: function get() {\n\t\t\t\treturn vec(this[i0], this[i1]);\n\t\t\t}, set: function set(v) {\n\t\t\t\tthis[i0] = v[0], this[i1] = v[1];\n\t\t\t\tif (this.atChange) this.atChange(-1);\n\t\t\t} });\n\t}\n\n\tfunction defineSwiz3(proto, name, i0, i1, i2, vec) {\n\t\tObject.defineProperty(proto, name, { get: function get() {\n\t\t\t\treturn vec(this[i0], this[i1], this[i2]);\n\t\t\t}, set: function set(v) {\n\t\t\t\tthis[i0] = v[0], this[i1] = v[1], this[i2] = v[2];\n\t\t\t\tif (this.atChange) this.atChange(-1);\n\t\t\t} });\n\t}\n\n\tfunction defineSwiz4(proto, name, i0, i1, i2, i3, vec) {\n\t\tObject.defineProperty(proto, name, { get: function get() {\n\t\t\t\treturn vec(this[i0], this[i1], this[i2], this[i3]);\n\t\t\t}, set: function set(v) {\n\t\t\t\tthis[i0] = v[0], this[i1] = v[1], this[i2] = v[2], this[i3] = v[3];\n\t\t\t\tif (this.atChange) this.atChange(-1);\n\t\t\t} });\n\t}\n\n\tfunction defineArrayProp(proto, propset, vectypes) {\n\t\tfor (var prop in propset) {\n\t\t\tdefineComponent(proto, prop, propset[prop]);\n\t\t}\n\t\t// create swizzles\n\t\tfor (var key1 in propset) {\n\t\t\tfor (var key2 in propset) {\n\t\t\t\tdefineSwiz2(proto, key1 + key2, propset[key1], propset[key2], vectypes[0]);\n\t\t\t}\n\t\t}for (var key1 in propset) {\n\t\t\tfor (var key2 in propset) {\n\t\t\t\tfor (var key3 in propset) {\n\t\t\t\t\tdefineSwiz3(proto, key1 + key2 + key3, propset[key1], propset[key2], propset[key3], vectypes[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}for (var key1 in propset) {\n\t\t\tfor (var key2 in propset) {\n\t\t\t\tfor (var key3 in propset) {\n\t\t\t\t\tfor (var key4 in propset) {\n\t\t\t\t\t\tdefineSwiz4(proto, key1 + key2 + key3 + key4, propset[key1], propset[key2], propset[key3], propset[key4], vectypes[2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdefineArrayProp(Float32Array.prototype, { x: 0, y: 1, z: 2, w: 3 }, [vec2, vec3, vec4]);\n\t//defineArrayProp(Float32Array.prototype, {r:0, g:1, b:2, a:3}, [exports.vec2, exports.vec3, exports.vec4])\n\tdefineArrayProp(Int32Array.prototype, { x: 0, y: 1, z: 2, w: 3 }, [ivec2, ivec3, ivec4]);\n\t//defineArrayProp(Int32Array.prototype, {r:0, g:1, b:2, a:3}, [exports.ivec2, exports.ivec3, exports.ivec4])\n\tif (defineDreem.packaged) define_packaged();else if (defineDreem.$environment === 'nodejs') define_nodejs();else if (defineDreem.$environment === 'browser') define_browser();else if (defineDreem.$environment === 'worker') define_worker();\n})();\n\n// use the switchable promise\n\nif (defineDreem.atEnd) defineDreem.atEnd();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(239).setImmediate, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/define.js\n// module id = 7\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/define.js?");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 8\n// module chunks = 0\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _define = __webpack_require__(7);\n\nvar _define2 = _interopRequireDefault(_define);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\n_define2.default.class(function (requireDreem, $ui$button) {\n\t//internal, this widget controls\n\n\tthis.attributes = {\n\t\t// the target view to control with this\n\t\ttarget: Config({ type: string, value: \"\" })\n\t};\n\tthis.icon = \"arrows\";\n\tthis.justifycontent = \"center\";\n\tthis.alignitems = \"center\";\n\tthis.fontsize = 20;\n\n\tthis.onpointermove = function (event) {\n\t\tvar t = this.find(this.target);\n\n\t\tthis.camera_start = vec3.sub(t._camera, t._lookat);\n\t\tvar M4 = mat4.invert(t.viewmatrix);\n\t\tvar screenup = vec3.normalize(vec3.vec3_mul_mat4(vec3(0, 1, 0), M4));\n\n\t\tvar M1 = mat4.identity();\n\t\tvar M2 = mat4.rotate(M1, event.movement[0] * 0.01, t._up);\n\n\t\tvar axis = vec3.normalize(vec3.cross(this.camera_start, t._up));\n\t\tvar M3 = mat4.rotate(M2, event.movement[1] * 0.01, axis);\n\n\t\tvar Rot = vec3.vec3_mul_mat4(this.camera_start, M3);\n\t\tvar Res = vec3.add(Rot, t._lookat);\n\n\t\tt._camera = Res;\n\t\tt.redraw();\n\t};\n\n\tvar rotator = this.constructor;\n\t// Basic usage of the button.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [rotator({ target: \"someview\", width: 100, height: 100 })];\n\t\t}\n\t};\n}); /* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n       Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n       You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n       software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and limitations under the License.*/\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/ballrotate.js\n// module id = 9\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/ballrotate.js?");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// Radius of the circle\n\t\tradius: Config({ type: float, value: 1 }),\n\t\t// Detail: the number of vertices along the circle edge.\n\t\tdetail: Config({ type: float, value: 64 })\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createCircle(view.radius, view.detail, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/circle.js\n// module id = 10\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/circle.js?");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\tradius: Config({ type: float, value: 1 }),\n\t\tpointradius: Config({ type: float, value: 0 }),\n\t\theight: Config({ type: float, value: 1 }),\n\t\tdetail: Config({ type: float, value: 60 }),\n\t\tcap: true\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createCone(view.radius, view.pointradius, view.height, view.detail, view.cap, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/cone.js\n// module id = 11\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/cone.js?");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\tthis.init = function () {\n\t\t//console.log(this.size, this.width)\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\n\t\t\tGLGeom.createCube(view.size[0], view.size[1], view.size[2], function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/cube.js\n// module id = 12\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/cube.js?");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\tradius: Config({ type: float, value: 0.5 }),\n\t\theight: Config({ type: float, value: 1 }),\n\t\tdetail: Config({ type: float, value: 60 }),\n\t\tcap: true\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createCylinder(view.radius, view.height, view.detail, view.cap, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/cylinder.js\n// module id = 13\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/cylinder.js?");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// require a 3D model object on this propery\n\t\tmodel: {}\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createModel(view.model, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/model.js\n// module id = 14\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/model.js?");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view) {\n\t// Morphing 3d geometry class.\n\t// Target geometries are specified as children.\n\t// Both target geometries should have the same vertex attribues and vertex count.\n\n\tthis.attributes = {\n\t\t// Morph weight - determines the interpolation between target shapes\n\t\tmorphweight: Config({ type: float, value: 0 }),\n\t\t// Shape color\n\t\tbgcolor: Config({ type: vec4, value: vec4(1, 1, 1, 1) }),\n\t\t// Shape opacity\n\t\topacity: Config({ value: 1.0, type: float })\n\n\t\t// Overridable bgcolor function\n\t};this.bgcolorfn = function (pos) {\n\t\treturn this.bgcolor;\n\t};\n\n\tdefineDreem.class(this, 'shape3d', this.Shader, function () {\n\t\tthis.draworder = 0;\n\n\t\tthis.depth_test = 'src_depth < dst_depth';\n\n\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\tpos: vec3,\n\t\t\tnorm: vec3,\n\t\t\tuv: vec2\n\t\t});\n\n\t\tthis.diffusecolor = vec4(\"#ffffff\");\n\t\tthis.mesh0 = this.vertexstruct.array();\n\t\tthis.mesh1 = this.vertexstruct.array();\n\n\t\tthis.update = function () {\n\t\t\tvar t0 = this.view.children[0];\n\t\t\tvar t1 = this.view.children[1];\n\n\t\t\tt0.shaders.shape3d.update();\n\t\t\tt1.shaders.shape3d.update();\n\n\t\t\tthis.mesh0 = t0.shaders.shape3d.mesh;\n\t\t\tthis.mesh1 = t1.shaders.shape3d.mesh;\n\n\t\t\tif (this.mesh0.array.length !== this.mesh1.array.length) {\n\t\t\t\tthrow new Error('Morph geometries mismatch buffer length.');\n\t\t\t} else if (this.mesh0.array.length % 8 !== 0) {\n\t\t\t\tthrow new Error('Morph targets should encode pos (vec3), norm (vec3), uv (vec2).');\n\t\t\t}\n\t\t};\n\n\t\tthis.position = function () {\n\t\t\tpos = mesh0.pos * view.morphweight;\n\t\t\tpos += mesh1.pos * (1 - view.morphweight);\n\t\t\tnorm = mesh0.norm * view.morphweight;\n\t\t\tnorm += mesh1.norm * (1 - view.morphweight);\n\t\t\tuv = mesh0.uv * view.morphweight;\n\t\t\tuv += mesh1.uv * (1 - view.morphweight);\n\t\t\treturn vec4(pos, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar col = view.bgcolorfn(uv);\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\n\tthis.shape3d = true;\n\tthis.hardrect = false;\n\n\tthis.render = function () {\n\t\tif (this.children.length !== 2) {\n\t\t\tthrow new Error('Morphtargets attribute should have exatly 2 elements.');\n\t\t}\n\t\tthis.children[0].visible = false;\n\t\tthis.children[1].visible = false;\n\t\treturn this.children;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/morph3d.js\n// module id = 15\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/morph3d.js?");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// the subdivisions of the plane\n\t\tdetail: vec2(40, 40)\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createPlane(view.size[0], view.size[1], view.detail[0], view.detail[1], function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/plane.js\n// module id = 16\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/plane.js?");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// Width of the rect\n\t\twidth: Config({ type: float, value: 1 }),\n\t\t// Height of the rect\n\t\theight: Config({ type: float, value: 1 }),\n\t\t// Detail: the number of vertices along the rect edge.\n\t\tdetail: Config({ type: float, value: 64 })\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createRect(view.width, view.height, view.detail, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/rect.js\n// module id = 17\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/rect.js?");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// Width of the rect\n\t\twidth: Config({ type: float, value: 1 }),\n\t\t// Height of the rect\n\t\theight: Config({ type: float, value: 1 }),\n\t\t// Radius of the rounded corner\n\t\tradius: Config({ type: float, value: 0.1 }),\n\t\t// Detail: the number of vertices along the rect edge.\n\t\tdetail: Config({ type: float, value: 64 })\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createRoundedRect(view.width, view.height, view.radius, view.detail, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/roundedrect.js\n// module id = 18\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/roundedrect.js?");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view) {\n\t// Base class for 3d geometry.\n\n\tdefineDreem.class(this, 'shape3d', this.Shader, function () {\n\t\tthis.draworder = 0;\n\n\t\tthis.depth_test = 'src_depth < dst_depth';\n\n\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\tpos: vec3,\n\t\t\tnorm: vec3,\n\t\t\tuv: vec2\n\t\t});\n\n\t\tthis.diffusecolor = vec4(\"#ffffff\");\n\t\tthis.mesh = this.vertexstruct.array();\n\n\t\tthis.position = function () {\n\t\t\tvar temp = vec4(mesh.norm, 1.0) * view.normalmatrix;\n\t\t\ttransnorm = temp.xyz;\n\t\t\tpos = vec4(mesh.pos, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\treturn pos;\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar tn = normalize(transnorm.xyz);\n\t\t\treturn vec4(tn * 0.5 + 0.5, 1.0);\n\t\t};\n\t});\n\n\tthis.shape3d = true;\n\tthis.hardrect = false;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/shape3d.js\n// module id = 19\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/shape3d.js?");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\tradius: Config({ type: float, value: 0.5 }),\n\t\tdetail: vec2(40, 40)\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createSphere(view.radius, view.detail[0], view.detail[1], function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/sphere.js\n// module id = 20\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/sphere.js?");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\tradius: Config({ type: float, value: 1 }),\n\t\tpointradius: Config({ type: float, value: 0 }),\n\t\theight: Config({ type: float, value: 1 }),\n\t\tdetail: Config({ type: float, value: 60 }),\n\t\tcap: true\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\n\t\t\tvar view = this.view;\n\n\t\t\tvar D = view.height;\n\t\t\tvar R = view.radius;\n\n\t\t\tvar gamma = Math.asin(R / D);\n\t\t\tvar beta = R / Math.tan(gamma);\n\t\t\tvar alpha = beta * Math.sin(gamma); // = radius for the cone!\n\t\t\tvar conet = beta * Math.cos(gamma);\n\n\t\t\tconeoffs = D - conet;\n\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createCone(alpha, view.pointradius, view.height, view.detail, view.cap, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1[0], v1[1] + coneoffs, v1[2], n1, t1);\n\t\t\t\tthis.mesh.push(v2[0], v2[1] + coneoffs, v2[2], n2, t2);\n\t\t\t\tthis.mesh.push(v3[0], v3[1] + coneoffs, v3[2], n3, t3);\n\t\t\t}.bind(this));\n\n\t\t\tGLGeom.createSphere(view.radius * 1, view.detail, view.detail, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/spherecone.js\n// module id = 21\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/spherecone.js?");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\t// Size of the teapot\n\t\tradius: Config({ type: float, value: 1 }),\n\t\t// Level of detail. 1 = cubic teapot, 10+ = very very smooth teapot.\n\t\tdetail: Config({ type: float, value: 10 })\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tGLGeom.createTeapot(view.radius, view.detail, function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/teapot.js\n// module id = 22\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/teapot.js?");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, shape3d) {\n\n\tvar GLGeom = requireDreem('$system/geometry/basicgeometry');\n\n\tthis.attributes = {\n\t\tradius: Config({ type: float, value: 0.5 }),\n\t\tdetail: vec2(20, 10)\n\t};\n\n\tthis.shape3d = {\n\t\tupdate: function update() {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tthis.drawtype = this.LINES;\n\t\t\tGLGeom.createSphere(view.radius, view.detail[0], view.detail[1], function (triidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx) {\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\n\t\t\t\tthis.mesh.push(v2, n2, t2);\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\n\t\t\t\tthis.mesh.push(v3, n3, t3);\n\t\t\t\tthis.mesh.push(v1, n1, t1);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/3d/wiresphere.js\n// module id = 23\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/3d/wiresphere.js?");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function () {\n\tthis.pointerstart = function (event) {\n\t\tthis._dragstart = vec2(this.pos[0], this.pos[1]);\n\t};\n\tthis.pointermove = function (event) {\n\t\tthis.pos = vec2(this._dragstart[0] + event.delta[0], this._dragstart[1] + event.delta[1]);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/behaviors/draggable.js\n// module id = 24\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/behaviors/draggable.js?");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function () {\n   this.blending = function () {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/blending/blend.js\n// module id = 25\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/blending/blend.js?");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$blending/blend', function ($blending$, mixer, blurv, blurh) {\n\n\tthis.hblend = defineDreem.class('$blending/blend', function () {\n\t\t// so we have one output, the size we can specify\n\t\tthis.size = vec2(0.5, 0.5); // take on the size of the framebuffer\n\t\t// we can have multiple input that are named\n\t\tthis.blendfn = function () {\n\t\t\tvar v1 = input.sample(pos.xy);\n\t\t};\n\t});\n\n\tthis.vblend = defineDreem.class('$blending/blend', function () {\n\t\t// so we have one output, the size we can specify\n\t\tthis.size = vec2(0.5, 0.5); // take on the size of the framebuffer\n\t\t// we can have multiple input that are named\n\t\tthis.blendfn = function () {\n\t\t\tvar v1 = input.sample(pos.xy);\n\t\t};\n\t});\n\n\tthis.blending = function () {\n\t\treturn this.hblend({\n\t\t\tinput: this.vblend({})\n\t\t});\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/blending/blur.js\n// module id = 26\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/blending/blur.js?");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function ($ui$, view, $examples$components$flowgraph$, dpad) {\n\n    this.attributes = {\n        value: Config({ type: String, flow: \"out\" })\n    };\n\n    this.render = function () {\n        return view({ bgcolor: \"#000030\" }, dpad({\n            onvalue: function (event) {\n                this.value = event.value;\n            }.bind(this)\n        }));\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/controllers/dpad.js\n// module id = 27\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/controllers/dpad.js?");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function ($ui$, view, $examples$components$flowgraph$, keyboard) {\n\n    this.attributes = {\n        keys: Config({ type: Array, flow: \"out\" })\n    };\n\n    this.render = function () {\n        return view({ bgcolor: \"#000030\" }, keyboard({\n            width: 300,\n            onactivekeys: function (event) {\n                this.active = event.value;\n            }.bind(this)\n        }));\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/controllers/keyboard.js\n// module id = 28\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/controllers/keyboard.js?");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function ($ui$, view) {\n\n    this.attributes = {\n        value: Config({ type: String, flow: \"out\" })\n    };\n\n    this.render = function () {\n        return view({ bgcolor: \"#000030\" }, knob({\n            onvalue: function (event) {\n                this.value = event.value;\n            }.bind(this)\n        }));\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/controllers/knob.js\n// module id = 29\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/controllers/knob.js?");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, cadgrid, view, $behaviors$, draggable) {\n\n\tthis.attributes = {\n\t\tpointerpos: Config({ type: vec2, flow: \"out\" })\n\t};\n\n\tthis.render = function () {\n\t\treturn cadgrid({\n\t\t\tbgcolor: \"#000030\",\n\t\t\tmajorline: \"green\",\n\t\t\tminorline: \"#002030\"\n\t\t}, view({\n\t\t\tname: 'main',\n\t\t\tsize: vec2(100, 100),\n\t\t\tbgcolor: vec4('#006070'),\n\t\t\tborderradius: 40,\n\t\t\tborderwidth: 10,\n\t\t\tbordercolor: 'red',\n\t\t\tis: draggable(),\n\t\t\tpos: Config({ persist: true }),\n\t\t\tonpos: function () {\n\t\t\t\tthis.pointerpos = this.find(\"main\").pos;\n\t\t\t}.bind(this)\n\t\t}));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/controllers/xypad.js\n// module id = 30\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/controllers/xypad.js?");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, screen, cadgrid, view) {\n    // internal, An Album will display a simple list of image urls, or objects with `.image` url properties.\n\n    this.attributes = {\n\n        // The input for the selection control widget\n        selection: Config({ type: String, flow: \"in\" }),\n\n        // The currently selected item\n        selecteditem: Config({ type: Object, value: null, persist: true, flow: \"out\" }),\n\n        // Items to display in the album (typically a list of image URLs, or structures with .image attributes)\n        items: Config({ type: Array, flow: \"in\", persist: true }),\n\n        selected: Config({ type: int, value: 0, persist: true }),\n        lastknob: Config({ type: float, value: 0.5, persist: true })\n    };\n\n    this.onselected = function (event) {\n        this.selecteditem = this.items[this.selected];\n    };\n\n    // Fired when selection controller has input ready to process\n    this.onselection = function (event) {\n        if (!this.items || !this.items.length) {\n            return;\n        }\n\n        var dir = event.value;\n        if (dir === 'left') {\n            this.selected = Math.max(0, this.selected - 1);\n        } else if (dir === 'right') {\n            this.selected = Math.min(this.items.length - 1, this.selected + 1);\n        } else if (dir === 'up') {\n            this.selected = Math.max(0, this.selected - 6);\n        } else if (dir === 'down') {\n            this.selected = Math.min(this.items.length - 1, this.selected + 6);\n        } else {\n            var knobval = parseFloat(dir);\n            if (knobval) {\n                this.selected = this.items.length * knobval;\n            }\n        }\n    };\n\n    this.render = function () {\n\n        var views = [];\n        if (this.items) {\n            var j = 0;\n            for (var i = 0; i < this.items.length; i++) {\n                var item = this.items[i];\n                var img;\n                if (typeof item.Poster === 'string' && item.Poster.startsWith('http')) {\n                    img = item.Poster;\n                } else if (typeof item.image === 'string' && item.image.startsWith('http')) {\n                    img = item.image;\n                } else if (typeof item === 'string' && item.startsWith('http')) {\n                    img = item;\n                }\n                if (img) {\n                    var v = view({ width: 100, height: 150, margin: 5, flex: 0, bgimage: img });\n                    if (j++ == this.selected) {\n                        v.bordercolor = 'yellow';\n                        v.borderwidth = 5;\n                        v.borderradius = 5;\n                    }\n                    views.push(v);\n                }\n            }\n        }\n\n        return cadgrid({ bgcolor: \"#000030\", majorline: \"#003040\", minorline: \"#002030\" }, view({ bg: false, flexdirection: \"column\", flex: 1, justifycontent: \"center\" }, view({ bg: false, flexdirection: \"row\", flex: 1, justifycontent: \"center\" }, view({ width: 800, bgcolor: vec4(1, 1, 1, 0.15), padding: 40, borderradius: 50, flexdirection: \"row\" }, views))));\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/displays/album.js\n// module id = 31\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/displays/album.js?");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, screen, cadgrid, view, label) {\n\n\t\t\t\tthis.style = {\n\t\t\t\t\t\t\t\tview: {\n\t\t\t\t\t\t\t\t\t\t\t\tbgcolor: 'transparent'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\t\t\t\tbgcolor: 'transparent'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.attributes = {\n\t\t\t\t\t\t\t\toutnumber: Config({ persist: true, type: Number, flow: \"out\", value: 100 }),\n\t\t\t\t\t\t\t\toutboolean: Config({ persist: true, type: Boolean, flow: \"out\", value: true }),\n\t\t\t\t\t\t\t\toutfloat: Config({ persist: true, type: float, flow: \"out\", value: 3.1415 }),\n\t\t\t\t\t\t\t\toutint: Config({ persist: true, type: int, flow: \"out\", value: 42 }),\n\t\t\t\t\t\t\t\toutvec2: Config({ persist: true, type: vec2, flow: \"out\", value: vec2(1, 2) }),\n\t\t\t\t\t\t\t\toutvec3: Config({ persist: true, type: vec3, flow: \"out\", value: vec3(1, 2, 3) }),\n\t\t\t\t\t\t\t\toutvec4: Config({ persist: true, type: vec4, flow: \"out\", value: vec4(1, 2, 3, 4) }),\n\t\t\t\t\t\t\t\toutarray: Config({ persist: true, type: Array, flow: \"out\", value: [1, 2, 3, 4, 5, \"6\"] }),\n\t\t\t\t\t\t\t\toutstring: Config({ persist: true, type: String, flow: \"out\", value: \"Cats\" }),\n\t\t\t\t\t\t\t\toutobject: Config({ persist: true, type: Object, flow: \"out\", value: { some: { complex: 'object' } } }),\n\n\t\t\t\t\t\t\t\tnumber: Config({ persist: true, type: Number, flow: \"in\" }),\n\t\t\t\t\t\t\t\tboolean: Config({ persist: true, type: Boolean, flow: \"in\" }),\n\t\t\t\t\t\t\t\tfloat: Config({ persist: true, type: float, flow: \"in\" }),\n\t\t\t\t\t\t\t\tint: Config({ persist: true, type: int, flow: \"in\" }),\n\t\t\t\t\t\t\t\tvec2: Config({ persist: true, type: vec2, flow: \"in\" }),\n\t\t\t\t\t\t\t\tvec3: Config({ persist: true, type: vec3, flow: \"in\" }),\n\t\t\t\t\t\t\t\tvec4: Config({ persist: true, type: vec4, flow: \"in\" }),\n\t\t\t\t\t\t\t\tarray: Config({ persist: true, type: Array, flow: \"in\" }),\n\t\t\t\t\t\t\t\tstring: Config({ persist: true, type: String, flow: \"in\" }),\n\t\t\t\t\t\t\t\tobject: Config({ persist: true, type: Object, flow: \"in\" })\n\t\t\t\t};\n\n\t\t\t\tthis.onnumber = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"number\", this.number);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outnumber = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onboolean = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"boolean\", this.boolean);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outboolean = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onfloat = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"float\", this.float);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outfloat = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onint = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"int\", this.int);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outint = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onvec2 = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"vec2\", this.vec2);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outvec2 = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onvec3 = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"vec3\", this.vec3);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outvec3 = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onvec4 = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"vec4\", this.vec4);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outvec4 = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onarray = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"array\", this.array);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outarray = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onstring = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"string\", this.string);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outstring = v;\n\t\t\t\t};\n\n\t\t\t\tthis.onobject = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"object\", this.object);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\");\n\t\t\t\t\t\t\t\tthis.outobject = v;\n\t\t\t\t};\n\n\t\t\t\tthis.init = function (ev, v, o) {\n\t\t\t\t\t\t\t\tconsole.log(\"number\", this.number);\n\t\t\t\t\t\t\t\tconsole.log(\"boolean\", this.boolean);\n\t\t\t\t\t\t\t\tconsole.log(\"float\", this.float);\n\t\t\t\t\t\t\t\tconsole.log(\"int\", this.int);\n\t\t\t\t\t\t\t\tconsole.log(\"vec2\", this.vec2);\n\t\t\t\t\t\t\t\tconsole.log(\"vec3\", this.vec3);\n\t\t\t\t\t\t\t\tconsole.log(\"vec4\", this.vec4);\n\t\t\t\t\t\t\t\tconsole.log(\"array\", this.array);\n\t\t\t\t\t\t\t\tconsole.log(\"string\", this.string);\n\t\t\t\t\t\t\t\tconsole.log(\"object\", this.object);\n\t\t\t\t\t\t\t\tconsole.log(\"\\n\\n\");\n\n\t\t\t\t\t\t\t\tthis.outobject = this.object;\n\t\t\t\t\t\t\t\tthis.outstring = this.string;\n\t\t\t\t\t\t\t\tthis.outarray = this.array;\n\t\t\t\t\t\t\t\tthis.outvec4 = this.vec4;\n\t\t\t\t\t\t\t\tthis.outvec3 = this.vec3;\n\t\t\t\t\t\t\t\tthis.outvec2 = this.vec2;\n\t\t\t\t\t\t\t\tthis.outint = this.int;\n\t\t\t\t\t\t\t\tthis.outfloat = this.float;\n\t\t\t\t\t\t\t\tthis.outboolean = this.boolean;\n\t\t\t\t\t\t\t\tthis.outnumber = this.number;\n\t\t\t\t};\n\n\t\t\t\tthis.render = function () {\n\t\t\t\t\t\t\t\tvar arr = this.array;\n\t\t\t\t\t\t\t\tif (arr) {\n\t\t\t\t\t\t\t\t\t\t\t\tarr = JSON.stringify(this.array);\n\t\t\t\t\t\t\t\t\t\t\t\tif (arr.length > 100) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarr = this.array.length + \" object in array\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar str = this.string;\n\t\t\t\t\t\t\t\tif (str && str.length > 100) {\n\t\t\t\t\t\t\t\t\t\t\t\tstr = str.substring(0, 100) + '...';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar obj = this.object;\n\t\t\t\t\t\t\t\tif (obj) {\n\t\t\t\t\t\t\t\t\t\t\t\tobj = JSON.stringify(this.object);\n\t\t\t\t\t\t\t\t\t\t\t\tif (obj.length > 100) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobj = obj.substring(0, 100) + '...';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn cadgrid({ bgcolor: \"#000030\", majorline: \"#003040\", minorline: \"#002030\" }, view({ bgcolor: NaN, flexdirection: \"column\", flex: 1, justifycontent: \"center\" }, view({ bgcolor: NaN, flexdirection: \"row\", flex: 1, justifycontent: \"center\" }, view({ width: 800, bgcolor: vec4(1, 1, 1, 0.15), padding: 30, borderradius: 50, flexdirection: \"column\", alignitems: \"center\", justifycontent: \"space-between\" }, view({ flex: 1 }, label({ text: 'number', paddingright: 15 }), label({ text: this.number, fgcolor: '#FF7260' })), view({ flex: 1 }, label({ text: 'boolean', paddingright: 15 }), label({ text: this.boolean, fgcolor: '#FF7260' })), view({ flex: 1 }, label({ text: 'float', paddingright: 15 }), label({ text: this.float, fgcolor: '#D23641' })), view({ flex: 1 }, label({ text: 'int', paddingright: 15 }), label({ text: this.int, fgcolor: '#FF0080' })), view({ flex: 1 }, label({ text: 'vec2', paddingright: 15 }), label({ text: this.vec2, fgcolor: '#129492' })), view({ flex: 1 }, label({ text: 'vec3', paddingright: 15 }), label({ text: this.vec3, fgcolor: '#31C3E7' })), view({ flex: 1 }, label({ text: 'vec4', paddingright: 15 }), label({ text: this.vec4, fgcolor: '#4FD5D6' })), view({ flex: 1 }, label({ text: 'array', paddingright: 15 }), label({ text: arr, fgcolor: '#0198E1' })), view({ flex: 1, alignself: \"stretch\", overflow: \"scroll\" }, label({ text: JSON.stringify(this.array) })), view({ flex: 1 }, label({ text: 'string', paddingright: 15 }), label({ text: str, fgcolor: '#6ADA7A' })), view({ flex: 1, alignself: \"stretch\", overflow: \"scroll\" }, label({ text: JSON.stringify(this.string) })), view({ flex: 1 }, label({ text: 'object', paddingright: 15 }), label({ text: obj, fgcolor: '#ffee14' })), view({ flex: 1, alignself: \"stretch\", overflow: \"scroll\" }, label({ text: JSON.stringify(this.object) }))))));\n\t\t\t\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/displays/debug.js\n// module id = 32\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/displays/debug.js?");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, screen, cadgrid, numberbox, view, icon, label) {\n\n\tthis.attributes = {\n\t\tstring: Config({ type: String, flow: \"in\", value: 0 }),\n\t\tfloat: Config({ type: float, flow: \"in\", value: 0 }),\n\t\tvec2: Config({ type: vec2, flow: \"in\", value: vec2(0) }),\n\t\ttext: Config({ type: Object, flow: \"in\" })\n\t};\n\n\tthis.clearcolor = \"red\";\n\tthis.render = function () {\n\t\tvar _numberbox, _numberbox2, _numberbox3;\n\n\t\treturn [cadgrid({ bgcolor: \"#000030\", majorline: \"#003040\", minorline: \"#002030\" }, view({ bg: false, flexdirection: \"column\", flex: 1, justifycontent: \"center\" }, view({ bg: false, flexdirection: \"row\", justifycontent: \"center\" }, view({ bgcolor: vec4(1, 1, 1, 0.2), padding: 40, borderradius: 50, flexdirection: \"column\", alignitems: \"center\", justifycontent: \"center\" }, label({ text: this.string, bgcolor: 'transparent' }), numberbox((_numberbox = { margin: 10, value: this.float, fontsize: 50, alignself: \"flex-start\" }, _defineProperty(_numberbox, \"alignself\", \"center\"), _defineProperty(_numberbox, \"alignitems\", \"center\"), _defineProperty(_numberbox, \"justifycontent\", \"flex-start\"), _numberbox)), view({ bg: false, alignself: \"center\", margin: 10 }, numberbox((_numberbox2 = { value: this.vec2[0], decimals: 2, fontsize: 50, alignself: \"flex-start\" }, _defineProperty(_numberbox2, \"alignself\", \"center\"), _defineProperty(_numberbox2, \"alignitems\", \"center\"), _defineProperty(_numberbox2, \"justifycontent\", \"flex-start\"), _numberbox2)), numberbox((_numberbox3 = { value: this.vec2[1], decimals: 2, fontsize: 50, alignself: \"flex-start\" }, _defineProperty(_numberbox3, \"alignself\", \"center\"), _defineProperty(_numberbox3, \"alignitems\", \"center\"), _defineProperty(_numberbox3, \"justifycontent\", \"flex-start\"), _numberbox3))), label({ margin: 10, fgcolor: \"white\", text: JSON.stringify(this.text), bg: false, alignself: \"center\", fontsize: 30 })))))];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/displays/labtext.js\n// module id = 33\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/displays/labtext.js?");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, screen, cadgrid, textbox, view, label, checkbox) {\n\n    this.attributes = {\n        number: Config({ type: Number, flow: \"out\", value: 99, persist: true }),\n        boolean: Config({ type: Boolean, flow: \"out\", value: false, persist: true }),\n        float: Config({ type: float, flow: \"out\", value: 2.5, persist: true }),\n        int: Config({ type: int, flow: \"out\", value: 88, persist: true }),\n        vec2: Config({ type: vec2, flow: \"out\", value: vec2(2, 2), persist: true }),\n        vec3: Config({ type: vec3, flow: \"out\", value: vec3(3, 3, 3), persist: true }),\n        vec4: Config({ type: vec4, flow: \"out\", value: vec4(4, 4, 4, 4), persist: true }),\n        array: Config({ type: Array, flow: \"out\", value: [1, 2, 3, 4, 5], persist: true }),\n        string: Config({ type: String, flow: \"out\", value: \"String\", persist: true }),\n        object: Config({ type: Object, flow: \"out\", persist: true, value: { an: { object: 'object' } } })\n    };\n\n    this.render = function () {\n        return cadgrid({ bgcolor: \"#000030\", majorline: \"#003040\", minorline: \"#002030\", flexdirection: \"column\", alignitems: \"center\", justifycontent: \"space-around\" }, view({ alignitems: \"center\" }, label({ flex: 0, text: \"Number\", marginright: 20 }), textbox({ flex: 0, value: this.number, onvalue: function (ev, v, o) {\n                this.number = o.value;\n            }.bind(this) })), view({ alignitems: \"center\" }, label({ flex: 0, text: \"Boolean\", marginright: 20 }), checkbox({ flex: 0, value: this.boolean, onclick: function (ev, v, o) {\n                this.boolean = o.value;\n            }.bind(this) })), view({ alignitems: \"center\" }, label({ flex: 0, text: \"Float\", marginright: 20 }), textbox({ flex: 0, value: this.float, onvalue: function (ev, v, o) {\n                this.float = o.value;\n            }.bind(this) })), view({ alignitems: \"center\" }, label({ flex: 0, text: \"Int\", marginright: 20 }), textbox({ flex: 0, value: this.int, onvalue: function (ev, v, o) {\n                this.int = o.value;\n            }.bind(this) })), view({ alignitems: \"center\" }, label({ flex: 0, text: \"String\", marginright: 20 }), textbox({ flex: 0, value: this.string, onvalue: function (ev, v, o) {\n                this.string = o.value;\n            }.bind(this) })));\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/displays/outputs.js\n// module id = 34\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/displays/outputs.js?");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function (requireDreem, $ui$, view) {\n\n    this.attributes = {\n        shaderpos: Config({\n            type: vec2,\n            flow: \"in\"\n        })\n    };\n\n    this.style = {\n        view_myview: {\n            flex: 1,\n            attributes: {\n                mypos: vec2(0, 0)\n            },\n            bgcolorfn: function bgcolorfn(pos) {\n                return pal.pal1(sin(pos.y * mypos.y * 0.1));\n            }\n        }\n    };\n\n    this.render = function () {\n        return view({\n            mypos: wire('this.parent.shaderpos'),\n            name: 'myview',\n            class: 'myclass'\n        });\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/displays/shaderviz.js\n// module id = 35\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/displays/shaderviz.js?");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$server/service', function () {\n\n\tthis.attributes = {\n\t\toutnumber: Config({ persist: true, type: Number, flow: \"out\", value: 100 }),\n\t\toutboolean: Config({ persist: true, type: Boolean, flow: \"out\", value: true }),\n\t\toutfloat: Config({ persist: true, type: float, flow: \"out\", value: 3.1415 }),\n\t\toutint: Config({ persist: true, type: int, flow: \"out\", value: 42 }),\n\t\toutvec2: Config({ persist: true, type: vec2, flow: \"out\", value: vec2(1, 2) }),\n\t\toutvec3: Config({ persist: true, type: vec3, flow: \"out\", value: vec3(1, 2, 3) }),\n\t\toutvec4: Config({ persist: true, type: vec4, flow: \"out\", value: vec4(1, 2, 3, 4) }),\n\t\toutarray: Config({ persist: true, type: Array, flow: \"out\", value: [1, 2, 3, 4, 5, \"6\"] }),\n\t\toutstring: Config({ persist: true, type: String, flow: \"out\", value: \"Cats\" }),\n\t\toutobject: Config({ persist: true, type: Object, flow: \"out\", value: { some: { complex: 'object' } } }),\n\n\t\tnumber: Config({ persist: true, type: Number, flow: \"in\" }),\n\t\tboolean: Config({ persist: true, type: Boolean, flow: \"in\" }),\n\t\tfloat: Config({ persist: true, type: float, flow: \"in\" }),\n\t\tint: Config({ persist: true, type: int, flow: \"in\" }),\n\t\tvec2: Config({ persist: true, type: vec2, flow: \"in\" }),\n\t\tvec3: Config({ persist: true, type: vec3, flow: \"in\" }),\n\t\tvec4: Config({ persist: true, type: vec4, flow: \"in\" }),\n\t\tarray: Config({ persist: true, type: Array, flow: \"in\" }),\n\t\tstring: Config({ persist: true, type: String, flow: \"in\" }),\n\t\tobject: Config({ persist: true, type: Object, flow: \"in\" })\n\t};\n\n\tthis.onnumber = function (ev, v, o) {\n\t\tconsole.log(\"number\", this.number);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outnumber = v;\n\t};\n\n\tthis.onboolean = function (ev, v, o) {\n\t\tconsole.log(\"boolean\", this.boolean);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outboolean = v;\n\t};\n\n\tthis.onfloat = function (ev, v, o) {\n\t\tconsole.log(\"float\", this.float);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outfloat = v;\n\t};\n\n\tthis.onint = function (ev, v, o) {\n\t\tconsole.log(\"int\", this._int);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outint = v;\n\t};\n\n\tthis.onvec2 = function (ev, v, o) {\n\t\tconsole.log(\"vec2\", this.vec2);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outvec2 = v;\n\t};\n\n\tthis.onvec3 = function (ev, v, o) {\n\t\tconsole.log(\"vec3\", this.vec3);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outvec3 = v;\n\t};\n\n\tthis.onvec4 = function (ev, v, o) {\n\t\tconsole.log(\"vec4\", this.vec4);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outvec4 = v;\n\t};\n\n\tthis.onarray = function (ev, v, o) {\n\t\tconsole.log(\"array\", this.array);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outarray = v;\n\t};\n\n\tthis.onstring = function (ev, v, o) {\n\t\tconsole.log(\"string\", this.string);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outstring = v;\n\t};\n\n\tthis.onobject = function (ev, v, o) {\n\t\tconsole.log(\"object\", this.object);\n\t\tconsole.log(\"\\n\");\n\t\tthis.outobject = v;\n\t};\n\n\tthis.init = function (ev, v, o) {\n\t\tconsole.log(\"number\", this.number);\n\t\tconsole.log(\"boolean\", this.boolean);\n\t\tconsole.log(\"float\", this.float);\n\t\tconsole.log(\"int\", this.int);\n\t\tconsole.log(\"vec2\", this.vec2);\n\t\tconsole.log(\"vec3\", this.vec3);\n\t\tconsole.log(\"vec4\", this.vec4);\n\t\tconsole.log(\"array\", this.array);\n\t\tconsole.log(\"string\", this.string);\n\t\tconsole.log(\"object\", this.object);\n\t\tconsole.log(\"\\n\\n\");\n\n\t\tthis.outobject = this.object;\n\t\tthis.outstring = this.string;\n\t\tthis.outarray = this.array;\n\t\tthis.outvec4 = this.vec4;\n\t\tthis.outvec3 = this.vec3;\n\t\tthis.outvec2 = this.vec2;\n\t\tthis.outint = this.int;\n\t\tthis.outfloat = this.float;\n\t\tthis.outboolean = this.boolean;\n\t\tthis.outnumber = this.number;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/services/debugd.js\n// module id = 36\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/services/debugd.js?");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/screen', function ($ui$, view, $examples$components$staticmap$, map) {\n\n    this.attributes = {\n        location: Config({ type: String, flow: \"in\" }),\n        zoomLevel: Config({ type: String, flow: \"in\" }),\n        zooml: Config({ type: int, value: 14 })\n    };\n\n    this.bestZoom = function () {\n\n        var zl = this.zooml;\n\n        var zlf = parseFloat(this.zoomLevel);\n\n        if (zlf) {\n            zl = zlf * 21;\n        } else {\n            if (this.zoomLevel === 'up' || this.zoomLevel === 'left') {\n                zl++;\n                this.zoomLevel = undefined;\n            } else if (this.zoomLevel === 'down' || this.zoomLevel === 'right') {\n                zl--;\n                this.zoomLevel = undefined;\n            }\n        }\n\n        if (!zl) {\n            zl = 14; //default\n        }\n        if (zl < 0) {\n            zl = 0; //min\n        }\n        if (zl > 21) {\n            zl = 21; //max\n        }\n\n        this.zooml = Math.round(zl);\n        return this.zooml;\n    };\n\n    this.render = function () {\n        return map({ width: 400, height: 400, location: this.location, mapzoom: this.bestZoom() });\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/services/map.js\n// module id = 37\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/services/map.js?");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$examples/components/omdb/omdb', function () {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/services/omdb.js\n// module id = 38\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/services/omdb.js?");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$examples/components/request/get', function () {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/flow/services/webrequest.js\n// module id = 39\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/flow/services/webrequest.js?");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\ndefineDreem.class(\"$server/service\", function (require) {\n\t// The iot class makes it very easy to connect to a wide variety of devices including\n\t// SmartThings, Philips Hue and many more.\n\t//\n\t// IMPORTANT: see /examples/components/iot/README.md for setup instructions.\n\tthis.__thingmodel = {};\n\n\tthis.attributes = {\n\t\t// A list of things connected to the hub, automatically updated as new devices are discovered and their state changes.\n\t\t// Each thing consists of an object containing an id, name, and a state object representing its current state's value type, unit and if it's readonly or not where available.\n\t\tthings: Config({ type: Array, value: [], flow: \"out\" }),\n\t\t// If true, we are connected\n\t\tconnected: Config({ type: Boolean, value: false, persist: true, flow: \"out\" })\n\n\t\t// Updates a specific thing's state to a new value\n\t};this.update = function (thingid, state, value) {\n\t\tfor (var i = 0; i < this.__things.length; i++) {\n\t\t\tvar thing = this.__things[i];\n\t\t\t// console.log('thing', thing)\n\t\t\tvar meta = thing.state('meta');\n\t\t\tvar id = meta['iot:thing-id'];\n\t\t\tif (id === thingid) {\n\t\t\t\t// found the thing, set its state\n\t\t\t\tthing.set(':' + state, value);\n\t\t\t\treturn;\n\t\t\t\t// console.log('found id', thingid, state, value)\n\t\t\t}\n\t\t}\n\t\t// we should have returned above\n\t\tif (!thing) {\n\t\t\tconsole.warn('missing thing', thingid);\n\t\t}\n\t};\n\n\t// Updates all things to a new value\n\tthis.updateAll = function (state, value) {\n\t\t// set on all things\n\t\tthis.__things.set(':' + state, value);\n\t};\n\n\tthis.__updateModel = function (thing) {\n\t\tvar id = thing.thing_id();\n\t\tvar meta = thing.state(\"meta\");\n\t\tvar model = thing.state(\"model\");\n\t\tvar states = thing.state(\"istate\");\n\t\tvar facets = meta['iot:facet'];\n\t\tif (facets && facets.map) {\n\t\t\tfacets = facets.map(function (facet) {\n\t\t\t\treturn facet.split(':')[1];\n\t\t\t});\n\t\t}\n\n\t\t// ignore timestamps\n\t\tdelete states['@timestamp'];\n\n\t\tvar attributemeta = model['iot:attribute'];\n\t\t// console.log('thing metadata', id, meta, facets)\n\t\t// console.log('thing model', attributemeta);\n\n\t\t// rewrite state to include metadata about type, readonly\n\t\tfor (var i = 0; i < attributemeta.length; i++) {\n\t\t\tvar attrmodel = attributemeta[i];\n\t\t\tvar key = attrmodel['schema:name'];\n\t\t\tvar units = attrmodel['iot:unit'];\n\t\t\tif (units) {\n\t\t\t\tunits = units.split(':')[1];\n\t\t\t}\n\t\t\tstates[key] = {\n\t\t\t\tvalue: states[key],\n\t\t\t\ttype: attrmodel['iot:type'].split('.')[1],\n\t\t\t\treadonly: !attrmodel['iot:write'],\n\t\t\t\tunits: units\n\t\t\t};\n\t\t}\n\n\t\tvar newdata = {\n\t\t\tstate: states,\n\t\t\tid: meta['iot:thing-id'],\n\t\t\tname: meta['schema:name'],\n\t\t\treachable: meta['iot:reachable'],\n\t\t\tmanufacturer: meta['schema:manufacturer'],\n\t\t\tmodel: meta['schema:model'] || meta['iot:model-id'],\n\t\t\tfacets: facets\n\t\t};\n\n\t\t// copy over fields\n\t\tif (JSON.stringify(this.__thingmodel[id]) === newdata) return;\n\t\tthis.__thingmodel[id] = newdata;\n\n\t\tvar keys = Object.keys(this.__thingmodel).sort();\n\t\tvar things = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tthings[i] = this.__thingmodel[key];\n\t\t}\n\n\t\tthis.things = things;\n\t\t// console.log(\"updated state\\n\", JSON.stringify(things));\n\t};\n\n\tthis.init = function () {\n\t\t// allow connection logic to be overridden\n\t\tthis.__things = this.connect(requireDreem(\"iotdb\"));\n\t\t// console.log('THINGS: ', this.__things);\n\n\t\t// listen for new things\n\t\tthis.__things.on(\"thing\", function (thing) {\n\t\t\t//console.log('new THING: ', thing)\n\t\t\tthis.__updateModel(thing);\n\t\t\t// register for changes to each thing\n\t\t\tthing.on(\"istate\", function (thing_inner) {\n\t\t\t\t// console.log('new state on THING: ', thing)\n\t\t\t\t// update to reflect changes\n\t\t\t\tthis.__updateModel(thing_inner);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t};\n\n\t// Override to change what gets connected. Currently attempts to connect all devices.\n\tthis.connect = function (iotdb) {\n\t\tif (this.connected) return;\n\t\treturn iotdb.connect('HueLight', { poll: 1 }).connect();\n\t\tthis.connected = true;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/iot/iot.js\n// module id = 40\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/iot/iot.js?");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$system/base/node\", function (requireDreem) {\n\t// \tThe accelerometer receives acceleration data where available.\n\t// <br/><a href=\"/examples/sensors\">example &raquo;</a>\n\n\tthis.name = \"accelerometer\";\n\n\tthis.attributes = {\n\t\t// True if accelerometer is supported\n\t\tsupported: Config({ type: Boolean, value: false }),\n\n\t\t// Three component (x, y, z) instant acceleration of the device\n\t\tacceleration: Config({ type: vec3, value: vec3(0, 0, 0) }),\n\n\t\t// Alias for the x component of acceleration\n\t\tx: Config({ alias: 'acceleration', index: 0 }),\n\n\t\t// Alias for the y component of acceleration\n\t\ty: Config({ alias: 'acceleration', index: 1 }),\n\n\t\t// Alias for the z component of acceleration\n\t\tz: Config({ alias: 'acceleration', index: 2 })\n\n\t};\n\n\tthis.init = function () {\n\t\t// TODO: use lzidle to throttle\n\t\twindow.addEventListener('devicemotion', function (ev) {\n\t\t\tvar accel = ev.accelerationIncludingGravity;\n\t\t\tif (accel) {\n\t\t\t\tfor (var key in accel) {\n\t\t\t\t\tif (accel.hasOwnProperty(key)) {\n\t\t\t\t\t\tvar value = ev.accelerationIncludingGravity[key];\n\t\t\t\t\t\tif (typeof value !== \"undefined\") {\n\t\t\t\t\t\t\tif (!this._supported) {\n\t\t\t\t\t\t\t\tthis.supported = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tvar accelerometer = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar label = requireDreem(\"$ui/label\");\n\n\t\t\treturn [accelerometer({\n\t\t\t\tonacceleration: function onacceleration(ev, v, o) {\n\t\t\t\t\to.find(\"accel\").text = \"Current acceleration is x:\" + v[0] + \", y:\" + v[1] + \", z:\" + v[2];\n\t\t\t\t}\n\t\t\t}), label({ name: \"accel\", text: \"Searching for accelerometer ...\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/sensors/accelerometer.js\n// module id = 41\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/sensors/accelerometer.js?");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$system/base/node\", function (requireDreem) {\n\t// \tThe gyro receives gyroscope and compass data where available.\n\t// See [deviceorientation](https://w3c.github.io/deviceorientation/spec-source-orientation.html#deviceorientation) and [DeviceOrientationEvent](https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html) for details.\n\t// <br/><a href=\"/examples/sensors\">example &raquo;</a>\n\n\tthis.name = \"gyroscope\";\n\n\tthis.attributes = {\n\t\t// True if gyro is supported\n\t\tsupported: Config({ type: Boolean, value: false }),\n\n\t\t// Three component (alpha, beta, gamma) orientation of the device\n\t\torientation: Config({ type: vec3, value: vec3(0, 0, 0) }),\n\n\t\t// Alias for the alpha component of orientation\n\t\talpha: Config({ alias: 'orientation', index: 0 }),\n\n\t\t// Alias for the beta component of orientation\n\t\tbeta: Config({ alias: 'orientation', index: 1 }),\n\n\t\t// Alias for the gamma component of orientation\n\t\tgamma: Config({ alias: 'orientation', index: 2 }),\n\n\t\t// The compass orientation, see [https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html](https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html) for details.\n\t\tcompass: Config({ type: Number, value: 0 }),\n\n\t\t// The compass accuracy, see [https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html](https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html) for details.\n\t\taccuracy: Config({ type: Number, value: 0 })\n\t};\n\n\tthis.init = function () {\n\t\t// TODO: use lzidle to throttle\n\t\twindow.addEventListener('deviceorientation', function (ev) {\n\t\t\tvar orientationevents = ['alpha', 'beta', 'gamma'];\n\t\t\tfor (var i = 0; i < orientationevents.length; i++) {\n\t\t\t\tvar name = orientationevents[i];\n\t\t\t\tvar value = ev[name];\n\t\t\t\tif (typeof value !== \"undefined\") {\n\t\t\t\t\tif (!this._supported) {\n\t\t\t\t\t\tthis.supported = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis[name] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.accuracy = ev.webkitCompassAccuracy;\n\t\t\tthis.compass = ev.webkitCompassHeading;\n\t\t}.bind(this));\n\t};\n\n\tvar gyroscope = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar label = requireDreem(\"$ui/label\");\n\t\t\treturn [gyroscope({\n\t\t\t\tonorientation: function onorientation(ev, v, o) {\n\t\t\t\t\to.find(\"gyro\").text = \"Current gyro value is a:\" + v[0] + \", b:\" + v[1] + \", g:\" + v[2];\n\t\t\t\t}\n\t\t\t}), label({ name: \"gyro\", text: \"Searching for gyroscope ...\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/sensors/gyroscope.js\n// module id = 42\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/sensors/gyroscope.js?");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$system/base/node\", function (requireDreem) {\n\t// \tThe light sensor receives ambient light data where available.\n\t// <br/><a href=\"/examples/sensors\">example &raquo;</a>\n\n\tthis.name = \"ambient\";\n\n\tthis.attributes = {\n\t\t// True if ambient light sensor is supported\n\t\tsupported: Config({ type: Boolean, value: false }),\n\n\t\t// Sensed value of ambient light\n\t\tluminosity: Config({ type: Number, value: 0 })\n\t};\n\n\tthis.init = function () {\n\t\t// TODO: use lzidle to throttle\n\t\twindow.addEventListener('devicelight', function (ev) {\n\t\t\tif (!this._supported) {\n\t\t\t\tthis.supported = true;\n\t\t\t}\n\t\t\tthis.luminosity = ev.value;\n\t\t}.bind(this));\n\t};\n\n\tvar light = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar label = requireDreem(\"$ui/label\");\n\n\t\t\treturn [light({\n\t\t\t\tonluminosity: function onluminosity(ev, v, o) {\n\t\t\t\t\to.find(\"lux\").text = \"Current luminosity is: \" + v;\n\t\t\t\t}\n\t\t\t}), label({ name: \"lux\", text: \"Searching for ambient light sensor ...\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/sensors/light.js\n// module id = 43\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/sensors/light.js?");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$system/base/node\", function (requireDreem) {\n\t// \tinternal, Provides information about the distance of a nearby physical object using the proximity sensor of a device.\n\n\tthis.name = \"proximity\";\n\n\tthis.attributes = {\n\t\t// True if proximity is supported\n\t\tsupported: Config({ type: Boolean, value: false }),\n\n\t\t// The maximum sensing distance the sensor is able to report, in centimeters\n\t\tmax: Config({ type: Number, value: 0 }),\n\n\t\t// The minimum sensing distance the sensor is able to report, in centimeters. Ususally zero.\n\t\tmin: Config({ type: Number, value: 0 }),\n\n\t\t// The current device proximity, in centimeters\n\t\tdistance: Config({ type: Number, value: 0 })\n\t};\n\n\tthis.init = function () {\n\t\t// TODO: use lzidle to throttle\n\t\twindow.addEventListener('deviceproximity', function (ev) {\n\t\t\tif (!this._supported) {\n\t\t\t\tthis.supported = true;\n\t\t\t}\n\t\t\tthis.min = ev.min;\n\t\t\tthis.max = ev.max;\n\t\t\tthis.distance = ev.value;\n\t\t}.bind(this));\n\t};\n\n\tvar proximity = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar label = requireDreem(\"$ui/label\");\n\n\t\t\treturn [proximity({\n\t\t\t\tondistance: function ondistance(ev, v, o) {\n\t\t\t\t\to.find(\"distance\").text = \"Distance to object is: \" + v;\n\t\t\t\t}\n\t\t\t}), label({ name: \"distance\", text: \"Searching for nearby object ...\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/sensors/proximity.js\n// module id = 44\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/sensors/proximity.js?");

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$system/base/node\", function (requireDreem, baseclass, $system$parse$, onejsparser, jsformatter, astscanner, onejsgen) {\n\t// internal, api for manipulating Dreem AST\n\n\tthis.attributes = {\n\t\tchange: Config({ type: Event }),\n\t\tundostack: Config({ value: [], persist: true }),\n\t\tredostack: Config({ value: [], persist: true })\n\t};\n\n\tthis.atConstructor = function (source) {\n\t\tthis.build = new onejsgen();\n\t\tif (source) {\n\t\t\tthis.ast = this.parse(source);\n\t\t\tthis.__scanner = new astscanner(this.ast);\n\t\t}\n\t\tthis.last_source = this.stringify();\n\t};\n\n\tthis.fork = function (callback) {\n\t\tthis.undostack.push(JSON.stringify(this.ast));\n\t\tthis.redostack.length = 0;\n\t\tthis.reset();\n\t\tcallback(this);\n\t\tvar last = this.last_source = this.stringify();\n\t\tthis.emit('change', { value: last });\n\t};\n\n\tthis.undo = function () {\n\t\tif (!this.undostack.length) return;\n\t\tthis.redostack.push(JSON.stringify(this.ast));\n\t\tthis.ast = JSON.parse(this.undostack.pop());\n\t\tvar last = this.last_source = this.stringify();\n\t\tthis.emit('change', { value: last });\n\t};\n\n\tthis.redo = function () {\n\t\tif (!this.redostack.length) return;\n\t\tthis.undostack.push(JSON.stringify(this.ast));\n\t\tthis.ast = JSON.parse(this.redostack.pop());\n\t\tvar last = this.last_source = this.stringify();\n\t\tthis.emit('change', { value: last });\n\t};\n\n\tthis.nodeFor = function (o) {\n\n\t\tif (!o.__ast) {\n\t\t\tvar past;\n\t\t\tif (o.parent && o.parent !== o) {\n\t\t\t\tpast = this.nodeFor(o.parent);\n\t\t\t} else {\n\t\t\t\tpast = this.ast;\n\t\t\t}\n\n\t\t\tif (o.constructor.module.factory.baseclass === \"/server/composition\") {\n\t\t\t\tvar key = this.build.Function();\n\t\t\t\to.__ast = new astscanner(past, key).at;\n\t\t\t} else if (typeof o.__constructorIndex !== \"undefined\") {\n\t\t\t\to.__ast = past.args[o.__constructorIndex];\n\t\t\t} else {\n\t\t\t\tvar key = this.build.Call(this.build.Id(o.constructor.name));\n\t\t\t\to.__ast = new astscanner(past, key).at;\n\t\t\t}\n\t\t}\n\n\t\treturn o.__ast;\n\t};\n\n\tthis.codeFor = function (o) {\n\t\tvar ast = this.nodeFor(o);\n\t\treturn this.stringify(ast);\n\t};\n\n\tthis.nodePathFor = function (v) {\n\t\tvar ast = this.nodeFor(v);\n\t\tif (!ast.fn) {\n\t\t\tconsole.log(\"Yikes!\", ast, v);\n\t\t\treturn;\n\t\t}\n\n\t\tvar parentpath;\n\t\tvar index = -1;\n\t\tif (v.parent) {\n\t\t\tparentpath = this.nodePathFor(v.parent);\n\t\t\tvar parent = this.nodeFor(v.parent);\n\t\t\tindex = parent.args.indexOf(ast);\n\t\t} else {\n\t\t\tparentpath = [];\n\t\t}\n\n\t\tvar path = this.build[ast.type](this.build.Id(ast.fn.name));\n\t\tpath._index = index;\n\n\t\tparentpath.push(path);\n\n\t\treturn parentpath;\n\t};\n\n\t// ===== AST Object Manipulation Helpters\n\n\t// TODO(mason) refactor this stuff, unduplicate\n\n\tthis.createASTNode = function (v, raw) {\n\t\tif (!this.__parser) {\n\t\t\tthis.__parser = new onejsparser();\n\t\t}\n\t\tvar string = raw ? v : JSON.stringify(v);\n\n\t\t// Need to remove the \"key\" quotes or else will create wrong type of key objects\n\t\tstring = string.replace(/\"([a-zA-Z0-9_$]+)\":/g, \"$1:\");\n\n\t\t// Replace the vecs with better values\n\t\tstring = string.replace(/\\{____struct:\"(vec\\d)\",data:\\[([\\d.,-]+)\\]\\}/g, \"$1($2)\");\n\n\t\tvar ast = this.__parser.parse(string);\n\t\treturn ast.steps[0];\n\t};\n\n\tthis.getCallNodeValue = function (callnode, key) {\n\t\tvar scanner = new astscanner(callnode, [this.build.Object(), this.build.Property(key)]);\n\n\t\tvar item = scanner.atparent.keys[scanner.atindex];\n\n\t\tif (item.value) {\n\t\t\treturn item.value.value;\n\t\t}\n\t};\n\n\tthis.deleteCallNodeKey = function (callnode, key) {\n\t\tvar scanner = new astscanner(callnode, [this.build.Object(), this.build.Property(key)]);\n\t\tif (scanner.atindex >= 0) {\n\t\t\tscanner.atparent.keys.splice(scanner.atindex, 1);\n\t\t}\n\t};\n\n\tthis.setCallNodeValue = function (callnode, key, value) {\n\n\t\tvar scanner = new astscanner(callnode, [this.build.Object(), this.build.Property(key)]);\n\n\t\tvar at = scanner.at;\n\n\t\tvar item, newval, args, newparams;\n\n\t\tif (at.type === \"Property\") {\n\t\t\t// Found an Property\n\n\t\t\titem = scanner.atparent.keys[scanner.atindex];\n\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t\t//} else if (typeof(value) === 'string' || typeof(value) === 'number' || typeof(value) === 'boolean') {\n\t\t\t\t//\tnewval = this.build.Value(value);\n\t\t\t} else {\n\t\t\t\tnewval = this.createASTNode(value);\n\t\t\t}\n\n\t\t\titem.value = newval;\n\t\t} else if (at.type === \"Object\") {\n\t\t\t// No Property, but found an Object\n\n\t\t\targs = {};\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\targs[name] = \"REPLACE\";\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t\titem = newparams.keys[0];\n\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t\titem.value = newval;\n\t\t\t} else {\n\t\t\t\titem = { key: this.build.Property(key), value: this.createASTNode(value) };\n\t\t\t}\n\n\t\t\tif (item) {\n\t\t\t\tat.keys.push(item);\n\t\t\t}\n\t\t} else {\n\t\t\t// No Object either, create new one from scrach\n\n\t\t\targs = {};\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\targs[name] = \"REPLACE\";\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t\titem = newparams.keys[0];\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t\titem.value = newval;\n\t\t\t} else {\n\t\t\t\targs[name] = value;\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t}\n\n\t\t\tif (newparams) {\n\t\t\t\tat.args.push(newparams);\n\t\t\t}\n\t\t}\n\t};\n\n\t// ===== scanner calls =====\n\n\tthis.reset = function () {\n\t\tif (!this.__scanner) {\n\t\t\tthis.__scanner = new astscanner(this.ast);\n\t\t}\n\t\tthis.__scanner.reset();\n\t};\n\n\tthis.nodeForPath = function (path) {\n\t\tthis.__scanner.scan(path);\n\t\treturn this.__scanner.at;\n\t};\n\n\tthis.seekNodeFor = function (v) {\n\t\tvar path = this.nodePathFor(v);\n\t\tthis.__scanner.scan(path);\n\t};\n\n\tthis.removeArgNode = function (node) {\n\t\tvar index = this.__scanner.at.args.indexOf(node);\n\t\tif (index >= 0) {\n\t\t\tthis.__scanner.at.args.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tthis.pushArg = function (arg) {\n\t\tvar at = this.__scanner.at;\n\n\t\tif (!at.args) {\n\t\t\tat.args = [];\n\t\t}\n\t\tat.args.push(arg);\n\t};\n\n\tthis.setArgValue = function (key, value) {\n\n\t\t//check that its a thing with args\n\n\t\tthis.__scanner.scan([this.build.Object(), this.build.Property(key)]);\n\n\t\tvar at = this.__scanner.at;\n\n\t\t//console.log(\"SET AST VALUE ON\", at, key, \"=\", value, \":\", this.__scanner);\n\n\t\tvar item, newval, args, newparams;\n\n\t\tif (at.type === \"Property\") {\n\t\t\t// Found an Property\n\n\t\t\titem = this.__scanner.atparent.keys[this.__scanner.atindex];\n\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t} else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t\t\t\tnewval = this.build.Value(value);\n\t\t\t} else {\n\t\t\t\tnewval = this.createASTNode(value);\n\t\t\t}\n\n\t\t\titem.value = newval;\n\t\t} else if (at.type === \"Object\") {\n\t\t\t// No Property, but found an Object\n\n\t\t\targs = {};\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\targs[key] = \"REPLACE\";\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t\titem = newparams.keys[0];\n\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t\titem.value = newval;\n\t\t\t\titem.key = this.build.Property(key);\n\t\t\t} else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t\t\t\titem = { key: this.build.Property(key), value: this.build.Value(value) };\n\t\t\t} else {\n\t\t\t\titem = { key: this.build.Property(key), value: this.createASTNode(value) };\n\t\t\t}\n\n\t\t\tif (item) {\n\t\t\t\tat.keys.push(item);\n\t\t\t}\n\t\t} else {\n\t\t\t// No Object either, create new one from scrach\n\n\t\t\targs = {};\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\targs[key] = \"REPLACE\";\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t\titem = newparams.keys[0];\n\t\t\t\tnewval = this.createASTNode(value.toString(), true);\n\t\t\t\titem.value = newval;\n\t\t\t} else {\n\t\t\t\targs[key] = value;\n\t\t\t\tnewparams = this.createASTNode(args);\n\t\t\t}\n\n\t\t\tif (newparams) {\n\t\t\t\tat.args.push(newparams);\n\t\t\t}\n\t\t}\n\t};\n\n\t// convert a string in to a meaningful javascript object for this dataset. The default is JSON, but you could use this function to accept any format of choice.\n\tthis.parse = function (classconstr) {\n\t\tvar source;\n\t\tif (typeof classconstr === \"string\") {\n\t\t\tsource = classconstr;\n\t\t} else {\n\t\t\tsource = classconstr.module.factory.body.toString();\n\t\t}\n\n\t\treturn onejsparser.parse(source);\n\t};\n\n\t// convert an object in to a string. Defaults to standard JSON, but you could overload this function to provide a more efficient fileformat. Do not forget to convert the JSONParse function as well.\n\tthis.stringify = function (ast) {\n\t\tif (!ast) {\n\t\t\tast = this.ast;\n\t\t}\n\t\tvar buf = {\n\t\t\tout: '',\n\t\t\tcharCodeAt: function charCodeAt(i) {\n\t\t\t\treturn this.out.charCodeAt(i);\n\t\t\t},\n\t\t\tchar_count: 0\n\t\t};\n\t\tjsformatter.walk(ast, buf, {}, function (str) {\n\n\t\t\tif (str === '\\n') {\n\t\t\t\tthis.last_is_newline = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (str === '\\t' && this.last_is_newline) {\n\t\t\t\tstr = '\\n';\n\t\t\t\tfor (var i = 0; i < this.actual_indent; i++) {\n\t\t\t\t\tstr += '  ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.last_is_newline = false;\n\n\t\t\tbuf.char_count += str.length;\n\t\t\tbuf.out += str;\n\t\t});\n\t\treturn buf.out;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/astio.js\n// module id = 45\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/astio.js?");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// composition base class, inherit your compositions from this one\n\ndefineDreem(function (requireDreem, node) {\n   return requireDreem('$system/platform/$platform/composition$platform');\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/composition.js\n// module id = 46\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/composition.js?");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function (requireDreem, $ui$, label) {\n\t// The dataset class allows you to share a single \"document\" between various parts of your application.\n\t// The dataset provides undo/redo functionality by serializing its contents to a JSON string.\n\t// To modify a dataset you need to use the \"fork\" method. The fork method saves the current instance to the undo stack, calls back to your code and then notifies all objects that have this dataset instance bound to them to update themselves.\n\n\tthis._atConstructor = function (data) {\n\t\tthis.undo_stack = [];\n\t\tthis.redo_stack = [];\n\t\tthis.connected_objects = [];\n\t\tthis.data = data;\n\t};\n\n\t// internal, Handles the binding of this dataset to the attribute of something else.\n\tthis.atAttributeAssign = function (obj, key) {\n\t\tfor (var i = 0; i < this.connected_objects.length; i++) {\n\t\t\tvar co = this.connected_objects[i];\n\t\t\tif (co.obj === obj) return;\n\t\t}\n\t\tthis.connected_objects.push({ obj: obj, key: key });\n\t};\n\n\t// Fork starts a new modification on a dataset;\n\tthis.fork = function (callback) {\n\t\t// the function that will be called with a modifyable javascript object. DO NOT under any circumstances directly modify this data property!\n\t\tthis.undo_stack.push(this.stringify(this.data));\n\t\tthis.redo_stack.length = 0;\n\t\tcallback(this.data);\n\t\tthis.notifyAssignedAttributes();\n\t};\n\n\t// internal, Silent operates much the same as `fork`, but does not notify listeners bound to this dataset. This can be used in case you are CERTAIN that this object is the only object in your application that listens to your changed property, but you still need to save the state to the undo stack\n\t// 'callback' the function that will be called with a modifyable javascript object. DO NOT under any circumstances directly modify this data property!\n\tthis.silent = function (callback /*function*/) {\n\t\tthis.undo_stack.push(this.stringify(this.data));\n\t\tthis.redo_stack.length = 0;\n\t\tcallback(this.data);\n\t\tif (this.atChange) this.atChange();\n\t};\n\n\t// internal, Cause objects that have us assigned to reload\n\tthis.notifyAssignedAttributes = function () {\n\t\tfor (var i = 0; i < this.connected_objects.length; i++) {\n\t\t\tvar o = this.connected_objects[i];\n\t\t\to.obj[o.key] = this;\n\t\t}\n\t\tif (this.atChange) this.atChange();\n\t};\n\n\t// Convert all javascript binary arrays in to their correct objects.\n\t// <node> the node to clean up.\n\n\n\t// convert a string in to a meaningful javascript object for this dataset. The default is JSON, but you could use this function to accept any format of choice.\n\tthis.parse = function (stringdata) {\n\t\tvar data = JSON.parse(stringdata);\n\t\tdata = defineDreem.structFromJSON(data);\n\t\treturn data;\n\t};\n\n\t// convert an object in to a string. Defaults to standard JSON, but you could overload this function to provide a more efficient fileformat. Do not forget to convert the JSONParse function as well.\n\tthis.stringify = function (data /*Object*/) /*String*/{\n\t\treturn JSON.stringify(data);\n\t};\n\n\t// Go back to the previous state. All classes that have this dataset bound will get their assignment updated\n\tthis.undo = function () {\n\t\tif (!this.undo_stack.length) return;\n\t\tthis.redo_stack.push(this.stringify(this.data));\n\t\tthis.data = this.parse(this.undo_stack.pop());\n\t\tthis.notifyAssignedAttributes();\n\t};\n\n\t// Go forward to the next state. All classes that have this dataset bound will get their assignment updated\n\tthis.redo = function () {\n\t\tif (!this.redo_stack.length) return;\n\t\tthis.undo_stack.push(this.stringify(this.data));\n\t\tthis.data = this.parse(this.redo_stack.pop());\n\t\tthis.notifyAssignedAttributes();\n\t};\n\n\t// Basic dataset modification example:\n\tvar dataset = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar results = [];\n\n\t\t\tvar dset = dataset({ something: 1 });\n\n\t\t\tresults.push(label({ fgcolor: 'green', text: 'Value before fork is: ' + dset.data.something }));\n\n\t\t\tdset.fork(function (data) {\n\t\t\t\tdata.something = \"some new value\";\n\t\t\t});\n\n\t\t\tresults.push(label({ fgcolor: 'red', text: 'Current value is: ' + dset.data.something }));\n\n\t\t\treturn results;\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/dataset.js\n// module id = 47\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/dataset.js?");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, service) {\n\t// The fileio class provides an easy RPC mechanism to load/create/save/enumerate files and directories. The fileio instance should live on the server part of the composition.\n\t// do not ever put this in a web-facing composition as it has no security features\n\tvar $localbound = defineDreem.$localbound;\n\tthis.name = \"fileio\";\n\n\tvar nodehttp = requireDreem('$system/server/nodehttp');\n\tvar fs = requireDreem('fs');\n\tvar path = requireDreem('path');\n\n\t// wait for a file to change - then resolve the promise. Returns a promise.\n\t// <name> The file to read. File paths can use $-shortcuts to refer to various folders\n\tthis.filechange = function (name) {\n\t\tname = defineDreem.safePath(name);\n\t\tif (!name) return null;\n\t\tvar filepath = path.join(defineDreem.expandVariables(defineDreem.$root), name);\n\t\treturn new defineDreem.Promise(function (resolve) {\n\t\t\t// lets wait for a  filechange, then resolve it\n\t\t\tvar stat = JSON.stringify(fs.statSync(filepath));\n\t\t\tvar myitv = setInterval(function mytimeout() {\n\t\t\t\tvar newstat = JSON.stringify(fs.statSync(filepath));\n\t\t\t\tif (stat !== newstat) {\n\t\t\t\t\tclearInterval(myitv);\n\t\t\t\t\tresolve(fs.readFileSync(filepath).toString());\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t};\n\n\t// Return the full contents of a file as a string. Returns the result of node.js fs.readFileSync or null in case of exception\n\t// <name> The file to read. File paths can use $-shortcuts to refer to various folders\n\tthis.readfile = function (name) {\n\t\t// only support reading tagged names\n\t\tname = defineDreem.safePath(name);\n\t\tif (!name) return null;\n\t\ttry {\n\t\t\treturn fs.readFileSync(defineDreem.expandVariables(name)).toString();\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t// writefile synchronously writes data to a file. Returns the result of node.js fs.writeFileSync or null in case of exception\n\t// <name> The file to read. File paths can use $-shortcuts to refer to various folders\n\t// <data> The data to write\n\tthis.writefile = function (name, data) {\n\t\tif (!defineDreem.$writefile) {\n\t\t\tconsole.log(\"writefile api disabled, use -writefile to turn it on. Writefile api is always limited to localhost origins.\");\n\t\t\treturn null;\n\t\t}\n\t\tname = defineDreem.safePath(name);\n\t\tif (!name) return null;\n\t\ttry {\n\t\t\tvar fullname = defineDreem.expandVariables(name);\n\t\t\tconsole.log(\"writing file:\", fullname);\n\t\t\treturn fs.writeFileSync(fullname, data);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t};\n\t// reads a directory and returns its contents\n\t// <name> the name of the directory to read\n\tthis.readdir = function (name) {\n\t\tname = defineDreem.safePath(name);\n\t\tif (!name) return null;\n\t\t// lets read the directory and return it\n\t\ttry {\n\t\t\tvar dir = fs.readdirSync(path.join(defineDreem.expandVariables(defineDreem.$root), name));\n\t\t\treturn dir;\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\t\t// lets do a query\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/fileio.js\n// module id = 48\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/fileio.js?");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function (requireDreem) {\n\t// internal, the role class holds all the role server side component and screens. Currently only a single role is supported\n\t// later on the role class allows multiple roles to be defined and have different screen setups\n\n\tvar RpcProxy = requireDreem('$system/rpc/rpcproxy');\n\tthis.atConstructor = function () {\n\t\tthrow new Error('role is depricated, please remove it from your composition and place the screens in the composition root');\n\t};\n\tthis.createRpcProxy = function (parent) {\n\t\treturn RpcProxy.createChildSet(this, parent);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/role.js\n// module id = 49\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/role.js?");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function () {\n   // An empty server side service baseclass. Inherit from this to define server side components\n   this.environment = 'nodejs';\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/service.js\n// module id = 50\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/service.js?");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $server$, dataset) {\n\t// internal, Sourceset is a dataset-api on source\n\tvar jsparser = requireDreem('$system/parse/onejsparser');\n\tvar jsformatter = requireDreem('$system/parse/jsformatter');\n\tvar astscanner = requireDreem('$system/parse/astscanner');\n\tvar WiredWalker = requireDreem('$system/parse/wiredwalker');\n\n\tthis.attributes = {\n\t\tchange: Config({ type: Event })\n\t};\n\n\tfunction findRenderFunction(ast) {\n\t\tvar steps = ast.steps[0].body.steps;\n\t\tfor (var i = 0; i < steps.length; i++) {\n\t\t\tvar step = steps[i];\n\t\t\tif (step.type === 'Assign' && step.left.type === 'Key' && step.left.key.name === 'render') {\n\t\t\t\treturn step.right;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction findReturnArray(body) {\n\t\tvar steps = body.steps;\n\t\tfor (var i = 0; i < steps.length; i++) {\n\t\t\tvar step = steps[i];\n\t\t\tif (step.type === 'Return') {\n\t\t\t\treturn step.arg;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.atConstructor = function (source) {\n\t\tif (source) this.parse(source);\n\t\tthis.last_source = source;\n\t};\n\n\tthis.fork = function (callback) {\n\t\tthis.undo_stack.push(this.last_source);\n\t\tthis.redo_stack.length = 0;\n\t\tcallback(this);\n\t\t// lets reserialize\n\t\tthis.last_source = this.stringify();\n\t\tthis.process();\n\t\tthis.notifyAssignedAttributes();\n\t\t// save to disk.\n\t\tthis.emit('change');\n\t};\n\n\tthis.addBlock = function (folder, classname) {\n\n\t\tvar id = 0;\n\t\tvar uname = classname + id;\n\t\twhile (uname in this.data.childnames) {\n\t\t\tid++;\n\t\t\tuname = classname + id;\n\t\t}\n\n\t\tif (folder) {\n\t\t\t// add it to the deplist.\n\t\t\tvar deps = this.ast.steps[0].params;\n\t\t\tvar $folder = '$' + folder.replace(/\\//g, '$') + '$';\n\n\t\t\tvar dir = '$$';\n\t\t\tfor (var i = 0; i < deps.length; i++) {\n\t\t\t\tvar name = deps[i].id.name;\n\t\t\t\tif (name === $folder) break;\n\t\t\t}\n\t\t\tif (i === deps.length) {\n\t\t\t\tdeps.push({ type: 'Def', id: { type: 'Id', name: $folder } }, { type: 'Def', id: { type: 'Id', name: classname } });\n\t\t\t} else {\n\t\t\t\tfor (var j = i; j < deps.length; j++) {\n\t\t\t\t\tif (deps[j].id.name === classname) break;\n\t\t\t\t}\n\t\t\t\tif (j === deps.length) {\n\t\t\t\t\tdeps.splice(i, 0, { type: 'Def', id: { type: 'Id', name: classname } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.data.retarray.elems.push({\n\t\t\ttype: \"Call\",\n\t\t\tfn: { type: \"Id\", name: classname },\n\t\t\targs: [{\n\t\t\t\ttype: \"Object\",\n\t\t\t\tkeys: [{\n\t\t\t\t\tkey: { type: \"Id\", name: \"name\" },\n\t\t\t\t\tvalue: { type: \"Value\", kind: \"string\", value: uname }\n\t\t\t\t}, { key: { type: \"Id\", name: \"flowdata\" }, value: genFlowDataObject({ x: 20, y: 420 }) }]\n\t\t\t}]\n\t\t});\n\t};\n\n\tthis.removeBlock = function (blockname) {\n\t\t// lets remove this thing\n\t\tnode = this.data.childnames[blockname];\n\t\t// lets find it\n\t\tvar id = this.data.retarray.elems.indexOf(node.node);\n\t\tthis.data.retarray.elems.splice(id, 1);\n\t};\n\n\tfunction genFlowDataObject(data) {\n\t\tvar obj = {\n\t\t\ttype: \"Object\",\n\t\t\tkeys: []\n\t\t};\n\t\tfor (var key in data) {\n\t\t\tobj.keys.push({\n\t\t\t\tkind: \"init\",\n\t\t\t\tkey: { type: \"Id\", name: key },\n\t\t\t\tvalue: { type: \"Value\", kind: \"num\", value: data[key] }\n\t\t\t});\n\t\t}\n\t\treturn obj;\n\t}\n\n\tthis.setFlowData = function (block, data) {\n\t\tvar target = this.data.childnames[block];\n\t\tvar fdn = target.flowdatanode;\n\n\t\tif (!fdn) {\n\t\t\treturn;\n\t\t}\n\n\t\tfdn.value = genFlowDataObject(data);\n\t};\n\n\tthis.extractRPCCalls = function (str) {\n\t\tvar found = [];\n\t\tvar mast = jsparser.parse(str);\n\t\tif (mast) {\n\t\t\tvar wiredwalker = new WiredWalker();\n\t\t\tvar state = wiredwalker.newState();\n\t\t\twiredwalker.expand(mast, null, state);\n\t\t\tvar refs = state.references;\n\t\t\tfor (var k = 0; k < refs.length; k++) {\n\t\t\t\tvar con = refs[k].join('.');\n\t\t\t\tif (found.indexOf(con) < 0) {\n\t\t\t\t\tfound.push(con);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!found.length) {\n\t\t\tvar r = /(this\\.rpc\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+)/g;\n\t\t\tvar m;\n\t\t\twhile (m = r.exec(str)) {\n\t\t\t\tfound.push(m[1]);\n\t\t\t}\n\t\t}\n\n\t\treturn found;\n\t};\n\n\tthis.generateRPCKV = function (key, block, port) {\n\t\treturn {\n\t\t\tkind: \"init\",\n\t\t\tkey: { type: \"Value\", kind: \"string\", value: key, multi: false, raw: JSON.stringify(key) },\n\t\t\tvalue: { type: \"Key\", key: { type: \"Property\", name: port },\n\t\t\t\tobject: { type: \"Key\", key: { type: \"Property\", name: block },\n\t\t\t\t\tobject: { type: \"Key\", key: { type: \"Property\", name: \"rpc\" },\n\t\t\t\t\t\tobject: { type: \"This\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tthis.generateWire = function (key, value) {\n\t\treturn {\n\t\t\tkey: { name: key, type: 'Id' },\n\t\t\tvalue: {\n\t\t\t\ttype: \"Call\",\n\t\t\t\tfn: {\n\t\t\t\t\ttype: \"Id\",\n\t\t\t\t\tname: \"wire\"\n\t\t\t\t},\n\t\t\t\targs: [{\n\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\tkind: \"string\",\n\t\t\t\t\tvalue: value\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\t};\n\n\tthis.deleteWire = function (sblock, soutput, tblock, tinput) {\n\t\tif (!tblock) {\n\t\t\treturn;\n\t\t}\n\t\tvar target = this.data.childnames[tblock];\n\t\tif (!target) return console.error(\"cannot find target \" + tblock);\n\t\t// ok we need to do keys\n\t\tvar props = target.propobj.keys;\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar ast = props[i];\n\t\t\tif (ast.key.name == tinput) {\n\n\t\t\t\tif (sblock && soutput) {\n\t\t\t\t\tvar scanner = new astscanner(ast.value, [{ type: \"Call\", fn: { type: \"Id\", name: \"wire\" } }, { type: \"Value\", kind: \"string\" }]);\n\t\t\t\t\tvar at = scanner.at;\n\t\t\t\t\tif (at && at.type && at.type === \"Value\") {\n\t\t\t\t\t\tvar objname = sblock + \".\" + soutput;\n\t\t\t\t\t\tvar rpcstr = \"this.rpc.\" + objname;\n\t\t\t\t\t\tvar connections = this.extractRPCCalls(at.value);\n\t\t\t\t\t\tvar index = connections.indexOf(rpcstr);\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tconnections.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar isarray = false;\n\t\t\t\t\t\tvar isobject = false;\n\t\t\t\t\t\tif (connections.length === 1) {\n\t\t\t\t\t\t\tvar con = connections[0].split('.');\n\t\t\t\t\t\t\tvar blockname = con[con.length - 2];\n\t\t\t\t\t\t\tvar outputname = con[con.length - 1];\n\t\t\t\t\t\t\tvar block = this.data.childnames[blockname];\n\t\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t\tvar outputs = block.outputs;\n\t\t\t\t\t\t\t\tfor (var b = 0; b < outputs.length; b++) {\n\t\t\t\t\t\t\t\t\tvar output = outputs[b];\n\t\t\t\t\t\t\t\t\tif (output.name === outputname) {\n\t\t\t\t\t\t\t\t\t\tisarray = output.type === Array;\n\t\t\t\t\t\t\t\t\t\tisobject = output.type === Object;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (connections.length === 1 && (at.value[0] === '[' && isarray || at.value[0] === '{' && isobject)) {\n\t\t\t\t\t\t\tat.value = connections[0];\n\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t} else if (connections.length) {\n\t\t\t\t\t\t\tif (at.value[0] === '{') {\n\t\t\t\t\t\t\t\tvar mast = jsparser.parse(at.value);\n\t\t\t\t\t\t\t\tvar obj = new astscanner(mast, [{ type: \"Object\" }]);\n\t\t\t\t\t\t\t\tobj.scan([{ type: \"Value\", value: objname }]);\n\t\t\t\t\t\t\t\tif (typeof obj.atindex !== \"undefined\") {\n\t\t\t\t\t\t\t\t\tobj.atparent.keys.splice(obj.atindex, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tat.value = obj.toSource(obj.atparent);\n\t\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar endcap = ']';\n\t\t\t\t\t\t\t\tvar lix = at.value.lastIndexOf(']');\n\t\t\t\t\t\t\t\tif (lix > -1 && lix !== at.value.length - 1) {\n\t\t\t\t\t\t\t\t\tendcap = at.value.substring(lix);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tat.value = \"[\" + connections.join(\",\") + endcap;\n\t\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprops.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprops.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.insertWire = function (sblock, soutput, stype, tblock, tinput) {\n\t\tvar target = this.data.childnames[tblock];\n\t\tif (target) {\n\t\t\tvar props = target.propobj.keys;\n\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\tif (props[i].key.name == tinput) {\n\t\t\t\t\tvar ast = props[i];\n\t\t\t\t\tvar scanner = new astscanner(ast.value, [{ type: \"Call\", fn: { type: \"Id\", name: \"wire\" } }, { type: \"Value\", kind: \"string\" }]);\n\t\t\t\t\tvar at = scanner.at;\n\t\t\t\t\tif (at && at.type && at.type === \"Value\") {\n\t\t\t\t\t\tvar value = at.value;\n\t\t\t\t\t\tvar rpcstr = \"this.rpc.\" + sblock + \".\" + soutput;\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tvar connections = this.extractRPCCalls(value);\n\t\t\t\t\t\t\tif (connections.indexOf(rpcstr) < 0) {\n\t\t\t\t\t\t\t\tconnections.push(rpcstr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar endcap = ']';\n\t\t\t\t\t\t\tvar lix = at.value.lastIndexOf(']');\n\t\t\t\t\t\t\tif (lix > -1 && lix !== at.value.length - 1) {\n\t\t\t\t\t\t\t\tendcap = at.value.substring(lix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tat.value = \"[\" + connections.join(\",\") + endcap;\n\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"is this really possible?\", ast);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (stype === \"Array\") {\n\t\t\t\tprops.push(this.generateWire(tinput, \"this.rpc.\" + sblock + '.' + soutput));\n\t\t\t} else {\n\t\t\t\tprops.push(this.generateWire(tinput, \"[this.rpc.\" + sblock + '.' + soutput + \"]\"));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.mergeWire = function (sblock, soutput, stype, tblock, tinput) {\n\t\tvar target = this.data.childnames[tblock];\n\t\tif (target) {\n\t\t\tvar props = target.propobj.keys;\n\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\tif (props[i].key.name == tinput) {\n\t\t\t\t\tvar ast = props[i];\n\t\t\t\t\tvar scanner = new astscanner(ast.value, [{ type: \"Call\", fn: { type: \"Id\", name: \"wire\" } }, { type: \"Value\", kind: \"string\" }]);\n\t\t\t\t\tvar at = scanner.at;\n\t\t\t\t\tif (at && at.type && at.type === \"Value\") {\n\t\t\t\t\t\tvar value = at.value;\n\t\t\t\t\t\tvar objname = sblock + \".\" + soutput;\n\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tvar mast = jsparser.parse(value);\n\t\t\t\t\t\t\tvar obj = new astscanner(mast, [{ type: \"Object\" }]);\n\t\t\t\t\t\t\tobj.scan([{ type: \"Value\", value: objname }]);\n\n\t\t\t\t\t\t\tif (obj.at && obj.at.type === \"Value\") {\n\t\t\t\t\t\t\t\tobj.atparent.keys.splice(obj.atindex, 1, this.generateRPCKV(objname, sblock, soutput));\n\t\t\t\t\t\t\t} else if (obj.at && obj.at.type === \"Object\") {\n\t\t\t\t\t\t\t\tif (!obj.at.keys) {\n\t\t\t\t\t\t\t\t\tobj.at.keys = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar newkey = this.generateRPCKV(objname, sblock, soutput);\n\t\t\t\t\t\t\t\tobj.at.keys.push(newkey);\n\t\t\t\t\t\t\t\tat.value = obj.toSource();\n\t\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar connections = this.extractRPCCalls(value);\n\t\t\t\t\t\t\t\tvar newobj = { type: \"Object\", keys: [] };\n\t\t\t\t\t\t\t\tnewobj.keys.push(this.generateRPCKV(objname, sblock, soutput));\n\t\t\t\t\t\t\t\tfor (var z = 0; z < connections.length; z++) {\n\t\t\t\t\t\t\t\t\tvar con = connections[z];\n\t\t\t\t\t\t\t\t\tvar parts = con.split(\".\");\n\t\t\t\t\t\t\t\t\tvar block = parts[parts.length - 2];\n\t\t\t\t\t\t\t\t\tvar port = parts[parts.length - 1];\n\t\t\t\t\t\t\t\t\tvar conname = block + \".\" + port;\n\t\t\t\t\t\t\t\t\tnewobj.keys.push(this.generateRPCKV(conname, block, port));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tat.value = obj.toSource(newobj);\n\t\t\t\t\t\t\t\tat.raw = JSON.stringify(at.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (stype === \"Object\") {\n\t\t\t\tprops.push(this.generateWire(tinput, \"this.rpc.\" + sblock + '.' + soutput));\n\t\t\t} else {\n\t\t\t\tprops.push(this.generateWire(tinput, '{\\\\\"' + sblock + \".\" + soutput + '\\\\\":this.rpc.' + sblock + '.' + soutput + \"}\"));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.createWire = function (sblock, soutput, tblock, tinput) {\n\t\tvar target = this.data.childnames[tblock];\n\t\tif (!target) return console.error(\"cannot find target \" + tblock);\n\t\t// ok we need to do keys\n\t\tvar props = target.propobj.keys;\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tif (props[i].key.name == tinput) break;\n\t\t}\n\n\t\tvar wire = this.generateWire(tinput, 'this.rpc.' + sblock + '.' + soutput);\n\n\t\tif (i === props.length) {\n\t\t\tprops.push(wire);\n\t\t} else {\n\t\t\tprops[i].value.value = wire.value;\n\t\t}\n\t};\n\n\tthis.process = function () {\n\t\tvar resolver = {};\n\n\t\tvar deps = this.ast.steps[0].params;\n\t\tvar args = this.classconstr.module.factory.body.class_args;\n\n\t\tfor (var i = 0; i < deps.length; i++) {\n\t\t\tresolver[deps[i].id.name] = args[i];\n\t\t}\n\n\t\t// we need to find the render function in the composition root\n\t\t// so how shall we do that.\n\t\t// well..\n\t\t// lets write the code\n\n\t\t// lets find the return array\n\t\tvar ret = findReturnArray(findRenderFunction(this.ast).body);\n\n\t\tvar data = this.data = {\n\t\t\tretarray: ret,\n\t\t\tname: 'root',\n\t\t\tnode: ret.elems,\n\t\t\tchildren: [],\n\t\t\tchildnames: {}\n\n\t\t\t// now we need to walk this fucker.\n\t\t};function walkArgs(array, output) {\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar item = array[i];\n\t\t\t\tif (item.type === 'Object') {\n\t\t\t\t\toutput.propobj = item;\n\t\t\t\t\t// lets put some props on there\n\t\t\t\t\t// whats the name of this thing?\n\t\t\t\t\tvar keys = item.keys;\n\t\t\t\t\tfor (var j = 0; j < keys.length; j++) {\n\t\t\t\t\t\tvar key = keys[j];\n\t\t\t\t\t\tvar name = key.key.name;\n\t\t\t\t\t\tvar value = key.value;\n\t\t\t\t\t\tif (name === 'flowdata') {\n\t\t\t\t\t\t\tvar fdoutput = output.flowdata = {};\n\t\t\t\t\t\t\toutput.flowdatanode = key;\n\t\t\t\t\t\t\tvar flowdata = value;\n\n\t\t\t\t\t\t\tfor (var k = 0; k < flowdata.keys.length; k++) {\n\t\t\t\t\t\t\t\tvar fditem = flowdata.keys[k];\n\t\t\t\t\t\t\t\tvar value;\n\t\t\t\t\t\t\t\tif (fditem.value.type === 'Unary') {\n\t\t\t\t\t\t\t\t\tvalue = fditem.value.op === '-' ? -fditem.value.arg.value : fditem.value.arg.value;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvalue = fditem.value.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfdoutput[fditem.key.name] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (name === 'name') {\n\t\t\t\t\t\t\toutput.name = key.value.value;\n\t\t\t\t\t\t\tdata.childnames[output.name] = output;\n\t\t\t\t\t\t} else if (key.value.type === 'Call' && key.value.fn.name === 'wire') {\n\t\t\t\t\t\t\tvar wire = key.value;\n\t\t\t\t\t\t\tvar str = wire.args[0].value;\n\n\t\t\t\t\t\t\tvar containsrpc = str.indexOf('this.rpc');\n\n\t\t\t\t\t\t\tif (containsrpc > -1) {\n\t\t\t\t\t\t\t\tif (!output.wires) output.wires = [];\n\n\t\t\t\t\t\t\t\tvar parts = str.slice(9).split('.');\n\t\t\t\t\t\t\t\tif (parts.length === 2) {\n\t\t\t\t\t\t\t\t\toutput.wires.push({\n\t\t\t\t\t\t\t\t\t\tfrom: parts[0],\n\t\t\t\t\t\t\t\t\t\toutput: parts[1],\n\t\t\t\t\t\t\t\t\t\tinput: name\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar r = /this\\.rpc\\.([a-zA-Z0-9]+)\\.([a-zA-Z0-9]+)/g;\n\t\t\t\t\t\t\t\t\tvar m;\n\t\t\t\t\t\t\t\t\twhile (m = r.exec(str)) {\n\t\t\t\t\t\t\t\t\t\tif (!output.wires) output.wires = [];\n\t\t\t\t\t\t\t\t\t\toutput.wires.push({\n\t\t\t\t\t\t\t\t\t\t\tfrom: m[1],\n\t\t\t\t\t\t\t\t\t\t\toutput: m[2],\n\t\t\t\t\t\t\t\t\t\t\tinput: name,\n\t\t\t\t\t\t\t\t\t\t\tmulti: true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction walkComposition(array, output) {\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar item = array[i];\n\n\t\t\t\tif (item.type !== 'Call') continue;\n\t\t\t\tvar classname;\n\t\t\t\tif (item.fn.type === 'Key' && item.fn.object.type === 'This') {\n\t\t\t\t\tclassname = 'this.' + item.fn.key.name;\n\t\t\t\t} else if (item.fn.type === 'Id') {\n\t\t\t\t\tclassname = item.fn.name;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(classname = \"Please implement in sourceset.js\");\n\t\t\t\t}\n\n\t\t\t\tvar child = {\n\t\t\t\t\tclassname: classname,\n\t\t\t\t\tnode: item,\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tinputs: [],\n\t\t\t\t\toutputs: [],\n\t\t\t\t\teditables: []\n\n\t\t\t\t\t// we haz classname.\n\t\t\t\t};var clazz = resolver[classname];\n\t\t\t\tvar attribs = clazz.prototype._attributes;\n\t\t\t\tfor (var key in attribs) {\n\t\t\t\t\tif (attribs.hasOwnProperty(key)) {\n\t\t\t\t\t\tvar attrib = attribs[key];\n\n\t\t\t\t\t\tif (attrib.flow) {\n\t\t\t\t\t\t\tvar con = {\n\t\t\t\t\t\t\t\tname: key,\n\t\t\t\t\t\t\t\ttitle: key,\n\t\t\t\t\t\t\t\ttype: attrib.type,\n\t\t\t\t\t\t\t\tattrib: attrib\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (attrib.flow === 'in') {\n\t\t\t\t\t\t\t\tchild.inputs.push(con);\n\t\t\t\t\t\t\t} else if (attrib.flow === 'out') {\n\t\t\t\t\t\t\t\tchild.outputs.push(con);\n\t\t\t\t\t\t\t} else if (attrib.flow === 'inout') {\n\t\t\t\t\t\t\t\tchild.inputs.push(con);\n\t\t\t\t\t\t\t\tchild.outputs.push({\n\t\t\t\t\t\t\t\t\tname: con.name,\n\t\t\t\t\t\t\t\t\ttitle: con.title,\n\t\t\t\t\t\t\t\t\ttype: con.type,\n\t\t\t\t\t\t\t\t\tattrib: con.attrib\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (attrib.flow === 'edit') {\n\t\t\t\t\t\t\t\tchild.editables.push(con);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toutput.children.push(child);\n\t\t\t\twalkArgs(item.args, child);\n\t\t\t\t//walkTree(item.args, child)\n\t\t\t}\n\t\t}\n\t\twalkComposition(ret.elems, this.data);\n\t};\n\n\t// convert a string in to a meaningful javascript object for this dataset. The default is JSON, but you could use this function to accept any format of choice.\n\tthis.parse = function (classconstr) {\n\t\tvar source = classconstr.module.factory.body.toString();\n\t\tthis.classconstr = classconstr;\n\n\t\t// lets create an AST\n\t\tthis.ast = jsparser.parse(source);\n\t\tthis.process();\n\t\tthis.notifyAssignedAttributes();\n\t};\n\n\t// convert an object in to a string. Defaults to standard JSON, but you could overload this function to provide a more efficient fileformat. Do not forget to convert the JSONParse function as well.\n\tthis.stringify = function () {\n\t\tvar buf = {\n\t\t\tout: '',\n\t\t\tcharCodeAt: function charCodeAt(i) {\n\t\t\t\treturn this.out.charCodeAt(i);\n\t\t\t},\n\t\t\tchar_count: 0\n\t\t};\n\n\t\tjsformatter.walk(this.ast, buf, {}, function (str) {\n\n\t\t\tif (str === '\\n') {\n\t\t\t\tthis.last_is_newline = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (str === '\\t' && this.last_is_newline) {\n\t\t\t\tstr = '\\n';\n\t\t\t\tfor (var i = 0; i < this.actual_indent; i++) {\n\t\t\t\t\tstr += '  ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.last_is_newline = false;\n\n\t\t\tbuf.char_count += str.length;\n\t\t\tbuf.out += str;\n\t\t});\n\t\treturn buf.out;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/server/sourceset.js\n// module id = 51\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/server/sourceset.js?");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// tests class\n\ndefineDreem.class(function () {\n   this.init = function () {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/testing/tests.js\n// module id = 52\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/testing/tests.js?");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class('$ui/view', function (requireDreem, view) {\n\t// The bargraphic class is used by the audioplayer widget to visualize the audio output. It takes a Uint8Array and produces a bar graph.\n\n\tthis.attributes = {\n\t\t// data is a Uint8Array of data to visualize\n\t\tdata: Config({ type: Array, value: [] })\n\n\t\t// Clear the graph\n\t};this.clear = function () {\n\t\tthis.data = [];\n\t};\n\n\tthis.hardrect = {\n\t\t// Use a custom shader to display colored bars to match the data. The size\n\t\t// of the bars are adjusted to match the width of the view.\n\t\tmesh: defineDreem.struct({\n\t\t\tpos: vec2,\n\t\t\tcol: vec4\n\t\t}).array(),\n\n\t\tposition: function position() {\n\t\t\tuv = mesh.pos.xy;\n\t\t\tpos = vec2(mesh.pos.x * view.layout.width, mesh.pos.y * view.layout.height);\n\t\t\tvar res = vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\tres.w -= 0.004;\n\t\t\treturn res;\n\t\t},\n\n\t\t// Create the bars for each non-zero data element\n\t\tupdate: function update() {\n\t\t\tvar mesh = this.mesh = this.mesh.struct.array();\n\n\t\t\tvar w = 0;\n\t\t\tvar thickness = 1 / this.view.data.length;\n\t\t\tvar color = this.view.fgcolor;\n\t\t\tfor (var i = 0; i < this.view.data.length; i++) {\n\t\t\t\tvar x0 = w;\n\t\t\t\tvar x1 = w + thickness;\n\t\t\t\tw += thickness;\n\n\t\t\t\tvar height = float(this.view.data[i]);\n\t\t\t\tif (height > 0) {\n\t\t\t\t\tmesh.pushQuad(x0, 1, color[0], color[1], color[2], 1, x1, 1, color[0], color[1], color[2], 1, x0, 1 - height, color[0], color[1], color[2], 1, x1, 1 - height, color[0], color[1], color[2], 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcolor: function color() {\n\t\t\treturn mesh.col;\n\t\t}\n\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/bargraphic.js\n// module id = 53\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/bargraphic.js?");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n\n\ndefineDreem.class('$ui/view', function (requireDreem) {\n\t// Example of how to use multiple render passes\n\n\t// k0 is the weight for the center pixel. k1 is used for +1 and -1 away,\n\t// k2 is used for +2 and -2 away, ...\n\tthis.attributes = {\n\t\tk0: Config({ type: float, value: 1.0 }),\n\t\tk1: Config({ type: float, value: 1.0 }),\n\t\tk2: Config({ type: float, value: 1.0 }),\n\t\tk3: Config({ type: float, value: 1.0 }),\n\t\tk4: Config({ type: float, value: 1.0 }),\n\t\tk5: Config({ type: float, value: 1.0 }),\n\t\tk6: Config({ type: float, value: 1.0 }),\n\t\tk7: Config({ type: float, value: 1.0 }),\n\t\tk8: Config({ type: float, value: 1.0 }),\n\t\tk9: Config({ type: float, value: 1.0 }),\n\t\tk10: Config({ type: float, value: 1.0 }),\n\t\tfilterlength: Config({ type: int, value: 3 }),\n\t\tfilterscaling: Config({ type: float, value: 1.0 }),\n\n\t\tblurradius: 2.\n\n\t\t// Compute the kernel parameters given blurradius.\n\t\t// The value of sigma is .5 * blurradius\n\t\t// The filter length is 2*blurradius + 1 (in the range of 1 to 21)\n\t\t// For large blurradius, 21 filter parameters are computed.\n\t};this.buildKernel = function () {\n\t\tvar sigma = 0.5 * this.blurradius;\n\n\t\tvar radius = Math.floor(this.blurradius);\n\t\tif (radius < 1) radius = 1;\n\t\tif (radius > 10) radius = 10;\n\n\t\t// Compute the kernel as an array. Compute one side only, but keep track\n\t\t// of the sum from both sides.\n\t\tvar kernel = [];\n\t\tvar scaling = 1.0 / (Math.sqrt(2 * Math.PI) * sigma);\n\t\tvar sum = 0.0;\n\t\tfor (var x = 0; x < radius + 1; x++) {\n\t\t\tvar g = Math.exp(-x * x / (2 * sigma * sigma)) * scaling;\n\t\t\tsum += g;\n\t\t\tif (x > 0) sum += g;\n\t\t\tkernel.push(g);\n\t\t}\n\n\t\t// Normalize the kernel so that the terms sum to 1\n\t\tfor (var i = 0; i < kernel.length; i++) {\n\t\t\tkernel[i] = kernel[i] / sum;\n\t\t}\n\n\t\t//console.log('kernel', radius, kernel);\n\n\t\t// Set the k values (shaders don't support arrays)\n\t\tthis.filterscaling = 1.0;\n\t\tthis.filterlength = 2 * radius + 1;\n\t\tthis.k0 = kernel[0];\n\t\tthis.k1 = kernel[1];\n\t\tthis.k2 = kernel[2];\n\t\tthis.k3 = kernel[3];\n\t\tthis.k4 = kernel[4];\n\t\tthis.k5 = kernel[5];\n\t\tthis.k6 = kernel[6];\n\t\tthis.k7 = kernel[7];\n\t\tthis.k8 = kernel[8];\n\t\tthis.k9 = kernel[9];\n\t\tthis.k10 = kernel[10];\n\t};\n\n\tthis.atConstructor = function () {\n\t\tthis.buildKernel();\n\t};\n\n\t// Rebuild the kernel when the blurradius changes\n\tthis.onblurradius = function (ev, v, o) {\n\t\tthis.buildKernel();\n\t};\n\n\t// Must define N RenderPass nested classes below to match this count\n\tthis.passes = 2;\n\t// Required for multipass to work\n\tthis.overflow = 'hidden';\n\n\t// x or y shader filter for a 1D Gaussian\n\tdefineDreem.class(this, \"Gaussian1D\", this.RenderPass, function () {\n\t\t// Shader requires all instance variables to be defined.\n\t\tthis.spacing = vec2(1, 0);\n\n\t\tthis.color = function () {\n\t\t\tvar col = this.framebuffer.conv1d(mesh.xy, view.filterlength, view.filterscaling, this.spacing, view.k0, view.k1, view.k1, view.k2, view.k2, view.k3, view.k3, view.k4, view.k4, view.k5, view.k5, view.k6, view.k6, view.k7, view.k7, view.k8, view.k8, view.k9, view.k9, view.k10, view.k10);\n\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\n\t// Each pass _must_ be named pass0..9, define based on this.passes, e.g. this.passes of\n\t// 1 must define pass0, 2 must define pass0 and pass1...\n\tdefineDreem.class(this, \"pass0\", this.Gaussian1D, function () {\n\t\tthis.atConstructor = function (view) {\n\t\t\t// horizontal filter\n\t\t\tthis.spacing = vec2(1.0, 0);\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"pass1\", this.Gaussian1D, function () {\n\t\tthis.atConstructor = function (view) {\n\t\t\t// vertical filter\n\t\t\tthis.spacing = vec2(0, 1.0);\n\t\t};\n\n\t\t// I can't seem to embed the logic of what pass to use in base class.\n\t\tthis.color = function () {\n\t\t\tvar col = this.pass0.conv1d(mesh.xy, view.filterlength, view.filterscaling, this.spacing, view.k0, view.k1, view.k1, view.k2, view.k2, view.k3, view.k3, view.k4, view.k4, view.k5, view.k5, view.k6, view.k6, view.k7, view.k7, view.k8, view.k8, view.k9, view.k9, view.k10, view.k10);\n\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/blurview.js\n// module id = 54\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/blurview.js?");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, label, icon) {\n\t// Simple gradient button: a rectangle with a textlabel and an icon\n\t// <br/><a href=\"/examples/buttons\">examples &raquo;</a>\n\n\tthis.attributes = {\n\t\t// The label for the button\n\t\ttext: Config({ type: String, value: \"\" }),\n\n\t\t// The icon for the button, see FontAwesome for the available icon-names.\n\t\ticon: Config({ type: String, value: \"\", meta: \"icon\" }),\n\n\t\t// Font size in device-pixels.\n\t\tfontsize: Config({ type: float, value: 14, meta: \"fontsize\" }),\n\n\t\t// Gradient color 1\n\t\tcol1: Config({ meta: \"color\", type: vec4, value: vec4(\"#272727\"), duration: 0.1, motion: \"linear\" }),\n\n\t\t// Gradient color 2\n\t\tcol2: Config({ meta: \"color\", type: vec4, value: vec4(\"#272727\"), duration: 0.1, motion: \"linear\" }),\n\n\t\t// Color of the label text in neutral state\n\t\ttextcolor: Config({ meta: \"color\", type: vec4, value: vec4(\"white\") }),\n\n\t\t// Color of the label text in pressed-down state\n\t\ttextactivecolor: Config({ meta: \"color\", type: vec4, value: vec4(\"white\") }),\n\n\t\t// First gradient color for the button background in neutral state\n\t\tbuttoncolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#636363\") }),\n\n\t\t// Second gradient color for the button background in neutral state\n\t\tbuttoncolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#636363\") }),\n\n\t\t// First gradient color for the button background in hovered state\n\t\thovercolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#c5c5c5\") }),\n\n\t\t// Second gradient color for the button background in hovered state\n\t\thovercolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#797979\") }),\n\n\t\t// First gradient color for the button background in pressed state\n\t\tpressedcolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#707070\") }),\n\n\t\t// Second gradient color for the button background in pressed state\n\t\tpressedcolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#707070\") }),\n\n\t\t// Second gradient color for the button background in pressed state\n\t\tinternalmargin: Config({ meta: \"ltrb\", type: vec4, value: vec4(0, 0, 0, 0) }),\n\n\t\t// fires when button is clicked\n\t\tclick: Config({ type: Event }),\n\n\t\t//bold: true,\n\t\tenabled: true,\n\t\tdefaultbutton: false,\n\n\t\tbgcolor: '#636363',\n\t\tfgcolor: 'white',\n\t\tpadding: 2,\n\t\tborderradius: 7,\n\t\tborderwidth: 2,\n\t\tmargin: 0,\n\t\tbordercolor: vec4(\"#636363\"),\n\t\tpickalpha: -1,\n\t\ticonmargin: 4,\n\n\t\talignitems: \"center\",\n\t\tjustifycontent: \"center\"\n\t};\n\n\tthis.style = {\n\t\ticon: {\n\t\t\talignself: \"center\",\n\t\t\tfgcolor: Config({ motion: 'linear', duration: 0.1 })\n\t\t},\n\t\tlabel: {\n\t\t\tsubpixel: false,\n\t\t\talignself: \"center\",\n\t\t\tposition: \"relative\",\n\t\t\tbgcolor: NaN\n\t\t},\n\t\tview_wrap: {\n\t\t\tbgcolor: NaN,\n\t\t\talignitems: \"center\",\n\t\t\tflexdirection: \"row\",\n\t\t\tjustifycontent: \"center\"\n\n\t\t\t//this.buttonres = {};\n\t\t} };this.font = requireDreem('$resources/fonts/opensans_bold_ascii.glf');\n\t/*\n this.onbold = function(){\n \tif (this.bold) {\n \t\tthis.font = requireDreem('$resources/fonts/opensans_bold_ascii.glf')\n \t}\n \telse{\n \t\tthis.font = requireDreem('$resources/fonts/opensans_regular_ascii.glf')\n \t}\n }*/\n\n\t// Set the background\n\t// <pos> {vec2} position\n\tthis.bgcolorfn = function (pos) {\n\t\treturn mix(col1, col2, pos.y);\n\t};\n\n\tthis.setTextColor = function (color) {\n\t\tif (this.iconres) this.iconres.fgcolor = color;\n\t\tif (this.buttonres) this.buttonres.fgcolor = color;\n\t};\n\n\t// the hover state when someone hovers over the button\n\tthis.statehover = function () {\n\t\tthis.col1 = this.hovercolor1;\n\t\tthis.col2 = this.hovercolor2;\n\t\tthis.shadowopacity = 1.0;\n\t\tthis.setTextColor(this.textactivecolor);\n\t};\n\n\t// the normal button state\n\tthis.statenormal = function (first) {\n\t\tthis.col1 = Mark(this.buttoncolor1, first);\n\t\tthis.col2 = Mark(this.buttoncolor2, first);\n\t\tthis.shadowopacity = 0.0;\n\t\tthis.setTextColor(this.textcolor);\n\t};\n\n\t// clicked state\n\tthis.stateclick = function () {\n\t\tthis.col1 = this.pressedcolor1;\n\t\tthis.col2 = this.pressedcolor2;\n\t\tthis.setTextColor(this.textactivecolor);\n\t};\n\n\tthis.init = function () {\n\t\tthis.statenormal(true);\n\t};\n\n\tthis.pointerover = function () {\n\t\tthis._isover = true;\n\t\tthis.statehover();\n\t};\n\n\tthis.pointerout = function () {\n\t\tthis._isover = false;\n\t\tthis.statenormal();\n\t};\n\n\tthis.pointerstart = function () {\n\t\tthis.stateclick();\n\t};\n\n\tthis.pointerend = function (event) {\n\t\tif (event.isover) {\n\t\t\tthis.statehover();\n\t\t\tthis.emit('click', event);\n\t\t} else {\n\t\t\tthis.statenormal();\n\t\t}\n\t};\n\n\tthis.buildIconRes = function () {\n\t\treturn icon({\n\t\t\tdrawtarget: \"color\",\n\t\t\tfgcolor: this.textcolor,\n\t\t\tfontsize: this.fontsize,\n\t\t\ticon: this.icon\n\t\t});\n\t};\n\n\tthis.buildButtonRes = function (iconres) {\n\t\treturn label({\n\t\t\tdrawtarget: \"color\",\n\t\t\tmarginleft: iconres ? this.iconmargin : 0,\n\t\t\tfontsize: this.fontsize,\n\t\t\tfgcolor: this.textcolor,\n\t\t\ttext: this.text\n\t\t});\n\t};\n\n\tthis.render = function () {\n\t\tif (this.constructor_children.length > 0) return this.constructor_children;\n\t\tvar res = [];\n\t\tthis.buttonres = undefined;\n\t\tthis.iconres = undefined;\n\n\t\tif (this.icon && this.icon.length > 0) {\n\t\t\tthis.iconres = this.buildIconRes();\n\t\t\tres.push(this.iconres);\n\t\t}\n\n\t\tif (this.text && this.text.length > 0) {\n\t\t\tthis.buttonres = this.buildButtonRes(this.iconres);\n\t\t\tres.push(this.buttonres);\n\t\t}\n\n\t\treturn view({ class: 'wrap', margin: this.internalmargin }, res);\n\t};\n\n\tvar button = this.constructor;\n\t// Basic usage of the button.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [button({ text: \"Press me!\" }), button({ text: \"Colored!\", buttoncolor1: \"red\", buttoncolor2: \"blue\", labelcolor: \"white\" }), button({ text: \"With an icon!\", icon: \"flask\" }), button({\n\t\t\t\ttext: \"Button With Image\",\n\t\t\t\ttextcolor: \"white\",\n\t\t\t\ttextactivecolor: \"black\",\n\t\t\t\tbgimage: \"$resources/textures/redcloud.png\",\n\t\t\t\tbgimagemode: \"stretch\",\n\t\t\t\tselected: false,\n\t\t\t\tclick: function click() {\n\t\t\t\t\tthis.selected = !this.selected;\n\t\t\t\t},\n\t\t\t\tstatenormal: function statenormal() {\n\t\t\t\t\tif (this.selected) {\n\t\t\t\t\t\tthis.bgimage = \"$resources/textures/bluecloud.png\";\n\t\t\t\t\t\tthis.setTextColor(this.textactivecolor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.bgimage = \"$resources/textures/redcloud.png\";\n\t\t\t\t\t\tthis.setTextColor(this.textcolor);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonselected: function onselected() {\n\t\t\t\t\tthis.statenormal();\n\t\t\t\t}\n\t\t\t})];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/button.js\n// module id = 55\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/button.js?");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (view, label) {\n\t// The CADGrid class provides a simple way to fill a frame with a classic engineering grid.\n\t// todo:\n\t// - support zooming with incremental subdivision lines\n\t// - link up to\n\n\tthis.attributes = {\n\t\tmajorevery: Config({ type: int, minvalue: 1, value: 5 }),\n\t\tgridsize: Config({ type: int, minvalue: 1, value: 5 }),\n\t\tminorline: Config({ type: vec4, value: vec4(\"#e0f0ff\"), meta: \"color\" }),\n\t\tmajorline: Config({ type: vec4, value: vec4(\"#b0b0e0\"), meta: \"color\" }),\n\t\tflex: 1,\n\t\tbgcolor: vec4(\"white\"),\n\t\tflexdirection: \"column\",\n\t\talignitems: \"stretch\",\n\t\talignself: \"stretch\",\n\t\tminorsize: Config({ type: int, value: 10, meta: 'hidden' }),\n\t\tmajorsize: Config({ type: int, value: 100, meta: 'hidden' })\n\t};\n\n\tthis.onmajorevery = this.ongridsize = function () {\n\t\tthis.calcsizes();\n\t};\n\n\tthis.calcsizes = function () {\n\t\tthis.minorsize = this.gridsize * this.majorevery * Math.pow(this.majorevery, Math.ceil(Math.log(this.zoom) / Math.log(this.majorevery)));\n\t\tthis.majorsize = this.minorsize * this.majorevery;\n\t};\n\n\tthis.oninit = function () {\n\t\tthis.calcsizes();\n\t};\n\n\tthis.onzoom = function () {\n\t\tthis.calcsizes();\n\t};\n\n\t// CADGrid shader - uses various floored modulo functions to find out if either a major or minor gridline is being touched.\n\tthis.hardrect = {\n\t\tposition: function position() {\n\t\t\t// do something here with view.scrollmatrix\n\n\t\t\tpos = vec2(mesh.x * view.layout.width, mesh.y * view.layout.height);\n\n\t\t\tmajthres = 1.0 / view.majorsize * view.zoom;\n\t\t\tminthres = 1.0 / view.minorsize * view.zoom;\n\t\t\tuv = mesh.xy * view.zoom;\n\t\t\tuv += vec2(view.scroll.x / view.layout.width, view.scroll.y / view.layout.height);\n\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t},\n\t\tgrid: function grid(a) {\n\t\t\tvar horizmaj = mod(a.x, view.majorsize) / view.majorsize;\n\t\t\tvar vertmaj = mod(a.y, view.majorsize) / view.majorsize;\n\n\t\t\tvar horizmin = mod(a.x, view.minorsize) / view.minorsize;\n\t\t\tvar vertmin = mod(a.y, view.minorsize) / view.minorsize;\n\n\t\t\tvar major = min(horizmaj, vertmaj);\n\t\t\tvar minor = min(horizmin, vertmin);\n\n\t\t\tvar res = view.bgcolor;\n\t\t\tres = mix(res, view.minorline, 1.0 - smoothstep(0., minthres / 2., minor) * smoothstep(minthres * 1.5, minthres * 2, minor));\n\t\t\tres = mix(res, view.majorline, 1.0 - smoothstep(0., majthres / 2., major) * smoothstep(majthres * 1.5, majthres * 2, major));\n\n\t\t\treturn res;\n\t\t},\n\t\tcolor: function color() {\n\t\t\treturn grid(vec2(uv.x * view.layout.width, uv.y * view.layout.height));\n\t\t}\n\t};\n\n\tvar cadgrid = this.constructor;\n\t// Minimal usage example:\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn cadgrid({ width: wire('this.parent.width'), height: 200 });\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/cadgrid.js\n// module id = 56\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/cadgrid.js?");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (icon, label) {\n\t// Simple checkbox/tobble button: a rectangle with a textlabel and an icon\n\t// <br/><a href=\"/examples/checkboxes\">examples &raquo;</a>\n\n\tthis.attributes = {\n\t\t// The label for the button\n\t\ttext: Config({ type: String, value: \"\" }),\n\n\t\ticon: Config({ type: String, value: \"check\" }),\n\n\t\t// Font size in device-pixels.\n\t\tfontsize: Config({ type: float, value: 14 }),\n\n\t\t// Gradient color 1\n\t\tcol1: Config({ meta: \"color\", type: vec4, value: vec4(\"#404040\"), duration: 1.0 }),\n\t\t// Gradient color 2\n\t\tcol2: Config({ meta: \"color\", type: vec4, value: vec4(\"#404040\"), duration: 1.0 }),\n\n\t\t// Color of the label text in neutral state\n\t\ttextcolor: Config({ meta: \"color\", type: vec4, value: vec4(\"#404040\") }),\n\n\t\t// Color of the label text in pressed-down state\n\t\ttextactivecolor: Config({ meta: \"color\", type: vec4, value: vec4(\"green\") }),\n\n\t\t// First gradient color for the button background in neutral state\n\t\tbuttoncolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#fffff0\") }),\n\t\t// Second gradient color for the button background in neutral state\n\t\tbuttoncolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#ffffff\") }),\n\n\t\t// First gradient color for the button background in hovered state\n\t\thovercolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#f0f0f0\") }),\n\t\t// Second gradient color for the button background in hovered state\n\t\thovercolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#f8f8f8\") }),\n\n\t\t// First gradient color for the button background in pressed state\n\t\tpressedcolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#d0d0f0\") }),\n\t\t// Second gradient color for the button background in pressed state\n\t\tpressedcolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#d0d0f0\") }),\n\n\t\t// fires when button is clicked\n\t\tclick: Config({ type: Event }),\n\t\tvalue: Config({ type: Boolean, value: false }),\n\n\t\tbgcolor: '#eee',\n\t\tfgcolor: vec4(\"#404040\"),\n\t\tbuttonres: {},\n\t\tpadding: 8,\n\t\tborderradius: 3,\n\t\tborderwidth: 2,\n\t\tmargin: 4,\n\t\tpickalpha: -1,\n\t\tbordercolor: vec4(\"lightgray\"),\n\t\talignItems: \"center\"\n\t};\n\n\tthis.style = {\n\t\ticon: {\n\t\t\tfgcolor: Config({ motion: 'linear', duration: 0.1 })\n\t\t}\n\t};\n\n\tthis.hardrect = {\n\t\tcolor: function color() {\n\t\t\treturn mix(view.col1, view.col2, uv.y / 0.8);\n\t\t}\n\n\t\t// the hover state when someone hovers over the button\n\t};this.statehover = function () {\n\t\tthis.col1 = this.hovercolor1;\n\t\tthis.col2 = this.hovercolor2;\n\t};\n\n\t// the normal button state\n\tthis.statenormal = function () {\n\t\tthis.col1 = this.buttoncolor1;\n\t\tthis.col2 = this.buttoncolor2;\n\t};\n\n\t// clicked state\n\tthis.stateclick = function () {\n\t\t//this.animate({col1:{0:vec4('red'),3:vec4('green')}})\n\t\tthis.col1 = this.pressedcolor1;\n\t\tthis.col2 = this.pressedcolor2;\n\n\t\tthis.value = !this.value;\n\t};\n\n\tthis.init = function () {\n\t\tthis.statenormal();\n\t};\n\n\tthis.pointerover = function () {\n\t\tthis.statehover();\n\t};\n\tthis.pointerout = function () {\n\t\tthis.statenormal();\n\t};\n\tthis.pointerstart = function () {\n\t\tthis.stateclick();\n\t};\n\tthis.pointerend = function (event) {\n\t\tthis.statenormal();\n\t\tif (event.isover) {\n\t\t\tthis.emit('click', event);\n\t\t}\n\t};\n\n\tthis.flexdirection = 'row';\n\n\tthis.render = function () {\n\t\tvar cb = [];\n\n\t\tcb.push(icon({\n\t\t\tfgcolor: !!this.value ? this.textactivecolor : this.textcolor,\n\t\t\ticon: this.icon,\n\t\t\tfontsize: this.fontsize,\n\t\t\tbgcolor: \"transparent\",\n\t\t\tdrawtarget: \"color\"\n\t\t}));\n\n\t\tif (this.text) {\n\t\t\tcb.push(label({\n\t\t\t\tbgcolor: NaN,\n\t\t\t\tdrawtarget: \"color\",\n\t\t\t\tpadding: vec4(10, 0, 0, 0),\n\t\t\t\ttext: this.text,\n\t\t\t\tfontsize: this.fontsize,\n\t\t\t\tfgcolor: !!this.value ? this.textactivecolor : this.textcolor\n\t\t\t}));\n\t\t}\n\n\t\treturn cb;\n\t};\n\n\t// Basic usage of the button.\n\tvar checkbox = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [checkbox({\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\ttextcolor: \"transparent\",\n\t\t\t\tvalue: true\n\t\t\t}), checkbox({ text: \"With an icon!\", icon: \"flask\" }), checkbox({\n\t\t\t\ticon: \"square-o\",\n\t\t\t\ttext: \"Checkbox Unselected (FALSE)\",\n\t\t\t\tborderwidth: 0,\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\ttextcolor: \"white\",\n\t\t\t\ttextactivecolor: \"white\",\n\t\t\t\tclick: function click() {\n\t\t\t\t\tthis.icon = this.value ? \"check-square-o\" : \"square-o\";\n\t\t\t\t\tthis.text = \"Checkbox \" + (this.value ? \"Selected (TRUE)\" : \"Unselected (FALSE)\");\n\t\t\t\t}\n\t\t\t}), checkbox({\n\t\t\t\ticon: undefined,\n\t\t\t\ttext: \"Using bg image\",\n\t\t\t\ttextcolor: \"white\",\n\t\t\t\tbgimage: \"$resources/textures/purplecloud.png\",\n\t\t\t\tbgimagemode: \"stretch\",\n\t\t\t\tclick: function click() {\n\t\t\t\t\tthis.bgimage = this.value ? \"$resources/textures/bluecloud.png\" : \"$resources/textures/purplecloud.png\";\n\t\t\t\t}\n\t\t\t})];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/checkbox.js\n// module id = 57\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/checkbox.js?");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class(\"$ui/view\", function (requireDreem, $ui$, view) {\n\t// A drawer view that slides to reveal trays either to the left and right in horizontal mode or or the top and\n\t// bottom in vertical mode.  Subviews can contain components which will become activated as the lower tray is revealed.\n\t// Up to three subviews can be added to the drawer's constructor, providing the top drawer view, the right tray view\n\t// and the left tray view, in that order.\n\t// <br/><a href=\"/examples/drawers\">examples &raquo;</a>\n\n\n\tthis.tooldragroot = true;\n\tthis.overflow = \"hidden\";\n\tthis.bgcolor = \"transparent\";\n\tthis.pickalpha = -1;\n\n\tthis.attributes = {\n\n\t\t// The orientation of the drawers, ether left/right or top/bottom\n\t\tdirection: Config({ type: Enum(\"horizontal\", \"vertical\"), value: \"horizontal\" }),\n\n\t\t// The relative offset of the top drawer view to the center, a value between (far left) -1.0 ~ 1.0 (far right),\n\t\t// with 0 being exactly at the center.\n\t\tvalue: Config({ value: 0.0, persist: false }),\n\n\t\t// The threshold value at which to allow the drawer to open and lock the right tray\n\t\tmin: -0.5,\n\n\t\t// The threshold value at which to allow the drawer to open and lock the left tray\n\t\tmax: 0.5,\n\n\t\t// The reference value whether refer to current position or absolute position\n\t\treferAbs: false,\n\t\trefabs: { x: 0, y: 0 }\n\t};\n\n\tthis.mainvalue = function (value) {\n\t\treturn value;\n\t};\n\n\tthis.onvalue = function (ev, v, o) {\n\n\t\tif (this._main) {\n\t\t\tthis._main.x = this.direction === \"horizontal\" ? this.mainvalue(v) * this.width : 0;\n\t\t\tthis._main.y = this.direction === \"vertical\" ? this.mainvalue(v) * this.height : 0;\n\t\t}\n\n\t\tif (v > 0) {\n\t\t\tthis._left.visible = true;\n\t\t\tthis._right.visible = !this._left.visible;\n\t\t\tthis._left.x = 0;\n\t\t\tthis._left.y = 0;\n\t\t} else {\n\t\t\tthis._left.visible = false;\n\t\t\tthis._right.visible = !this._left.visible;\n\t\t\tthis._right.x = 0;\n\t\t\tthis._right.y = 0;\n\t\t}\n\n\t\tif (this._left) {\n\t\t\tthis._left.drawtarget = v === this.max ? \"both\" : \"color\";\n\t\t}\n\t\tif (this._right) {\n\t\t\tthis._right.drawtarget = v === this.min ? \"both\" : \"color\";\n\t\t}\n\t};\n\n\tthis.pointermove = function (p, loc, v) {\n\t\tvar main = this._main;\n\n\t\tvar value = 0;\n\n\t\t// cumulative damped movement value.\n\t\t// Used to decide if enough horizontal/vertical movement is present.\n\t\tthis.dampedmovement = this.dampedmovement || vec2(0, 0);\n\t\tthis.dampedmovement = vec2((this.dampedmovement[0] * 9 + p.movement[0]) / 10, (this.dampedmovement[1] * 9 + p.movement[1]) / 10);\n\n\t\tif (this.referAbs) {\n\t\t\tif (this.direction === \"vertical\") {\n\t\t\t\tif (abs(this.dampedmovement[0]) > abs(this.dampedmovement[1]) * 2) return;\n\t\t\t\tthis.refabs.y += p.movement.y;\n\t\t\t\tvar newy = this.refabs.y;\n\t\t\t\tnewy = Math.min(Math.max(newy, 0 - main.height), this.height);\n\t\t\t\tvalue = newy / this.height;\n\t\t\t} else {\n\t\t\t\tif (abs(this.dampedmovement[1]) > abs(this.dampedmovement[0]) / 2) return;\n\t\t\t\tthis.refabs.x += p.movement.x;\n\t\t\t\tvar newx = this.refabs.x;\n\t\t\t\tnewx = Math.min(Math.max(newx, 0 - main.width), this.width);\n\t\t\t\tvalue = newx / this.width;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.direction === \"vertical\") {\n\t\t\t\tif (abs(this.dampedmovement[0]) > abs(this.dampedmovement[1]) * 2) return;\n\t\t\t\tvar newy = main.y + p.movement.y;\n\t\t\t\tnewy = Math.min(Math.max(newy, 0 - main.height), this.height);\n\t\t\t\tvalue = newy / this.height;\n\t\t\t} else {\n\t\t\t\tif (abs(this.dampedmovement[1]) > abs(this.dampedmovement[0]) / 2) return;\n\t\t\t\tvar newx = main.x + p.movement.x;\n\t\t\t\tnewx = Math.min(Math.max(newx, 0 - main.width), this.width);\n\t\t\t\tvalue = newx / this.width;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.leftview && value > 0 || !this.rightview && value < 0) {\n\t\t\tvalue = 0;\n\t\t}\n\n\t\tif (value !== this.value) {\n\t\t\tthis.value = value;\n\t\t}\n\t};\n\n\tthis.pointerend = function (p, loc, v) {\n\n\t\tvar value = this.value;\n\n\t\tif (value <= this.min) {\n\t\t\tif (this.referAbs) {\n\t\t\t\tif (this.direction === \"vertical\") this.refabs.y = this.min * this.height;else this.refabs.x = this.min * this.width;\n\t\t\t}\n\t\t\tvalue = this.min;\n\t\t} else if (value >= this.max) {\n\t\t\tif (this.referAbs) {\n\t\t\t\tif (this.direction === \"vertical\") this.refabs.y = this.max * this.height;else this.refabs.x = this.max * this.width;\n\t\t\t}\n\t\t\tvalue = this.max;\n\t\t} else {\n\t\t\tif (this.referAbs) this.refabs = { x: 0, y: 0 };\n\t\t\tvalue = 0;\n\t\t}\n\n\t\tif (!this.leftview && value > 0 || !this.rightview && value < 0) {\n\t\t\tvalue = 0;\n\t\t}\n\n\t\tif (value !== this.value) {\n\t\t\tthis.value = this.endvalue(value);\n\t\t}\n\t};\n\n\tthis.endvalue = function (value) {\n\t\treturn value;\n\t};\n\n\tthis.init = function () {\n\t\tthis.mainview = this.constructor_children[0];\n\t\tthis.rightview = this.constructor_children[1];\n\t\tthis.leftview = this.constructor_children[2];\n\t\tthis.onvalue(null, this._value, this);\n\t};\n\n\tthis.render = function () {\n\t\tvar views = [];\n\n\t\tvar x = this.direction === \"horizontal\" ? this._value * (this.width || this._layout.width) : 0;\n\t\tvar y = this.direction === \"vertical\" ? this._value * (this.height || this._layout.height) : 0;\n\n\t\tvar leftvisible = true;\n\t\tif (this._value < 0) {\n\t\t\tleftvisible = false;\n\t\t}\n\n\t\tif (this.rightview) {\n\t\t\tviews.push(this._right = view({\n\t\t\t\tdrawtarget: \"color\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\talignitems: \"stretch\",\n\t\t\t\tjustifycontent: \"center\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height\n\t\t\t}, this.rightview));\n\t\t}\n\n\t\tif (this.leftview) {\n\t\t\tviews.push(this._left = view({\n\t\t\t\tdrawtarget: \"color\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\talignitems: \"stretch\",\n\t\t\t\tjustifycontent: \"center\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tvisible: leftvisible,\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height\n\t\t\t}, this.leftview));\n\t\t}\n\n\t\tviews.push(this._main = view({\n\t\t\tdrawtarget: \"color\",\n\t\t\tposition: \"absolute\",\n\t\t\talignitems: \"stretch\",\n\t\t\tjustifycontent: \"center\",\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\twidth: this.width,\n\t\t\theight: this.height\n\t\t}, this.mainview));\n\n\t\treturn views;\n\t};\n\n\t// Basic usage of the drawer.\n\tvar drawer = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar label = requireDreem(\"$ui/label\");\n\t\t\treturn [drawer({\n\t\t\t\tx: 50, y: 50,\n\t\t\t\theight: 70, width: 200\n\t\t\t}, view({ flex: 1, bgcolor: \"red\", justifycontent: \"center\", alignitems: \"center\" }, label({ text: \"<< Slide Me >>\" })), view({ flex: 1, bgcolor: \"green\", justifycontent: \"flex-end\", alignitems: \"center\" }, label({ text: \"I'm the right\" })), view({ flex: 1, bgcolor: \"blue\", alignitems: \"center\" }, label({ text: \"I'm the left\" })))];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/drawer.js\n// module id = 58\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/drawer.js?");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// ruler class\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, label, icon) {\n\t// The foldcontainer shows/hides all its children when the top bar is clicked\n\n\tthis.position = \"relative\";\n\tthis.borderwidth = 1;\n\tthis.borderradius = 1;\n\tthis.margin = 0;\n\tthis.bgcolor = NaN;\n\tthis.alignitems = \"stretch\";\n\tthis.bordercolor = vec4(\"#c0c0c0\");\n\tthis.padding = 0;\n\tthis.flexdirection = \"column\";\n\n\tthis.attributes = {\n\t\t// The current state of the foldcontainer. false = open, Ttue = closed.\n\t\tcollapsed: Config({ type: boolean, value: false, persist: true }),\n\t\t// The icon to use in the top left of the foldcontainer. See the FontAwesome cheatsheet for acceptable icon names.\n\t\ticon: Config({ type: String }),\n\t\ttitle: Config({ type: String, value: '' }),\n\t\t// The main color from which the foldcontainer will build some gradients.\n\t\tbasecolor: Config({ type: vec4, value: vec4(\"#8080c0\") }),\n\t\tfontsize: Config({ type: float, value: 12 }),\n\t\tautogradient: Config({ type: boolean, value: false })\n\n\t\t// Function to change the open/closed state. Used by the click handler of the clickablebar.\n\t};this.toggle = function () {\n\t\tthis.collapsed = !this.collapsed;\n\t};\n\n\t// subclass to lay out the clickable portion of the folding container\n\tdefineDreem.class(this, 'clickablebar', view, function () {\n\n\t\tthis.bggradient = function (a, b) {\n\t\t\tvar fill = mix(col1, col2, a.y / 0.8);\n\t\t\treturn fill;\n\t\t};\n\n\t\t// default click-handler - when not bound this write \"nothing happens\" to the console.\n\t\tthis.toggle = function () {\n\t\t\tconsole.log(\"nothing happens\");\n\t\t};\n\n\t\tthis.attributes = {\n\t\t\ttitle: Config({ type: String }),\n\t\t\ticon: Config({ type: String, value: \"\" }),\n\t\t\tcol1: Config({ value: vec4(0, 0, 0, 0), persist: true, meta: \"color\", motion: \"linear\", duration: 0.1 }),\n\t\t\tcol2: Config({ value: vec4(0, 0, 0, 0), persist: true, meta: \"color\", motion: \"linear\", duration: 0.14 }),\n\t\t\tcollapsed: false\n\t\t};\n\t\tthis.position = \"relative\";\n\n\t\tthis.hardrect = {\n\t\t\tcolor: function color() {\n\t\t\t\tvar fill = mix(view.col1, view.col2, mesh.y / 0.8);\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t};\n\n\t\tthis.padding = 3;\n\t\tthis.justifycontent = \"space-between\";\n\t\tthis.alignitems = \"flex-start\";\n\t\tthis.flex = 1;\n\n\t\t// The clickable bar creates icon and a textfield children.\n\t\tthis.render = function () {\n\t\t\tvar res = [];\n\n\t\t\tif (this.icon) res.push(icon({ fontsize: this.outer.fontsize, icon: this.icon, fgcolor: vec4.contrastcolor(this.outer.basecolor) }));\n\t\t\tif (this.title) res.push(label({ bold: true,\n\t\t\t\tmarginleft: 5, fgcolor: vec4.contrastcolor(this.outer.basecolor), fontsize: this.outer.fontsize, text: this.title, bgcolor: NaN }));\n\t\t\tvar res2 = [view({ bgcolor: NaN }, res), icon({\n\t\t\t\tmarginright: 7,\n\t\t\t\tfontsize: this.outer.fontsize,\n\t\t\t\talignself: \"flex-end\",\n\t\t\t\ticon: this.collapsed ? \"chevron-right\" : \"chevron-down\",\n\t\t\t\tfgcolor: vec4.contrastcolor(this.outer.basecolor)\n\t\t\t})];\n\t\t\treturn res2;\n\t\t};\n\n\t\tthis.statedefault = function (first) {\n\t\t\t//console.log(this.parent.basecolor)\n\t\t\tthis.col1 = Mark(vec4.vec4_mul_float32(vec4(this.parent.basecolor), 1.0), first);\n\t\t\tif (this.autogradient) {\n\t\t\t\tthis.col2 = Mark(vec4.vec4_mul_float32(vec4(this.parent.basecolor), 1.2), first);\n\t\t\t} else {\n\t\t\t\tthis.col2 = this.col1;\n\t\t\t}\n\t\t};\n\n\t\tthis.stateover = function () {\n\t\t\tthis.col1 = Mark(vec4.vec4_mul_float32_rgb(vec4(this.parent.basecolor), 1.2));\n\t\t\tif (this._autogradient) {\n\t\t\t\tthis.col2 = vec4.vec4_mul_float32_rgb(vec4(this.parent.basecolor), 1.1);\n\t\t\t} else {\n\t\t\t\tthis.col2 = this.col1;\n\t\t\t}\n\t\t};\n\n\t\tthis.stateclick = function () {\n\t\t\tthis.col1 = vec4.vec4_mul_float32(vec4(this.parent.basecolor), 1.3);\n\t\t\tif (this._autogradient) {\n\t\t\t\tthis.col2 = vec4.vec4_mul_float32(vec4(this.parent.basecolor), 1.0);\n\t\t\t} else {\n\t\t\t\tthis.col2 = this.col1;\n\t\t\t}\n\t\t\tthis.outer.toggle();\n\t\t};\n\n\t\tthis.layout = function () {\n\t\t\tthis.statedefault();\n\t\t};\n\t\tthis.init = function () {\n\t\t\t//\tconsole.log(\"HERE\",this.bgcolor)\n\t\t\tthis.statedefault(true);\n\t\t};\n\n\t\tthis.pointerover = this.stateover;\n\t\tthis.pointerout = this.statedefault;\n\t\tthis.pointerstart = function (ev) {\n\t\t\tthis.stateclick();\n\t\t};\n\t\tthis.pointerend = this.statedefault;\n\t});\n\n\t// the main container view\n\tdefineDreem.class(this, 'containerview', function (view) {\n\t\tthis.hardrect = {\n\t\t\tcolor: function color() {\n\t\t\t\treturn mix(view.bgcolor * 1.7, vec4(\"white\"), mesh.y / 8);\n\t\t\t}\n\t\t};\n\t\tthis.bgcolor = NaN;\n\t\tthis.padding = vec4(0, 0, 0, 0), this.margin = vec4(0, 0, 0, 0), this.position = \"relative\";\n\t});\n\n\tthis.render = function () {\n\n\t\tthis.bar = this.clickablebar({\n\t\t\tbgcolor: vec4(\"#3c3c3c\"),\n\t\t\tborderwidth: this.borderwidth,\n\t\t\tbordercolor: this.bordercolor,\n\t\t\ticon: this.icon ? this.icon : \"\",\n\t\t\ttitle: this.title,\n\t\t\tfontsize: this.fontsize,\n\t\t\tcollapsed: this.collapsed\n\t\t});\n\n\t\t//this.bar.pointertap = this.toggle.bind(this);\n\t\tvar res = [this.bar];\n\n\t\tif (this.collapsed == false) {\n\t\t\tthis.container = this.containerview({\n\t\t\t\tbgcolor: NaN,\n\t\t\t\tborderwidth: this.borderwidth,\n\t\t\t\tbordercolor: this.bordercolor,\n\t\t\t\tpaddingright: 10\n\t\t\t}, this.constructor_children);\n\t\t\tres.push(this.container);\n\t\t}\n\t\tthis.children = [];\n\n\t\treturn res;\n\t};\n\n\tvar foldcontainer = this.constructor;\n\n\tthis.constructor.examples = {\n\t\tBasicExample: function BasicExample() {\n\t\t\treturn [foldcontainer({ icon: \"flask\", title: \"folding thing\", basecolor: \"#90c0f0\" }, label({ text: \"I can be folded away!\", fgcolor: \"black\", bgcolor: \"transparent\", margin: vec4(10) }))];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/foldcontainer.js\n// module id = 59\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/foldcontainer.js?");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class(function (requireDreem, exports, label) {\n\t// not-supported: DALi\n\t// The icon class provides an easy way to access most of the commonly used web icons. Look at the FontAwesome cheat sheet to see what can be used.\n\n\tthis.attributes = {\n\t\t// The icon to be used. Look at the FontAwesome cheat sheet to see the available options. Icons do not need to specify their 'fa-' prefix -> use 'gears' instead of 'fa-gears'.\n\t\ticon: Config({ type: String, value: 'wrench' })\n\t};\n\n\tthis.oninit = function () {\n\t\tthis.text = table[this.icon];\n\t};\n\n\tthis.onicon = function () {\n\t\tthis.text = table[this.icon];\n\t};\n\n\tthis.bgcolor = NaN;\n\n\tthis.font = requireDreem('$resources/fonts/fontawesome_baked.glf');\n\n\t// the font awesome\n\tvar table = {\n\t\t'undefined': '',\n\t\t'500px': '\\uF26E',\n\t\t'adjust': '\\uF042',\n\t\t'adn': '\\uF170',\n\t\t'align-center': '\\uF037',\n\t\t'align-justify': '\\uF039',\n\t\t'align-left': '\\uF036',\n\t\t'align-right': '\\uF038',\n\t\t'amazon': '\\uF270',\n\t\t'ambulance': '\\uF0F9',\n\t\t'anchor': '\\uF13D',\n\t\t'android': '\\uF17B',\n\t\t'angellist': '\\uF209',\n\t\t'angle-double-down': '\\uF103',\n\t\t'angle-double-left': '\\uF100',\n\t\t'angle-double-right': '\\uF101',\n\t\t'angle-double-up': '\\uF102',\n\t\t'angle-down': '\\uF107',\n\t\t'angle-left': '\\uF104',\n\t\t'angle-right': '\\uF105',\n\t\t'angle-up': '\\uF106',\n\t\t'apple': '\\uF179',\n\t\t'archive': '\\uF187',\n\t\t'area-chart': '\\uF1FE',\n\t\t'arrow-circle-down': '\\uF0AB',\n\t\t'arrow-circle-left': '\\uF0A8',\n\t\t'arrow-circle-o-down': '\\uF01A',\n\t\t'arrow-circle-o-left': '\\uF190',\n\t\t'arrow-circle-o-right': '\\uF18E',\n\t\t'arrow-circle-o-up': '\\uF01B',\n\t\t'arrow-circle-right': '\\uF0A9',\n\t\t'arrow-circle-up': '\\uF0AA',\n\t\t'arrow-down': '\\uF063',\n\t\t'arrow-left': '\\uF060',\n\t\t'arrow-right': '\\uF061',\n\t\t'arrow-up': '\\uF062',\n\t\t'arrows': '\\uF047',\n\t\t'arrows-alt': '\\uF0B2',\n\t\t'arrows-h': '\\uF07E',\n\t\t'arrows-v': '\\uF07D',\n\t\t'asterisk': '\\uF069',\n\t\t'at': '\\uF1FA',\n\t\t'automobile': '\\uF1B9',\n\t\t'backward': '\\uF04A',\n\t\t'balance-scale': '\\uF24E',\n\t\t'ban': '\\uF05E',\n\t\t'bank': '\\uF19C',\n\t\t'bar-chart': '\\uF080',\n\t\t'bar-chart-o': '\\uF080',\n\t\t'barcode': '\\uF02A',\n\t\t'bars': '\\uF0C9',\n\t\t'battery-0': '\\uF244',\n\t\t'battery-1': '\\uF243',\n\t\t'battery-2': '\\uF242',\n\t\t'battery-3': '\\uF241',\n\t\t'battery-4': '\\uF240',\n\t\t'battery-empty': '\\uF244',\n\t\t'battery-full': '\\uF240',\n\t\t'battery-half': '\\uF242',\n\t\t'battery-quarter': '\\uF243',\n\t\t'battery-three-quarters': '\\uF241',\n\t\t'bed': '\\uF236',\n\t\t'beer': '\\uF0FC',\n\t\t'behance': '\\uF1B4',\n\t\t'behance-square': '\\uF1B5',\n\t\t'bell': '\\uF0F3',\n\t\t'bell-o': '\\uF0A2',\n\t\t'bell-slash': '\\uF1F6',\n\t\t'bell-slash-o': '\\uF1F7',\n\t\t'bicycle': '\\uF206',\n\t\t'binoculars': '\\uF1E5',\n\t\t'birthday-cake': '\\uF1FD',\n\t\t'bitbucket': '\\uF171',\n\t\t'bitbucket-square': '\\uF172',\n\t\t'bitcoin': '\\uF15A',\n\t\t'black-tie': '\\uF27E',\n\t\t'bold': '\\uF032',\n\t\t'bolt': '\\uF0E7',\n\t\t'bomb': '\\uF1E2',\n\t\t'book': '\\uF02D',\n\t\t'bookmark': '\\uF02E',\n\t\t'bookmark-o': '\\uF097',\n\t\t'briefcase': '\\uF0B1',\n\t\t'btc': '\\uF15A',\n\t\t'bug': '\\uF188',\n\t\t'building': '\\uF1AD',\n\t\t'building-o': '\\uF0F7',\n\t\t'bullhorn': '\\uF0A1',\n\t\t'bullseye': '\\uF140',\n\t\t'bus': '\\uF207',\n\t\t'buysellads': '\\uF20D',\n\t\t'cab': '\\uF1BA',\n\t\t'calculator': '\\uF1EC',\n\t\t'calendar': '\\uF073',\n\t\t'calendar-check': '\\uF274',\n\t\t'calendar-minus': '\\uF272',\n\t\t'calendar-o': '\\uF133',\n\t\t'calendar-plus': '\\uF271',\n\t\t'calendar-times': '\\uF273',\n\t\t'camera': '\\uF030',\n\t\t'camera-retro': '\\uF083',\n\t\t'car': '\\uF1B9',\n\t\t'caret-down': '\\uF0D7',\n\t\t'caret-left': '\\uF0D9',\n\t\t'caret-right': '\\uF0DA',\n\t\t'caret-square-o-down': '\\uF150',\n\t\t'caret-square-o-left': '\\uF191',\n\t\t'caret-square-o-right': '\\uF152',\n\t\t'caret-square-o-up': '\\uF151',\n\t\t'caret-up': '\\uF0D8',\n\t\t'cart-arrow-down': '\\uF218',\n\t\t'cart-plus': '\\uF217',\n\t\t'cc': '\\uF20A',\n\t\t'cc-amex': '\\uF1F3',\n\t\t'cc-diners-club': '\\uF24C',\n\t\t'cc-discover': '\\uF1F2',\n\t\t'cc-jcb': '\\uF24B',\n\t\t'cc-mastercard': '\\uF1F1',\n\t\t'cc-paypal': '\\uF1F4',\n\t\t'cc-stripe': '\\uF1F5',\n\t\t'cc-visa': '\\uF1F0',\n\t\t'certificate': '\\uF0A3',\n\t\t'chain': '\\uF0C1',\n\t\t'chain-broken': '\\uF127',\n\t\t'check': '\\uF00C',\n\t\t'check-circle': '\\uF058',\n\t\t'check-circle-o': '\\uF05D',\n\t\t'check-square': '\\uF14A',\n\t\t'check-square-o': '\\uF046',\n\t\t'chevron-circle-down': '\\uF13A',\n\t\t'chevron-circle-left': '\\uF137',\n\t\t'chevron-circle-right': '\\uF138',\n\t\t'chevron-circle-up': '\\uF139',\n\t\t'chevron-down': '\\uF078',\n\t\t'chevron-left': '\\uF053',\n\t\t'chevron-right': '\\uF054',\n\t\t'chevron-up': '\\uF077',\n\t\t'child': '\\uF1AE',\n\t\t'chrome': '\\uF268',\n\t\t'circle': '\\uF111',\n\t\t'circle-o': '\\uF10C',\n\t\t'circle-o-notch': '\\uF1CE',\n\t\t'circle-thin': '\\uF1DB',\n\t\t'clipboard': '\\uF0EA',\n\t\t'clock': '\\uF017',\n\t\t'clone': '\\uF24D',\n\t\t'close': '\\uF00D',\n\t\t'cloud': '\\uF0C2',\n\t\t'cloud-download': '\\uF0ED',\n\t\t'cloud-upload': '\\uF0EE',\n\t\t'cny': '\\uF157',\n\t\t'code': '\\uF121',\n\t\t'code-fork': '\\uF126',\n\t\t'codepen': '\\uF1CB',\n\t\t'coffee': '\\uF0F4',\n\t\t'cog': '\\uF013',\n\t\t'cogs': '\\uF085',\n\t\t'columns': '\\uF0DB',\n\t\t'comment': '\\uF075',\n\t\t'comment-o': '\\uF0E5',\n\t\t'commenting': '\\uF27A',\n\t\t'commenting-o': '\\uF27B',\n\t\t'comments': '\\uF086',\n\t\t'comments-o': '\\uF0E6',\n\t\t'compass': '\\uF14E',\n\t\t'compress': '\\uF066',\n\t\t'connectdevelop': '\\uF20E',\n\t\t'contao': '\\uF26D',\n\t\t'copy': '\\uF0C5',\n\t\t'copyright': '\\uF1F9',\n\t\t'creative-commons': '\\uF25E',\n\t\t'credit-card': '\\uF09D',\n\t\t'crop': '\\uF125',\n\t\t'crosshairs': '\\uF05B',\n\t\t'css3': '\\uF13C',\n\t\t'cube': '\\uF1B2',\n\t\t'cubes': '\\uF1B3',\n\t\t'cut': '\\uF0C4',\n\t\t'cutlery': '\\uF0F5',\n\t\t'dashboard': '\\uF0E4',\n\t\t'dashcube': '\\uF210',\n\t\t'database': '\\uF1C0',\n\t\t'dedent': '\\uF03B',\n\t\t'delicious': '\\uF1A5',\n\t\t'desktop': '\\uF108',\n\t\t'deviantart': '\\uF1BD',\n\t\t'diamond': '\\uF219',\n\t\t'digg': '\\uF1A6',\n\t\t'dollar': '\\uF155',\n\t\t'dot-circle': '\\uF192',\n\t\t'download': '\\uF019',\n\t\t'dribbble': '\\uF17D',\n\t\t'dropbox': '\\uF16B',\n\t\t'drupal': '\\uF1A9',\n\t\t'edit': '\\uF044',\n\t\t'eject': '\\uF052',\n\t\t'ellipsis-h': '\\uF141',\n\t\t'ellipsis-v': '\\uF142',\n\t\t'empire': '\\uF1D1',\n\t\t'envelope': '\\uF0E0',\n\t\t'envelope-o': '\\uF003',\n\t\t'envelope-square': '\\uF199',\n\t\t'eraser': '\\uF12D',\n\t\t'eur': '\\uF153',\n\t\t'euro': '\\uF153',\n\t\t'exchange': '\\uF0EC',\n\t\t'exclamation': '\\uF12A',\n\t\t'exclamation-circle': '\\uF06A',\n\t\t'exclamation-triangle': '\\uF071',\n\t\t'expand': '\\uF065',\n\t\t'expeditedssl': '\\uF23E',\n\t\t'external-link': '\\uF08E',\n\t\t'external-link-square': '\\uF14C',\n\t\t'eye': '\\uF06E',\n\t\t'eye-slash': '\\uF070',\n\t\t'eyedropper': '\\uF1FB',\n\t\t'facebook': '\\uF09A',\n\t\t'facebook-f': '\\uF09A',\n\t\t'facebook-official': '\\uF230',\n\t\t'facebook-square': '\\uF082',\n\t\t'fast-backward': '\\uF049',\n\t\t'fast-forward': '\\uF050',\n\t\t'fax': '\\uF1AC',\n\t\t'feed': '\\uF09E',\n\t\t'female': '\\uF182',\n\t\t'fighter-jet': '\\uF0FB',\n\t\t'file': '\\uF15B',\n\t\t'file-archive': '\\uF1C6',\n\t\t'file-audio': '\\uF1C7',\n\t\t'file-code': '\\uF1C9',\n\t\t'file-excel': '\\uF1C3',\n\t\t'file-image': '\\uF1C5',\n\t\t'file-movie': '\\uF1C8',\n\t\t'file-o': '\\uF016',\n\t\t'file-pdf': '\\uF1C1',\n\t\t'file-photo': '\\uF1C5',\n\t\t'file-picture': '\\uF1C5',\n\t\t'file-powerpoint': '\\uF1C4',\n\t\t'file-sound': '\\uF1C7',\n\t\t'file-text': '\\uF15C',\n\t\t'file-text-o': '\\uF0F6',\n\t\t'file-video': '\\uF1C8',\n\t\t'file-word': '\\uF1C2',\n\t\t'file-zip': '\\uF1C6',\n\t\t'files': '\\uF0C5',\n\t\t'film': '\\uF008',\n\t\t'filter': '\\uF0B0',\n\t\t'fire': '\\uF06D',\n\t\t'fire-extinguisher': '\\uF134',\n\t\t'firefox': '\\uF269',\n\t\t'flag': '\\uF024',\n\t\t'flag-checkered': '\\uF11E',\n\t\t'flag-o': '\\uF11D',\n\t\t'flash': '\\uF0E7',\n\t\t'flask': '\\uF0C3',\n\t\t'flickr': '\\uF16E',\n\t\t'floppy': '\\uF0C7',\n\t\t'folder': '\\uF07B',\n\t\t'folderv': '\\uF114',\n\t\t'folder-open': '\\uF07C',\n\t\t'folder-open-o': '\\uF115',\n\t\t'font': '\\uF031',\n\t\t'fonticons': '\\uF280',\n\t\t'forumbee': '\\uF211',\n\t\t'forward': '\\uF04E',\n\t\t'foursquare': '\\uF180',\n\t\t'frown': '\\uF119',\n\t\t'futbol': '\\uF1E3',\n\t\t'gamepad': '\\uF11B',\n\t\t'gavel': '\\uF0E3',\n\t\t'gbp': '\\uF154',\n\t\t'ge': '\\uF1D1',\n\t\t'gear': '\\uF013',\n\t\t'gears': '\\uF085',\n\t\t'genderless': '\\uF22D',\n\t\t'get-pocket': '\\uF265',\n\t\t'gg': '\\uF260',\n\t\t'gg-circle': '\\uF261',\n\t\t'gift': '\\uF06B',\n\t\t'git': '\\uF1D3',\n\t\t'git-square': '\\uF1D2',\n\t\t'github': '\\uF09B',\n\t\t'github-alt': '\\uF113',\n\t\t'github-square': '\\uF092',\n\t\t'gittip': '\\uF184',\n\t\t'glass': '\\uF000',\n\t\t'globe': '\\uF0AC',\n\t\t'google': '\\uF1A0',\n\t\t'google-plus': '\\uF0D5',\n\t\t'google-plus-square': '\\uF0D4',\n\t\t'google-wallet': '\\uF1EE',\n\t\t'graduation-cap': '\\uF19D',\n\t\t'gratipay': '\\uF184',\n\t\t'group': '\\uF0C0',\n\t\t'h-square': '\\uF0FD',\n\t\t'hacker-news': '\\uF1D4',\n\t\t'hand-grab': '\\uF255',\n\t\t'hand-lizard': '\\uF258',\n\t\t'hand-o-down': '\\uF0A7',\n\t\t'hand-o-left': '\\uF0A5',\n\t\t'hand-o-right': '\\uF0A4',\n\t\t'hand-o-up': '\\uF0A6',\n\t\t'hand-paper': '\\uF256',\n\t\t'hand-peace': '\\uF25B',\n\t\t'hand-pointer': '\\uF25A',\n\t\t'hand-rock': '\\uF255',\n\t\t'hand-scissors': '\\uF257',\n\t\t'hand-spock': '\\uF259',\n\t\t'hand-stop': '\\uF256',\n\t\t'hdd': '\\uF0A0',\n\t\t'header': '\\uF1DC',\n\t\t'headphones': '\\uF025',\n\t\t'heart': '\\uF004',\n\t\t'heart-o': '\\uF08A',\n\t\t'heartbeat': '\\uF21E',\n\t\t'history': '\\uF1DA',\n\t\t'home': '\\uF015',\n\t\t'hospital': '\\uF0F8',\n\t\t'hotel': '\\uF236',\n\t\t'hourglass': '\\uF254',\n\t\t'hourglass-1': '\\uF251',\n\t\t'hourglass-2': '\\uF252',\n\t\t'hourglass-3': '\\uF253',\n\t\t'hourglass-end': '\\uF253',\n\t\t'hourglass-half': '\\uF252',\n\t\t'hourglass-o': '\\uF250',\n\t\t'hourglass-start': '\\uF251',\n\t\t'houzz': '\\uF27C',\n\t\t'html5': '\\uF13B',\n\t\t'i-cursor': '\\uF246',\n\t\t'ils': '\\uF20B',\n\t\t'image': '\\uF03E',\n\t\t'inbox': '\\uF01C',\n\t\t'indent': '\\uF03C',\n\t\t'industry': '\\uF275',\n\t\t'info': '\\uF129',\n\t\t'info-circle': '\\uF05A',\n\t\t'inr': '\\uF156',\n\t\t'instagram': '\\uF16D',\n\t\t'institution': '\\uF19C',\n\t\t'internet-explorer': '\\uF26B',\n\t\t'intersex': '\\uF224',\n\t\t'ioxhost': '\\uF208',\n\t\t'italic': '\\uF033',\n\t\t'joomla': '\\uF1AA',\n\t\t'jpy': '\\uF157',\n\t\t'jsfiddle': '\\uF1CC',\n\t\t'key': '\\uF084',\n\t\t'keyboard': '\\uF11C',\n\t\t'krw': '\\uF159',\n\t\t'language': '\\uF1AB',\n\t\t'laptop': '\\uF109',\n\t\t'lastfm': '\\uF202',\n\t\t'lastfm-square': '\\uF203',\n\t\t'leaf': '\\uF06C',\n\t\t'leanpub': '\\uF212',\n\t\t'legal': '\\uF0E3',\n\t\t'lemon': '\\uF094',\n\t\t'level-down': '\\uF149',\n\t\t'level-up': '\\uF148',\n\t\t'life-bouy': '\\uF1CD',\n\t\t'life-buoy': '\\uF1CD',\n\t\t'life-ring': '\\uF1CD',\n\t\t'life-saver': '\\uF1CD',\n\t\t'lightbulb': '\\uF0EB',\n\t\t'line-chart': '\\uF201',\n\t\t'link': '\\uF0C1',\n\t\t'linkedin': '\\uF0E1',\n\t\t'linkedin-square': '\\uF08C',\n\t\t'linux': '\\uF17C',\n\t\t'list': '\\uF03A',\n\t\t'list-alt': '\\uF022',\n\t\t'list-ol': '\\uF0CB',\n\t\t'list-ul': '\\uF0CA',\n\t\t'location-arrow': '\\uF124',\n\t\t'lock': '\\uF023',\n\t\t'long-arrow-down': '\\uF175',\n\t\t'long-arrow-left': '\\uF177',\n\t\t'long-arrow-right': '\\uF178',\n\t\t'long-arrow-up': '\\uF176',\n\t\t'magic': '\\uF0D0',\n\t\t'magnet': '\\uF076',\n\t\t'mail-forward': '\\uF064',\n\t\t'mail-reply': '\\uF112',\n\t\t'mail-reply-all': '\\uF122',\n\t\t'male': '\\uF183',\n\t\t'map': '\\uF279',\n\t\t'map-marker': '\\uF041',\n\t\t'map-o': '\\uF278',\n\t\t'map-pin': '\\uF276',\n\t\t'map-signs': '\\uF277',\n\t\t'mars': '\\uF222',\n\t\t'mars-double': '\\uF227',\n\t\t'mars-stroke': '\\uF229',\n\t\t'mars-stroke-h': '\\uF22B',\n\t\t'mars-stroke-v': '\\uF22A',\n\t\t'maxcdn': '\\uF136',\n\t\t'meanpath': '\\uF20C',\n\t\t'medium': '\\uF23A',\n\t\t'medkit': '\\uF0FA',\n\t\t'meh': '\\uF11A',\n\t\t'mercury': '\\uF223',\n\t\t'microphone': '\\uF130',\n\t\t'microphone-slash': '\\uF131',\n\t\t'minus': '\\uF068',\n\t\t'minus-circle': '\\uF056',\n\t\t'minus-square': '\\uF146',\n\t\t'minus-square-o': '\\uF147',\n\t\t'mobile': '\\uF10B',\n\t\t'mobile-phone': '\\uF10B',\n\t\t'money': '\\uF0D6',\n\t\t'moon': '\\uF186',\n\t\t'mortar-board': '\\uF19D',\n\t\t'motorcycle': '\\uF21C',\n\t\t'mouse-pointer': '\\uF245',\n\t\t'music': '\\uF001',\n\t\t'navicon': '\\uF0C9',\n\t\t'neuter': '\\uF22C',\n\t\t'newspaper': '\\uF1EA',\n\t\t'object-group': '\\uF247',\n\t\t'object-ungroup': '\\uF248',\n\t\t'odnoklassniki': '\\uF263',\n\t\t'odnoklassniki-square': '\\uF264',\n\t\t'opencart': '\\uF23D',\n\t\t'openid': '\\uF19B',\n\t\t'opera': '\\uF26A',\n\t\t'optin-monster': '\\uF23C',\n\t\t'outdent': '\\uF03B',\n\t\t'pagelines': '\\uF18C',\n\t\t'paint-brush': '\\uF1FC',\n\t\t'paper-plane': '\\uF1D8',\n\t\t'paper-plane-o': '\\uF1D9',\n\t\t'paperclip': '\\uF0C6',\n\t\t'paragraph': '\\uF1DD',\n\t\t'paste': '\\uF0EA',\n\t\t'pause': '\\uF04C',\n\t\t'paw': '\\uF1B0',\n\t\t'paypal': '\\uF1ED',\n\t\t'pencil': '\\uF040',\n\t\t'pencil-square': '\\uF14B',\n\t\t'pencil-square-o': '\\uF044',\n\t\t'phone': '\\uF095',\n\t\t'phone-square': '\\uF098',\n\t\t'photo': '\\uF03E',\n\t\t'picture': '\\uF03E',\n\t\t'pie-chart': '\\uF200',\n\t\t'pied-piper': '\\uF1A7',\n\t\t'pied-piper-alt': '\\uF1A8',\n\t\t'pinterest': '\\uF0D2',\n\t\t'pinterest-p': '\\uF231',\n\t\t'pinterest-square': '\\uF0D3',\n\t\t'plane': '\\uF072',\n\t\t'play': '\\uF04B',\n\t\t'play-circle': '\\uF144',\n\t\t'play-circle-o': '\\uF01D',\n\t\t'plug': '\\uF1E6',\n\t\t'plus': '\\uF067',\n\t\t'plus-circle': '\\uF055',\n\t\t'plus-square': '\\uF0FE',\n\t\t'plus-square-o': '\\uF196',\n\t\t'power-off': '\\uF011',\n\t\t'print': '\\uF02F',\n\t\t'puzzle-piece': '\\uF12E',\n\t\t'qq': '\\uF1D6',\n\t\t'qrcode': '\\uF029',\n\t\t'question': '\\uF128',\n\t\t'question-circle': '\\uF059',\n\t\t'quote-left': '\\uF10D',\n\t\t'quote-right': '\\uF10E',\n\t\t'ra': '\\uF1D0',\n\t\t'random': '\\uF074',\n\t\t'rebel': '\\uF1D0',\n\t\t'recycle': '\\uF1B8',\n\t\t'reddit': '\\uF1A1',\n\t\t'reddit-square': '\\uF1A2',\n\t\t'refresh': '\\uF021',\n\t\t'registered': '\\uF25D',\n\t\t'remove': '\\uF00D',\n\t\t'renren': '\\uF18B',\n\t\t'reorder': '\\uF0C9',\n\t\t'repeat': '\\uF01E',\n\t\t'reply': '\\uF112',\n\t\t'reply-all': '\\uF122',\n\t\t'retweet': '\\uF079',\n\t\t'rmb': '\\uF157',\n\t\t'road': '\\uF018',\n\t\t'rocket': '\\uF135',\n\t\t'rotate-left': '\\uF0E2',\n\t\t'rotate-right': '\\uF01E',\n\t\t'rouble': '\\uF158',\n\t\t'rss': '\\uF09E',\n\t\t'rss-square': '\\uF143',\n\t\t'rub': '\\uF158',\n\t\t'ruble': '\\uF158',\n\t\t'rupee': '\\uF156',\n\t\t'safari': '\\uF267',\n\t\t'save': '\\uF0C7',\n\t\t'scissors': '\\uF0C4',\n\t\t'search': '\\uF002',\n\t\t'search-minus': '\\uF010',\n\t\t'search-plus': '\\uF00E',\n\t\t'sellsy': '\\uF213',\n\t\t'send': '\\uF1D8',\n\t\t'send-o': '\\uF1D9',\n\t\t'server': '\\uF233',\n\t\t'share': '\\uF064',\n\t\t'share-alt': '\\uF1E0',\n\t\t'share-alt-square': '\\uF1E1',\n\t\t'share-square': '\\uF14D',\n\t\t'share-square-o': '\\uF045',\n\t\t'shekel': '\\uF20B',\n\t\t'sheqel': '\\uF20B',\n\t\t'shield': '\\uF132',\n\t\t'ship': '\\uF21A',\n\t\t'shirtsinbulk': '\\uF214',\n\t\t'shopping-cart': '\\uF07A',\n\t\t'sign-in': '\\uF090',\n\t\t'sign-out': '\\uF08B',\n\t\t'signal': '\\uF012',\n\t\t'simplybuilt': '\\uF215',\n\t\t'sitemap': '\\uF0E8',\n\t\t'skyatlas': '\\uF216',\n\t\t'skype': '\\uF17E',\n\t\t'slack': '\\uF198',\n\t\t'sliders': '\\uF1DE',\n\t\t'slideshare': '\\uF1E7',\n\t\t'smile': '\\uF118',\n\t\t'soccer-ball': '\\uF1E3',\n\t\t'sort': '\\uF0DC',\n\t\t'sort-alpha-asc': '\\uF15D',\n\t\t'sort-alpha-desc': '\\uF15E',\n\t\t'sort-amount-asc': '\\uF160',\n\t\t'sort-amount-desc': '\\uF161',\n\t\t'sort-asc': '\\uF0DE',\n\t\t'sort-desc': '\\uF0DD',\n\t\t'sort-down': '\\uF0DD',\n\t\t'sort-numeric-asc': '\\uF162',\n\t\t'sort-numeric-desc': '\\uF163',\n\t\t'sort-up': '\\uF0DE',\n\t\t'soundcloud': '\\uF1BE',\n\t\t'space-shuttle': '\\uF197',\n\t\t'spinner': '\\uF110',\n\t\t'spoon': '\\uF1B1',\n\t\t'spotify': '\\uF1BC',\n\t\t'square': '\\uF0C8',\n\t\t'square-o': '\\uF096',\n\t\t'stack-exchange': '\\uF18D',\n\t\t'stack-overflow': '\\uF16C',\n\t\t'star': '\\uF005',\n\t\t'star-half': '\\uF089',\n\t\t'star-half-empty': '\\uF123',\n\t\t'star-half-full': '\\uF123',\n\t\t'star-half-o': '\\uF123',\n\t\t'star-o': '\\uF006',\n\t\t'steam': '\\uF1B6',\n\t\t'steam-square': '\\uF1B7',\n\t\t'step-backward': '\\uF048',\n\t\t'step-forward': '\\uF051',\n\t\t'stethoscope': '\\uF0F1',\n\t\t'sticky-note': '\\uF249',\n\t\t'sticky-note-o': '\\uF24A',\n\t\t'stop': '\\uF04D',\n\t\t'street-view': '\\uF21D',\n\t\t'strikethrough': '\\uF0CC',\n\t\t'stumbleupon': '\\uF1A4',\n\t\t'stumbleupon-circle': '\\uF1A3',\n\t\t'subscript': '\\uF12C',\n\t\t'subway': '\\uF239',\n\t\t'suitcase': '\\uF0F2',\n\t\t'sun': '\\uF185',\n\t\t'superscript': '\\uF12B',\n\t\t'support': '\\uF1CD',\n\t\t'table': '\\uF0CE',\n\t\t'tablet': '\\uF10A',\n\t\t'tachometer': '\\uF0E4',\n\t\t'tag': '\\uF02B',\n\t\t'tags': '\\uF02C',\n\t\t'tasks': '\\uF0AE',\n\t\t'taxi': '\\uF1BA',\n\t\t'television': '\\uF26C',\n\t\t'tencent-weibo': '\\uF1D5',\n\t\t'terminal': '\\uF120',\n\t\t'text-height': '\\uF034',\n\t\t'text-width': '\\uF035',\n\t\t'th': '\\uF00A',\n\t\t'th-large': '\\uF009',\n\t\t'th-list': '\\uF00B',\n\t\t'thumb-tack': '\\uF08D',\n\t\t'thumbs-down': '\\uF165',\n\t\t'thumbs-o-down': '\\uF088',\n\t\t'thumbs-o-up': '\\uF087',\n\t\t'thumbs-up': '\\uF164',\n\t\t'ticket': '\\uF145',\n\t\t'times': '\\uF00D',\n\t\t'times-circle': '\\uF057',\n\t\t'times-circle-o': '\\uF05C',\n\t\t'tint': '\\uF043',\n\t\t'toggle-down': '\\uF150',\n\t\t'toggle-left': '\\uF191',\n\t\t'toggle-off': '\\uF204',\n\t\t'toggle-on': '\\uF205',\n\t\t'toggle-right': '\\uF152',\n\t\t'toggle-up': '\\uF151',\n\t\t'trademark': '\\uF25C',\n\t\t'train': '\\uF238',\n\t\t'transgender': '\\uF224',\n\t\t'transgender-alt': '\\uF225',\n\t\t'trash': '\\uF1F8',\n\t\t'trash-o': '\\uF014',\n\t\t'tree': '\\uF1BB',\n\t\t'trello': '\\uF181',\n\t\t'tripadvisor': '\\uF262',\n\t\t'trophy': '\\uF091',\n\t\t'truck': '\\uF0D1',\n\t\t'try': '\\uF195',\n\t\t'tty': '\\uF1E4',\n\t\t'tumblr': '\\uF173',\n\t\t'tumblr-square': '\\uF174',\n\t\t'turkish-lira': '\\uF195',\n\t\t'tv': '\\uF26C',\n\t\t'twitch': '\\uF1E8',\n\t\t'twitter': '\\uF099',\n\t\t'twitter-square': '\\uF081',\n\t\t'umbrella': '\\uF0E9',\n\t\t'underline': '\\uF0CD',\n\t\t'undo': '\\uF0E2',\n\t\t'university': '\\uF19C',\n\t\t'unlink': '\\uF127',\n\t\t'unlock': '\\uF09C',\n\t\t'unlock-alt': '\\uF13E',\n\t\t'unsorted': '\\uF0DC',\n\t\t'upload': '\\uF093',\n\t\t'usd': '\\uF155',\n\t\t'user': '\\uF007',\n\t\t'user-md': '\\uF0F0',\n\t\t'user-plus': '\\uF234',\n\t\t'user-secret': '\\uF21B',\n\t\t'user-times': '\\uF235',\n\t\t'users': '\\uF0C0',\n\t\t'venus': '\\uF221',\n\t\t'venus-double': '\\uF226',\n\t\t'venus-mars': '\\uF228',\n\t\t'viacoin': '\\uF237',\n\t\t'video-camera': '\\uF03D',\n\t\t'vimeo': '\\uF27D',\n\t\t'vimeo-square': '\\uF194',\n\t\t'vine': '\\uF1CA',\n\t\t'vk': '\\uF189',\n\t\t'volume-down': '\\uF027',\n\t\t'volume-off': '\\uF026',\n\t\t'volume-up': '\\uF028',\n\t\t'warning': '\\uF071',\n\t\t'wechat': '\\uF1D7',\n\t\t'weibo': '\\uF18A',\n\t\t'weixin': '\\uF1D7',\n\t\t'whatsapp': '\\uF232',\n\t\t'wheelchair': '\\uF193',\n\t\t'wifi': '\\uF1EB',\n\t\t'wikipedia-w': '\\uF266',\n\t\t'windows': '\\uF17A',\n\t\t'won': '\\uF159',\n\t\t'wordpress': '\\uF19A',\n\t\t'wrench': '\\uF0AD',\n\t\t'xing': '\\uF168',\n\t\t'xing-square': '\\uF169',\n\t\t'y-combinator': '\\uF23B',\n\t\t'y-combinator-square': '\\uF1D4',\n\t\t'yahoo': '\\uF19E',\n\t\t'yc': '\\uF23B',\n\t\t'yc-square': '\\uF1D4',\n\t\t'yelp': '\\uF1E9',\n\t\t'yen': '\\uF157',\n\t\t'youtube': '\\uF167',\n\t\t'youtube-play': '\\uF16A',\n\t\t'youtube-square': '\\uF166'\n\t};\n\texports.icontable = table;\n\n\tvar icon = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [icon({ icon: \"flask\", fontsize: 30, fgcolor: \"red\" }), icon({ icon: \"youtube\", fontsize: 30, fgcolor: \"green\" }), icon({ icon: \"gears\", fontsize: 30, fgcolor: \"yellow\" }), icon({ icon: \"twitter\", fontsize: 30, fgcolor: \"blue\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/icon.js\n// module id = 60\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/icon.js?");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view) {\n\t// internal, Simple knob: a dial with a value\n\n\tthis.attributes = {\n\t\tvalue: Config({ type: float, value: 0 }),\n\t\tminvalue: Config({ type: float, value: 0 }),\n\t\tmaxvalue: Config({ type: float, value: 1 }),\n\t\tstepvalue: Config({ type: float, value: 0.01 }),\n\n\t\tbordercolor: Config({ motion: \"easeout\", duration: 0.2, value: vec4(1, 1, 1, 0), meta: \"color\" }),\n\t\tdraggingbordercolor: Config({ type: vec4, value: vec4(\"yellow\"), meta: \"color\" }),\n\t\tfocusbordercolor: Config({ type: vec4, value: vec4(\"green\"), meta: \"color\" }),\n\n\t\touterradius: Config({ type: float, value: 70 }),\n\t\tinnerradius: Config({ type: float, value: 30 }),\n\t\toffset: Config({ type: float, value: 8 })\n\t};\n\n\tthis.minwidth = 50;\n\tthis.minheight = 50;\n\n\tthis.atMatrix = function () {\n\t\t//console.log(\" l!\", this.layout);\n\t\tthis.findChild(\"thedial\").width = this.layout.width;\n\t\tthis.findChild(\"thedial\").height = this.layout.width;\n\t\tthis.findChild(\"thedial\").relayout();\n\t\tthis.findChild(\"thedial\").redraw();\n\t\tthis.findChild(\"thedialbg\").width = this.layout.width;\n\t\tthis.findChild(\"thedialbg\").height = this.layout.width;\n\t};\n\n\tdefineDreem.class(this, \"dial\", function ($ui$, view) {\n\n\t\tthis.innerradius = 20;\n\t\tthis.outerradius = 26;\n\n\t\tthis.attributes = {\n\t\t\tstart: Config({ type: float, value: 0 }),\n\t\t\tend: Config({ type: float, value: PI * 1.5 })\n\t\t};\n\n\t\tthis.init = function () {\n\t\t\tthis.width = this.parent.layout.width;\n\t\t\tthis.height = this.parent.layout.height;\n\t\t};\n\n\t\tthis.width = function () {\n\t\t\t//\tconsole.log(this._width);\n\t\t};\n\n\t\tthis.hardrect = function () {\n\t\t\tthis.mesh = vec2.array();\n\n\t\t\tfor (var i = 0; i < 101; i++) {\n\t\t\t\tthis.mesh.push(i / 100, 0);\n\t\t\t\tthis.mesh.push(i / 100, 1);\n\t\t\t}\n\n\t\t\tthis.drawtype = this.TRIANGLE_STRIP;\n\n\t\t\tthis.position = function () {\n\n\t\t\t\tvar p = view.start + mesh.x * (view.end - view.start);\n\n\t\t\t\tuv = vec2(sin(p), cos(p)) * (view.innerradius + (view.outerradius - view.innerradius) * mesh.y);\n\t\t\t\toff = mesh.x / 6.283;\n\t\t\t\tvar rad = min(1., 1.) / 2.;\n\t\t\t\tpos = vec2(view.width / 2 + rad * uv.x, view.height / 2 + rad * uv.y);\n\t\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t};\n\n\t\t\tthis.color = function () {\n\t\t\t\t//return view.bgcolor;\n\t\t\t\tvar A = view.outerradius - view.innerradius;\n\t\t\t\tvar f = abs(mesh.y * A - A / 2);\n\t\t\t\tvar edge = smoothstep(A / 2 - 2, A / 2, f);\n\t\t\t\tvar aaedge = pow(f, 0.30);\n\n\t\t\t\tvar color = view.bgcolor;\n\n\t\t\t\tvar edgecolor = vec4(color.xyz, 0);\n\t\t\t\tvar mixed = mix(color, edgecolor, edge);\n\t\t\t\t//mixed.a *= aaedge;\n\t\t\t\treturn mixed;\n\t\t\t};\n\t\t};\n\t});\n\n\tthis.neutralbordercolor = this.bordercolor;\n\tthis.tabstop = 0;\n\n\tthis.bgcolor = NaN; //{pick_only:true};\n\tthis.fgcolor = \"#101010\";\n\tthis.bgcolor = \"red\";\n\n\tthis.value = function () {\n\t\tvar td = this.findChild(\"thedial\");\n\t\tif (td) {\n\t\t\ttd._start = this.calcstart();\n\t\t\ttd.redraw();\n\t\t}\n\t};\n\n\tthis.focus = function (newfocus) {\n\t\tif (this._focus) {\n\t\t\tthis.bordercolor = this.focusbordercolor;\n\t\t} else {\n\t\t\tthis.bordercolor = this.neutralbordercolor;\n\t\t}\n\t};\n\n\tthis.calcstart = function () {\n\t\treturn (this.maxvalue - this.value - this.minvalue) / (this.maxvalue - this.minvalue) * (2 * PI - PI / 2) + PI / 4;\n\t};\n\n\tthis.checkandset = function (newval) {\n\t\tif (isNaN(newval)) newval = 0;\n\t\tif (this.maxvalue != undefined && newval > this.maxvalue) newval = this.maxvalue;\n\t\tif (this.minvalue != undefined && newval < this.minvalue) newval = this.minvalue;\n\t\tthis.value = newval;\n\n\t\tvar td = this.findChild(\"thedial\");\n\t\tif (td) {\n\t\t\ttd._start = this.calcstart();\n\t\t\ttd.redraw();\n\t\t}\n\t};\n\n\tthis.updatevalue = function (delta) {\n\t\tthis.checkandset(this.basevalue - (Math.floor(delta[1] / 10) - Math.floor(delta[0] / 2)) * this.stepvalue);\n\t};\n\n\tthis.pointerstart = function (event) {\n\t\tthis.bordercolor = this.draggingbordercolor;\n\t\tthis.checkandset(this.value);\n\t\tthis.basevalue = this.value;\n\t};\n\n\tthis.pointermove = function (event) {\n\t\tthis.updatevalue(event.delta);\n\t};\n\n\tthis.pointerend = function (event) {\n\t\tif (this._focus) {\n\t\t\tthis.bordercolor = this.focusbordercolor;\n\t\t} else {\n\t\t\tthis.bordercolor = this.neutralbordercolor;\n\t\t}\n\t};\n\n\t//this.bgcolor = \"#f0f0f0\";\n\t//this.bg = 0;\n\tthis.padding = 0;\n\tthis.bordercolor = vec4(1, 1, 1, 0);\n\tthis.borderradius = 0;\n\tthis.alignself = \"flex-end\";\n\tthis.justifycontent = \"center\";\n\tthis.alignitems = \"center\";\n\tthis.borderwidth = 2;\n\n\tthis.drawtarget = 'pick';\n\n\tthis.render = function () {\n\t\treturn [view({ minwidth: this.outerradius, minheight: this.outerradius, bgcolor: NaN }, this.dial({ name: \"thedialbg\", position: \"absolute\", x: this.width / 2, y: this.height / 2, start: PI / 4, end: 2 * PI - PI / 4, bgcolor: \"#304050\", outerradius: this.outerradius, innerradius: this.innerradius }), this.dial({ name: \"thedial\", position: \"absolute\", start: PI / 4, end: 2 * PI - PI / 4, bgcolor: \"#a0b0c0\", outerradius: this.outerradius - this.offset, innerradius: this.innerradius + this.offset }))];\n\t};\n\n\tvar knob = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [knob({ alignself: 'flex-start',\n\t\t\t\tinnerradius: 70,\n\t\t\t\touterradius: 190,\n\t\t\t\tbgcolor: vec4(0, 0, 0, 1) })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/knob.js\n// module id = 61\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/knob.js?");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view) {\n\t// A simple UI label for displaying text\n\t// <br/><a href=\"/examples/text\">examples &raquo;</a>\n\n\n\tvar TypeFace = requireDreem('$system/typeface/typefaceshader');\n\n\tthis.bgcolor = vec4(\"transparent\");\n\tthis.polygonoffset = 0.0;\n\n\tthis.textstyle = function (style, tag) {\n\t\treturn style;\n\t};\n\n\tthis.attributes = {\n\t\t// the text color\n\t\tfgcolor: Config({ type: vec4, value: vec4(1, 1, 1, 1), meta: \"color\" }),\n\n\t\t// The string to display.\n\t\ttext: Config({ type: String, value: \"text\" }),\n\n\t\t// Size of the font in pixels\n\t\tfontsize: Config({ type: float, value: 18, meta: \"fontsize\" }),\n\n\t\t// the boldness of the font (try values 0 - 1)\n\t\tboldness: Config({ type: float, value: 0. }),\n\n\t\t// line spacing\n\t\tlinespacing: Config({ type: float, value: 1.0 }),\n\n\t\t// reference to the font typeface, require it with requireDreem('font:')\n\t\tfont: Config({ type: Object, value: undefined, meta: \"font\" }),\n\n\t\t// Should the text wrap around when its width has been reached?\n\t\tmultiline: Config({ type: Boolean, value: false }),\n\t\toutline: false,\n\t\toutlinethickness: 0.6,\n\t\toutlinecolor: vec4(\"black\"),\n\t\t// turn on subpixel aa, this requieres a bgcolor to be present\n\t\tsubpixel: Config({ type: Boolean, value: false }),\n\n\t\t// Alignment of the bodytext.\n\t\talign: Config({ type: Enum('left', 'right', 'center', 'justify'), value: \"left\" }),\n\t\tbold: false,\n\n\t\tbgcolor: NaN\n\t};\n\n\tthis.measure_with_cursor = false;\n\n\tthis.bold = function () {\n\t\tif (this.bold) {\n\t\t\tthis.font = requireDreem('$resources/fonts/opensans_bold_256.glf');\n\t\t} else {\n\t\t\tthis.font = requireDreem('$resources/fonts/opensans_regular_256.glf');\n\t\t}\n\t};\n\n\t// the normal font\n\tdefineDreem.class(this, 'typefacenormal', TypeFace, function () {\n\t\tthis.updateorder = 3;\n\t\tthis.draworder = 5;\n\t\tthis.subpixel = false;\n\n\t\t// set the right shaders\n\t\tthis.glyphy_mesh = this.glyphy_mesh_sdf;\n\t\tthis.glyphy_pixel = this.glyphy_sdf_draw;\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\n\t\t\tvar mesh = this.newText();\n\t\t\tif (view.font) mesh.font = view.font;\n\n\t\t\tmesh.linespacing = view.linespacing;\n\t\t\tmesh.fontsize = view.fontsize;\n\t\t\t//mesh.boldness = view.boldness\n\t\t\t//mesh.outline = view.outline;\n\t\t\t//mesh.outline_thickness = view.outline_thickness;\n\t\t\tmesh.add_y = mesh.line_height;\n\n\t\t\tmesh.align = view.align;\n\t\t\tmesh.start_x = view.padding[0];\n\t\t\tmesh.start_y = mesh.line_height + view.padding[1];\n\t\t\tmesh.clear();\n\n\t\t\tif (this.multiline) {\n\t\t\t\tmesh.addWithinWidth(view.text, maxwidth ? maxwidth : this.layout.width);\n\t\t\t} else {\n\t\t\t\tmesh.add(view.text, 0, 0, 0);\n\t\t\t}\n\t\t\tif (view.measure_with_cursor) {\n\t\t\t\tmesh.computeBounds(true);\n\t\t\t}\n\t\t\tthis.mesh = mesh;\n\t\t};\n\t});\n\n\t// the subpixel font used to render with subpixel antialiasing\n\tdefineDreem.class(this, 'typefacesubpixelaa', this.typefacenormal, function () {\n\t\tthis.glyphy_mesh = this.glyphy_mesh_sdf;\n\t\tthis.glyphy_pixel = this.glyphy_sdf_draw_subpixel_aa;\n\t\tthis.subpixel = true;\n\t\tthis.boldness = 0.6;\n\t});\n\n\tdefineDreem.class(this, 'typefaceglyphy', this.typefacenormal, function () {\n\t\tthis.glyphy_pixel = this.glyphy_atlas_draw;\n\t\tthis.glyphy_mesh = this.glyphy_mesh_atlas;\n\t});\n\n\t// the font which is set to fontsubpixelaa and fontnormal depending on the value of subpixel\n\tdefineDreem.class(this, 'typeface', this.typefacenormal, function () {});\n\tthis.typeface = true;\n\n\tthis.selectShader = function () {\n\t\tif (this._font && this._font.baked) {\n\t\t\tif (this._subpixel) {\n\t\t\t\tthis.typeface = this.typefacesubpixelaa;\n\t\t\t} else {\n\t\t\t\tthis.typeface = this.typefacenormal;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.typeface = this.typefaceglyphy;\n\t\t}\n\t};\n\n\tthis.font = function (event) {\n\t\t// DALi needs a baked font\n\t\tif (!this.font.baked && defineDreem.$platform === 'dali') this.font = requireDreem('$resources/fonts/ubuntu_monospace_ascii_baked.glf');\n\n\t\tthis.selectShader();\n\t};\n\n\tthis.subpixel = function (event) {\n\t\tthis.selectShader();\n\t};\n\n\tthis.text = function () {\n\t\tthis.relayout();\n\t};\n\n\tthis.layout = function () {};\n\n\tthis.measure = function (width) {\n\t\tvar shader = this.shaders.typeface;\n\t\tif (shader.update_dirty) {\n\t\t\tshader.update();\n\t\t\tshader.update_dirty = true;\n\t\t}\n\t\treturn {\n\t\t\twidth: this.measured_width = shader.mesh.bound_w,\n\t\t\theight: this.measured_height = shader.mesh.bound_h\n\t\t};\n\t};\n\n\tif (defineDreem.$platform === 'dali') this.font = requireDreem('$resources/fonts/ubuntu_monospace_ascii_baked.glf');else this.font = requireDreem('$resources/fonts/opensans_regular_256.glf');\n\n\tvar label = this.constructor;\n\t// A label.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [label({ text: \"I am a textlabel!\", fgcolor: \"purple\", fontsize: 30 }), label({ text: \"Label With BG Image\", margintop: 10, padding: 10, fontsize: 20, fgcolor: \"yellow\", bgimage: \"$resources/textures/purplecloud.png\", bgimagemode: \"stretch\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/label.js\n// module id = 62\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/label.js?");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view) {\n\t// internal, A simple UI label for displaying text\n\n\t//\trequireDreem(\"$fonts/arial_bold.glf\")\n\n\tvar TypeFace = requireDreem('$system/typeface/typefaceshader');\n\n\tthis.bgcolor = vec4(\"transparent\");\n\tthis.textpositionfn = function (pos, tag) {\n\t\treturn pos;\n\t};\n\tthis.polygonoffset = 0.0;\n\n\tthis.attributes = {\n\t\t// the text color\n\t\tfgcolor: Config({ type: vec4, value: vec4(1, 1, 1, 1), meta: \"color\" }),\n\n\t\t// The strings to display. Each array item should be in the form of {text:\"somestring\", pos:vec3(x,y,z), multiline:false}\n\t\tlabels: [],\n\n\t\t// Size of the font in pixels\n\t\tfontsize: Config({ type: float, value: 18, meta: \"fontsize\" }),\n\n\t\t// the boldness of the font (try values 0 - 1)\n\t\tboldness: Config({ type: float, value: 0. }),\n\n\t\t// reference to the font typeface, require it with requireDreem('font:')\n\t\tfont: Config({ type: Object, value: undefined, meta: \"font\" }),\n\n\t\t// turn on subpixel aa, this requieres a bgcolor to be present\n\t\tsubpixel: Config({ type: Boolean, value: false }),\n\n\t\t// Alignment of the bodytext.\n\t\talign: Config({ type: Enum('left', 'right', 'center', 'justify'), value: \"left\" }),\n\t\tbold: false,\n\t\toutline: true,\n\t\toutlinethickness: 0.0,\n\t\toutlinecolor: vec4(\"black\"),\n\n\t\tbgcolor: vec4(\"white\")\n\t};\n\n\tthis.measure_with_cursor = false;\n\n\tthis.bold = function () {\n\t\tif (this.bold) {\n\t\t\tthis.font = requireDreem('$resources/fonts/opensans_bold_256.glf');\n\t\t} else {\n\t\t\tthis.font = requireDreem('$resources/fonts/opensans_regular_256.glf');\n\t\t}\n\t};\n\n\tthis.textstyle = function (style, tag) {\n\t\tstyle.fgcolor = \"white\";\n\t\tstyle.outlinecolor = \"black\";\n\t\tstyle.outlinethickness = 120.0;\n\t\tstyle.outline = true;\n\t\treturn style;\n\t\t//return vec4(tag.yzw, 1.0);\n\t};\n\n\t// the normal font\n\tdefineDreem.class(this, 'typefacenormal', TypeFace, function () {\n\t\tthis.updateorder = 3;\n\t\tthis.draworder = 5;\n\t\tthis.subpixel = false;\n\n\t\t// set the right shaders\n\t\tthis.glyphy_mesh = this.glyphy_mesh_sdf;\n\t\tthis.glyphy_pixel = this.glyphy_sdf_draw;\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\n\t\t\tvar mesh = this.newText();\n\n\t\t\tif (view.font) mesh.font = view.font;\n\n\t\t\tmesh.fontsize = view.fontsize;\n\t\t\t//mesh.boldness = view.boldness\n\t\t\tmesh.add_y = mesh.line_height;\n\t\t\t//mesh.outline = view.outline;\n\t\t\t//mesh.outline_thickness = view.outline_thickness;\n\t\t\tmesh.align = view.align;\n\t\t\tmesh.start_x = view.padding[0];\n\t\t\tmesh.start_y = mesh.line_height + view.padding[1];\n\t\t\tmesh.clear();\n\n\t\t\tfor (var i = 0; i < view.labels.length; i++) {\n\t\t\t\tmesh.start_x = view.padding[0];\n\t\t\t\tmesh.start_y = mesh.line_height + view.padding[1];\n\n\t\t\t\tvar l = view.labels[i];\n\t\t\t\tvar r = 0,\n\t\t\t\t    g = 0,\n\t\t\t\t    b = 0;\n\t\t\t\tif (l.fontsize) mesh.fontsize = l.fontsize;\n\t\t\t\t//if (l.outline) mesh.outline = l.outline;\n\t\t\t\tif (l.color) {\n\t\t\t\t\tr = l.color[0], g = l.color[1], b = l.color[2];\n\t\t\t\t};\n\t\t\t\tif (l.multiline) {\n\t\t\t\t\tmesh.addWithinWidthAtPos(l.text, l.pos, maxwidth ? maxwidth : this.layout.width);\n\t\t\t\t} else {\n\t\t\t\t\tmesh.addAtPos(l.text, l.pos, r, g, b);\n\t\t\t\t}\n\t\t\t\tmesh.fontsize = view.fontsize;\n\t\t\t\tmesh.outline = view.outline;\n\t\t\t}\n\n\t\t\tif (view.measure_with_cursor) {\n\t\t\t\tmesh.computeBounds(true);\n\t\t\t}\n\n\t\t\tthis.mesh = mesh;\n\t\t};\n\t});\n\n\t// the subpixel font used to render with subpixel antialiasing\n\tdefineDreem.class(this, 'typefacesubpixelaa', this.typefacenormal, function () {\n\t\tthis.glyphy_mesh = this.glyphy_mesh_sdf;\n\t\tthis.glyphy_pixel = this.glyphy_sdf_draw_subpixel_aa;\n\t\tthis.subpixel = true;\n\t\tthis.boldness = 0.6;\n\t});\n\n\tdefineDreem.class(this, 'typefaceglyphy', this.typefacenormal, function () {\n\t\tthis.glyphy_pixel = this.glyphy_atlas_draw;\n\t\tthis.glyphy_mesh = this.glyphy_mesh_atlas;\n\t});\n\n\t// the font which is set to fontsubpixelaa and fontnormal depending on the value of subpixel\n\tdefineDreem.class(this, 'typeface', this.typefacenormal, function () {});\n\n\tthis.typeface = true;\n\n\tthis.selectShader = function () {\n\t\tif (this._font && this._font.baked) {\n\t\t\tif (this._subpixel) {\n\t\t\t\tthis.typeface = this.typefacesubpixelaa;\n\t\t\t} else {\n\t\t\t\tthis.typeface = this.typefacenormal;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.typeface = this.typefaceglyphy;\n\t\t}\n\t};\n\n\tthis.font = function (event) {\n\t\tthis.selectShader();\n\t};\n\n\tthis.subpixel = function (event) {\n\t\tthis.selectShader();\n\t};\n\n\tthis.measure = function (width) {\n\t\tif (this.shaders.typeface.update_dirty) {\n\t\t\tthis.shaders.typeface.update();\n\t\t\tthis.shaders.typeface.update_dirty = true;\n\t\t}\n\t\treturn {\n\t\t\twidth: this.measured_width = this.shaders.typeface.mesh.bound_w,\n\t\t\theight: this.measured_height = this.shaders.typeface.mesh.bound_h\n\t\t};\n\t};\n\n\tif (defineDreem.$platform === 'dali') this.font = requireDreem('$resources/fonts/ubuntu_monospace_ascii_baked.glf');else this.font = requireDreem('$resources/fonts/opensans_regular_ascii.glf');\n\n\tvar labelset = this.constructor;\n\t// A label.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [labelset({ labels: [{ text: \"I am a textlabel!\", pos: vec3(0), multiline: false }], fgcolor: \"purple\", fontsize: 30 })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/labelset.js\n// module id = 63\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/labelset.js?");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n\n\ndefineDreem.class('$ui/view', function (requireDreem) {\n\t// an implementation of https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\n\n\t// Must define N RenderPass nested classes below to match this count\n\tthis.passes = 1;\n\n\t// Each pass _must_ be named pass0..9, define based on this.passes, e.g. this.passes = 1\n\t// must define pass0, 2 must define pass0 and pass1...\n\tdefineDreem.class(this, \"pass0\", this.RenderPass, function () {\n\t\t// set to true to use floating point textures on this pass\n\t\tthis.usefloat = true;\n\t\t// Turn on double-buffering since we want to feed pass0 back into itself\n\t\tthis.doublebuffer = true;\n\t\t// define the color to return in this pass\n\n\t\tthis.isAlive = function (pos) {\n\t\t\treturn this.pass0.pixel(pos).r >= 0.7;\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\t// this makes the shader redraw each frame, allowing loopback between the double\n\t\t\t// buffers in pass0\n\t\t\tvar time = view.time;\n\n\t\t\t// convert position floats to pixels\n\t\t\tvar x = mesh.x * view.layout.width;\n\t\t\tvar y = mesh.y * view.layout.height;\n\n\t\t\t// account for the pixel ratio\n\t\t\tx *= this.pass0.ratio;\n\t\t\ty *= this.pass0.ratio;\n\n\t\t\t// if this is the first time, read from the framebuffer instead of from our last pass\n\t\t\tif (this.drawcount == 1.) {\n\t\t\t\treturn this.framebuffer.pixel(vec2(x, y));\n\t\t\t\t// or start out with noise\n\t\t\t\treturn vec4(noise.cheapnoise(mesh.xy));\n\t\t\t}\n\n\t\t\t// count number of neighbors\n\t\t\tvar neighbors = 0;\n\t\t\tif (this.isAlive(vec2(x - 1, y - 1))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x - 1, y))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x - 1, y + 1))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x, y - 1))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x, y + 1))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x + 1, y - 1))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x + 1, y))) neighbors++;\n\t\t\tif (this.isAlive(vec2(x + 1, y + 1))) neighbors++;\n\n\t\t\t// are we alive?\n\t\t\tvar color = this.pass0.pixel2(x, y);\n\t\t\tif (color.r >= 0.7) {\n\t\t\t\tcolor = 'white';\n\t\t\t\t// Any live cell with two or three live neighbours lives on to the next generation.\n\t\t\t\tif (neighbors < 2) {\n\t\t\t\t\t// Any live cell with fewer than two live neighbours dies, as if caused by under-population.\n\t\t\t\t\tcolor = vec4(.59, 0, 1., 1.);\n\t\t\t\t} else if (neighbors > 3) {\n\t\t\t\t\t// Any live cell with more than three live neighbours dies, as if by over-population.\n\t\t\t\t\tcolor = vec4(.59, 0, 1., 1.);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (neighbors == 3) {\n\t\t\t\t\t// Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\n\t\t\t\t\tcolor = 'white';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// fade colors over time\n\t\t\tif (color.g > .001) {\n\t\t\t\tcolor.g -= .004;\n\t\t\t}\n\t\t\tif (color.b > .001) {\n\t\t\t\tcolor.b -= .002;\n\t\t\t}\n\t\t\tif (color.r > .001 && color.r < .7) {\n\t\t\t\tcolor.r -= .002;\n\t\t\t}\n\n\t\t\treturn color;\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/lifeview.js\n// module id = 64\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/lifeview.js?");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class(function (requireDreem, $ui$, view, label, menubutton) {\n\n\tthis.bgcolor = \"#585858\";\n\tthis.flexdirection = \"row\";\n\t//this.dropshadowradius = 20;\n\t//this.dropshadowopacity = 0.3;\n\t//this.dropshadowhardness = 0;\n\tthis.attributes = {\n\t\terrortext: \"\",\n\t\tinfotext: \"\",\n\t\tstatustext: \"\",\n\t\tmenus: []\n\t};\n\n\tthis.onstatustext = function () {\n\t\tif (this.statustext && this.statustext.length > 0) {\n\t\t\tthis.setTimeout(function () {\n\t\t\t\tthis.statustext = \"\";\n\t\t\t}.bind(this), 4000);\n\t\t}\n\t};\n\n\tthis.render = function () {\n\t\tif (!this.menus) return [];\n\n\t\tvar mres = [];\n\n\t\tfor (var m in this.menus) {\n\t\t\tvar res = [];\n\t\t\tvar menu = this.menus[m];\n\t\t\tmres.push(menubutton({\n\t\t\t\tbgcolor: \"#585858\",\n\t\t\t\thovercolor1: \"#737373\",\n\t\t\t\thovercolor2: \"#737373\",\n\t\t\t\tbold: false,\n\n\t\t\t\tborderwidth: 0,\n\t\t\t\tborderradius: 8,\n\t\t\t\tmargin: vec4(4, 0, 0, 0),\n\t\t\t\tpadding: 5,\n\t\t\t\ttext: menu.name,\n\t\t\t\tcommands: menu.commands,\n\t\t\t\tclick: function click() {\n\t\t\t\t\t// lets open a modal dialog\n\t\t\t\t\tthis.screen.contextMenu(this.commands, this.layout.absx, this.layout.absy + this.layout.height);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tvar labelres = [];\n\t\tif (this.errortext && this.errortext.length > 0 && this.errortext !== \"undefined\") {\n\t\t\tlabelres.push(label({ margin: vec4(13, 0, 0, 0), text: \"ERROR\", bold: true, fgcolor: \"#e05f21\", alignself: \"center\", bgcolor: NaN }));\n\t\t\tlabelres.push(label({ margin: vec4(3, 0, 3, 0), text: this.errortext, fgcolor: \"#e05f21\", alignself: \"center\", bgcolor: NaN }));\n\t\t}\n\t\tif (this.infotext && this.infotext.length > 0 && this.infotext !== \"undefined\") {\n\t\t\tlabelres.push(label({ margin: vec4(13, 0, 0, 0), text: \"INFO\", bold: true, fgcolor: \"white\", alignself: \"center\", bgcolor: NaN }));\n\t\t\tlabelres.push(label({ margin: vec4(3, 0, 3, 0), text: this.infotext, fgcolor: \"white\", alignself: \"center\", bgcolor: NaN }));\n\t\t}\n\t\tif (this.statustext && this.statustext.length > 0 && this.statustext !== \"undefined\") {\n\t\t\tlabelres.push(label({ margin: vec4(13, 0, 4, 0), text: this.statustext, fgcolor: \"#d0d0d0\", alignself: \"center\", bgcolor: NaN }));\n\t\t}\n\t\treturn view({ bgcolor: NaN, flex: 1, justifycontent: \"space-between\" }, view({ bgcolor: NaN, alignself: \"center\" }, mres), view({ bgcolor: NaN, alignself: \"center\" }, labelres));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/menubar.js\n// module id = 65\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/menubar.js?");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/button', function (requireDreem, $ui$, textbox, label, view) {\n\n\tthis.attributes = {\n\t\tcommands: []\n\t};\n\tthis.oninit = function () {\n\t\tthis.buttoncolor1 = this.bgcolor;\n\t\tthis.buttoncolor2 = this.bgcolor;\n\t};\n\tthis.borderwidth = 0;\n\tthis.borderradius = 0;\n\tthis.padding = 4;\n\tthis.render = function () {\n\t\tvar res = [];\n\t\tthis.buttonres = undefined;\n\t\tthis.iconres = undefined;\n\n\t\tif (this.icon && this.icon.length > 0) {\n\t\t\tthis.iconres = icon({ alignself: \"center\", fgcolor: this.textcolor, bgcolor: NaN, icon: this.icon });\n\t\t\tres.push(this.iconres);\n\t\t}\n\n\t\tif (this.text && this.text.length > 0) {\n\t\t\tthis.buttonres = label({ alignself: \"center\", bgcolor: NaN, fgcolor: this.textcolor, position: \"relative\", text: this.text });\n\t\t\tres.push(this.buttonres);\n\t\t}\n\n\t\treturn view({ bgcolor: NaN, margin: this.internalmargin, alignitems: \"center\", flexdirection: \"row\", justifycontent: \"center\" }, res);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/menubutton.js\n// module id = 66\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/menubutton.js?");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (view, label) {\n\n\tthis.flex = 1;\n\tthis.flexdirection = \"column\";\n\tthis.alignitem = \"stretch\";\n\tthis.alignself = \"stretch\";\n\n\tthis.attributes = {\n\t\tglowcolor: Config({ type: vec4, value: vec4(\"#404040\"), meta: \"color\" }),\n\t\tedgecolor: Config({ type: vec4, value: vec4(\"#5b5b5b\"), meta: \"color\" })\n\n\t\t//this.bgcolor = vec4(\"white\")\n\n\t\t// Noisegrid shader - uses a slight gradient with minute noise to prevent banding.\n\t};this.bgcolorfn = function (a) {\n\t\tvar dist2 = vec2(0.5, 1.0) - a.xy;\n\t\tvar N = noise.cheapnoise(gl_FragCoord.xy * 0.08) * 0.3;\n\t\treturn mix(glowcolor, edgecolor, N + 1.0 - length(a.y));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/noisegrid.js\n// module id = 67\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/noisegrid.js?");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, textbox, label, button) {\n\t// Simple numberbox: a number with a plus and a minus button\n\n\tthis.attributes = {\n\t\tvalue: Config({ type: float, value: 0 }),\n\t\tminvalue: Config({ type: float, value: undefined }),\n\t\tmaxvalue: Config({ type: float, value: undefined }),\n\t\tstepvalue: Config({ type: float, value: 1 }),\n\t\tbordercolor: Config({ motion: \"easeout\", duration: 0.1, value: \"#262626\", meta: \"color\" }),\n\t\tdraggingbordercolor: Config({ type: vec4, value: vec4(\"#707070\"), meta: \"color\" }),\n\t\tfocusbordercolor: Config({ type: vec4, value: vec4(\"#606060\"), meta: \"color\" }),\n\t\tdecimals: Config({ type: int, value: 0 }),\n\t\t// Font size in device-pixels.\n\t\tfontsize: Config({ type: float, value: 14, meta: \"fontsize\" }),\n\t\ttitle: Config({ type: String, value: \"\" }),\n\n\t\t//internal\n\t\ttextfocus: Config({ type: boolean })\n\t};\n\n\tthis.tabstop = 0;\n\tthis.bordercolor = \"#262626\";\n\tthis.borderradius = 4;\n\tthis.borderwidth = 2;\n\tthis.fgcolor = \"#f0f0f0\";\n\tthis.bgcolor = \"#3b3b3b\";\n\n\tthis.alignself = \"flex-end\";\n\tthis.justifycontent = \"center\";\n\tthis.alignitems = \"center\";\n\n\tthis.onvalue = function () {\n\n\t\tvar expo = Math.pow(10, this.decimals);\n\t\tthis._value = Math.round(this.value * expo) / expo;\n\n\t\tvar tn = this.findChild(\"thenumber\");\n\t\tif (tn) {\n\t\t\ttn.text = this._value.toString();\n\t\t\tthis.relayout();\n\t\t}\n\t};\n\n\tthis.keydownUparrow = function () {\n\t\tthis.checkandset(this.value + this.stepvalue);\n\t};\n\tthis.keydownDownarrow = function () {\n\t\tthis.checkandset(this.value - this.stepvalue);\n\t};\n\tthis.keydownRightarrow = function () {\n\t\tthis.checkandset(this.value + this.stepvalue * 100);\n\t};\n\tthis.keydownLeftarrow = function () {\n\t\tthis.checkandset(this.value - this.stepvalue * 100);\n\t};\n\n\tthis.keydownUparrowShift = function () {\n\t\tthis.checkandset(this.value + this.stepvalue * 10);\n\t};\n\tthis.keydownDownarrowShift = function () {\n\t\tthis.checkandset(this.value - this.stepvalue * 10);\n\t};\n\tthis.keydownRightarrowShift = function () {\n\t\tthis.checkandset(this.value + this.stepvalue * 1000);\n\t};\n\tthis.keydownLeftarrowShift = function () {\n\t\tthis.checkandset(this.value - this.stepvalue * 1000);\n\t};\n\n\tthis.init = function () {\n\t\tthis.neutralbordercolor = this.bordercolor;\n\t};\n\n\tthis.keydown = function (v) {\n\t\tthis.defaultKeyboardHandler(v);\n\t};\n\n\tthis.focus = function (newfocus) {\n\t\tif (this._focus) {\n\t\t\tthis.bordercolor = this.focusbordercolor;\n\t\t} else {\n\t\t\tthis.bordercolor = this.neutralbordercolor;\n\t\t}\n\t};\n\n\tthis.checkandset = function (newval) {\n\n\t\tif (isNaN(newval)) newval = 0;\n\n\t\tif (this.maxvalue != undefined && newval > this.maxvalue) newval = this.maxvalue;\n\t\tif (this.minvalue != undefined && newval < this.minvalue) newval = this.minvalue;\n\t\tvar expo = Math.pow(10, this.decimals);\n\t\tthis.value = Math.round(newval * expo) / expo;\n\t\tnb = this.findChild(\"thenumber\");\n\t\tif (nb) nb.value = this.value.toString();\n\t};\n\n\tthis.upclick = function () {\n\t\tthis.checkandset(this.value + this.stepvalue);\n\t};\n\n\tthis.downclick = function () {\n\t\tthis.checkandset(this.value - this.stepvalue);\n\t};\n\n\tthis.pointerstart = function () {\n\t\tthis.bordercolor = this.draggingbordercolor;\n\t\tthis.checkandset(this.value);\n\t\tthis.basevalue = this.value;\n\t};\n\n\tthis.pointermove = function (event) {\n\t\tthis.checkandset(this.basevalue + (Math.floor(event.delta[0] / 2) - Math.floor(event.delta[1] / 10)) * this.stepvalue);\n\t};\n\n\tthis.pointerend = function () {\n\t\tif (this._focus) {\n\t\t\tthis.bordercolor = this.focusbordercolor;\n\t\t} else {\n\t\t\tthis.bordercolor = this.neutralbordercolor;\n\t\t}\n\t};\n\n\tthis.justifycontent = \"space-around\";\n\n\tthis.render = function () {\n\t\tvar _button, _button2;\n\n\t\tvar res = [];\n\n\t\tif (this.title && this.title.length > 0) {\n\t\t\tres.push(view({ alignitems: \"center\", justifycontent: \"center\", bgcolor: this.bordercolor, bordercolor: this.bordercolor, margin: 0, borderradius: vec4(1, 1, 1, 1), borderwidth: 1, padding: 0 }, label({ name: \"thetitle\", align: \"right\", alignself: \"center\", margin: vec4(5, 0, 5, 0), bgcolor: NaN, text: this.title, flex: 1, fontsize: this.fontsize, fgcolor: this.fgcolor })));\n\t\t}\n\n\t\tres.push(button((_button = { margin: vec4(4, 0, 4, 0), alignself: \"center\", bgcolor: this.bgcolor, fgcolor: this.fgcolor, borderwidth: 0, icon: \"chevron-left\" }, _defineProperty(_button, \"bgcolor\", \"#3b3b3b\"), _defineProperty(_button, \"text\", \"\"), _defineProperty(_button, \"fontsize\", this.fontsize * (2 / 3)), _defineProperty(_button, \"padding\", 4), _defineProperty(_button, \"borderradius\", 0), _defineProperty(_button, \"click\", function () {\n\t\t\tthis.downclick();\n\t\t}.bind(this)), _button)));\n\t\tres.push(textbox({\n\t\t\tmargin: vec4(4, 0, 4, 0),\n\t\t\talignself: \"center\",\n\t\t\tpadding: 0,\n\t\t\tbgcolor: \"white\",\n\t\t\thardrect: { pickonly: true },\n\t\t\tname: \"thenumber\",\n\t\t\talign: \"right\",\n\t\t\tvalue: this._value.toString(),\n\t\t\tflex: 1,\n\t\t\tfontsize: this.fontsize,\n\t\t\tfgcolor: this.fgcolor,\n\t\t\tmultiline: false,\n\t\t\tonfocus: function (ev, v, o) {\n\t\t\t\tthis.textfocus = v;\n\t\t\t}.bind(this),\n\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\tvar txval = parseFloat(o.value);\n\t\t\t\tif (!isNaN(txval)) {\n\t\t\t\t\tif (Math.abs(this.value - txval) >= 0.01) {\n\t\t\t\t\t\tthis.value = txval;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this)\n\t\t}));\n\t\tres.push(button((_button2 = { margin: vec4(4, 0, 4, 0), alignself: \"center\", bgcolor: this.bgcolor, fgcolor: this.fgcolor, borderwidth: 0, text: \"\", icon: \"chevron-right\" }, _defineProperty(_button2, \"bgcolor\", \"#3b3b3b\"), _defineProperty(_button2, \"fontsize\", this.fontsize * (2 / 3)), _defineProperty(_button2, \"padding\", 4), _defineProperty(_button2, \"borderradius\", 0), _defineProperty(_button2, \"click\", function () {\n\t\t\tthis.upclick();\n\t\t}.bind(this)), _button2)));\n\t\treturn res;\n\t};\n\n\tvar numberbox = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [numberbox({ alignself: 'flex-start' })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/numberbox.js\n// module id = 68\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/numberbox.js?");

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/button', function (exports, $ui$, icon, label) {\n\t// Similar to a button, but carries a `group` and a selection state, and only one `radiobutton` per group can be seelcted at any one time.\n\t// <br/><a href=\"/examples/buttons\">examples &raquo;</a>\n\n\texports.groups = {};\n\texports.clearSelection = function (group) {\n\t\tif (group) {\n\t\t\tvar current = this.groups[group];\n\t\t\tif (current) {\n\t\t\t\tdelete this.groups[group];\n\t\t\t\tcurrent.selected = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.groups = {};\n\t\t}\n\t};\n\texports.select = function (group, value) {\n\t\tthis.clearSelection(group);\n\t\tthis.groups[group] = value;\n\t\tvalue.selected = true;\n\t};\n\n\tthis.attributes = {\n\t\t// The radiobutton group.  Only one button per group can be selected at any one time.  Radio buttons without a specificed group all share a default group.\n\t\tgroup: \"default\",\n\n\t\t// The current seelction state of the button\n\t\tselected: false,\n\n\t\t// Color of the label text in pressed-down state\n\t\ttextselectedcolor: Config({ meta: \"color\", type: vec4, value: vec4(\"yellow\") }),\n\n\t\t// First gradient color for the button background in selected state\n\t\tselectedcolor1: Config({ meta: \"color\", type: vec4, value: vec4(\"#888\") }),\n\n\t\t// Second gradient color for the button background in selected state\n\t\tselectedcolor2: Config({ meta: \"color\", type: vec4, value: vec4(\"#AAA\") })\n\t};\n\n\tthis.buildIconRes = function () {\n\t\treturn icon({\n\t\t\tdrawtarget: \"color\",\n\t\t\tfgcolor: this.selected ? this.textselectedcolor : this.textcolor,\n\t\t\tfontsize: this.fontsize,\n\t\t\ticon: this.icon\n\t\t});\n\t};\n\n\tthis.buildButtonRes = function (iconres) {\n\t\treturn label({\n\t\t\tdrawtarget: \"color\",\n\t\t\tmarginleft: iconres ? this.iconmargin : 0,\n\t\t\tfontsize: this.fontsize,\n\t\t\tfgcolor: this.selected ? this.textselectedcolor : this.textcolor,\n\t\t\ttext: this.text\n\t\t});\n\t};\n\n\tthis.init = function () {\n\t\tif (this.selected) {\n\t\t\tthis.constructor.select(this.group, this);\n\t\t}\n\t};\n\n\tthis.onselected = function () {\n\t\tthis.statenormal();\n\t};\n\n\t// the hover state when someone hovers over the button\n\tthis.statehover = function () {\n\t\tthis.shadowopacity = 1.0;\n\t\tthis.col1 = this.hovercolor1;\n\t\tthis.col2 = this.hovercolor2;\n\t\tthis.setTextColor(this.selected ? this.textselectedcolor : this.textactivecolor);\n\t};\n\n\t// the normal button state\n\tthis.statenormal = function (first) {\n\t\tthis.shadowopacity = 0.0;\n\t\tthis.col1 = Mark(this.selected ? this.selectedcolor1 : this.buttoncolor1, first);\n\t\tthis.col2 = Mark(this.selected ? this.selectedcolor2 : this.buttoncolor2, first);\n\t\tthis.setTextColor(this.selected ? this.textselectedcolor : this.textcolor);\n\t};\n\n\tthis.click = function () {\n\t\tthis.constructor.select(this.group, this);\n\t};\n\n\tvar radiobutton = this.constructor;\n\t// Basic usage of the radiobutton.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [radiobutton({ group: \"a\", text: \"Group A - Press me!\", selected: true }), radiobutton({ group: \"a\", text: \"Group A - Colored!\", buttoncolor1: \"red\", buttoncolor2: \"blue\", labelcolor: \"white\" }), radiobutton({ group: \"a\", text: \"Group A - With an icon!\", icon: \"flask\" }), radiobutton({ group: \"b\", text: \"Group B - Press me!\", selected: true, margintop: 20 }), radiobutton({ group: \"b\", text: \"Group B - Colored!\", buttoncolor1: \"red\", buttoncolor2: \"blue\", labelcolor: \"white\" }), radiobutton({ group: \"b\", text: \"Group B - With an icon!\", icon: \"flask\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/radiobutton.js\n// module id = 69\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/radiobutton.js?");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, menubutton) {\n\t// Screens are the root of a view hierarchy, typically mapping to a physical device.\n\n\tvar Render = requireDreem('$system/base/render');\n\tvar Animate = requireDreem('$system/base/animate');\n\tvar ASTScanner = requireDreem('$system/parse/astscanner');\n\n\tthis.attributes = {\n\t\t// internal, the locationhash is a parsed JS object version of the #var2=1;var2=2 url arguments\n\t\tlocationhash: Config({ type: Object, value: {} }),\n\t\t// when the browser comes out of standby it fires wakup event\n\t\twakeup: Config({ type: Event }),\n\t\tstatus: \"\",\n\t\tglobalkeydown: Config({ type: Event }),\n\t\tglobalkeyup: Config({ type: Event }),\n\t\tglobalkeypress: Config({ type: Event }),\n\t\tglobalkeypaste: Config({ type: Event }),\n\t\tglobalpointerstart: Config({ type: Event }),\n\t\tglobalpointermove: Config({ type: Event }),\n\t\tglobalpointerend: Config({ type: Event }),\n\t\tglobalpointertap: Config({ type: Event }),\n\t\tglobalpointerhover: Config({ type: Event }),\n\t\tglobalpointerover: Config({ type: Event }),\n\t\tglobalpointerout: Config({ type: Event }),\n\t\tglobalpointerwheel: Config({ type: Event }),\n\t\tglobalpointermultimove: Config({ type: Event })\n\t};\n\n\tthis.bgcolor = NaN;\n\n\tthis.rpcproxy = false;\n\tthis.viewport = '2d';\n\tthis.dirty = true;\n\tthis.flex = NaN;\n\tthis.flexdirection = \"column\";\n\tthis.cursor = 'arrow';\n\n\tthis.tooltip = 'Application';\n\n\tthis.atConstructor = function () {};\n\n\tthis.oninit = function () {\n\t\t// ok. lets bind inputs\n\t\tthis.modal_stack = [];\n\t\tthis.focus_view = undefined;\n\t\tthis.keyboard = this.device.keyboard;\n\t\tthis.pointer = this.device.pointer;\n\t\tthis.midi = this.device.midi;\n\t\tthis.bindInputs();\n\t};\n\n\t// TODO(aki): move menu into a configurable component.\n\t// internal, display a classic \"rightclick\" or \"dropdown\" menu at position x,y - if no x,y is provided, last pointer coordinates will be substituted instead.\n\tthis.contextMenu = function (commands, x, y) {\n\t\tthis.openModal(function () {\n\t\t\tvar res = [];\n\t\t\tfor (var a in commands) {\n\t\t\t\tvar c = commands[a];\n\t\t\t\t//console.log(\"menucommand: \", c)\n\t\t\t\tvar act = c.clickaction;\n\t\t\t\tif (!act && c.commands) {\n\t\t\t\t\tact = function act() {\n\t\t\t\t\t\tconsole.log(\"opening submenu?\");\n\t\t\t\t\t\tconsole.log(this.constructor.name, this.layout);\n\t\t\t\t\t\tthis.screen.contextMenu(this.commands, this.layout.absx + this.layout.width, this.layout.absy);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tres.push(menubutton({\n\t\t\t\t\tpadding: vec4(5),\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tborderradius: 6,\n\t\t\t\t\tbold: false,\n\t\t\t\t\ttext: c.name,\n\n\t\t\t\t\tbgcolor: \"#a3a3a3\",\n\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\thovercolor1: \"#737373\",\n\t\t\t\t\thovercolor2: \"#737373\",\n\t\t\t\t\tbuttoncolor2: \"#a3a3a3\",\n\t\t\t\t\ttextcolor: \"#3b3b3b\",\n\t\t\t\t\ttextactivecolor: \"white\",\n\t\t\t\t\tclickaction: act,\n\t\t\t\t\tcommands: c.commands,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\tvar close = false;\n\t\t\t\t\t\tif (this.clickaction) close = this.clickaction();\n\t\t\t\t\t\tif (!close) this.screen.closeModal(true);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\treturn view({ bgcolor: \"#a3a3a3\", flexdirection: \"column\",\n\t\t\t\tdropshadowopacity: 0.4,\n\t\t\t\tpadding: 4,\n\t\t\t\tdropshadowhardness: 0,\n\t\t\t\tdropshadowradius: 20,\n\t\t\t\tdropshadowoffset: vec2(9, 9),\n\t\t\t\tborderradius: 7,\n\t\t\t\tonfocuslost: function onfocuslost() {\n\t\t\t\t\tthis.screen.closeModal(false);\n\t\t\t\t},\n\t\t\t\tinit: function init() {},\n\t\t\t\tpos: [x, y],\n\t\t\t\tsize: [300, NaN], position: 'absolute'\n\t\t\t}, res);\n\t\t}).then(function (result) {});\n\t};\n\n\tthis.walkTree = function (view) {\n\t\tvar found;\n\t\tfunction dump(walk, parent) {\n\t\t\tvar layout = walk.layout || {};\n\t\t\tvar named = new Function(\"return function \" + (walk.name || walk.constructor.name) + '(){}')();\n\t\t\tObject.defineProperty(named.prototype, 'zflash', {\n\t\t\t\tget: function get() {\n\t\t\t\t\t// humm. ok so we wanna flash it\n\t\t\t\t\t// how do we do that.\n\t\t\t\t\twindow.view = this.view;\n\t\t\t\t\treturn \"window.view set\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar obj = new named();\n\t\t\tobj.geom = 'x:' + layout.left + ', y:' + layout.top + ', w:' + layout.width + ', h:' + layout.height;\n\t\t\tif (walk._viewport) obj.viewport = walk._viewport;\n\t\t\t// write out shader modes\n\t\t\tvar so = '';\n\t\t\tfor (var key in walk.shaders) {\n\t\t\t\tif (so) so += \", \";\n\t\t\t\tso += key; //+':'+walk.shader_order[key]\n\t\t\t}\n\t\t\tobj.shaders = so;\n\t\t\tobj.view = walk;\n\n\t\t\tif (walk._text) obj.text = walk.text;\n\n\t\t\tif (walk === view) found = obj;\n\t\t\tif (walk.children) {\n\t\t\t\t//obj.children = []\n\t\t\t\tfor (var i = 0; i < walk.children.length; i++) {\n\t\t\t\t\tobj[i] = dump(walk.children[i], obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj._parent = parent;\n\t\t\treturn obj;\n\t\t}\n\t\tdump(this, null);\n\t\treturn found;\n\t};\n\n\t// pick a view at the pointer coordinate and console.log its structure\n\tthis.debugPick = function (x, y) {\n\t\tthis.device.pickScreen(x, y).then(function (msg) {\n\t\t\tvar view = msg.view;\n\t\t\tif (this.last_debug_view === view) return;\n\t\t\tthis.last_debug_view = view;\n\t\t\tconsole.log(this.walkTree(view));\n\t\t}.bind(this));\n\t};\n\n\t// internal, bind all keyboard/pointer inputs for delegating it into the view tree\n\tthis.bindInputs = function () {\n\t\tthis.keyboard.down = function (v) {\n\t\t\tthis.emit('globalkeydown', v);\n\t\t\tif (!this.focus_view) return;\n\t\t\tif (!this.inModalChain(this.focus_view)) return;\n\t\t\tthis.focus_view.emitUpward('keydown', v);\n\t\t}.bind(this);\n\n\t\tthis.keyboard.up = function (v) {\n\t\t\tthis.emit('globalkeyup', v);\n\t\t\tif (!this.focus_view) return;\n\t\t\tif (!this.inModalChain(this.focus_view)) return;\n\t\t\tthis.focus_view.emitUpward('keyup', v);\n\t\t}.bind(this);\n\n\t\tthis.keyboard.press = function (v) {\n\t\t\tthis.emit('globalkeypress', v);\n\t\t\t// lets reroute it to the element that has focus\n\t\t\tif (!this.focus_view) return;\n\t\t\tif (!this.inModalChain(this.focus_view)) return;\n\t\t\tthis.focus_view.emitUpward('keypress', v);\n\t\t}.bind(this);\n\n\t\tthis.keyboard.paste = function (v) {\n\t\t\tthis.emit('globalkeypaste', v);\n\t\t\t// lets reroute it to the element that has focus\n\t\t\tif (!this.focus_view) return;\n\t\t\tif (!this.inModalChain(this.focus_view)) return;\n\t\t\tthis.focus_view.emitUpward('keypaste', v);\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.start` event.\n\t\t// Emits `pointerstart` event from `pointer.view` and computes the cursor.\n\t\tthis.pointer.start = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerstart', e);\n\t\t\t\te.view.emitUpward('pointerstart', e.pointer);\n\t\t\t\te.view.computeCursor();\n\t\t\t\tif (this.inModalChain(e.view)) {\n\t\t\t\t\tthis.setFocus(e.view);\n\t\t\t\t} else if (this.modal) {\n\t\t\t\t\tthis.modal.emitUpward('focuslost', { global: e.pointer.position });\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.move` event.\n\t\t// Emits `pointermove` event from `pointer.view`.\n\t\tthis.pointer.move = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointermove', e);\n\t\t\t\te.view.emitUpward('pointermove', e.pointer);\n\t\t\t} else if (e.pointers) {\n\t\t\t\tthis.emit('globalpointermultimove', e);\n\t\t\t\te.view.emitUpward('pointermultimove', e.pointers);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.end` event.\n\t\t// Emits `pointerend` event `pointer.view` and computes the cursor.\n\t\tthis.pointer.end = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerend', e);\n\t\t\t\te.view.emitUpward('pointerend', e.pointer);\n\t\t\t\te.view.computeCursor();\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.tap` event.\n\t\t// Emits `pointertap` event from `pointer.view`.\n\t\tthis.pointer.tap = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointertap', e);\n\t\t\t\te.view.emitUpward('pointertap', e.pointer);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.hover` event.\n\t\t// Emits `pointerhover` event `pointer.view` and computes the cursor.\n\t\tthis.pointer.hover = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerhover', e);\n\n\t\t\t\te.view.emitUpward('pointerhover', e.pointer);\n\t\t\t\te.view.computeCursor();\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.over` event.\n\t\t// Emits `pointerover` event from `pointer.view`.\n\t\tthis.pointer.over = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerover', e);\n\t\t\t\te.view.emitUpward('pointerover', e.pointer);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.out` event.\n\t\t// Emits `pointerout` event from `pointer.view`.\n\t\tthis.pointer.out = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerout', e);\n\t\t\t\te.view.emitUpward('pointerout', e.pointer);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Event handler for `pointer.wheel` event.\n\t\t// Emits `pointerwheel` event from `pointer.view`.\n\t\tthis.pointer.wheel = function (e) {\n\t\t\tif (e.pointer) {\n\t\t\t\tthis.emit('globalpointerwheel', e);\n\t\t\t\te.view.emitUpward('pointerwheel', e.pointer);\n\t\t\t}\n\t\t}.bind(this);\n\t};\n\n\t// set the focus to a view node\n\tthis.setFocus = function (view) {\n\t\tif (this.focus_view !== view) {\n\t\t\tvar old = this.focus_view;\n\t\t\tthis.focus_view = view;\n\t\t\tif (old) old.focus = Mark(false);\n\t\t\tview.focus = Mark(true);\n\t\t}\n\t};\n\n\t// internal, focus the next view from view\n\tthis.focusNext = function (view) {\n\t\t// continue the childwalk.\n\t\tvar screen = this,\n\t\t    found;\n\t\tfunction findnext(node, find) {\n\t\t\tfor (var i = 0; i < node.children.length; i++) {\n\t\t\t\tvar view = node.children[i];\n\t\t\t\tif (view === find) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if (!isNaN(view.tabstop) && found) {\n\t\t\t\t\tscreen.setFocus(view);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (findnext(view, find)) return true;\n\t\t\t}\n\t\t}\n\n\t\tif (!findnext(this, view)) {\n\t\t\tfound = true;\n\t\t\tfindnext(this);\n\t\t}\n\t};\n\n\t// internal, focus the previous view from view\n\tthis.focusPrev = function (view) {\n\t\tvar screen = this,\n\t\t    last;\n\t\tfunction findprev(node, find) {\n\t\t\tfor (var i = 0; i < node.children.length; i++) {\n\t\t\t\tvar view = node.children[i];\n\t\t\t\tif (find && view === find) {\n\t\t\t\t\tif (last) {\n\t\t\t\t\t\tscreen.setFocus(last);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!isNaN(view.tabstop)) {\n\t\t\t\t\tlast = view;\n\t\t\t\t}\n\t\t\t\tif (findprev(view, find)) return true;\n\t\t\t}\n\t\t}\n\t\tif (!findprev(this, view)) {\n\t\t\tfindprev(this);\n\t\t\tif (last) screen.setFocus(last);\n\t\t}\n\t};\n\n\t// Modal handling\n\n\t// internal, check if a view is in the modal chain\n\tthis.inModalChain = function (view) {\n\t\tif (!view) return false;\n\t\tif (!this.modal_stack.length) return true;\n\n\t\tvar last = this.modal_stack[this.modal_stack.length - 1];\n\t\t// lets check if any parent of node hits last\n\t\tvar obj = view;\n\t\twhile (obj) {\n\t\t\tif (obj === last) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj.parent;\n\t\t}\n\t\treturn false;\n\t};\n\n\t// open a modal window from object like so: this.openModal( view({size:[100,100]}))\n\tthis.closeModal = function (value) {\n\t\t// lets close the modal window\n\t\tvar modal_stack = this.modal_stack;\n\n\t\tvar mymodal = modal_stack.pop();\n\t\tif (!mymodal) return;\n\n\t\tvar id = this.screen.children.indexOf(mymodal);\n\t\tthis.screen.children.splice(id, 1);\n\n\t\tthis.modal = modal_stack[modal_stack.length - 1];\n\n\t\tmymodal.emitRecursive(\"destroy\");\n\n\t\tthis.redraw();\n\n\t\tmymodal.resolve(value);\n\t};\n\n\tthis.openModal = function (render) {\n\t\tvar prom = new Promise(function (resolve, reject) {\n\t\t\t// wrap our render function in a temporary view\n\t\t\tvar vroot = view();\n\t\t\t// set up stuff\n\t\t\tvroot.render = render;\n\t\t\tvroot.parent = this;\n\t\t\tvroot.screen = this;\n\t\t\tvroot.rpc = this.rpc;\n\t\t\tvroot.parent_viewport = this;\n\t\t\t// render it\n\t\t\tRender.process(vroot, undefined, undefined, true);\n\n\t\t\tvar mychild = vroot.children[0];\n\t\t\t//console.log(mychild)\n\t\t\tthis.children.push(mychild);\n\t\t\tmychild.parent = this;\n\t\t\tmychild.resolve = resolve;\n\t\t\tthis.modal_stack.push(mychild);\n\t\t\tthis.modal = mychild;\n\n\t\t\t// lets cause a relayout\n\t\t\tthis.relayout();\n\t\t}.bind(this));\n\t\treturn prom;\n\t};\n\n\t// open an overlay\n\tthis.openOverlay = function (render) {\n\t\tvar vroot = view();\n\t\t// set up stuff\n\t\tvroot.render = render;\n\t\tvroot.parent = this;\n\t\tvroot.screen = this;\n\t\tvroot.rpc = this.rpc;\n\t\tvroot.parent_viewport = this;\n\t\t// render it\n\t\tRender.process(vroot, undefined, undefined, true);\n\n\t\tvar mychild = vroot.children[0];\n\t\t//console.log(mychild)\n\t\tthis.children.push(mychild);\n\t\tmychild.parent = this;\n\t\tthis.relayout();\n\t\t// close function\n\t\tmychild.closeOverlay = function () {\n\t\t\tvar idx = this.parent.children.indexOf(this);\n\t\t\tif (idx == -1) return;\n\t\t\tthis.parent.children.splice(idx, 1);\n\t\t\tthis.parent.relayout();\n\t\t};\n\n\t\treturn mychild;\n\t};\n\n\t// animation\n\n\t// internal, start an animation, delegated from view\n\tthis.startAnimationRoot = function (obj, key, value, track, resolve) {\n\t\t// ok so. if we get a config passed in, we pass that in\n\t\tvar config = obj.getAttributeConfig(key);\n\n\t\tvar first = obj['_' + key];\n\n\t\tvar anim = new Animate(config, obj, key, track, first, value);\n\t\tanim.resolve = resolve;\n\t\tvar animkey = obj.getViewGuid() + '_' + key;\n\t\tthis.anims[animkey] = anim;\n\t\tobj.redraw();\n\t\treturn true;\n\t};\n\n\t// internal, stop an animation, delegated from view\n\tthis.stopAnimationRoot = function (obj, key) {\n\t\tvar animkey = obj.getViewGuid() + '_' + key;\n\t\tvar anim = this.anims[animkey];\n\t\tif (anim) {\n\t\t\tdelete this.anims[animkey];\n\t\t\tif (anim.promise) anim.promise.reject();\n\t\t}\n\t};\n\n\t// internal, called when something renders\n\tthis.atRender = function () {}\n\t// lets add a debugview\n\t//this.children.push(debugview({}))\n\n\n\t// internal, called by the renderer to animate all items in our viewtree\n\t;this.doAnimation = function (time, redrawlist) {\n\t\tfor (var key in this.anims) {\n\t\t\tvar anim = this.anims[key];\n\t\t\tif (anim.start_time === undefined) anim.start_time = time;\n\t\t\tvar mytime = time - anim.start_time;\n\t\t\tvar value = anim.compute(mytime);\n\t\t\tif (value instanceof anim.End) {\n\t\t\t\tdelete this.anims[key];\n\t\t\t\t//console.log(value.last_value)\n\t\t\t\tanim.obj['_' + anim.key] = value.last_value;\n\t\t\t\tanim.obj.emit(anim.key, { animate: true, end: true, key: anim.key, owner: anim.obj, value: value.last_value });\n\t\t\t\tanim.obj.redraw();\n\t\t\t\tif (anim.resolve) anim.resolve();\n\t\t\t} else {\n\t\t\t\t// what if we have a value with storage?\n\t\t\t\tanim.obj['_' + anim.key] = value;\n\t\t\t\tif (anim.config.storage) {\n\t\t\t\t\tanim.obj['_' + anim.config.storage][anim.config.index] = value;\n\t\t\t\t\tanim.obj.emit(anim.config.storage, { type: 'animation', key: anim.key, owner: anim.obj, value: value });\n\t\t\t\t}\n\t\t\t\tanim.obj.emit(anim.key, { animate: true, key: anim.key, owner: anim.obj, value: value });\n\t\t\t\tredrawlist.push(anim.obj);\n\t\t\t}\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/screen.js\n// module id = 70\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/screen.js?");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$ui/view\", function () {\n\n\tthis.attributes = {\n\t\t// Color of the draggable part of the scrollbar\n\t\tdraggercolor: Config({ type: vec4, value: vec4(\"#808080\") }),\n\n\t\t// Color of the draggable part of the scrollbar\n\t\tdraggerradius: Config({ type: float, value: 3 }),\n\n\t\t// Color when the pointer is hovering over the draggable part of the scrollbar\n\t\thovercolor: Config({ type: vec4, value: vec4(\"#707070\") }),\n\n\t\t// Color of the draggable part of the scrollbar while actively scrolling\n\t\tactivecolor: Config({ type: vec4, value: vec4(\"#808080\") }),\n\n\t\t// Is this a horizontal or a vertical scrollbar?\n\t\tvertical: Config({ type: Boolean, value: true }),\n\n\t\t// Current value of the scrollbar. Ranges from 0 to total - page\n\t\tvalue: Config({ type: float, value: 0 }),\n\n\t\t// Page size, in total\n\t\tpage: Config({ type: float, value: 0 }),\n\n\t\t// total size.\n\t\ttotal: Config({ type: float, value: 0 }),\n\n\t\t// set animation on bgcolor\n\t\tbgcolor: Config({ duration: 1.0 })\n\t};\n\n\tthis.tooltarget = false;\n\n\tthis.noscroll = true;\n\n\tvar scrollbar = this.constructor;\n\n\tthis.page = function () {\n\t\tthis.redraw();\n\t};\n\n\tthis.offset = function () {\n\t\tthis.redraw();\n\t};\n\n\tvar mesh = vec2.array();\n\tmesh.pushQuad(0, 0, 0, 1, 1, 0, 1, 1);\n\n\tthis.hardrect = {\n\t\tdraggercolor: vec4(),\n\t\toffset: 0,\n\t\tpage: 0.3,\n\t\tcolor: function color() {\n\t\t\t// we have a rectangle\n\t\t\tvar rel = vec2(mesh.x * view.layout.width, mesh.y * view.layout.height);\n\t\t\tvar offset = view.value / view.total;\n\t\t\tvar page = view.page / view.total;\n\t\t\tvar edge = 0.1; //min(length(vec2(length(dFdx(rel)), length(dFdy(rel)))) * SQRT_1_2, 0.001)\n\t\t\tvar field = float(0);\n\t\t\tif (view.vertical) {\n\t\t\t\tfield = shape.roundbox(rel, 0.05 * view.layout.width, offset * view.layout.height, .9 * view.layout.width, page * view.layout.height, view.draggerradius);\n\t\t\t} else {\n\t\t\t\tfield = shape.roundbox(rel, offset * view.layout.width, 0.05 * view.layout.height, page * view.layout.width, .9 * view.layout.height, view.draggerradius);\n\t\t\t}\n\t\t\tvar fg = vec4(view.draggercolor.rgb, smoothstep(edge, -edge, field) * view.draggercolor.a);\n\t\t\tvar bg = vec4(0., 0., 0., 0.05);\n\t\t\treturn mix(bg.rgba, fg.rgba, fg.a);\n\t\t},\n\t\tmesh: mesh,\n\t\tupdate: function update() {},\n\t\tposition: function position() {\n\t\t\treturn vec4(mesh.x * view.layout.width, mesh.y * view.layout.height, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t}\n\t};\n\n\tthis.margin = 1;\n\n\tthis.vertical = function () {\n\t\tif (this.vertical) {\n\t\t\tthis.cursor = \"ns-resize\";\n\t\t} else {\n\t\t\tthis.cursor = \"ew-resize\";\n\t\t}\n\t};\n\n\tthis.pointermove = function (event) {\n\t\tvar offset = this.value / this.total;\n\t\tvar page = this.page / this.total;\n\t\tif (this.vertical) {\n\t\t\tvar p = offset + event.movement[1] / this.layout.height;\n\t\t} else {\n\t\t\tvar p = offset + event.movement[0] / this.layout.width;\n\t\t}\n\t\tvar value = clamp(p, 0, 1 - page) * this.total;\n\t\tif (value != this.value) {\n\t\t\tthis.value = value;\n\t\t}\n\t};\n\n\tthis.drawcount = 0;\n\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [scrollbar({ vertical: false, height: 20, total: 1, page: 0.2, offset: 0.5 })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/scrollbar.js\n// module id = 71\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/scrollbar.js?");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class(\"$ui/view\", function ($ui$, view, icon) {\n\t// Slider with customizable handle.  To customize the handle put views as the slider's constructor children.\n\t// <br/><a href=\"/examples/sliders\">examples &raquo;</a>\n\n\tthis.attributes = {\n\n\t\t// The color for the value bar in the slider\n\t\tfgcolor: Config({ type: vec4, value: \"black\", meta: \"color\" }),\n\n\t\t// The current value, between 0.0 ~ 1.0\n\t\tvalue: Config({ value: 0.5, persist: true }),\n\n\t\t// The size of each step between 0 ~ 1, e.g. 0.01 would create 100 discrete steps.  The value of 0 indicates a continuum.\n\t\tstep: Config({ value: 0 }),\n\n\t\t// Minimum value allowed, for restricting slider range\n\t\tminvalue: Config({ value: 0.0 }),\n\n\t\t// Maximum value allowed, for restricting slider range\n\t\tmaxvalue: Config({ value: 1.0 }),\n\n\t\t// The interpolated range of the slider between min and max value\n\t\trange: Config({ value: vec2(0, 100) }),\n\n\t\t// The current interpolated value, between range[0] and range[1]\n\t\trangevalue: Config({ value: 50, persist: true }),\n\n\t\t// Horizontal or vertical arrangement\n\t\thorizontal: true,\n\n\t\t// Threshold at which to draw a handle if none is provided in the constructor.\n\t\tminhandlethreshold: 10.0,\n\n\t\t// Smoothly mix the background/foreground color or draw a hard edge\n\t\tsmooth: true\n\t};\n\n\tthis.height = 5;\n\tthis.alignitems = \"center\";\n\tthis.justifycontent = \"center\";\n\n\tthis.bgcolorfn = function (pos) {\n\t\tvar axis = pos.x;\n\t\tif (!horizontal) {\n\t\t\taxis = pos.y;\n\t\t}\n\t\tvar inrange = axis > minvalue && axis < value && axis < maxvalue;\n\t\tif (inrange) {\n\t\t\treturn smooth ? mix(bgcolor, fgcolor, value * axis) : fgcolor;\n\t\t}\n\n\t\treturn bgcolor;\n\t};\n\n\tthis.keydown = function (ev, v, o) {\n\t\tvar value;\n\t\tif (ev.name === \"rightarrow\") {\n\t\t\tif (this._step) {\n\t\t\t\tvalue = this._value + this._step;\n\t\t\t} else {\n\t\t\t\tif (this._horizontal) {\n\t\t\t\t\tvalue = this._value + 1.0 / this._layout.width;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = this._value + 1.0 / this._layout.height;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (ev.name === \"leftarrow\") {\n\t\t\tif (this._step) {\n\t\t\t\tvalue = this._value - this._step;\n\t\t\t} else {\n\t\t\t\tif (this._horizontal) {\n\t\t\t\t\tvalue = this._value - 1.0 / this._layout.width;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = this._value - 1.0 / this._layout.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof value !== \"undefined\") {\n\t\t\tvalue = Math.max(this._minvalue, Math.min(this._maxvalue, value));\n\n\t\t\tvalue = this.stepValue(value);\n\n\t\t\tthis.setHandle(value);\n\n\t\t\tif (this._value !== value) {\n\t\t\t\tthis.value = value;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.stepValue = function (value) {\n\t\tif (this._step) {\n\t\t\tvar size = Math.round(value / this._step);\n\t\t\tvalue = size * this._step;\n\t\t}\n\t\treturn value;\n\t};\n\n\tthis.pointerstart = this.pointermove = function (ev) {\n\t\tthis.focus = true;\n\t\tvar pos = this.globalToLocal(ev.position);\n\t\tvar value;\n\t\tif (this._horizontal) {\n\t\t\tvalue = pos.x / this._layout.width;\n\t\t} else {\n\t\t\tvalue = pos.y / this._layout.height;\n\t\t}\n\n\t\tvalue = Math.max(this._minvalue, Math.min(this._maxvalue, value));\n\n\t\tthis.setHandle(value);\n\n\t\tvalue = this.stepValue(value);\n\n\t\tthis.value = value;\n\t};\n\n\tthis.setHandle = function (value) {\n\t\tif (this.handlechildren) {\n\t\t\tfor (var i = 0; i < this.handlechildren.length; i++) {\n\t\t\t\tvar child = this.handlechildren[i];\n\t\t\t\tif (this.horizontal) {\n\t\t\t\t\tchild.x = this._layout.width * value - child.width * 0.5;\n\t\t\t\t\tchild.y = this._layout.height * 0.5 - child.height * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\tchild.y = this._layout.height * value - child.height * 0.5;\n\t\t\t\t\tchild.x = this._layout.width * 0.5 - child.width * 0.5;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.pointerend = function (ev) {\n\t\tvar pos = this.globalToLocal(ev.position);\n\t\tvar value;\n\t\tif (this._horizontal) {\n\t\t\tvalue = pos.x / this._layout.width;\n\t\t} else {\n\t\t\tvalue = pos.y / this._layout.height;\n\t\t}\n\n\t\tvalue = Math.max(this._minvalue, Math.min(this._maxvalue, value));\n\n\t\tvalue = this.stepValue(value);\n\n\t\tthis.setHandle(value);\n\n\t\tthis.value = value;\n\t};\n\n\tthis.onrange = function (ev, range, o) {\n\t\tif (range) {\n\t\t\tvar distance = range[1] - range[0];\n\t\t\tvar rangevalue = distance * this._value + range[0];\n\t\t\tif (this._rangevalue != rangevalue) {\n\t\t\t\tthis.rangevalue = rangevalue;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.onvalue = function (ev, v, o) {\n\t\tvar value = Math.max(this._minvalue, Math.min(this._maxvalue, v));\n\n\t\tvar range = this._range;\n\t\tvar distance = range[1] - range[0];\n\t\tvar rangevalue = distance * value + range[0];\n\t\tif (this._rangevalue != rangevalue) {\n\t\t\tthis.rangevalue = rangevalue;\n\t\t}\n\n\t\tif (value != this.value) {\n\t\t\tthis.value = value;\n\t\t} else {\n\t\t\tthis.onsize(null, this.size, this);\n\t\t\tthis.setHandle(value);\n\t\t}\n\t};\n\n\tthis.onrangevalue = function (ev, v, o) {\n\t\tvar range = this._range;\n\t\tvar distance = range[1] - range[0];\n\t\tvalue = (v - range[0]) / distance;\n\t\tif (this._value !== value) {\n\t\t\tthis.value = value;\n\t\t}\n\t};\n\n\tthis.render = function () {\n\t\tvar views = [];\n\n\t\tthis.handlechildren = this.constructor_children;\n\n\t\tif (!this.handlechildren.length && (this._horizontal && this.height <= this.minhandlethreshold || !this._horizontal && this.width <= this._minhandlethreshold)) {\n\t\t\tthis.handlechildren = [this.handle()];\n\t\t}\n\n\t\tfor (var i = 0; i < this.handlechildren.length; i++) {\n\t\t\tvar child = this.handlechildren[i];\n\t\t\tchild.position = \"absolute\";\n\t\t\tif (this.horizontal) {\n\t\t\t\tchild.x = this.width * this._value - child.width * 0.5;\n\t\t\t\tchild.y = this.height * 0.5 - child.height * 0.5;\n\t\t\t} else {\n\t\t\t\tchild.y = this.height * this._value - child.height * 0.5;\n\t\t\t\tchild.x = this.width * 0.5 - child.width * 0.5;\n\t\t\t}\n\t\t\tviews.push(child);\n\t\t}\n\t\treturn views;\n\t};\n\n\tdefineDreem.class(this, \"handle\", view, function () {\n\t\tthis.bgcolor = vec4(1, 1, 1, 0.51);\n\t\tthis.height = this.width = 26;\n\t\tthis.borderradius = this.height * 0.5 - 0.5;\n\t});\n\n\tvar slider = this.constructor;\n\tthis.constructor.examples = {\n\n\t\tUsage: function Usage() {\n\t\t\treturn [slider({ x: 30, y: 30, width: 150, bgcolor: \"white\", fgcolor: \"red\", value: 0.9 })];\n\t\t},\n\n\t\tCustomHandle: function CustomHandle() {\n\t\t\treturn [slider({ x: 10, y: 30, width: 250, bgcolor: \"white\", smooth: false }, view({ borderradius: 2, width: 30, height: 20, bgimagemode: \"stretch\", bgimage: \"$resources/textures/purplecloud.png\" }))];\n\t\t}\n\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/slider.js\n// module id = 72\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/slider.js?");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (view, label) {\n\n\tthis.flex = 1;\n\tthis.flexdirection = \"column\";\n\tthis.alignitem = \"stretch\";\n\tthis.alignself = \"stretch\";\n\n\tthis.attributes = {\n\t\tholerad: Config({ type: float, value: 8 }),\n\t\tspacing: Config({ type: float, value: 0.60 }),\n\t\tring: Config({ type: float, value: 0.2 }),\n\t\tholecolor: Config({ type: vec4, value: vec4(\"#202020\"), meta: \"color\" }),\n\t\tglowcolor: Config({ type: vec4, value: vec4(\"#505050\"), meta: \"color\" }),\n\t\tedgecolor: Config({ type: vec4, value: vec4(\"#101010\"), meta: \"color\" })\n\t};\n\n\tthis.bgcolor = vec4(\"white\");\n\n\t// CADGrid shader - uses various floored modulo functions to find out if either a major or minor gridline is being touched.\n\tthis.hardrect = {\n\t\tgrid: function grid(a) {\n\n\t\t\treturn view.bgcolor;\n\t\t},\n\t\tpixtohex: function pixtohex(p) {\n\n\t\t\tvar b0 = 2.0 / 3.0;\n\t\t\tvar b1 = 0.0;\n\t\t\tvar b2 = -1.0 / 3.0;\n\t\t\tvar b3 = sqrt(1.) / 3.0;\n\n\t\t\tvar q = b0 * p.x + b1 * p.y;\n\t\t\tvar r = b2 * p.x + b3 * p.y;\n\t\t\treturn vec3(q, r, -q - r);\n\t\t},\n\t\tcolor: function color() {\n\t\t\tvar hex = pixtohex(gl_FragCoord.xy * (10. / view.holerad));\n\n\t\t\tvar hexmod = vec3(mod(hex.x, 10.0) / 10, mod(hex.y, 10.0) / 10, mod(hex.z, 10.) / 10.);\n\n\t\t\tvar dist = vec2(0.5, 0.5) - hexmod.yz;\n\t\t\tvar l = length(dist);\n\t\t\tif (l < view.spacing * 0.5) {\n\t\t\t\tif (l > view.spacing * 0.5 * (1. - view.ring)) {\n\t\t\t\t\tvar angle = atan(dist.y, dist.x);\n\n\t\t\t\t\treturn mix(view.glowcolor, view.edgecolor, abs(angle / PI));;\n\t\t\t\t}\n\t\t\t\treturn vec4(\"black\");\n\t\t\t}\n\n\t\t\tvar dist2 = vec2(0.5, 0.5) - mesh.xy;\n\n\t\t\treturn mix(view.glowcolor, view.edgecolor, length(dist2));\n\t\t}\n\t};\n\n\tvar speakergrid = this.constructor;\n\n\t// The CADGrid does not do anything to its children - plain passthrough\n\tthis.render = function () {\n\t\treturn this.constructor_children;\n\t};\n\n\t// Minimal usage example:\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn speakergrid({ width: 200, height: 200 });\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/speakergrid.js\n// module id = 73\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/speakergrid.js?");

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function ($ui$, view, label) {\n\t// Splitcontainer adds dragbars between nodes to make all the nodes resizable.\n\n\t// should the splitter bars be introduced horizontally or vertically?\n\tthis.attributes = {\n\t\t// wether the splitcontainer is vertical or not\n\t\tdirection: Config({ type: Enum(\"horizontal\", \"vertical\"), value: \"vertical\" }),\n\t\t// set the width (or height) of the splitter bar\n\t\tsplitsize: Config({ type: float, value: 8 }),\n\t\t// the minimum size of a child controlled by the splitter\n\t\tminimalchildsize: Config({ type: float, value: 20 }),\n\t\t// the color of the splitter bar\n\t\tsplittercolor: Config({ type: vec4, value: vec4(\"#484848\") }),\n\t\t// color of splitter bar on hover\n\t\thovercolor: Config({ type: vec4, value: vec4(\"#707070\") }),\n\t\t// color of the splitter bar when dragging it\n\t\tactivecolor: Config({ type: vec4, value: vec4(\"#7070a0\") })\n\t};\n\n\tthis.bgcolor = NaN;\n\tthis.flex = 1.0;\n\tthis.flexdirection = \"row\";\n\tthis.position = \"relative\";\n\tthis.borderwidth = 0;\n\tthis.bordercolor = vec4(\"#303060\");\n\n\tthis.direction = function () {\n\t\tthis.flexdirection = this.direction == \"horizontal\" ? \"column\" : \"row\";\n\t};\n\n\t// the visual class that defines the draggable bar between the resizable children\n\tdefineDreem.class(this, 'splitter', function (view) {\n\n\t\tthis.attributes = {\n\t\t\tfirstnode: Config({ type: int, value: 0 })\n\t\t};\n\n\t\tthis.bgcolor = vec4(\"#737373\");\n\t\tthis.alignitem = \"stretch\";\n\t\tthis.borderradius = 3;\n\t\tthis.attributes = {\n\t\t\tvertical: Config({ type: Boolean, value: false }),\n\t\t\tsplitsize: Config({ type: float, value: 6 }),\n\t\t\tsplittercolor: Config({ type: vec4, value: vec4(\"#404050\") }),\n\t\t\thovercolor: Config({ type: vec4, value: vec4(\"#f050a0\") }),\n\t\t\tbgcolor: Config({ duration: 0.1, motion: \"linear\" }),\n\t\t\tactivecolor: Config({ type: vec4, value: vec4(\"#7070a0\") })\n\t\t};\n\t\tthis.flex = 0;\n\t\tthis.neutralcolor = this.bgcolor;\n\n\t\tthis.pointerover = function () {\n\t\t\tthis.bgcolor = this.hovercolor;\n\t\t};\n\t\tthis.pointerout = function () {\n\t\t\tthis.bgcolor = this.neutralcolor;\n\t\t};\n\n\t\tthis.pointerstart = function () {\n\t\t\tthis._flexstart = {\n\t\t\t\tleft: this.parent.children[this.firstnode].flex,\n\t\t\t\tright: this.parent.children[this.firstnode + 2].flex,\n\n\t\t\t\tleftwidth: this.parent.children[this.firstnode].layout.width,\n\t\t\t\tleftheight: this.parent.children[this.firstnode].layout.height,\n\n\t\t\t\trightwidth: this.parent.children[this.firstnode + 2].layout.width,\n\t\t\t\trightheight: this.parent.children[this.firstnode + 2].layout.height\n\t\t\t};\n\t\t};\n\n\t\tthis.pointermove = function (event) {\n\t\t\tvar leftnode = this.parent.children[this.firstnode];\n\t\t\tvar rightnode = this.parent.children[this.firstnode + 2];\n\n\t\t\tvar f1 = this._flexstart.left;\n\t\t\tvar f2 = this._flexstart.right;\n\n\t\t\tvar totf = f1 + f2;\n\n\t\t\tif (this.vertical) {\n\t\t\t\tvar h1 = this._flexstart.leftheight;\n\t\t\t\tvar h2 = this._flexstart.rightheight;\n\n\t\t\t\tvar hadd = h1 + h2;\n\t\t\t\th1 += event.delta[1];\n\t\t\t\th2 -= event.delta[1];\n\t\t\t\tif (h1 < this.parent.minimalchildsize || h2 < this.parent.minimalchildsize) return;\n\t\t\t\tvar f1n = h1 / hadd;\n\t\t\t\tvar f2n = h2 / hadd;\n\t\t\t\tleftnode.flex = f1n * totf;\n\t\t\t\trightnode.flex = f2n * totf;\n\t\t\t} else {\n\t\t\t\tvar w1 = this._flexstart.leftwidth;\n\t\t\t\tvar w2 = this._flexstart.rightwidth;\n\n\t\t\t\tvar wadd = w1 + w2;\n\t\t\t\tw1 += event.delta[0];\n\t\t\t\tw2 -= event.delta[0];\n\t\t\t\tif (w1 < this.parent.minimalchildsize || w2 < this.parent.minimalchildsize) return;\n\t\t\t\tvar f1n = w1 / wadd;\n\t\t\t\tvar f2n = w2 / wadd;\n\t\t\t\tleftnode.flex = f1n * totf;\n\t\t\t\trightnode.flex = f2n * totf;\n\t\t\t}\n\t\t\tthis.parent.redraw();\n\t\t\t// lets trigger layout dirty...\n\t\t\t/*\n   leftnode.setDirty(true);\n   leftnode.reLayout();\n   rightnode.reLayout();\n   rightnode.setDirty(true);\n   */\n\t\t};\n\t\t/*\n  this.atDraw = function(){\n  \tif (this.hovered > 0){\n  \t\tif (this.pressed > 0){\n  \t\t\tthis.bg_shader.color1 = this.activecolor;\n  \t\t}else{\n  \t\t\tthis.bg_shader.color1 = this.hovercolor;\n  \t\t}\n  \t}else{\n  \t\tthis.bg_shader.color1 = this.splittercolor;\n  \t}\n  }\n  */\n\t\tthis.hardrect = {\n\t\t\tacolor: function acolor() {\n\n\t\t\t\tif (view.vertical) {\n\t\t\t\t\tvar yy = mesh.y * view.layout.height;\n\t\t\t\t\tvar ymix = yy < 1.0 ? 1. : yy > view.layout.height - 1.0 ? 1. : 0.0;\n\t\t\t\t\treturn mix(view.bgcolor, \"black\", ymix);\n\t\t\t\t}\n\t\t\t\tvar xx = mesh.x * view.layout.width;\n\t\t\t\tvar xmix = xx < 1.0 ? 1. : xx > view.layout.width - 1.0 ? 1. : 0.0;\n\t\t\t\treturn mix(view.bgcolor, \"black\", xmix);\n\t\t\t}\n\t\t};\n\t\tthis.vertical = function () {\n\t\t\tif (this.vertical) {\n\t\t\t\tthis.height = this.splitsize;\n\t\t\t\tthis.width = NaN;\n\t\t\t} else {\n\t\t\t\tthis.width = this.splitsize;\n\t\t\t\tthis.height = NaN;\n\t\t\t}\n\t\t};\n\t});\n\n\tthis.render = function () {\n\t\tif (this.constructor_children.length > 1) {\n\t\t\tvar children = [];\n\t\t\tchildren.push(view({ bgcolor: NaN, clipping: true, flex: this.constructor_children[0].flex }, this.constructor_children[0]));\n\n\t\t\tfor (var i = 1; i < this.constructor_children.length; i++) {\n\n\t\t\t\tchildren.push(this.splitter({\n\t\t\t\t\tvertical: this.direction == \"horizontal\",\n\t\t\t\t\tcursor: this.direction == \"horizontal\" ? 'ns-resize' : 'ew-resize',\n\t\t\t\t\tfirstnode: (i - 1) * 2,\n\t\t\t\t\tsplitsize: this.splitsize,\n\t\t\t\t\tsplittercolor: this.splittercolor,\n\t\t\t\t\thovercolor: this.hovercolor,\n\t\t\t\t\tactivecolor: this.activecolor\n\t\t\t\t}));\n\n\t\t\t\tchildren.push(view({\n\t\t\t\t\tbgcolor: NaN,\n\t\t\t\t\tclipping: true,\n\t\t\t\t\tflex: this.constructor_children[i].flex\n\t\t\t\t}, this.constructor_children[i]));\n\t\t\t}\n\t\t\treturn children;\n\t\t} else {\n\t\t\treturn this.constructor_children;\n\t\t}\n\t};\n\n\tvar splitcontainer = this.constructor;\n\n\t// Basic usage of the splitcontainer\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [splitcontainer({ alignself: 'stretch', vertical: false, margin: 4, flex: 1.0, borderwidth: 2, bordercolor: \"darkblue\", padding: vec4(2) }, label({ flex: 0.2, fontsize: 26, text: \"A\", bgcolor: \"transparent\", multiline: true, align: \"center\", fgcolor: \"black\", margin: 2 }), label({ flex: 0.2, fontsize: 26, text: \"B\", bgcolor: \"transparent\", multiline: true, align: \"center\", fgcolor: \"black\", margin: 2 }), label({ flex: 0.2, fontsize: 26, text: \"C\", bgcolor: \"transparent\", multiline: true, align: \"center\", fgcolor: \"black\", margin: 2 }), label({ flex: 0.2, fontsize: 26, text: \"D\", bgcolor: \"transparent\", multiline: true, align: \"center\", fgcolor: \"black\", margin: 2 }))];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/splitcontainer.js\n// module id = 74\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/splitcontainer.js?");

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Stack container is a custom layout view where the number of children doesnt slow down\n// either the layout engine or the render engine. To be completed\n\ndefineDreem.class(function (requireDreem, $ui$, view, stackcontainer) {\n\n   this.bgcolor = 'gray';\n\n   this.render = function () {\n      return [];\n   };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/stackcontainer.js\n// module id = 75\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/stackcontainer.js?");

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Sprite class\n\ndefineDreem.class(\"$ui/view\", function ($ui$, button) {\n\t// Presents a bar of configurable tabs.  [example](http://localhost:2000/examples/tabbar).\n\t// <br/><a href=\"/examples/tabs\">examples &raquo;</a>\n\n\tthis.attributes = {\n\n\t\t// Tab definitions.  This can be a simple list of strings or and array of more complicated\n\t\t// objects that describe tab behavior in detail.\n\t\ttabs: Config({ type: Array, value: [] }),\n\n\t\t// Color of default tabs, can be overridden in style\n\t\ttabcolor: Config({ value: vec4(0, 0, 0, 1), meta: \"color\" }),\n\t\tactivetabcolor: Config({ value: vec4(1, 1, 1, 1), meta: \"color\" }),\n\n\t\ttextcolor: Config({ value: vec4(1, 1, 1, 1), meta: \"color\" }),\n\t\tactivetextcolor: Config({ value: vec4(0, 0, 0, 1), meta: \"color\" }),\n\n\t\ttabclass: undefined,\n\n\t\t// Current tab selection\n\t\tactivetab: Config({ persist: true, value: 0 })\n\t};\n\n\tthis.tooldragroot = true;\n\tthis.flexdirection = \"row\";\n\tthis.bgcolor = NaN;\n\n\tthis.style = {\n\t\tbutton: {\n\t\t\tflex: 1,\n\t\t\tjustifycontent: \"center\",\n\t\t\talignitems: \"center\",\n\t\t\tbgcolor: this.tabcolor,\n\t\t\tborderradius: 0,\n\t\t\tarrowheight: 5.0,\n\t\t\tshowarrow: true,\n\t\t\tarrowtop: true,\n\t\t\tbgcolorfn: function bgcolorfn(p) {\n\t\t\t\tvar atx = p.x * layout.width;\n\t\t\t\tvar aty = p.y * layout.height;\n\t\t\t\tif (showarrow) {\n\t\t\t\t\tif (arrowtop) {\n\t\t\t\t\t\tif (aty < arrowheight && (atx + aty < layout.width * 0.5 || atx - aty > layout.width * 0.5)) {\n\t\t\t\t\t\t\treturn \"transparent\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (layout.height - aty < arrowheight && (atx + (layout.height - aty) < layout.width * 0.5 || atx - (layout.height - aty) > layout.width * 0.5)) {\n\t\t\t\t\t\t\treturn \"transparent\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn bgcolor;\n\t\t\t}\n\t\t},\n\t\tbutton_folder: {\n\t\t\tx: 1,\n\t\t\tflex: 0,\n\t\t\tpadding: 5,\n\t\t\tbgcolor: this.tabcolor,\n\t\t\tborderradius: vec4(15, 15, 0, 0),\n\t\t\tbgcolorfn: function bgcolorfn(p) {\n\t\t\t\treturn bgcolor;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.render = function () {\n\t\tvar tabs = [];\n\t\tif (this.tabs) {\n\t\t\tfor (var i = 0; i < this.tabs.length; i++) {\n\t\t\t\tvar tabdef = this.tabs[i];\n\t\t\t\tvar active = i === this.activetab;\n\n\t\t\t\tvar tab = {\n\t\t\t\t\tbgimagemode: \"stretch\",\n\t\t\t\t\ttextcolor: active ? this.activetextcolor : this.textcolor,\n\t\t\t\t\ttextactivecolor: active ? this.activetextcolor : this.textcolor,\n\t\t\t\t\tbgcolor: active ? this.activetabcolor : this.tabcolor,\n\t\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\t\thovercolor1: \"transparent\",\n\t\t\t\t\thovercolor2: \"transparent\",\n\t\t\t\t\tpressedcolor1: \"transparent\",\n\t\t\t\t\tpressedcolor2: \"transparent\",\n\t\t\t\t\tpickalpha: -1,\n\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\tclass: this.tabclass,\n\t\t\t\t\ttabindex: i,\n\t\t\t\t\tclick: function (ev, v, o) {\n\t\t\t\t\t\tthis.activetab = o.tabindex;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t};\n\n\t\t\t\tif (typeof tabdef === \"string\") {\n\t\t\t\t\ttab.text = tabdef;\n\t\t\t\t} else {\n\t\t\t\t\tfor (var prop in tabdef) {\n\t\t\t\t\t\tif (tabdef.hasOwnProperty(prop)) {\n\t\t\t\t\t\t\ttab[prop] = tabdef[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttabs.push(button(tab));\n\t\t\t}\n\t\t}\n\n\t\treturn tabs;\n\t};\n\n\tvar tabbar = this.constructor;\n\tthis.constructor.examples = {\n\n\t\tUsage: function Usage() {\n\t\t\treturn [tabbar({ tabs: [\"one\", \"two\", \"three\"], onactivetab: function onactivetab(ev, tab, bar) {\n\t\t\t\t\tif (tab) {\n\t\t\t\t\t\tconsole.log('Selected tab', tab, bar.tabs[tab]);\n\t\t\t\t\t}\n\t\t\t\t} })];\n\t\t},\n\n\t\tAdvanced: function Advanced() {\n\n\t\t\tvar selectionhandler = function selectionhandler(tab, state) {\n\t\t\t\ttab.parent.defaultselectionhandler(tab);\n\t\t\t\talert(\"custom logic for \" + state + \" handler can go here\");\n\t\t\t};\n\n\t\t\treturn [tabbar({\n\t\t\t\ttabclass: \"folder\",\n\t\t\t\ttabs: [{\n\t\t\t\t\ticon: \"gear\",\n\t\t\t\t\tpadding: 10\n\t\t\t\t}, {\n\t\t\t\t\ttext: \"two\",\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\ttextcolor: \"#E44\"\n\t\t\t\t}, {\n\t\t\t\t\ttext: \"three\",\n\t\t\t\t\tpadding: 10\n\t\t\t\t}] })];\n\t\t}\n\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/tabbar.js\n// module id = 76\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/tabbar.js?");

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$ui/label\", function (requireDreem) {\n\t// Text input field\n\t// <br/><a href=\"/examples/text\">examples &raquo;</a>\n\n\tthis.mixin(requireDreem('$system/textbox/textboximpl'));\n\n\tthis.attributes = {\n\t\t// the color of the cursor\n\t\tcursorcolor: Config({ type: vec4, value: vec4(NaN), meta: \"color\" }),\n\t\t// color of the marker\n\t\tmarkerfocus: Config({ type: vec4, value: vec4(\"oceanboatblue\"), meta: \"color\" }),\n\t\tmarkerunfocus: Config({ type: vec4, value: vec4(\"gray\"), meta: \"color\" }),\n\t\tvalue: Config({ type: String, value: \"\" }),\n\t\treadonly: false,\n\t\tfocusselect: true,\n\t\tmultiline: true,\n\t\tcursorrect: vec4(),\n\t\tcursorscrollindent: 30\n\t};\n\n\tthis.bgcolor = \"transparent\";\n\tthis.pickalpha = -1;\n\tthis.markercolor = this.markerunfocus;\n\n\tthis.oncursorrect = function (ev, v, o) {\n\t\tif (this._overflow !== \"hidden\" && this._overflow !== \"scroll\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar px = v[0] - this.scroll[0];\n\t\tvar past = px - this.width;\n\t\tif (past > 0) {\n\t\t\tsetTimeout(function () {\n\t\t\t\to.scroll = vec2(o.scroll[0] + past + o.cursorscrollindent, o.scroll[1]);\n\t\t\t\to.redraw();\n\t\t\t}, 0);\n\t\t} else if (px < 0) {\n\t\t\tsetTimeout(function () {\n\t\t\t\to.scroll = vec2(Math.max(0, o.scroll[0] + px - o.cursorscrollindent), o.scroll[1]);\n\t\t\t\to.redraw();\n\t\t\t}, 0);\n\t\t}\n\t};\n\n\tdefineDreem.class(this, 'cursors', requireDreem('$system/typeface/cursorshader.js'), function () {\n\t\tthis.updateorder = 5;\n\t\tthis.draworder = 6;\n\t\tthis.atConstructor = function () {\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t};\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh.length = 0;\n\t\t\tif (view.cursors.fusing) view.cursors.fuse();\n\t\t\tfor (var list = view.cursorset.list, i = 0; i < list.length; i++) {\n\t\t\t\tvar cursor = list[i];\n\t\t\t\tvar end = cursor.end;\n\t\t\t\tvar texbuf = view.textbuf;\n\t\t\t\tvar pos = texbuf.cursorRect(end);\n\t\t\t\tview.cursorrect = vec4(pos.x, pos.y, pos.w, pos.h);\n\t\t\t\tthis.mesh.addCursor(texbuf, end);\n\t\t\t}\n\t\t};\n\t});\n\tthis.cursors = true;\n\tthis.tabstop = 0;\n\tthis.linespacing = 1.3;\n\tdefineDreem.class(this, 'markers', requireDreem('$system/typeface/markershader.js'), function () {\n\t\tthis.updateorder = 6;\n\t\tthis.draworder = 4;\n\t\tthis.atConstructor = function () {\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t};\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh.length = 0;\n\n\t\t\tif (view.cursorset.fusing) view.cursorset.fuse();\n\t\t\tfor (var list = view.cursorset.list, i = 0; i < list.length; i++) {\n\t\t\t\tvar cursor = list[i];\n\n\t\t\t\tvar start = cursor.start,\n\t\t\t\t    end = cursor.end;\n\t\t\t\tif (start !== end) {\n\t\t\t\t\tvar markers = this.vertexstruct.getMarkersFromText(view.textbuf, start, end, 0);\n\n\t\t\t\t\t// lets add all markers\n\t\t\t\t\tfor (var i = 0; i < markers.length; i++) {\n\t\t\t\t\t\tthis.mesh.addMarker(markers[i - 1], markers[i], markers[i + 1], view.textbuf.fontsize, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\tthis.markers = true;\n\tthis.measure_with_cursor = true;\n\n\tthis.focus = function () {\n\t\tif (!this.shaders || !this.shaders.cursors) return;\n\t\tif (this._focus) {\n\t\t\tthis.shaders.cursors.visible = this.readonly ? false : true;\n\t\t\tthis.markercolor = this.markerfocus;\n\t\t} else if (this.shaders) {\n\t\t\tthis.shaders.cursors.visible = this.readonly ? true : false;\n\t\t\tthis.markercolor = this.markerunfocus;\n\t\t}\n\t\tthis.redraw();\n\t};\n\n\tObject.defineProperty(this, 'textbuf', {\n\t\tget: function get() {\n\t\t\treturn this.shaders.typeface.mesh;\n\t\t}\n\t});\n\n\tthis.textChanged = function (noredraw) {\n\n\t\tvar string = this.textbuf.serializeText(0, this.textbuf.lengthQuad());\n\t\tif (!this.multiline && (string.indexOf('\\n') >= 0 || string.indexOf('\\r') >= 0)) {\n\t\t\tstring = string.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n\t\t\tthis.textbuf.removeText(0, this.textbuf.lengthQuad());\n\t\t\tthis.textbuf.insertText(0, string);\n\t\t\tthis.focus = false;\n\t\t}\n\t\tthis.value = Mark(string);\n\t\t// this causes a redraw\n\t\tif (!noredraw) this.relayout();\n\t};\n\n\tthis.value = function (event) {\n\t\tif (event.mark) return;\n\t\tthis.text = this.value;\n\t\tthis.relayout();\n\t\tthis.redraw();\n\t};\n\n\tthis.cursorsChanged = function (noreupdate) {\n\t\tthis.shaders.cursors.reupdate();\n\t\tthis.shaders.markers.reupdate();\n\t};\n\n\tthis.init = function () {\n\t\tthis.shaders.cursors.visible = false;\n\t\tif (isNaN(this._cursorcolor[0])) this._cursorcolor = this.fgcolor;\n\t\tthis.initEditImpl();\n\t\tthis.text = this.value;\n\t};\n\n\tvar textbox = this.constructor;\n\t// Basic usage of the treeview control.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [textbox({ alignself: 'flex-start', value: \"Text can be input here\", fgcolor: '#333', borderwidth: 1, bordercolor: 'black', padding: 5 }), textbox({\n\t\t\t\tborderwidth: 1,\n\t\t\t\tpaddingleft: 10,\n\t\t\t\tbordercolor: \"white\",\n\t\t\t\tbgimage: \"$resources/textures/purplecloud.png\",\n\t\t\t\tbgimagemode: \"stretch\",\n\t\t\t\tvalue: \"Text field w/bgimage\"\n\t\t\t})];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/textbox.js\n// module id = 77\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/textbox.js?");

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n\n\ndefineDreem.class('$ui/view', function (requireDreem) {\n\t// Example of how to use multiple render passes\n\n\tthis.attributes = {\n\t\ttintcolor: Config({ type: vec4, value: vec4(1, 1, 1, 1), meta: \"color\" })\n\n\t\t// Must define N RenderPass nested classes below to match this count\n\t};this.passes = 2;\n\t// Required for multipass to work\n\tthis.overflow = 'hidden';\n\n\t// Each pass _must_ be named pass0..9, define based on this.passes, e.g. this.passes = 1\n\t// must define pass0, 2 must define pass0 and pass1...\n\tdefineDreem.class(this, \"pass0\", this.RenderPass, function () {\n\t\tthis.color = function () {\n\t\t\tvar col = this.framebuffer.sample(mesh.xy) * view.tintcolor;\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"pass1\", this.RenderPass, function () {\n\t\tthis.color = function () {\n\t\t\tvar col = this.pass0.sample(mesh.xy * 2);\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/tintview.js\n// module id = 78\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/tintview.js?");

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function ($ui$, view, label, button, icon) {\n\t// The treeview control - classic treeview with expandable nodes.\n\n\tthis.attributes = {\n\t\t// the dataset to use for tree expansion. It follows a {name:'test',children:[{name:'child'}]} format\n\t\tdataset: {},\n\t\t// the current selected value\n\t\tselect: Config({ type: Event })\n\t};\n\n\tthis.bgcolor = '#3b3b3b';\n\tthis.boundscheck = true;\n\tthis.viewport = '2d';\n\tthis.overflow = 'scroll';\n\n\t// The fold button is a very very flat button.\n\tdefineDreem.class(this, 'foldbutton', button, function () {\n\t\tthis.borderwidth = 0;\n\t\tthis.bold = false;\n\t\tthis.fontsize = 14;\n\n\t\t//\tthis.borderradius = 0;\n\t\tthis.padding = 2;\n\t\tthis.pickalpha = -1;\n\t\tthis.labelactivecolor = vec4(\"#303000\");\n\t\tthis.buttoncolor1 = \"#3b3b3b\";\n\t\tthis.buttoncolor2 = \"#3b3b3b\";\n\t\tthis.pressedcolor1 = \"#505050\";\n\t\tthis.pressedcolor2 = \"#505050\";\n\t\tthis.hovercolor1 = \"#707070\";\n\t\tthis.hovercolor2 = \"#707070\";\n\t\tthis.borderradius = 0;\n\t\tthis.borderwidth = 0;\n\t\tthis.fgcolor = \"#d0d0d0\";\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.margin = 0;\n\t\t//this.alignself = \"flex-start\"\n\t});\n\n\t// newitemheading combines a few foldbuttons in to a full \"item\" in the tree\n\tdefineDreem.class(this, 'newitemheading', view, function () {\n\t\tthis.borderwidth = 0;\n\t\tthis.attributes = {\n\t\t\tfolded: false,\n\t\t\tselect: Config({ type: Event }),\n\t\t\ttoggleclick: Config({ type: Function })\n\t\t};\n\t\tthis.flexwrap = \"nowrap\";\n\t\tthis.padding = 0;\n\t\tthis.labelactivecolor = vec4(\"#303000\");\n\t\tthis.bordercolor = \"transparent\";\n\t\tthis.buttoncolor1 = \"#3b3b3b\";\n\t\tthis.buttoncolor2 = \"#3b3b3b\";\n\t\tthis.pressedcolor1 = \"#707070\";\n\t\tthis.pressedcolor2 = \"#707070\";\n\t\tthis.hovercolor1 = \"#505050\";\n\t\tthis.hovercolor2 = \"#505050\";\n\t\tthis.cornerradius = 0;\n\t\tthis.fgcolor = \"#f0f0f0\";\n\t\tthis.bgcolor = \"#3b3b3b\";\n\t\tthis.margin = 2;\n\t\t//this.bgcolor = \"transparent\"\n\t\t//this.alignself = \"flex-start\"\n\n\t\tthis.render = function () {\n\n\t\t\tvar vws = [];\n\n\t\t\tif (this.haschildren) {\n\t\t\t\tvws.push(this.outer.foldbutton({\n\t\t\t\t\ticon: this.folded ? \"chevron-right\" : \"chevron-down\",\n\t\t\t\t\tpaddingleft: 1,\n\t\t\t\t\tpaddingright: 2,\n\t\t\t\t\tpaddingtop: 2,\n\t\t\t\t\tmargintop: 3,\n\t\t\t\t\tfontsize: 10,\n\t\t\t\t\tclick: this.toggleclick\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif (this.text) {\n\t\t\t\tvws.push(this.outer.foldbutton({\n\t\t\t\t\ttext: this.text,\n\t\t\t\t\tclick: function () {\n\t\t\t\t\t\tthis.emit('select', { node: this });\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif (this.constructor_children.length) {\n\t\t\t\tvws = vws.concat(this.constructor_children);\n\t\t\t}\n\n\t\t\treturn vws;\n\t\t};\n\t});\n\n\t// the treeitem subclass contains 3 controls: a newitemheading, a set of treelines and an optional set of children treeitems in case the current node is expanded\n\tdefineDreem.class(this, 'treeitem', view, function () {\n\n\t\tthis.attributes = {\n\t\t\ttext: \"\",\n\t\t\titem: {}\n\n\t\t\t//this.flex = 1.0\n\t\t};this.padding = vec4(0);\n\t\tthis.fgcolor = vec4(\"black\");\n\t\tthis.bgcolor = \"#3b3b3b\";\n\t\tthis.flexdirection = \"row\";\n\t\tthis.flexwrap = 'nowrap';\n\t\t// Open/close this node\n\t\tthis.toggle = function () {\n\t\t\tif (this.item) {\n\t\t\t\tif (!this.item.collapsed) this.item.collapsed = true;else this.item.collapsed = false;\n\t\t\t\t//this.collapsed = this.item.collapsed;\n\t\t\t\t// a bottom level assign re-renders the item\n\t\t\t\tvar itm = this.item;\n\t\t\t\tthis.item = itm;\n\t\t\t\t//this.reRender()\n\t\t\t}\n\t\t\t//this.reLayout();\n\t\t\t//this.setDirty(true)\n\t\t};\n\n\t\t// build path for the current treeitem and call the outer selectclick handler\n\t\tthis.processSelect = function (value) {\n\n\t\t\tfunction walk(stack, node) {\n\t\t\t\tif (stack === node) return [node];\n\t\t\t\tif (stack.children) for (var i = 0; i < stack.children.length; i++) {\n\t\t\t\t\tvar child = stack.children[i];\n\t\t\t\t\tvar ret = walk(child, node);\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\tret.unshift(stack);\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar path = walk(this.outer.data, this.item);\n\n\t\t\tthis.outer.emit('select', { item: this.item, path: path });\n\t\t};\n\n\t\tthis.atConstructor = function () {\n\t\t\tif (this.item) {\n\t\t\t\tif (!this.item.collapsed) this.item.collapsed = false;\n\t\t\t}\n\t\t\t//\tthis.text = this.item.name;\n\t\t};\n\n\t\tthis.count = 0;\n\n\t\tthis.flexdirection = \"column\";\n\t\t//this.width = 1;\n\n\t\tthis.render = function () {\n\t\t\t//debugger;\n\t\t\tif (!this.item) return [label({ text: \"\" })];\n\t\t\t//this.collapsed;\n\t\t\tvar res = [];\n\n\t\t\tvar itemview = [];\n\t\t\tif (this.item.itemview) {\n\t\t\t\titemview.push(this.item.itemview);\n\t\t\t}\n\t\t\tres.push(this.outer.newitemheading({\n\t\t\t\thaschildren: this.item.children && this.item.children.length,\n\t\t\t\tfolded: this.item.collapsed,\n\t\t\t\ttoggleclick: this.toggle.bind(this),\n\t\t\t\tselect: this.processSelect.bind(this),\n\t\t\t\ttext: this.item.name,\n\t\t\t\tid: this.item.id\n\t\t\t}, itemview));\n\n\t\t\tif (this.item.collapsed == false) {\n\t\t\t\tif (this.item.children) {\n\t\t\t\t\tvar childrenarray = this.item.children.map(function (m, i, thearray) {\n\t\t\t\t\t\treturn [this.outer.treeline({ last: i == thearray.length - 1 ? 1 : 0, flexwrap: \"nowrap\", abg: {\n\t\t\t\t\t\t\t\tcolor: function color() {\n\t\t\t\t\t\t\t\t\treturn \"yellow\";\n\t\t\t\t\t\t\t\t} },\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tflexdirection: \"row\" }, view({ bgcolor: \"blue\", width: 14, alignself: \"stretch\", init: function init() {\n\t\t\t\t\t\t\t\t// console.log(this.size)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlayout: function layout() {\n\t\t\t\t\t\t\t\t//console.log(this.layout)\n\t\t\t\t\t\t\t} }), this.outer.treeitem({ item: m }))];\n\t\t\t\t\t}.bind(this));\n\t\t\t\t\tres.push(view({\n\t\t\t\t\t\tbgcolor: NaN,\n\t\t\t\t\t\tflexdirection: \"column\",\n\t\t\t\t\t\tflexwrap: \"nowrap\"\n\t\t\t\t\t}, childrenarray));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t});\n\n\t// subclass to render the gridlines of the tree\n\tdefineDreem.class(this, 'treeline', view, function () {\n\t\t//this.bgcolor = vec4(\"red\");\n\t\t//this.flex = 1\n\t\tthis.last = 0;\n\n\t\tthis.render = function () {\n\t\t\treturn this.constructor_children;\n\t\t};\n\t\tthis.alignself = \"stretch\";\n\n\t\tthis.fgcolor = vec4(\"#808080\");\n\n\t\tthis.bgcolor = \"#3b3b3b\";\n\t\tthis.hardrect = {\n\t\t\tcolor: function color() {\n\t\t\t\tvar pos = mesh.xy * vec2(view.layout.width, view.layout.height);\n\t\t\t\tvar center = 16;\n\t\t\t\tvar left = 7;\n\t\t\t\tvar field = shape.union(shape.box(pos, left, 0., 1., view.layout.height * (1. - view.last) + center * view.last), shape.box(pos, left, center, view.layout.width, 1.));\n\t\t\t\tvar edge = .4;\n\n\t\t\t\t//if(mod(floor(gl_FragCoord.x) + floor(gl_FragCoord.y), 2.) > 0.){\n\t\t\t\treturn mix(view.bgcolor, view.fgcolor, smoothstep(edge, -edge, field));\n\t\t\t\t//}\n\t\t\t\treturn \"red\";\n\t\t\t\treturn vec4(view.bgcolor);\n\t\t\t}\n\t\t};\n\t});\n\n\tthis.clipping = true;\n\n\tthis.flexdirection = \"row\";\n\t//\tthis.flex = 1\n\n\tthis.alignself = \"stretch\";\n\n\t// the renderfunction for the treeview recursively expands using treeitem subclasses.\n\tthis.render = function () {\n\t\t//var data;\n\n\t\tif (!this.data) {\n\t\t\tif (!this.dataset) return;\n\t\t\tif (this.atBuildTree) this.data = this.atBuildTree(this.dataset.data);else {\n\t\t\t\tthis.data = this.dataset.data;\n\t\t\t}\n\t\t}\n\t\tif (!this.data) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn [this.treeitem({ item: this.data })];\n\t};\n\n\tvar treeview = this.constructor;\n\n\t// Basic usage of the treeview control.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\tvar data = { name: \"root\", children: [{ name: \"child1\", children: [{ name: \"subchild1\" }, { name: \"subchild2\" }] }, { name: \"child2\" }] };\n\n\t\t\treturn [treeview({ flex: 1, data: data })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/treeview.js\n// module id = 79\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/treeview.js?");

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n\n\ndefineDreem.class('$system/base/node', function (requireDreem) {\n\t// Base UI view object\n\n\n\tvar FlexLayout = requireDreem('$system/lib/layout');\n\tvar Render = requireDreem('$system/base/render');\n\tvar Shader = this.Shader = requireDreem('$system/platform/$platform/shader$platform');\n\tvar view = this.constructor;\n\n\tthis.attributes = {\n\t\t// wether to draw it\n\t\tvisible: true,\n\n\t\tdrawtarget: Config({ type: Enum('both', 'pick', 'color'), value: 'both' }),\n\n\t\t// pos(ition) of the view, relative to parent. For 2D only the first 2 components are used, for 3D all three.\n\t\tpos: Config({ type: vec3, value: vec3(0, 0, 0), meta: \"xyz\" }),\n\n\t\t// alias for the x component of pos\n\t\tx: Config({ alias: 'pos', index: 0 }),\n\t\t// alias for the y component of pos\n\t\ty: Config({ alias: 'pos', index: 1 }),\n\t\t// alias for the z component of pos\n\t\tz: Config({ alias: 'pos', index: 2 }),\n\n\t\t// alias for the x component of pos\n\t\tleft: Config({ alias: 'pos', index: 0 }),\n\t\t// alias for the y component of pos\n\t\ttop: Config({ alias: 'pos', index: 1 }),\n\t\t// alias for the z component of pos\n\t\tfront: Config({ alias: 'pos', index: 2 }),\n\n\t\t// the bottom/right/rear corner, used by layout\n\t\tcorner: Config({ type: vec3, value: vec3(NaN) }),\n\t\t// alias for the x component of corner\n\t\tright: Config({ alias: 'corner', index: 0 }),\n\t\t// alias for  y component of corner\n\t\tbottom: Config({ alias: 'corner', index: 1 }),\n\t\t// alias for z component of corner\n\t\trear: Config({ alias: 'corner', index: 2 }),\n\n\t\t// the background color of a view, referenced by various shaders\n\t\tbgcolor: Config({ group: \"style\", type: vec4, value: vec4(0, 0, 0, 0), meta: \"color\" }),\n\t\t// the background image of a view. Accepts a string-url or can be assigned a requireDreem('./mypic.png')\n\t\tbgimage: Config({ group: \"style\", type: Object, meta: \"texture\" }),\n\t\t// the opacity of the image\n\t\topacity: Config({ group: \"style\", value: 1.0, type: float }),\n\t\t// Per channel color filter, each color is a value in the range 0.0 ~ 1.0 and is multiplied by the color of the background image\n\t\tcolorfilter: Config({ group: \"style\", type: vec4, value: vec4(1, 1, 1, 1), meta: \"color\" }),\n\n\t\t// Image mode alters how/where the background image is scaled, streched, fit and drawn within the view's bounds.\n\t\tbgimagemode: Config({ group: \"style\", type: Enum(\"resize\", \"custom\", \"stretch\", \"aspect-fit\", \"aspect-fill\", \"center\", \"left\", \"right\", \"top\", \"bottom\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"), value: \"stretch\" }),\n\t\tbgimageaspect: Config({ group: \"style\", value: vec2(1, 1) }),\n\n\t\t// Offets the image within the view.  This value is in texture coordinates.\n\t\tbgimageoffset: Config({ group: \"style\", value: vec2(0, 0) }),\n\n\t\t// When using `aspect-fit`, or `apsect-fill` this property will automatically adjust the image's location within the view.\n\t\tbgimagealign: Config({ group: \"style\", type: Enum(\"none\", \"center\", \"start\", \"end\", \"left\", \"right\", \"top\", \"bottom\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"), value: \"none\" }),\n\n\t\t// the clear color of the view when it is in '2D' or '3D' viewport mode\n\t\tclearcolor: Config({ group: \"style\", type: vec4, value: NaN, meta: \"color\" }),\n\n\t\t// the scroll position of the view matrix, allows to scroll/move items in a viewport. Only works on a viewport:'2D'\n\t\t// this property is manipulated by the overflow:'SCROLL' scrollbars\n\t\tscroll: Config({ type: vec2, value: vec2(0, 0), persist: true }),\n\t\t// the zoom factor of the view matrix, allows zooming of items in a viewport. Only works on viewport:'2D'\n\t\tzoom: Config({ type: float, value: 1 }),\n\t\t// overflow control, shows scrollbars when the content is larger than the viewport. If any value is set, it defaults to viewport:'2D'\n\t\t// works the same way as the CSS property\n\t\toverflow: Config({ type: Enum('', 'hidden', 'scroll', 'auto', 'hscroll', 'vscroll'), value: '' }),\n\n\t\t// size, this holds the width/height/depth of the view. When set to NaN it means the layout engine calculates the size\n\t\tsize: Config({ type: vec3, value: vec3(NaN), meta: \"xyz\" }),\n\n\t\t// internal, alias for the x component of size\n\t\tw: Config({ alias: 'size', index: 0 }),\n\t\t// internal, alias for the y component of size\n\t\th: Config({ alias: 'size', index: 1 }),\n\t\t// internal, alias for the z component of size\n\t\td: Config({ alias: 'size', index: 2 }),\n\n\t\t// alias for the x component of size\n\t\twidth: Config({ alias: 'size', index: 0 }),\n\t\t// alias for the y component of size\n\t\theight: Config({ alias: 'size', index: 1 }),\n\t\t// alias for the z component of size\n\t\tdepth: Config({ alias: 'size', index: 2 }),\n\n\t\tpercentsize: Config({ type: vec3, value: vec3(NaN) }),\n\n\t\t// alias for the x component of percentsize\n\t\tpercentwidth: Config({ alias: 'percentsize', index: 0 }),\n\t\t// alias for the y component of percentsize\n\t\tpercentheight: Config({ alias: 'percentsize', index: 1 }),\n\t\t// alias for the z component of percentsize\n\t\tpercentdepth: Config({ alias: 'percentsize', index: 2 }),\n\n\t\tpercentpos: Config({ type: vec3, value: vec3(NaN) }),\n\n\t\t// internal, percentage widths/heights\n\t\tpercentx: Config({ alias: 'percentpos', index: 0 }),\n\t\t// internal, percentage widths/heights\n\t\tpercenty: Config({ alias: 'percentpos', index: 1 }),\n\t\t// internal, percentage widths/heights\n\t\tpercentz: Config({ alias: 'percentpos', index: 2 }),\n\n\t\t// the pixelratio of a viewport. Allows scaling the texture buffer to arbitrary resolutions. Defaults to the system (low/high DPI)\n\t\tpixelratio: Config({ type: float, value: NaN }),\n\n\t\t// the minimum size for the flexbox layout engine\n\t\tminsize: Config({ type: vec3, value: vec3(NaN), meta: \"xyz\" }),\n\t\t// the maximum size for the flexbox layout engine\n\t\tmaxsize: Config({ type: vec3, value: vec3(NaN), meta: \"xyz\" }),\n\n\t\t// alias for the x component of minsize\n\t\tminwidth: Config({ alias: 'minsize', index: 0 }),\n\t\t// alias for the y component of minsize\n\t\tminheight: Config({ alias: 'minsize', index: 1 }),\n\t\t// alias for the z component of minsize\n\t\tmindepth: Config({ alias: 'minsize', index: 2 }),\n\n\t\t// alias for the x component of maxsize\n\t\tmaxwidth: Config({ alias: 'maxsize', index: 0 }),\n\t\t// alias for the y component of maxsize\n\t\tmaxheight: Config({ alias: 'maxsize', index: 1 }),\n\t\t// alias for the z component of maxsize\n\t\tmaxdepth: Config({ alias: 'maxsize', index: 2 }),\n\n\t\t// the margin on 4 sides of the box (left, top, right, bottom). Can be assigned a single value to set them all at once\n\t\tmargin: Config({ type: vec4, value: vec4(0, 0, 0, 0), meta: \"ltrb\" }),\n\t\t// alias for the first component of margin\n\t\tmarginleft: Config({ alias: 'margin', index: 0 }),\n\t\t// alias for the second component of margin\n\t\tmargintop: Config({ alias: 'margin', index: 1 }),\n\t\t// alias for the third component of margin\n\t\tmarginright: Config({ alias: 'margin', index: 2 }),\n\t\t// alias for the fourth component of margin\n\t\tmarginbottom: Config({ alias: 'margin', index: 3 }),\n\n\t\t// the padding on 4 sides of the box (left, top, right, bottom) Can be assigned a single value to set them all at once\n\t\tpadding: Config({ type: vec4, value: vec4(0, 0, 0, 0), meta: \"ltrb\" }),\n\t\t// alias for the first component of padding\n\t\tpaddingleft: Config({ alias: 'padding', index: 0 }),\n\t\t// alias for the second component of padding\n\t\tpaddingtop: Config({ alias: 'padding', index: 1 }),\n\t\t// alias for the third component of padding\n\t\tpaddingright: Config({ alias: 'padding', index: 2 }),\n\t\t// alias for the fourth component of padding\n\t\tpaddingbottom: Config({ alias: 'padding', index: 3 }),\n\n\t\ttranslate: Config({ type: vec3, value: vec3(0.) }),\n\t\t// Scale of an item, only useful for items belof a 3D viewport\n\t\tscale: Config({ type: vec3, value: vec3(1), meta: \"xyz\" }),\n\t\t// The anchor point around which items scale and rotate, depending on anchor mode its either a factor of size or and absolute value\n\t\tanchor: Config({ type: vec3, value: vec3(0.) }),\n\t\t// the mode with which the anchor is computed. Factor uses the size of an item to find the point, defaulting to center\n\t\tanchormode: Config({ type: Enum('', 'factor', 'absolute'), value: 'factor' }),\n\t\t// rotate the item around x, y or z in radians. If you want degrees type it like this: 90*DEG\n\t\trotate: Config({ type: vec3, value: vec3(0), meta: \"xyz\" }),\n\n\t\t// the color of the border of an item.\n\t\tbordercolor: Config({ group: \"style\", type: vec4, value: vec4(0, 0, 0, 0), meta: \"color\" }),\n\n\t\t// the radius of the corners of an item, individually settable left, top, right, bottom. Setting this value will switch to rounded corner shaders\n\t\tborderradius: Config({ group: \"style\", type: vec4, value: vec4(0, 0, 0, 0) }),\n\n\t\t// the width of the border. Setting this value will automatically enable the border shaders\n\t\tborderwidth: Config({ group: \"style\", type: vec4, value: vec4(0, 0, 0, 0) }),\n\n\t\t// alias for the first component of borderwidth\n\t\tborderleftwidth: Config({ alias: 'borderwidth', index: 0 }),\n\t\t// alias for the second component of borderwith\n\t\tbordertopwidth: Config({ alias: 'borderwidth', index: 1 }),\n\t\t// alias for the third component of borderwith\n\t\tborderrightwidth: Config({ alias: 'borderwidth', index: 2 }),\n\t\t// alias for the fourth component of borderwith\n\t\tborderbottomwidth: Config({ alias: 'borderwidth', index: 3 }),\n\n\t\t// turn on flex sizing. Flex is a factor that distributes either the widths or the heights of nodes by this factor\n\t\t// flexbox layout is a web standard and has many great tutorials online to learn how it works\n\t\tflex: Config({ group: \"layout\", type: float, value: NaN }),\n\n\t\t// wraps nodes around when the flexspace is full\n\t\tflexwrap: Config({ group: \"layout\", type: Enum('wrap', 'nowrap'), value: \"wrap\" }),\n\t\t// which direction the flex layout is working,\n\t\tflexdirection: Config({ group: \"layout\", type: Enum('row', 'column'), value: \"row\" }),\n\t\t// pushes items eitehr to the start, center or end\n\t\tjustifycontent: Config({ group: \"layout\", type: Enum('', 'flex-start', 'center', 'flex-end', 'space-between', 'space-around'), value: \"\" }),\n\t\t// align items to either start, center, end or stretch them\n\t\talignitems: Config({ group: \"layout\", type: Enum('flex-start', 'center', 'flex-end', 'stretch'), value: \"stretch\" }),\n\t\t// overrides the parents alignitems with our own preference\n\t\talignself: Config({ group: \"layout\", type: Enum('', 'flex-start', 'center', 'flex-end', 'stretch'), value: \"\" }),\n\t\t// item positioning, if absolute it steps 'outside' the normal flex layout\n\t\tposition: Config({ group: \"layout\", type: Enum('relative', 'absolute'), value: \"relative\" }),\n\n\t\t// the layout object, contains width/height/top/left after computing. Its a read-only property and should be used in shaders only.\n\t\t// Can be listened to to observe layout changes\n\t\tlayout: Config({ type: Object, value: {}, meta: \"hidden\" }),\n\n\t\t// When set to 2D or 3D the render engine will create a separate texture pass for this view and all its children\n\t\t// using a 2D viewport is a great way to optimize render performance as when nothing changes, none of the childstructures\n\t\t// need to be processed and a single texture can just be drawn by the parent\n\t\t// the viewportblend shader can be used to render this texture it into its parent\n\t\tviewport: Config({ group: \"layout\", type: Enum('', '2d', '3d'), value: '' }),\n\n\t\t// the field of view of a 3D viewport. Only useful on a viewport:'3D'\n\t\tfov: Config({ group: \"3d\", type: float, value: 45 }),\n\t\t// the nearplane of a 3D viewport, controls at which Z value near clipping start. Only useful on a viewport:'3D'\n\t\tnearplane: Config({ group: \"3d\", type: float, value: 0.001 }),\n\t\t// the farplane of a 3D viewport, controls at which Z value far clipping start. Only useful on a viewport:'3D'\n\t\tfarplane: Config({ group: \"3d\", type: float, value: 1000 }),\n\n\t\t// the position of the camera in 3D space. Only useful on a viewport:'3D'\n\t\tcamera: Config({ group: \"3d\", type: vec3, value: vec3(-2, 2, -2) }),\n\t\t// the point the camera is looking at in 3D space. Only useful on a viewport:'3D'\n\t\tlookat: Config({ group: \"3d\", type: vec3, value: vec3(0) }),\n\t\t// the up vector of the camera (which way is up for the camera). Only useful on a viewport:'3D'\n\t\tup: Config({ group: \"3d\", type: vec3, value: vec3(0, -1, 0) }),\n\n\t\t// internal, the current time which can be used in shaders to create continous animations\n\t\ttime: Config({ meta: \"hidden\", value: 0 }),\n\n\t\t// fires when pointer is pressed down.\n\t\tpointerstart: Config({ type: Event }),\n\t\t// fires when pointer is pressed and moved (dragged).\n\t\tpointermove: Config({ type: Event }),\n\t\tpointermultimove: Config({ type: Event }),\n\t\t// fires when pointer is released.\n\t\tpointerend: Config({ type: Event }),\n\t\t// fires when pointer is pressed and released quickly.\n\t\tpointertap: Config({ type: Event }),\n\t\t// fires when pointer moved without being pressed.\n\t\tpointerhover: Config({ type: Event }),\n\t\t// fires when pointer enters an element.\n\t\tpointerover: Config({ type: Event }),\n\t\t// fires when pointer leaves an element.\n\t\tpointerout: Config({ type: Event }),\n\t\t// fires when mouse wheel is used.\n\t\tpointerwheel: Config({ type: Event }),\n\n\t\t// fires when a drag drop item enters\n\t\tdragover: Config({ type: Event }),\n\t\t// fires when a drag drop item moves\n\t\tdragmove: Config({ type: Event }),\n\t\t// fires when a drag drop item leaves\n\t\tdragout: Config({ type: Event }),\n\n\t\t// fires when a key goes to up. The event argument is {repeat:int, code:int, name:String}\n\t\tkeyup: Config({ type: Event }),\n\t\t// fires when a key goes to down. The event argument is {repeat:int, code:int, name:String}\n\t\tkeydown: Config({ type: Event }),\n\t\t// fires when a key gets pressed. The event argument is {repeat:int, value:string, char:int}\n\t\tkeypress: Config({ type: Event }),\n\t\t// fires when someone pastes data into the view. The event argument is {text:string}\n\t\tkeypaste: Config({ type: Event }),\n\n\t\t// fires when this view loses focus\n\t\tblur: Config({ type: Event }),\n\n\t\t// drop shadow size\n\t\tdropshadowradius: Config({ type: float, value: 20 }),\n\t\t// drop shadow movement\n\t\tdropshadowoffset: Config({ type: vec2, value: vec2(0, 0) }),\n\t\t// drop shadow hardness\n\t\tdropshadowhardness: Config({ type: float, value: 0.5, minvalue: 0, maxvalue: 1 }),\n\t\t// drop shadow opacity\n\t\tdropshadowopacity: Config({ type: float, value: 0, minvalue: 0, maxvalue: 1 }),\n\t\t// drop shadow color\n\t\tdropshadowcolor: Config({ type: vec4, meta: \"color\", value: vec4(\"black\") }),\n\n\t\t// whether this view has focus\n\t\tfocus: Config({ meta: \"hidden\", value: false, persist: true }),\n\t\t// tabstop, sorted by number\n\t\ttabstop: NaN,\n\n\t\t// the type of pointer cursor to use for this view\n\t\tcursor: Config({ type: Enum('', 'arrow', 'none', 'wait', 'text', 'pointer', 'zoom-in', 'zoom-out', 'grab', 'grabbing', 'ns-resize', 'ew-resize', 'nwse-resize', 'nesw-resize', 'w-resize', 'e-resize', 'n-resize', 's-resize', 'nw-resize', 'ne-resize', 'sw-resize', 'se-resize', 'help', 'crosshair', 'move', 'col-resize', 'row-resize', 'vertical-text', 'context-menu', 'no-drop', 'not-allowed', 'alias', 'cell', 'copy'), value: '' }),\n\n\t\t// The number of render passes for this view. Note that corresponding\n\t\t// inner classes will need to be created for multi pass rendering to work,\n\t\t// see /classes/ui/blurtest.js for an example.\n\t\tpasses: Config({ type: int, value: 0, minvalue: 0, maxvalue: 10 })\n\t};\n\n\tthis.name = \"\";\n\tthis.class = \"\";\n\n\tthis.onvisible = this.oncamera = this.onlookat = this.onup = function () {\n\t\tthis.redraw();\n\t};\n\n\t// the number of pick ID's to reserve for this view.\n\tthis.pickrange = 1;\n\n\tthis.boundscheck = true;\n\t// the local matrix\n\tthis.modelmatrix = mat4.identity();\n\t// the concatenation of all parent model matrices\n\tthis.totalmatrix = mat4.identity();\n\t// the last view matrix used\n\tthis.viewmatrix = mat4.identity();\n\t// the viewport matrix used to render the viewportblend\n\tthis.viewportmatrix = mat4.identity();\n\t// the normal matrix contains the transform without translate (for normals)\n\tthis.normalmatrix = mat4.identity();\n\t// the remap matrix used to remap pointer vec2 to local space\n\tthis.remapmatrix = mat4();\n\n\t// forward references for shaders\n\tthis.layout = { width: 0, height: 0, left: -1, top: -1, right: 0, bottom: 0 };\n\tthis.screen = { device: { size: vec2(), frame: { size: vec2() } } };\n\n\tthis.noise = requireDreem('$system/shaderlib/noiselib');\n\tthis.pal = requireDreem('$system/shaderlib/palettelib');\n\tthis.shape = requireDreem('$system/shaderlib/shapelib');\n\tthis.math = requireDreem('$system/shaderlib/mathlib');\n\tthis.demo = requireDreem('$system/shaderlib/demolib');\n\tthis.material = requireDreem('$system/shaderlib/materiallib');\n\tthis.colorlib = requireDreem('$system/shaderlib/colorlib');\n\n\t// turn off rpc proxy generation for this prototype level\n\tthis.rpcproxy = false;\n\n\tthis.ondropshadowradius = function () {\n\t\tif (this.dropshadowopacity > 0) {\n\t\t\tthis.shadowrect = true;\n\t\t} else {\n\t\t\tthis.shadowrect = false;\n\t\t}\n\t};\n\n\t// internal, listen to switch the shaders when borderradius changes\n\tthis.onborderradius = function () {\n\t\tthis.setBorderShaders();\n\t};\n\n\tthis.onborderwidth = function () {\n\t\tthis.setBorderShaders();\n\t};\n\n\tthis.onbgcolor = function () {\n\t\tthis.setBorderShaders();\n\t};\n\n\tthis.setBorderShaders = function () {\n\t\tvar radius = this._borderradius;\n\t\t//var value = event.value\n\t\tvar border_on = true;\n\t\tvar width = this._borderwidth;\n\t\tif (width[0] === 0 && width[1] === 0 && width[2] === 0 && width[3] === 0) {\n\t\t\tborder_on = false;\n\t\t} else {\n\t\t\tborder_on = true;\n\t\t}\n\n\t\tvar bg_on = isNaN(this._bgcolor[0]) ? false : true;\n\n\t\tif (this._viewport === '3d') border_on = false, bg_on = false;\n\n\t\tif (radius[0] !== 0 || radius[1] !== 0 || radius[2] !== 0 || radius[3] !== 0) {\n\t\t\t// this switches the bg shader to the rounded one\n\t\t\tif (this._bgimage) {\n\t\t\t\tthis.roundedimage = true;\n\t\t\t\tthis.roundedrect = false;\n\t\t\t} else {\n\t\t\t\tthis.roundedrect = bg_on;\n\t\t\t\tthis.roundedimage = false;\n\t\t\t}\n\t\t\tthis.roundedborder = border_on;\n\t\t\tthis.hardimage = false;\n\t\t\tthis.hardrect = false;\n\t\t\tthis.hardborder = false;\n\t\t} else {\n\t\t\tif (this._bgimage) {\n\t\t\t\tthis.hardimage = true;\n\t\t\t\tthis.hardrect = false;\n\t\t\t} else {\n\t\t\t\tthis.hardrect = bg_on;\n\t\t\t\tthis.hardimage = false;\n\t\t\t}\n\n\t\t\tthis.hardborder = border_on;\n\t\t\tthis.roundedrect = false;\n\t\t\tthis.roundedborder = false;\n\t\t\tthis.roundedimage = false;\n\t\t}\n\t};\n\n\t// internal, listen to the viewport to turn off our background and border shaders when 3D\n\tthis.onviewport = function (event) {\n\t\tthis.setBorderShaders();\n\t};\n\n\t// internal, automatically turn a viewport:'2D' on when we  have an overflow (scrollbars) set\n\tthis.onoverflow = function () {\n\t\tif (this._overflow) {\n\t\t\tif (!this._viewport) this._viewport = '2d';\n\t\t}\n\t};\n\n\t// internal, setting focus to true\n\tthis.onfocus = function (event) {\n\t\tif (!event.mark) {\n\t\t\t// someone set it to true that wasnt us\n\t\t\tthis.screen.setFocus(this);\n\t\t}\n\t};\n\n\t// internal, put a tablistener\n\tthis.ontabstop = function (event) {\n\t\tif (isNaN(event.old) && !isNaN(event.value)) {\n\t\t\tthis.addListener('keydown', function (value) {\n\t\t\t\tif (value.name === 'tab') {\n\t\t\t\t\tif (value.shift) {\n\t\t\t\t\t\tthis.screen.focusPrev(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.screen.focusNext(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t// draw dirty is a bitmask of 2 bits, the guid-dirty and the color-dirty\n\tthis.draw_dirty = 3;\n\t// layout dirty causes a relayout to occur (only on viewports)\n\tthis.layout_dirty = true;\n\t// update dirty causes a shader update to occur\n\tthis.update_dirty = true;\n\t// update matrix stack\n\tthis.matrix_dirty = true;\n\n\t// internal, initialization of a view\n\tthis.atViewInit = function (prev) {\n\n\t\tthis.anims = {};\n\t\t//this.layout = {width:0, height:0, left:0, top:0, right:0, bottom:0}\n\t\tthis.shader_list = [];\n\n\t\tthis.initialized = true;\n\n\t\tif (prev) {\n\t\t\tthis.modelmatrix = prev.modelmatrix;\n\t\t\tthis.totalmatrix = prev.totalmatrix;\n\t\t\tthis.viewportmatrix = prev.viewportmatrix;\n\t\t\tthis.layout = prev.layout;\n\t\t} else {\n\t\t\tthis.modelmatrix = mat4();\n\t\t\tif (this._viewport) {\n\t\t\t\tthis.totalmatrix = mat4.identity();\n\t\t\t} else {\n\t\t\t\tthis.totalmatrix = mat4();\n\t\t\t}\n\t\t\tthis.viewportmatrix = mat4();\n\t\t}\n\n\t\t// create shaders\n\t\tthis.shaders = {};\n\t\tfor (var key in this.shader_enable) {\n\t\t\tvar enable = this.shader_enable[key];\n\t\t\tif (!enable) continue;\n\t\t\tvar shader = this[key];\n\t\t\tif (shader) {\n\t\t\t\tvar prevshader = prev && prev.shaders && prev.shaders[key];\n\t\t\t\tvar shobj;\n\t\t\t\t// ok so instead of comparing constructor, lets compare the computational result\n\t\t\t\tif (prevshader && (prevshader.constructor === shader || prevshader.isShaderEqual(shader.prototype, this, prev))) {\n\t\t\t\t\tshobj = prevshader;\n\t\t\t\t\tObject.defineProperty(shobj, 'constructor', { value: shader, configurable: true });\n\n\t\t\t\t\tshobj.view = this;\n\t\t\t\t\tshobj.outer = this;\n\n\t\t\t\t\t// ok now check if we need to dirty it\n\t\t\t\t\tif (shobj._view_listeners) for (var shkey in shobj._view_listeners) {\n\t\t\t\t\t\tthis.addListener(shkey, shobj.reupdate.bind(shobj));\n\t\t\t\t\t\tvar value = this[shkey];\n\t\t\t\t\t\tif (!(value && value.struct && value.struct.equals(value, prev[shkey]) || value === prev[shkey])) {\n\t\t\t\t\t\t\tshobj.reupdate(shkey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevshader.reused = true;\n\t\t\t\t} else {\n\t\t\t\t\tshobj = new shader(this);\n\t\t\t\t}\n\t\t\t\tshobj.shadername = key;\n\t\t\t\tthis.shaders[key] = shobj;\n\t\t\t\tthis.shader_list.push(shobj);\n\t\t\t}\n\t\t}\n\n\t\tif (this._bgimage) {\n\t\t\tthis.onbgimage();\n\t\t}\n\n\t\t// a _viewport is a top-level canvas object, or a scrolling view.\n\t\tif (this._viewport) {\n\t\t\tfor (var key in this.shaders) {\n\t\t\t\tvar shader = this.shaders[key];\n\t\t\t\tif (shader.dont_scroll_as_viewport) {\n\t\t\t\t\tthis.shaders[key].noscroll = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.shaders.viewportblend = new this.viewportblend(this);\n\n\t\t\tif (this.passes > 0) {\n\t\t\t\t// loop and create RenderPass instances\n\t\t\t\tfor (var i = 0; i < this.passes; i++) {\n\t\t\t\t\t// based on this.passes with names pass0..9\n\t\t\t\t\tvar key = 'pass' + i;\n\t\t\t\t\tif (key in this) {\n\t\t\t\t\t\tthis.shaders[key] = new this[key](this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('you are missing an inner class named', key, 'in', this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.sortShaders();\n\t};\n\n\t// lets destroy some shaders/vertexbuffers\n\tthis.atViewDestroy = function () {\n\t\tfor (var key in this.shaders) {\n\t\t\tvar shader = this.shaders[key];\n\t\t\tif (!shader.reused && shader.hasOwnProperty('mesh') && !shader.mesh.sticky) {\n\t\t\t\tthis.screen.device.gl.deleteBuffer(shader.mesh.glvb);\n\t\t\t\tshader.mesh.glvb = undefined;\n\t\t\t}\n\t\t\tshader.reused = undefined;\n\t\t}\n\t};\n\n\tObject.defineProperty(this, 'bg', {\n\t\tget: function get() {},\n\t\tset: function set() {\n\t\t\tconsole.error('bg property depricated, please use bgcolor:NaN to turn off background shader, and subclass via bgcolorfn or hardrect/roundedrect specifically');\n\t\t}\n\t});\n\n\tthis.onbgimage = function () {\n\t\tif (this.initialized) {\n\t\t\tif (typeof this._bgimage === 'string') {\n\t\t\t\t// Path to image was specified\n\t\t\t\tif (requireDream.loaded(this._bgimage)) {\n\t\t\t\t\tvar img = requireDreem(this._bgimage);\n\t\t\t\t\tthis.setBgImage(img);\n\t\t\t\t} else {\n\t\t\t\t\t// check if loaded already\n\t\t\t\t\trequireDreem.async(this._bgimage, 'jpeg').then(function (result) {\n\t\t\t\t\t\tthis.setBgImage(result);\n\t\t\t\t\t}.bind(this));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setBgImage(this._bgimage);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setBorderShaders();\n\t\t}\n\t};\n\n\tthis.defaultKeyboardHandler = function (v, prefix) {\n\t\tif (!prefix) prefix = \"\";\n\n\t\tvar keyboard = this.screen.keyboard;\n\t\tkeyboard.textarea.focus();\n\n\t\tvar name = prefix + 'keydown' + v.name[0].toUpperCase() + v.name.slice(1);\n\t\t//this.undo_group++\n\n\t\tif (keyboard.leftmeta || keyboard.rightmeta) name += 'Cmd';\n\t\tif (keyboard.ctrl) name += 'Ctrl';\n\t\tif (keyboard.alt) name += 'Alt';\n\t\tif (keyboard.shift) name += 'Shift';\n\n\t\tif (this[name]) {\n\t\t\tthis[name](v);\n\t\t} else if (this.keydownHandler) {\n\t\t\tthis.keydownHandler(name);\n\t\t}\n\t};\n\n\t// image can be an image, or a Texture (has array property).\n\tthis.setBgImage = function (image) {\n\t\tvar shader = this.shaders.hardimage || this.shaders.roundedimage;\n\t\tif (!shader) return;\n\n\t\t// Callback method to update the bgimage. Some platforms support a\n\t\t// second argument to Texture.fromImage for delayed loading\n\t\tvar update = function (img) {\n\t\t\tif (!img) return;\n\t\t\tshader.texture = img;\n\t\t\tif (this.bgimagemode === \"resize\") {\n\t\t\t\tthis._size = img.size;\n\t\t\t\tthis.relayout();\n\t\t\t} else if (img) {\n\t\t\t\tthis.onbgimagemode();\n\t\t\t} else this.redraw();\n\t\t}.bind(this);\n\n\t\tupdate(image.array ? image : Shader.Texture.fromImage(image, update));\n\t};\n\n\t// internal, emit an event upward (to all parents) untill a listener is hit\n\tthis.emitUpward = function (key, msg) {\n\t\tif (this['_listen_' + key] || this['on' + key]) {\n\t\t\tthis.emit(key, msg);\n\t\t\treturn this;\n\t\t}\n\t\tif (this.parent) {\n\t\t\treturn this.parent.emitUpward(key, msg);\n\t\t}\n\t};\n\n\tthis.findEmitUpward = function (key) {\n\t\tif (this['_listen_' + key] || this['on' + key]) {\n\t\t\treturn this;\n\t\t}\n\t\tif (this.parent) {\n\t\t\treturn this.parent.findEmitUpward(key);\n\t\t}\n\t};\n\n\tthis.computeCursor = function () {\n\t\tvar node = this;\n\t\twhile (node) {\n\t\t\tif (node._cursor !== '') {\n\t\t\t\tthis.screen.pointer.cursor = node._cursor;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnode = node.parent;\n\t\t}\n\t};\n\n\t// internal, sorts the shaders\n\tthis.sortShaders = function () {\n\t\tvar shaders = this.shaders;\n\t\tthis.shader_draw_list = this.shader_list.slice(0).sort(function (a, b) {\n\t\t\treturn shaders[a.shadername].draworder > shaders[b.shadername].draworder;\n\t\t}.bind(this));\n\t\tthis.shader_update_list = this.shader_list.slice(0).sort(function (a, b) {\n\t\t\treturn shaders[a.shadername].updateorder > shaders[b.shadername].updateorder;\n\t\t}.bind(this));\n\t};\n\n\t// internal, custom hook in the inner class assignment to handle nested shaders specifically\n\tthis.atInnerClassAssign = function (key, value) {\n\t\tif (!this.hasOwnProperty('shader_enable')) this.shader_enable = Object.create(this.shader_enable || {});\n\t\t// set the shader order\n\t\tif (!value || typeof value === 'number' || typeof value === 'boolean') {\n\t\t\tthis.shader_enable[key] = value ? true : false;\n\t\t\treturn;\n\t\t}\n\t\t// its a class assignment\n\t\tif (typeof value === 'function' && Object.getPrototypeOf(value.prototype) !== Object.prototype) {\n\t\t\tthis['_' + key] = value;\n\t\t\treturn;\n\t\t}\n\t\t// its inheritance\n\t\tvar cls = this['_' + key];\n\t\tthis['_' + key] = cls.extend(value, this);\n\t};\n\n\t// internal, redraw our view and bubble up the viewport dirtiness to the root\n\tthis.redraw = function () {\n\t\tif (!this.parent_viewport) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.parent_viewport.draw_dirty === 3) {\n\t\t\treturn;\n\t\t}\n\t\tvar parent = this;\n\t\twhile (parent) {\n\t\t\tvar viewport = parent.parent_viewport;\n\t\t\tif (!viewport) break;\n\t\t\tif (viewport.draw_dirty === 3) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tviewport.draw_dirty = 3;\n\t\t\tparent = viewport.parent;\n\t\t}\n\t\tthis.draw_dirty = 3;\n\t\tif (this.screen.device && this.screen.device.redraw) {\n\t\t\tthis.screen.device.redraw();\n\t\t}\n\t};\n\n\t// internal, updates all the shaders\n\tthis.reupdate = function () {\n\t\tvar shaders = this.shader_list;\n\t\tif (shaders) for (var i = 0; i < shaders.length; i++) {\n\t\t\tshaders[i].reupdate();\n\t\t}\n\t};\n\n\tthis.getViewGuid = function () {\n\t\tif (this.viewguid) return this.viewguid;\n\t\tif (this.pickguid) {\n\t\t\tthis.viewguid = '' + this.pickguid;\n\t\t}\n\t\tvar node = this,\n\t\t    id = '';\n\t\twhile (node) {\n\t\t\tif (node.parent) id += node.parent.children.indexOf(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\tthis.viewguid = id;\n\t\treturn id;\n\t};\n\n\tfunction UnProject(glx, gly, glz, modelview, projection) {\n\t\tvar inv = vec4();\n\t\tvar A = mat4.mat4_mul_mat4(modelview, projection);\n\t\tvar m = mat4.invert(A);\n\t\tinv[0] = glx;\n\t\tinv[1] = gly;\n\t\tinv[2] = 2.0 * glz - 1.0;\n\t\tinv[3] = 1.0;\n\t\tout = vec4.vec4_mul_mat4(inv, m);\n\t\t// divide by W to perform perspective!\n\t\tout[0] /= out[3];\n\t\tout[1] /= out[3];\n\t\tout[2] /= out[3];\n\t\treturn vec3(out);\n\t}\n\n\t// Internal: remap the x and y coordinates to local space\n\tthis.globalToLocal = function (value) {\n\t\t//TODO(aki): Simplify.\n\t\tvar sx = this.screen.device.main_frame.size[0] / this.screen.device.ratio;\n\t\tvar sy = this.screen.device.main_frame.size[1] / this.screen.device.ratio;\n\t\tvar mx = value[0] / (sx / 2) - 1.0;\n\t\tvar my = -1 * (value[1] / (sy / 2) - 1.0);\n\n\t\tvar parentlist = [],\n\t\t    ip = this.parent;\n\t\twhile (ip) {\n\t\t\tif (ip._viewport || !ip.parent) parentlist.push(ip);\n\t\t\tip = ip.parent;\n\t\t}\n\n\t\tvar raystart = vec3(mx, my, -100);\n\t\tvar rayend = vec3(mx, my, 100);\n\t\tvar lastrayafteradjust = vec3(mx, my, -100);\n\t\tvar lastprojection = mat4.identity();\n\t\tvar lastviewmatrix = mat4.identity();\n\t\tvar camerapos = vec3(0);\n\t\tvar scaletemp = mat4.scalematrix([1, 1, 1]);\n\t\tvar transtemp2 = mat4.translatematrix([-1, -1, 0]);\n\n\t\tvar lastmode = \"2d\";\n\n\t\tthis.remapmatrix = mat4.identity();\n\n\t\tfor (var i = parentlist.length - 1; i >= 0; i--) {\n\t\t\tvar P = parentlist[i];\n\t\t\tvar newmode = P.parent ? P._viewport : \"2d\";\n\n\t\t\tif (P.parent) {\n\n\t\t\t\tvar MM = P._viewport ? P.viewportmatrix : P.totalmatrix;\n\n\t\t\t\tif (!P.viewportmatrix) console.log(i, \"whaaa\");\n\t\t\t\tmat4.invert(P.viewportmatrix, this.remapmatrix);\n\n\t\t\t\t// 3d to layer transition -> do a raypick.\n\t\t\t\tif (lastmode == \"3d\") {\n\t\t\t\t\tvar startv = UnProject(lastrayafteradjust.x, lastrayafteradjust.y, 0, lastviewmatrix, lastprojection);\n\t\t\t\t\tvar endv = UnProject(lastrayafteradjust.x, lastrayafteradjust.y, 1, lastviewmatrix, lastprojection);\n\n\t\t\t\t\tcamlocal = vec3.mul_mat4(camerapos, this.remapmatrix);\n\t\t\t\t\tendlocal = vec3.mul_mat4(endv, this.remapmatrix);\n\n\t\t\t\t\tvar R = vec3.intersectplane(camlocal, endlocal, vec3(0, 0, -1), 0);\n\t\t\t\t\tif (!R) {\n\t\t\t\t\t\traystart = vec3(0.5, 0.5, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tR = vec3.mul_mat4(R, P.viewportmatrix);\n\t\t\t\t\t\traystart = R;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\traystart = vec3.mul_mat4(raystart, this.remapmatrix);\n\n\t\t\t\tmat4.scalematrix([P.layout.width / 2, P.layout.height / 2, 1000 / 2], scaletemp);\n\t\t\t\tmat4.invert(scaletemp, this.remapmatrix);\n\n\t\t\t\traystart = vec3.mul_mat4(raystart, this.remapmatrix);\n\t\t\t\traystart = vec3.mul_mat4(raystart, transtemp2);\n\n\t\t\t\tlastrayafteradjust = vec3(raystart.x, raystart.y, -1);\n\t\t\t\tlastprojection = P.colormatrices.perspectivematrix;\n\t\t\t\tlastviewmatrix = P.colormatrices.lookatmatrix;\n\t\t\t\tcamerapos = P._camera;\n\t\t\t}\n\n\t\t\tif (i == 0 && this.noscroll) {\n\t\t\t\tmat4.invert(P.colormatrices.noscrollmatrix, this.remapmatrix);\n\t\t\t} else {\n\t\t\t\tmat4.invert(P.colormatrices.viewmatrix, this.remapmatrix);\n\t\t\t}\n\n\t\t\traystart = vec3.mul_mat4(raystart, this.remapmatrix);\n\n\t\t\tlastmode = newmode;\n\t\t}\n\n\t\tvar MM = this._viewport ? this.viewportmatrix : this.totalmatrix;\n\t\tmat4.invert(MM, this.remapmatrix);\n\t\traystart = vec3.mul_mat4(raystart, this.remapmatrix);\n\t\trayend = vec3.mul_mat4(rayend, this.remapmatrix);\n\n\t\treturn vec2(raystart.x, raystart.y);\n\t};\n\n\t// internal, this gets called by the render engine\n\tthis.updateShaders = function () {\n\t\tif (!this.update_dirty) return;\n\t\tthis.update_dirty = false;\n\t\t// we can wire up the shader\n\t\tif (!this._shaderswired) {\n\t\t\tthis.atAttributeGet = function (attrname) {\n\t\t\t\t//if (this.constructor.name === 'label')\n\t\t\t\t//console.log(this.constructor.name, attrname, this['_'+attrname])\n\t\t\t\t// monitor attribute wires for geometry\n\t\t\t\t// lets add a listener\n\t\t\t\tif (!shader._view_listeners) shader._view_listeners = {};\n\t\t\t\tshader._view_listeners[attrname] = 1;\n\n\t\t\t\tthis.addListener(attrname, shader.reupdate.bind(shader, attrname));\n\t\t\t}.bind(this);\n\t\t}\n\n\t\tvar shaders = this.shader_update_list;\n\t\tfor (var i = 0; i < shaders.length; i++) {\n\t\t\tvar shader = shaders[i];\n\t\t\tif (shader.update && shader.update_dirty) {\n\t\t\t\tshader.update_dirty = false;\n\t\t\t\tshader.update();\n\t\t\t}\n\t\t}\n\n\t\tif (!this._shaderswired) {\n\t\t\tthis._shaderswired = true;\n\t\t\tthis.atAttributeGet = undefined;\n\t\t}\n\t};\n\n\t// starts a drag view via render function\n\tthis.startDrag = function (pointerevent, render) {\n\t\tvar dragview = this.screen.openOverlay(render);\n\n\t\tif (!dragview.atDragMove) {\n\t\t\tdragview.atDragMove = function (position) {\n\t\t\t\tthis.x = position[0] - this.width * 0.5;\n\t\t\t\tthis.y = position[1] - this.height * 0.5;\n\t\t\t};\n\t\t}\n\n\t\t// make sure we pick the screen in pointermove\n\t\tpointerevent.pickview = true;\n\t\tdragview.atDragMove(pointerevent.value);\n\n\t\tvar lastdrag;\n\t\tthis.onpointermove = function (event) {\n\t\t\tdragview.atDragMove(event.value);\n\t\t\t// lets send dragenter/leave events\n\t\t\tvar newdrag = event.pick;\n\n\t\t\tif (!dragview.isDropTarget(newdrag, event)) newdrag = undefined;\n\n\t\t\tif (lastdrag !== newdrag) {\n\t\t\t\tif (lastdrag) lastdrag.emitUpward('dragout', {});\n\t\t\t\tif (newdrag) newdrag.emitUpward('dragover', {});\n\t\t\t\tlastdrag = newdrag;\n\t\t\t}\n\t\t\tif (newdrag) newdrag.emitUpward('dragmove', event);\n\t\t};\n\t\tthis.onpointerend = function (event) {\n\t\t\tthis.onpointermove = undefined;\n\t\t\tdragview.closeOverlay();\n\t\t\tif (lastdrag) {\n\t\t\t\tlastdrag.emitUpward('dragout', {});\n\t\t\t}\n\t\t\tdragview.atDrop(lastdrag, event);\n\t\t\tthis.onpointerend = undefined;\n\t\t};\n\t};\n\n\t// internal, decide to inject scrollbars into our childarray\n\tthis.atRender = function () {\n\t\tif (this._viewport === '2d' && (this._overflow === 'auto' || this._overflow === 'scroll' || this._overflow === 'hscroll' || this._overflow === 'vscroll' || this._overflow === 'auto')) {\n\n\t\t\tif (this.vscrollbar) this.vscrollbar.value = 0;\n\t\t\tif (this.hscrollbar) this.hscrollbar.value = 0;\n\n\t\t\tthis.scroll = function (event) {\n\t\t\t\tif (event.mark) return;\n\t\t\t\tif (this.vscrollbar) {\n\t\t\t\t\tthis.vscrollbar.value = Mark(event.value[1]);\n\t\t\t\t}\n\t\t\t\tif (this.hscrollbar) {\n\t\t\t\t\tthis.hscrollbar.value = Mark(event.value[0]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this._overflow === 'auto' || this._overflow === 'scroll' || this._overflow === 'vscroll') this.children.push(this.vscrollbar = this.scrollbar({\n\t\t\t\tposition: 'absolute',\n\t\t\t\tvertical: true,\n\t\t\t\tnoscroll: true,\n\t\t\t\tvalue: function value(event) {\n\t\t\t\t\tif (event.mark) return;\n\t\t\t\t\tthis.parent.scroll = Mark(vec2(this.parent._scroll[0], this._value));\n\t\t\t\t},\n\t\t\t\tlayout: function layout() {\n\t\t\t\t\tvar parent_layout = this.parent.layout;\n\t\t\t\t\tvar this_layout = this.layout;\n\t\t\t\t\tthis_layout.top = 0;\n\t\t\t\t\tthis_layout.width = 10;\n\t\t\t\t\tthis_layout.height = parent_layout.height;\n\t\t\t\t\tthis_layout.left = parent_layout.width - this_layout.width;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (this._overflow === 'auto' || this._overflow === 'scroll' || this._overflow === 'hscroll') this.children.push(this.hscrollbar = this.scrollbar({\n\t\t\t\tposition: 'absolute',\n\t\t\t\tvertical: false,\n\t\t\t\tnoscroll: true,\n\t\t\t\tvalue: function value(event) {\n\t\t\t\t\tif (event.mark) return;\n\t\t\t\t\tthis.parent.scroll = Mark(vec2(this._value, this.parent._scroll[1]));\n\t\t\t\t},\n\t\t\t\tlayout: function layout() {\n\t\t\t\t\tvar parent_layout = this.parent.layout;\n\t\t\t\t\tvar this_layout = this.layout;\n\t\t\t\t\tthis_layout.left = 0;\n\t\t\t\t\tthis_layout.height = 10;\n\t\t\t\t\tthis_layout.width = parent_layout.width;\n\t\t\t\t\tthis_layout.top = parent_layout.height - this_layout.height;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (this.hscrollbar) this.hscrollbar.value = Mark(this._scroll[0]);\n\t\t\tif (this.vscrollbar) this.vscrollbar.value = Mark(this._scroll[1]);\n\n\t\t\tthis.pointerwheel = function (event) {\n\t\t\t\t// cumulative damped wheel value.\n\t\t\t\t// Used to decide if enough horizontal/vertical movement is present.\n\t\t\t\tthis.dampedwheel = this.dampedwheel || vec2(0, 0, 0);\n\t\t\t\tthis.dampedwheel = vec2((this.dampedwheel[0] * 9 + event.wheel[0]) / 10, (this.dampedwheel[1] * 9 + event.wheel[1]) / 10);\n\n\t\t\t\tif (this.vscrollbar && this.vscrollbar._visible) {\n\t\t\t\t\tif (!this.hscrollbar || !this.hscrollbar._visible) {\n\t\t\t\t\t\tif (abs(this.dampedwheel[0]) > abs(this.dampedwheel[1]) * 2) return;\n\t\t\t\t\t}\n\t\t\t\t\tthis.vscrollbar.value = clamp(this.vscrollbar._value + event.wheel[1], 0, this.vscrollbar._total - this.vscrollbar._page);\n\t\t\t\t}\n\t\t\t\tif (this.hscrollbar && this.hscrollbar._visible) {\n\t\t\t\t\tif (!this.vscrollbar || !this.vscrollbar._visible) {\n\t\t\t\t\t\tif (abs(this.dampedwheel[1]) > abs(this.dampedwheel[0]) / 2) return;\n\t\t\t\t\t}\n\t\t\t\t\tthis.hscrollbar.value = clamp(this.hscrollbar._value + event.wheel[0], 0, this.hscrollbar._total - this.hscrollbar._page);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//TODO(aki): implement zoom\n\t\t\t// this.pointerzoom = function(event){\n\t\t\t// \tvar zoom = event.value.zoom\n\t\t\t// \tvar lastzoom = this._zoom\n\t\t\t// \tvar newzoom = clamp(lastzoom * (1+0.03 * zoom),0.01,10)\n\t\t\t// \tthis.zoom = newzoom\n\t\t\t//\n\t\t\t// \tvar pos = this.globalToLocal(event.value.position)\n\t\t\t//\n\t\t\t// \tvar shiftx = pos[0] * lastzoom - pos[0] * this._zoom\n\t\t\t// \tvar shifty = pos[1] * lastzoom - pos[1] * this._zoom\n\t\t\t//\n\t\t\t// \tthis.hscrollbar.value = clamp(this.hscrollbar._value + shiftx, 0, this.hscrollbar._total - this.hscrollbar._page)\n\t\t\t// \tthis.vscrollbar.value = clamp(this.vscrollbar._value + shifty, 0, this.vscrollbar._total - this.vscrollbar._page)\n\t\t\t//\n\t\t\t// \tthis.updateScrollbars()\n\t\t\t// \tthis.redraw()\n\t\t\t// }\n\t\t}\n\t};\n\n\t// internal, show/hide scrollbars\n\tthis.updateScrollbars = function () {\n\n\t\tif (this.vscrollbar) {\n\t\t\tvar scroll = this.vscrollbar;\n\t\t\tvar totalsize = Math.floor(this.layout.boundh);\n\t\t\tvar viewsize = Math.floor(this.layout.height * this.zoom);\n\t\t\tif (totalsize > viewsize + 1) {\n\t\t\t\tscroll._visible = true;\n\t\t\t\tscroll._total = totalsize;\n\t\t\t\tscroll._page = viewsize;\n\t\t\t\tvar off = clamp(scroll._value, 0, scroll._total - scroll._page);\n\t\t\t\tif (off !== scroll._value) scroll.value = off;\n\t\t\t} else {\n\t\t\t\tif (0 !== scroll._offset) {\n\t\t\t\t\tscroll.value = 0;\n\t\t\t\t}\n\t\t\t\tscroll._visible = false;\n\t\t\t}\n\t\t}\n\t\tif (this.hscrollbar) {\n\t\t\tvar scroll = this.hscrollbar;\n\t\t\tvar totalsize = Math.floor(this._layout.boundw);\n\t\t\tvar viewsize = Math.floor(this._layout.width * this.zoom);\n\t\t\tif (totalsize > viewsize + 1) {\n\t\t\t\tscroll._visible = true;\n\t\t\t\tscroll._total = totalsize;\n\t\t\t\tscroll._page = viewsize;\n\t\t\t\tvar off = clamp(scroll._value, 0, scroll._total - scroll._page);\n\t\t\t\tif (off !== scroll._value) scroll.value = off;\n\t\t\t} else {\n\t\t\t\tif (0 !== scroll._value) scroll.value = 0;\n\t\t\t\tscroll._visible = false;\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, called by doLayout, to update the matrices to layout and parent matrix\n\tthis.updateMatrices = function (parentmatrix, parentviewport, parent_changed, boundsinput, bailbound) {\n\t\t// allow pre-matrix gen hooking\n\t\tif (this.atMatrix) this.atMatrix();\n\n\t\tvar boundsobj = boundsinput;\n\t\tif (!boundsinput) {\n\t\t\tboundsobj = this._layout;\n\t\t\tboundsobj.absx = 0;\n\t\t\tboundsobj.absy = 0;\n\t\t\tboundsobj.boundw = 0;\n\t\t\tboundsobj.boundh = 0;\n\t\t}\n\n\t\tvar layout = this._layout;\n\n\t\tif (this.measured_width !== undefined || this.measured_height !== undefined) {\n\t\t\tvar width = layout.absx + max(layout.width, this.measured_width);\n\t\t\tvar height = layout.absy + max(layout.height, this.measured_height);\n\t\t} else {\n\t\t\tvar width = layout.absx + layout.width;\n\t\t\tvar height = layout.absy + layout.height;\n\t\t}\n\n\t\tif (width > boundsobj.boundw) {\n\t\t\tboundsobj.boundw = width;\n\t\t}\n\t\tif (height > boundsobj.boundh) {\n\t\t\tboundsobj.boundh = height;\n\t\t}\n\n\t\tif (bailbound) return;\n\n\t\tvar matrix_changed = parent_changed;\n\t\tif (parentviewport === '3d') {\n\t\t\tmatrix_changed = true;\n\t\t\tif (this._scale && this._anchor && this._rotate && this._pos) {\n\t\t\t\tmat4.TSRT2(this._anchor, this._scale, this._rotate, this._pos, this.modelmatrix);\n\t\t\t} else {\n\t\t\t\tmat4.identity(this.modelmatrix);\n\t\t\t}\n\t\t} else {\n\t\t\t// compute TSRT matrix\n\t\t\tif (layout) {\n\t\t\t\t//console.log(this.matrix_dirty)\n\t\t\t\t//var ml = this.matrix_layout\n\t\t\t\t//if (!ml || ml.left !== layout.left || ml.top !== layout.top ||\n\t\t\t\t//\tml.width !== layout.width || ml.height !== layout.height\n\t\t\t\t//   || ml.scale !== this._scale || ml.rotate !== this._rotate\n\t\t\t\t//){\n\t\t\t\t//\tthis.matrix_layout = {\n\t\t\t\t//\t\tleft:layout.left,\n\t\t\t\t///\t\ttop:layout.top,\n\t\t\t\t//\twidth:layout.width,\n\t\t\t\t//\theight:layout.height,\n\t\t\t\t//\tscale: this._scale,\n\t\t\t\t//\trotate:this._rotate\n\t\t\t\t//\t}\n\n\t\t\t\tmatrix_changed = true;\n\t\t\t\tvar s = this._scale;\n\t\t\t\tvar r = this._rotate;\n\t\t\t\tvar tr = this._translate;\n\t\t\t\tvar t0 = layout.left + tr[0],\n\t\t\t\t    t1 = layout.top + tr[1],\n\t\t\t\t    t2 = tr[2];\n\t\t\t\t//if (this.name === 'handle') console.log(this.constructor.name, layout.top)\n\t\t\t\t//var hw = (  this.layout.width !== undefined ? this.layout.width: this._size[0] ) / 2\n\t\t\t\t//var hh = ( this.layout.height !== undefined ? this.layout.height: this._size[1]) / 2\n\t\t\t\tvar hw = layout.width / 2;\n\t\t\t\tvar hh = layout.height / 2;\n\t\t\t\tmat4.TSRT(-hw, -hh, 0, s[0], s[1], s[2], r[0], r[1], r[2], t0 + hw * s[0], t1 + hh * s[1], t2, this.modelmatrix);\n\t\t\t} else {\n\t\t\t\tmatrix_changed = true;\n\t\t\t\tvar s = this._scale;\n\t\t\t\tvar r = this._rotate;\n\t\t\t\tvar t = this._translate;\n\t\t\t\tvar hw = this._size[0] / 2;\n\t\t\t\tvar hh = this._size[1] / 2;\n\t\t\t\tmat4.TSRT(-hw, -hh, 0, s[0], s[1], s[2], 0, 0, r[2], t[0] + hw * s[0], t[1] + hh * s[1], t[2], this.modelmatrix);\n\t\t\t}\n\t\t}\n\n\t\tvar parentmode = parentviewport;\n\t\tif (this._viewport) {\n\t\t\tif (parentmatrix) {\n\t\t\t\tmat4.mat4_mul_mat4(this.modelmatrix, parentmatrix, this.viewportmatrix);\n\t\t\t} else {\n\t\t\t\tthis.viewportmatrix = this.modelmatrix;\n\t\t\t}\n\t\t\tmat4.identity(this.totalmatrix);\n\t\t\tparentmode = this._viewport;\n\t\t\tparentmatrix = mat4.global_identity;\n\t\t} else {\n\t\t\tif (parentmatrix && matrix_changed) mat4.mat4_mul_mat4(this.modelmatrix, parentmatrix, this.totalmatrix);\n\t\t}\n\n\t\tvar children = this.children;\n\t\tvar len = children.length;\n\n\t\tif (children) for (var i = 0; i < len; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar clayout = child.layout;\n\t\t\tif (!clayout) continue;\n\t\t\tclayout.absx = layout.absx + clayout.left;\n\t\t\tclayout.absy = layout.absy + clayout.top;\n\t\t\tchild.updateMatrices(this.totalmatrix, parentmode, matrix_changed, boundsobj, child._viewport);\n\t\t}\n\n\t\tif (!boundsinput) {\n\t\t\tthis.updateScrollbars();\n\t\t}\n\n\t\tthis.matrix_dirty = false;\n\t};\n\n\t// emit post layout\n\tfunction emitPostLayout(node, nochild) {\n\t\tvar ref = node.ref;\n\t\tvar oldlayout = ref.oldlayout || {};\n\t\tvar layout = ref._layout;\n\n\t\tif (!nochild) {\n\t\t\tvar children = node.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i];\n\t\t\t\temitPostLayout(child, child.ref._viewport);\n\t\t\t}\n\t\t\tref.layout_dirty = false;\n\t\t}\n\n\t\tvar oldlayout = ref.oldlayout || {};\n\t\tif ((ref._listen_layout || ref.onlayout) && (layout.left !== oldlayout.left || layout.top !== oldlayout.top || layout.width !== oldlayout.width || layout.height !== oldlayout.height)) {\n\t\t\tref.emit('layout', { type: 'setter', owner: ref, key: 'layout', value: layout });\n\t\t}\n\t\tref.oldlayout = layout;\n\t\tref.matrix_dirty = true;\n\n\t\tif (ref._bgimage) {\n\t\t\tref.onbgimagemode();\n\t\t}\n\t}\n\n\t// cause this node, all childnodes and relevant parent nodes to relayout\n\n\tthis.relayoutRecur = function (source) {\n\t\tthis.layout_dirty = true;\n\t\tthis.draw_dirty = 3; // bitmask, 2 = pick, 1= color\n\t\tfor (var i = 0; i < this.child_viewport_list.length; i++) {\n\t\t\tvar child = this.child_viewport_list[i];\n\t\t\t//if (child._overflow) continue\n\t\t\tif (child !== source) {\n\t\t\t\tchild.relayoutRecur();\n\t\t\t}\n\t\t}\n\t\tif (this.parent_viewport !== this) {\n\t\t\tif (this.parent_viewport._overflow) return;\n\t\t\tthis.parent_viewport.relayoutRecur(this);\n\t\t}\n\t};\n\n\t// ok so. what we need to do is\n\t// scan up towards overflow something\n\t// scan down and skip overflow something.\n\n\tthis.relayout = function (shallow) {\n\t\tif (this.layout_dirty) return;\n\t\tthis.layout_dirty = true;\n\t\tthis.redraw();\n\t\tif (this.parent_viewport) this.parent_viewport.relayoutRecur();\n\t};\n\n\tthis.rematrix = function () {\n\t\tthis.matrix_dirty = true;\n\t\tif (this.parent_viewport) {\n\t\t\tthis.parent_viewport.matrix_dirty = true;\n\t\t\tthis.redraw();\n\t\t}\n\t};\n\n\t// internal, moving a position in absolute should only trigger a matrix reload\n\tthis.pos = function () {\n\t\tif (this._position === 'absolute') {\n\t\t\tthis._layout.left = this._pos[0];\n\t\t\tthis._layout.top = this._pos[1];\n\t\t\tthis.rematrix();\n\t\t} else {\n\t\t\tthis.relayout();\n\t\t}\n\t};\n\n\tthis.corner = this.size = this.minsize = this.maxsize = this.margin = this.padding = this.flex = this.flexwrap = this.flexdirection = this.justifycontent = this.alignitems = this.alignself = this.position = this.relayout;\n\n\tthis.translate = this.scale = this.rotate = this.rematrix;\n\n\t// internal, called by the render engine\n\tthis.doLayout = function () {\n\n\t\tif (this.parent && !isNaN(this._flex)) {\n\t\t\t// means our layout has been externally defined\n\n\t\t\tvar layout = this._layout;\n\t\t\tvar flex = this._flex;\n\t\t\tvar size = this._size;\n\n\t\t\tvar presizex = isNaN(this._percentsize[0]) ? layout.width : this.parent._layout.width * this._percentsize[0];\n\t\t\tvar presizey = isNaN(this._percentsize[1]) ? layout.height : this.parent._layout.height * this._percentsize[1];\n\n\t\t\t//console.log(this._percentsize, presizex,presizey)\n\t\t\t//this._size = vec2(layout.width, layout.height)\n\n\t\t\tvar flexwrap = this._flexwrap;\n\t\t\tthis._flex = 1;\n\t\t\tthis._size = vec2(presizex, presizey);\n\t\t\tthis._flexwrap = false;\n\n\t\t\tif (this.measure) this.measure(); // otherwise it doesnt get called\n\n\t\t\tvar copynodes = FlexLayout.fillNodes(this);\n\t\t\tFlexLayout.computeLayout(copynodes);\n\n\t\t\tthis._flex = flex;\n\t\t\tthis._size = size;\n\t\t\tthis._flexwrap = flexwrap;\n\t\t\tthis._layout = layout;\n\n\t\t\temitPostLayout(copynodes);\n\t\t} else {\n\t\t\tvar layout = this._layout;\n\n\t\t\t//this._size = vec2(presizex, presizey)\n\t\t\tvar size = this._size;\n\t\t\tvar pos = this._pos;\n\n\t\t\tvar presizex = isNaN(this._percentsize[0]) ? size[0] : this.parent._layout.width * 0.01 * this._percentsize[0];\n\t\t\tvar presizey = isNaN(this._percentsize[1]) ? size[1] : this.parent._layout.height * 0.01 * this._percentsize[1];\n\t\t\tvar presizez = isNaN(this._percentsize[2]) ? size[2] : this.parent.depth * 0.01 * this._percentsize[2];\n\n\t\t\tvar preposx = isNaN(this._percentpos[0]) ? pos[0] : this.parent._layout.width * 0.01 * this._percentpos[0];\n\t\t\tvar preposy = isNaN(this._percentpos[1]) ? pos[1] : this.parent._layout.height * 0.01 * this._percentpos[1];\n\n\t\t\t// we have some kind of overflow, cause we are a viewport\n\t\t\t// so if height is not given we have to take up the external height\n\t\t\t//console.log(presizey, this.layout.height)\n\t\t\t//console.log(\"This is where we get the percentage size\", this._percentsize, presizex,presizey)\n\n\t\t\tthis._size = vec2(presizex, presizey);\n\t\t\tthis._pos = vec2(preposx, preposy);\n\t\t\tvar preheight = this._layout.height;\n\t\t\tvar copynodes = FlexLayout.fillNodes(this);\n\t\t\tFlexLayout.computeLayout(copynodes);\n\n\t\t\tif (isNaN(presizey)) {\n\t\t\t\tthis._layout.height = preheight;\n\t\t\t}\n\n\t\t\tthis._size = size;\n\t\t\tthis._pos = pos;\n\n\t\t\temitPostLayout(copynodes);\n\t\t}\n\t};\n\n\t// Animates an attribute over time.\n\t// <attribute> {String} The name of the attribute to animate on this view.\n\t// <track> {Object} An object consisting of keys with time offset (in seconds)/value pairs. Each value can be discrete, or an object with motion and value keys where motion describes the interpolation from the previous value to this one, and value describes the value to animate to.\n\t// Returns a promise that resolves when the animation completes. This allows animations\n\t// to be chained together, or other behaviors to occur when an animation ends.\n\tthis.animate = function (attribute, track) {\n\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\tthis.startAnimation(attribute, undefined, track, resolve);\n\t\t}.bind(this));\n\t};\n\n\t// internal, called by animation setters\n\tthis.startAnimation = function (attribute, value, track, resolve) {\n\t\tif (this.initialized) {\n\t\t\treturn this.screen.startAnimationRoot(this, attribute, value, track, resolve);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t// Stops a running animation for an attribute\n\t// <attribute> {String} The name of the attribute to stop animating on this view.\n\tthis.stopAnimation = function (attribute) {\n\t\tif (this.initialized) this.screen.stopAnimationRoot(this, attribute);\n\t};\n\n\t// Determines the background color that should be drawn at a given position.\n\t// Returns a vec4 color value, defaults to bgcolor.\n\tthis.bgcolorfn = function (pos /*vec2*/) {\n\t\treturn bgcolor;\n\t};\n\n\tthis.appendChild = function (render) {\n\t\t// wrap our render function in a temporary view\n\t\tvar vroot = view();\n\t\t// set up a temporary view\n\t\tvroot.render = render;\n\t\tvroot.parent = this;\n\t\tvroot.rpc = this.rpc;\n\t\tvroot.screen = this.screen;\n\t\tvroot.parent_viewport = this._viewport ? this : this.parent_viewport;\n\t\t// render it\n\t\tRender.process(vroot, undefined, undefined, true);\n\t\t// move the children over\n\t\tthis.children.push.apply(this.children, vroot.children);\n\t\tfor (var i = 0; i < vroot.children.length; i++) {\n\t\t\tvroot.children[i].parent = this;\n\t\t}\n\t\t// lets cause a relayout\n\t\tthis.relayout();\n\t};\n\n\tdefineDreem.class(this, 'hardrect', this.Shader, function () {\n\t\tthis.updateorder = 0;\n\t\tthis.draworder = 0;\n\t\tthis.dont_scroll_as_viewport = true;\n\t\tthis.mesh = vec2.array();\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\t\tthis.position = function () {\n\t\t\tuv = mesh.xy;\n\t\t\tpos = vec2(mesh.x * view.layout.width, mesh.y * view.layout.height);\n\t\t\tvar res = vec4(pos, -0.004, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\treturn res;\n\t\t};\n\t\tthis.color = function () {\n\t\t\tvar col = view.bgcolorfn(mesh.xy);\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\tthis.hardrect = true;\n\n\tthis.bordercolorfn = function (pos) {\n\t\treturn bordercolor;\n\t};\n\n\tdefineDreem.class(this, 'hardborder', this.Shader, function () {\n\t\tthis.updateorder = 0;\n\t\tthis.draworder = 1;\n\t\tthis.mesh = vec2.array();\n\t\tthis.dont_scroll_as_viewport = true;\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\tvar bw1 = view.borderwidth[0] / width;\n\t\t\tvar bw2 = view.borderwidth[1] / width;\n\t\t\tvar bw3 = view.borderwidth[2] / height;\n\t\t\tvar bw4 = view.borderwidth[3] / height;\n\n\t\t\tvar mesh = this.mesh = vec2.array();\n\n\t\t\tmesh.pushQuad(0, 0, bw1, 0, 0, 1, bw1, 1);\n\t\t\tmesh.pushQuad(1 - bw2, 0, 1, 0, 1 - bw2, 1, 1, 1);\n\t\t\tmesh.pushQuad(0, 0, 1, 0, 0, bw3, 1, bw3);\n\t\t\tmesh.pushQuad(0, 1 - bw4, 1, 1 - bw4, 0, 1, 1, 1);\n\t\t};\n\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\n\t\tthis.position = function () {\n\t\t\tuv = mesh.xy;\n\t\t\tpos = vec2(mesh.x * view.layout.width, mesh.y * view.layout.height);\n\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\t\tthis.color = function () {\n\t\t\tvar col = view.bordercolorfn(uv.xy);\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\n\t// hard edged bgimage shader\n\tdefineDreem.class(this, 'hardimage', this.hardrect, function () {\n\t\tthis.dont_scroll_as_viewport = true;\n\t\tthis.updateorder = 0;\n\t\tthis.draworder = 0;\n\t\tthis.texture = Shader.Texture.fromType(Shader.Texture.RGBA);\n\n\t\tthis.color = function () {\n\t\t\tvar img = this.texture.samplemip(vec2(view.bgimageoffset[0] + mesh.xy.x * view.bgimageaspect[0], view.bgimageoffset[1] + mesh.xy.y * view.bgimageaspect[1]));\n\t\t\tvar bg = view.bgcolor;\n\n\t\t\t// premultiply alpha\n\t\t\timg.rgb = img.rgb * img.a + bg.rgb * (1 - img.a);\n\n\t\t\tvar col = mix(bg, img, img.a);\n\n\t\t\treturn vec4(col.r * view.colorfilter[0], col.g * view.colorfilter[1], col.b * view.colorfilter[2], col.a * view.colorfilter[3] * view.opacity);\n\t\t};\n\t});\n\n\tthis.onbgimagemode = function (ev, v, o) {\n\n\t\tif (this.shaders) {\n\t\t\tvar shader = this.shaders.hardimage || this.shaders.roundedimage;\n\n\t\t\tif (shader && shader.texture) {\n\t\t\t\tvar size = shader.texture.size;\n\n\t\t\t\tvar imgw = size[0];\n\t\t\t\tvar imgh = size[1];\n\t\t\t\tvar aspect = this._width / this._height;\n\t\t\t\tvar uselayout = false;\n\t\t\t\tif (isNaN(aspect)) {\n\t\t\t\t\tuselayout = true;\n\t\t\t\t\taspect = this._layout.width / this._layout.height;\n\t\t\t\t}\n\t\t\t\tvar ratio = imgw / imgh / aspect;\n\t\t\t\tvar rx, ry, fitsize, target, offset;\n\n\t\t\t\tif (this.bgimagemode === \"stretch\" || this.bgimagemode === \"resize\") {\n\t\t\t\t\tthis.bgimageaspect = vec2(1.0, 1.0);\n\t\t\t\t} else if (this.bgimagemode === \"aspect-fit\") {\n\t\t\t\t\tif (uselayout) {\n\t\t\t\t\t\trx = this._layout.width / imgw;\n\t\t\t\t\t\try = this._layout.height / imgh;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trx = this._width / imgw;\n\t\t\t\t\t\try = this._height / imgh;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (uselayout && this._layout.width > this._layout.height || !uselayout && this._width > this._height) {\n\t\t\t\t\t\tthis.bgimageaspect = vec2(1.0 / ratio, 1.0);\n\t\t\t\t\t\tif (this._bgimagealign !== \"none\") {\n\t\t\t\t\t\t\tfitsize = imgw * ry;\n\t\t\t\t\t\t\tif (this._bgimagealign === \"center\" || this._bgimagealign === \"top\" || this._bgimagealign === \"bottom\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.width * 0.5 - fitsize * 0.5;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"end\" || this._bgimagealign === \"right\" || this._bgimagealign === \"top-right\" || this._bgimagealign === \"bottom-right\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.width - fitsize;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"start\" || this._bgimagealign === \"left\" || this._bgimagealign === \"top-left\" || this._bgimagealign === \"bottom-left\") {\n\t\t\t\t\t\t\t\ttarget = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toffset = target / fitsize;\n\t\t\t\t\t\t\tthis.bgimageoffset = vec2(-offset, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.bgimageaspect = vec2(1.0, ratio);\n\t\t\t\t\t\tif (this._bgimagealign !== \"none\") {\n\t\t\t\t\t\t\tfitsize = imgh * rx;\n\t\t\t\t\t\t\tif (this._bgimagealign === \"center\" || this._bgimagealign === \"left\" || this._bgimagealign === \"right\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.height * 0.5 - fitsize * 0.5;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"end\" || this._bgimagealign === \"bottom\" || this._bgimagealign === \"bottom-right\" || this._bgimagealign === \"bottom-left\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.height - fitsize;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"start\" || this._bgimagealign === \"top\" || this._bgimagealign === \"top-right\" || this._bgimagealign === \"top-left\") {\n\t\t\t\t\t\t\t\ttarget = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toffset = target / fitsize;\n\t\t\t\t\t\t\tthis.bgimageoffset = vec2(0, -offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.bgimagemode === \"aspect-fill\") {\n\n\t\t\t\t\tif (uselayout && this._layout.width > this._layout.height || !uselayout && this._width > this._height) {\n\t\t\t\t\t\tthis.bgimageaspect = vec2(1.0, ratio);\n\n\t\t\t\t\t\tif (this._bgimagealign !== \"none\") {\n\t\t\t\t\t\t\tfitsize = imgh * (this._layout.width / imgw);\n\t\t\t\t\t\t\tif (this._bgimagealign === \"center\" || this._bgimagealign === \"left\" || this._bgimagealign === \"right\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.height * 0.5 - fitsize * 0.5;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"end\" || this._bgimagealign === \"bottom\" || this._bgimagealign === \"bottom-left\" || this._bgimagealign === \"bottom-right\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.height - fitsize;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"start\" || this._bgimagealign === \"top\" || this._bgimagealign === \"top-left\" || this._bgimagealign === \"top-right\") {\n\t\t\t\t\t\t\t\ttarget = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\toffset = target / fitsize;\n\t\t\t\t\t\t\t\tthis.bgimageoffset = vec2(0, -offset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.bgimageaspect = vec2(1.0 / ratio, 1.0);\n\t\t\t\t\t\tif (this._bgimagealign !== \"none\") {\n\t\t\t\t\t\t\tfitsize = imgw * (this._layout.height / imgh);\n\t\t\t\t\t\t\tif (this._bgimagealign === \"center\" || this._bgimagealign === \"top\" || this._bgimagealign === \"bottom\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.width * 0.5 - fitsize * 0.5;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"end\" || this._bgimagealign === \"right\" || this._bgimagealign === \"bottom-right\" || this._bgimagealign === \"top-right\") {\n\t\t\t\t\t\t\t\ttarget = this._layout.width - fitsize;\n\t\t\t\t\t\t\t} else if (this._bgimagealign === \"start\" || this._bgimagealign === \"left\" || this._bgimagealign === \"bottom-left\" || this._bgimagealign === \"top-left\") {\n\t\t\t\t\t\t\t\ttarget = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\toffset = target / fitsize;\n\t\t\t\t\t\t\t\tthis.bgimageoffset = vec2(-offset, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.bgimagemode === \"center\" || this.bgimagemode === \"left\" || this.bgimagemode === \"right\" || this.bgimagemode === \"top\" || this.bgimagemode === \"top-left\" || this.bgimagemode === \"top-right\" || this.bgimagemode === \"bottom\" || this.bgimagemode === \"bottom-left\" || this.bgimagemode === \"bottom-right\") {\n\n\t\t\t\t\tvar rx, ry;\n\n\t\t\t\t\tif (uselayout) {\n\t\t\t\t\t\trx = this._layout.width / imgw;\n\t\t\t\t\t\try = this._layout.height / imgh;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trx = this._width / imgw;\n\t\t\t\t\t\try = this._height / imgh;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.bgimageaspect = vec2(rx, ry);\n\n\t\t\t\t\tif (this.bgimagemode === \"center\") {\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0.5, 0.5);\n\t\t\t\t\t} else if (this.bgimagemode === \"left\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0, 0.5);\n\t\t\t\t\t} else if (this.bgimagemode === \"right\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(1.0 - rx, 0.5);\n\t\t\t\t\t} else if (this.bgimagemode === \"top\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0.5, 0);\n\t\t\t\t\t} else if (this.bgimagemode === \"top-left\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0, 0);\n\t\t\t\t\t} else if (this.bgimagemode === \"top-right\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(1.0 - rx, 0);\n\t\t\t\t\t} else if (this.bgimagemode === \"bottom\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0.5, 1.0 - ry);\n\t\t\t\t\t} else if (this.bgimagemode === \"bottom-left\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(0, 1.0 - ry); //\n\t\t\t\t\t} else if (this.bgimagemode === \"bottom-right\") {\n\n\t\t\t\t\t\tthis.bgimageoffset = vec2(1.0 - rx, 1.0 - ry); //\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// rounded rect shader class\n\tdefineDreem.class(this, 'roundedrect', this.Shader, function () {\n\t\tthis.dont_scroll_as_viewport = true;\n\t\tthis.updateorder = 0;\n\t\tthis.draworder = 0;\n\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\tpos: vec2,\n\t\t\tangle: float,\n\t\t\tradmult: vec4,\n\t\t\tuv: vec2\n\t\t});\n\n\t\tthis.mesh = this.vertexstruct.array();\n\n\t\tthis.depth_test = \"\";\n\n\t\t// matrix and viewmatrix should be referenced on view\n\t\tthis.opacity = 0.0;\n\t\tthis.drawtype = this.TRIANGLE_FAN;\n\t\tthis.color_blend = 'src_alpha * src_color + (1 - src_alpha) * dst_color';\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\tvar radius = view.borderradius;\n\n\t\t\tvar mesh = this.mesh = this.vertexstruct.array();\n\n\t\t\tif (vec4.equals(radius, vec4(0, 0, 0, 0))) {\n\t\t\t\tmesh.push([width / 2, height / 2], 0, [1, 0, 0, 0], 0.5, 0.5);\n\t\t\t\tmesh.push([0, 0], 0, [1, 0, 0, 0], 0, 0);\n\t\t\t\tmesh.push([width, 0], 0, [1, 0, 0, 0], 1, 0);\n\t\t\t\tmesh.push([width, height], 0, [1, 0, 0, 0], 1, 1);\n\t\t\t\tmesh.push([0, height], 0, [1, 0, 0, 0], 0, 1);\n\t\t\t\tmesh.push([0, 0], 0, [1, 0, 0, 0], 0, 0);\n\t\t\t} else {\n\n\t\t\t\tvar divbase = 0.45;\n\t\t\t\tvar pidiv1 = Math.floor(Math.max(2, divbase * PI * radius[0]));\n\t\t\t\tvar pidiv2 = Math.floor(Math.max(2, divbase * PI * radius[1]));\n\t\t\t\tvar pidiv3 = Math.floor(Math.max(2, divbase * PI * radius[2]));\n\t\t\t\tvar pidiv4 = Math.floor(Math.max(2, divbase * PI * radius[3]));\n\n\t\t\t\tvar pimul1 = PI * 0.5 / (pidiv1 - 1);\n\t\t\t\tvar pimul2 = PI * 0.5 / (pidiv2 - 1);\n\t\t\t\tvar pimul3 = PI * 0.5 / (pidiv3 - 1);\n\t\t\t\tvar pimul4 = PI * 0.5 / (pidiv4 - 1);\n\n\t\t\t\tthis.mesh.push([width / 2, height / 2], 0, [0, 0, 0, 0], 0.5, 0.5);\n\n\t\t\t\tfor (var p = 0; p < pidiv1; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(radius[0], radius[0]), p * pimul1, vec4(1, 0, 0, 0), 1, 0);\n\t\t\t\t}for (var p = 0; p < pidiv2; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[1] - 1, radius[1]), p * pimul2 + PI / 2, vec4(0, 1, 0, 0), 1, 0);\n\t\t\t\t}for (var p = 0; p < pidiv3; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[2] - 1, height - radius[2] - 1), p * pimul3 + PI, vec4(0, 0, 1, 0), 1, 1);\n\t\t\t\t}for (var p = 0; p < pidiv4; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(radius[3], height - radius[3] - 1), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, 1), 0, 1);\n\t\t\t\t}this.mesh.push(vec2(radius[0], radius[0]), 0, vec4(1, 0, 0, 0), 1, 0);\n\t\t\t}\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar col = view.bgcolorfn(vec2(pos.x / view.layout.width, pos.y / view.layout.height));\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\n\t\tthis.position = function () {\n\t\t\tpos = mesh.pos.xy;\n\t\t\tvar ca = cos(mesh.angle + PI);\n\t\t\tvar sa = sin(mesh.angle + PI);\n\n\t\t\tvar rad = mesh.radmult.x * view.borderradius.x + mesh.radmult.y * view.borderradius.y + mesh.radmult.z * view.borderradius.z + mesh.radmult.w * view.borderradius.w;\n\t\t\tpos.x += ca * rad;\n\t\t\tpos.y += sa * rad;\n\n\t\t\tuv = vec2(pos.x / view.layout.width, pos.y / view.layout.height);\n\n\t\t\tsized = vec2(pos.x, pos.y);\n\t\t\tvar res = vec4(sized.x, sized.y, -0.05, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t//res.w -= 0.004\n\t\t\treturn res;\n\t\t};\n\t});\n\n\t// hard edged bgimage shader\n\tdefineDreem.class(this, 'roundedimage', this.roundedrect, function () {\n\t\tthis.dont_scroll_as_viewport = true;\n\t\tthis.updateorder = 0;\n\t\tthis.draworder = 0;\n\t\tthis.texture = Shader.Texture.fromType(Shader.Texture.RGBA);\n\t\tthis.color = function () {\n\t\t\tif (view.bgimageoffset[0] + uv.xy.x * view.bgimageaspect.x < 0.0 || view.bgimageoffset[0] + uv.xy.x * view.bgimageaspect.x > 1.0 || view.bgimageoffset[1] + uv.xy.y * view.bgimageaspect.y < 0.0 || view.bgimageoffset[1] + uv.xy.y * view.bgimageaspect.y > 1.0) {\n\t\t\t\treturn view.bgcolor;\n\t\t\t}\n\t\t\tvar col = this.texture.sample(vec2(view.bgimageoffset[0] + uv.xy.x * view.bgimageaspect[0], view.bgimageoffset[1] + uv.xy.y * view.bgimageaspect[1]));\n\t\t\treturn vec4(col.r * view.colorfilter[0], col.g * view.colorfilter[1], col.b * view.colorfilter[2], col.a * view.opacity * view.colorfilter[3]);\n\t\t};\n\t});\n\n\t// rounded rect shader class\n\tdefineDreem.class(this, 'shadowrect', this.Shader, function () {\n\t\tthis.updateorder = 0;\n\n\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\tpos: vec2,\n\t\t\tangle: float,\n\t\t\tradmult: vec4,\n\t\t\tuv: vec2,\n\t\t\tshadowradius: vec4\n\t\t});\n\n\t\tthis.mesh = this.vertexstruct.array();\n\n\t\tthis.depth_test = \"\";\n\t\tthis.draworder = -1;\n\n\t\t// matrix and viewmatrix should be referenced on view\n\t\tthis.opacity = 0.0;\n\t\tthis.drawtype = this.TRIANGLE_STRIP;\n\t\tthis.color_blend = 'src_alpha * src_color + (1 - src_alpha) * dst_color';\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\n\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\tvar radius = vec4(Math.max(1, view.borderradius[0] + view.dropshadowradius), Math.max(1, view.borderradius[1] + view.dropshadowradius), Math.max(1, view.borderradius[2] + view.dropshadowradius), Math.max(1, view.borderradius[3] + view.dropshadowradius));\n\t\t\tvar mesh = this.mesh = this.vertexstruct.array();\n\n\t\t\tif (vec4.equals(radius, vec4(0, 0, 0, 0))) {\n\t\t\t\tmesh.push([width / 2, height / 2], 0, [1, 0, 0, 0], 0.5, 0.5);\n\t\t\t\tmesh.push([0, 0], 0, [1, 0, 0, 0], 0, 0);\n\t\t\t\tmesh.push([width, 0], 0, [1, 0, 0, 0], 1, 0);\n\t\t\t\tmesh.push([width, height], 0, [1, 0, 0, 0], 1, 1);\n\t\t\t\tmesh.push([0, height], 0, [1, 0, 0, 0], 0, 1);\n\t\t\t\tmesh.push([0, 0], 0, [1, 0, 0, 0], 0, 0);\n\t\t\t} else {\n\n\t\t\t\tvar divbase = 0.45;\n\t\t\t\tvar pidiv1 = Math.floor(Math.max(2, divbase * PI * radius[0]));\n\t\t\t\tvar pidiv2 = Math.floor(Math.max(2, divbase * PI * radius[1]));\n\t\t\t\tvar pidiv3 = Math.floor(Math.max(2, divbase * PI * radius[2]));\n\t\t\t\tvar pidiv4 = Math.floor(Math.max(2, divbase * PI * radius[3]));\n\n\t\t\t\tvar pimul1 = PI * 0.5 / (pidiv1 - 1);\n\t\t\t\tvar pimul2 = PI * 0.5 / (pidiv2 - 1);\n\t\t\t\tvar pimul3 = PI * 0.5 / (pidiv3 - 1);\n\t\t\t\tvar pimul4 = PI * 0.5 / (pidiv4 - 1);\n\n\t\t\t\tfor (var p = 0; p < pidiv1; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), p * pimul1, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), p * pimul1, vec4(1, 0, 0, 0), 1, 0, radius);\n\t\t\t\t}\n\t\t\t\tfor (var p = 0; p < pidiv2; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[1] - 1 + view.dropshadowradius, radius[1] - view.dropshadowradius), p * pimul2 + PI / 2, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[1] - 1 + view.dropshadowradius, radius[1] - view.dropshadowradius), p * pimul2 + PI / 2, vec4(0, 1, 0, 0), 1, 0, radius);\n\t\t\t\t}\n\t\t\t\tfor (var p = 0; p < pidiv3; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[2] - 1 + view.dropshadowradius, height - radius[2] - 1 + view.dropshadowradius), p * pimul3 + PI, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\t\tthis.mesh.push(vec2(width - radius[2] - 1 + view.dropshadowradius, height - radius[2] - 1 + view.dropshadowradius), p * pimul3 + PI, vec4(0, 0, 1, 0), 1, 0, radius);\n\t\t\t\t}\n\t\t\t\tfor (var p = 0; p < pidiv4; p++) {\n\t\t\t\t\tthis.mesh.push(vec2(radius[3] - view.dropshadowradius, height - radius[3] - 1 + view.dropshadowradius), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\t\tthis.mesh.push(vec2(radius[3] - view.dropshadowradius, height - radius[3] - 1 + view.dropshadowradius), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, 1), 1, 0, radius);\n\t\t\t\t}\n\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), 0, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), 0, vec4(1, 0, 0, 0), 1, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), 0, vec4(0, 0, 0, 0), 1, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(radius[0] - view.dropshadowradius, radius[0] - view.dropshadowradius), 0, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(radius[3] - view.dropshadowradius, height - radius[3] - 1 + view.dropshadowradius), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(width - radius[1] - 1 + view.dropshadowradius, radius[1] - view.dropshadowradius), p * pimul2 + PI / 2, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t\tthis.mesh.push(vec2(width - radius[2] - 1 + view.dropshadowradius, height - radius[2] - 1 + view.dropshadowradius), p * pimul3 + PI, vec4(0, 0, 0, 0), 0, 0, radius);\n\t\t\t}\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar col = view.dropshadowcolor;\n\t\t\tcol.a *= view.dropshadowopacity;\n\t\t\tcol.a *= 1.0 - pow(mesh.uv.x, 1. + view.dropshadowhardness * 10.);\n\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\n\t\tthis.position = function () {\n\t\t\tpos = mesh.pos.xy;\n\t\t\tvar ca = cos(mesh.angle + PI);\n\t\t\tvar sa = sin(mesh.angle + PI);\n\n\t\t\tvar rad = mesh.radmult.x * mesh.shadowradius.x + mesh.radmult.y * mesh.shadowradius.y + mesh.radmult.z * mesh.shadowradius.z + mesh.radmult.w * mesh.shadowradius.w;\n\t\t\tpos.x += ca * rad;\n\t\t\tpos.y += sa * rad;\n\n\t\t\tuv = vec2(pos.x / view.layout.width, pos.y / view.layout.height);\n\n\t\t\tsized = vec2(pos.x, pos.y);\n\t\t\tsized += view.dropshadowoffset;\n\t\t\treturn vec4(sized.x, sized.y, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\t});\n\n\tthis.dropshadowopacity = function () {\n\t\tif (this.dropshadowopacity > 0) {\n\t\t\tthis.shadowrect = true;\n\t\t} else {\n\t\t\tthis.shadowrect = false;\n\t\t}\n\t};\n\n\tthis.moveToFront = function () {\n\t\tif (!this.parent) return;\n\t\tvar idx = this.parent.children.indexOf(this);\n\t\tthis.parent.children.splice(idx, 1);\n\t\tthis.parent.children.push(this);\n\t\tthis.parent.redraw();\n\t};\n\n\tthis.moveToBack = function () {\n\t\tif (!this.parent) return;\n\t\tvar idx = this.parent.children.indexOf(this);\n\t\tthis.parent.children.splice(idx, 1);\n\t\tthis.parent.children.unshift(this);\n\t\tthis.parent.redraw();\n\t};\n\n\tthis.childrenInRect = function (rect, exclude) {\n\t\tvar hits = [];\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif (exclude && exclude.indexOf(child) > -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (child.boundsInsideRect(rect)) {\n\t\t\t\thits.push(child);\n\t\t\t} else {\n\t\t\t\tvar sub = child.childrenInRect(rect, exclude);\n\t\t\t\tif (sub.length) {\n\t\t\t\t\thits = hits.concat(sub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hits;\n\t};\n\n\tthis.boundsInsideRect = function (r) {\n\t\tvar inside = r[0] <= this._layout.absx && r[1] <= this._layout.absy && r[0] + r[2] >= this._layout.absx + this._layout.width && r[1] + r[3] >= this._layout.absy + this._layout.height;\n\t\treturn inside;\n\t};\n\n\tthis.onpasses = function (passes) {\n\t\tif (this._passes > 9) {\n\t\t\tconsole.warn('this.passes has a maximum value of 9.');\n\t\t\tthis._passes = 9;\n\t\t}\n\t\tif (!this._viewport) this._viewport = '2d';\n\t};\n\n\t// When passes > 0, create inner classes with names pass0..9 to implement the shaders\n\t// for each pass.\n\tthis.RenderPass = defineDreem.class(this.Shader, function () {\n\t\t// create placeholder passes for the compiler\n\t\tthis.framebuffer = this.pass0 = this.pass1 = this.pass2 = this.pass3 = this.pass4 = this.pass5 = this.pass6 = this.pass7 = this.pass8 = this.pass9 = Shader.prototype.Texture.fromType('rgba_depth_stencil');\n\t\t// placeholder view for compiler\n\t\tthis.view = { viewportmatrix: mat4(), viewmatrix: mat4() };\n\t\tthis.draworder = 10;\n\t\tthis.updateorder = 10;\n\t\tthis.omit_from_shader_list = true;\n\t\tthis.mesh = vec2.array();\n\t\tthis.mesh.pushQuad(0, 0, 0, 1, 1, 0, 1, 1);\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.drawcount = 0.;\n\t\tthis.isfloat = false;\n\t\tthis.doublebuffer = false;\n\n\t\tthis.position = function () {\n\t\t\treturn vec4(mesh.x * width, mesh.y * height, 0, 1) * view.viewportmatrix * view.viewmatrix;\n\t\t};\n\n\t\t// child classes extending RenderPass implement color() and use references to\n\t\t// this.framebuffer/pass0..9 internally. See /classes/ui/blurview for an example...\n\t\tthis.color = function () {\n\t\t\treturn 'purple';\n\t\t};\n\t});\n\n\t// blends current viewport into the parent\n\tdefineDreem.class(this, 'viewportblend', this.Shader, function () {\n\t\tthis.draworder = 10;\n\t\tthis.updateorder = 10;\n\t\tthis.omit_from_shader_list = true;\n\t\tthis.texture = Shader.prototype.Texture.fromType('rgba_depth_stencil');\n\t\tthis.mesh = vec2.array();\n\t\tthis.mesh.pushQuad(0, 0, 0, 1, 1, 0, 1, 1);\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\n\t\tthis.position = function () {\n\t\t\treturn vec4(mesh.x * width, mesh.y * height, 0, 1) * view.viewportmatrix * view.viewmatrix;\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar col = texture.sample(mesh.xy);\n\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t};\n\t});\n\n\t// rounded corner border shader\n\tdefineDreem.class(this, 'roundedborder', this.Shader, function () {\n\t\tthis.dont_scroll_as_viewport = true;\n\t\tthis.draworder = 1;\n\t\tthis.updateorder = 1;\n\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\tpos: vec2,\n\t\t\tangle: float,\n\t\t\tradmult: vec4,\n\t\t\tuv: vec2\n\t\t});\n\t\tthis.mesh = this.vertexstruct.array();\n\t\tthis.drawtype = this.TRIANGLE_STRIP;\n\n\t\tthis.update = function () {\n\n\t\t\tvar view = this.view;\n\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\n\t\t\tvar mesh = this.mesh = this.vertexstruct.array();\n\n\t\t\tvar borderradius = view.borderradius;\n\t\t\tvar borderwidth = view.borderwidth;\n\n\t\t\tvar scale0 = (borderradius[0] - borderwidth[0]) / Math.max(0.01, borderradius[0]);\n\t\t\tvar scale1 = (borderradius[1] - borderwidth[0]) / Math.max(0.01, borderradius[1]);\n\t\t\tvar scale2 = (borderradius[2] - borderwidth[0]) / Math.max(0.01, borderradius[2]);\n\t\t\tvar scale3 = (borderradius[3] - borderwidth[0]) / Math.max(0.01, borderradius[3]);\n\n\t\t\tvar divbase = 0.45;\n\t\t\tvar pidiv1 = Math.floor(Math.max(2, divbase * PI * borderradius[0]));\n\t\t\tvar pidiv2 = Math.floor(Math.max(2, divbase * PI * borderradius[1]));\n\t\t\tvar pidiv3 = Math.floor(Math.max(2, divbase * PI * borderradius[2]));\n\t\t\tvar pidiv4 = Math.floor(Math.max(2, divbase * PI * borderradius[3]));\n\n\t\t\tvar pimul1 = PI * 0.5 / (pidiv1 - 1);\n\t\t\tvar pimul2 = PI * 0.5 / (pidiv2 - 1);\n\t\t\tvar pimul3 = PI * 0.5 / (pidiv3 - 1);\n\t\t\tvar pimul4 = PI * 0.5 / (pidiv4 - 1);\n\n\t\t\tfor (var p = 0; p < pidiv1; p++) {\n\t\t\t\tthis.mesh.push(vec2(borderradius[0], borderradius[0]), p * pimul1, vec4(1, 0, 0, 0), 1, 0);\n\t\t\t\tthis.mesh.push(vec2(borderradius[0], borderradius[0]), p * pimul1, vec4(scale0, 0, 0, 0), 1, 0);\n\t\t\t}\n\n\t\t\tfor (var p = 0; p < pidiv2; p++) {\n\t\t\t\tthis.mesh.push(vec2(width - borderradius[1], borderradius[1]), p * pimul2 + PI / 2, vec4(0, 1, 0, 0), 1, 0);\n\t\t\t\tthis.mesh.push(vec2(width - borderradius[1], borderradius[1]), p * pimul2 + PI / 2, vec4(0, scale1, 0, 0), 1, 0);\n\t\t\t}\n\t\t\tfor (var p = 0; p < pidiv3; p++) {\n\t\t\t\tthis.mesh.push(vec2(width - borderradius[2], height - borderradius[2]), p * pimul3 + PI, vec4(0, 0, 1, 0), 1, 1);\n\t\t\t\tthis.mesh.push(vec2(width - borderradius[2], height - borderradius[2]), p * pimul3 + PI, vec4(0, 0, scale2, 0), 1, 1);\n\t\t\t}\n\t\t\tfor (var p = 0; p < pidiv4; p++) {\n\t\t\t\tthis.mesh.push(vec2(borderradius[3], height - borderradius[3]), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, 1), 0, 1);\n\t\t\t\tthis.mesh.push(vec2(borderradius[3], height - borderradius[3]), p * pimul4 + PI + PI / 2, vec4(0, 0, 0, scale3), 0, 1);\n\t\t\t}\n\t\t\tthis.mesh.push(vec2(borderradius[0], borderradius[0]), 0, vec4(1, 0, 0, 0), 1, 0);\n\t\t\tthis.mesh.push(vec2(borderradius[0], borderradius[0]), 0, vec4(scale0, 0, 0, 0), 1, 0);\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar col = view.bordercolorfn(pos.xy);\n\t\t\treturn vec4(col.rgb, view.opacity * col.a);\n\t\t};\n\n\t\tthis.position = function () {\n\n\t\t\tpos = mesh.pos.xy;\n\n\t\t\tvar ca = cos(mesh.angle + PI);\n\t\t\tvar sa = sin(mesh.angle + PI);\n\n\t\t\tvar rad = dot(mesh.radmult, view.borderradius);\n\t\t\tpos.x += ca * rad;\n\t\t\tpos.y += sa * rad;\n\n\t\t\tuv = vec2(pos.x / view.width, pos.y / view.height);\n\n\t\t\tsized = vec2(pos.x, pos.y);\n\t\t\treturn vec4(sized.x, sized.y, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\t});\n\n\t// lets pull in the scrollbar on the view\n\tdefineDreem.class(this, 'scrollbar', requireDreem('$ui/scrollbar'), function () {\n\t\tthis.hardrect = {\n\t\t\tnoscroll: true\n\t\t};\n\t});\n\n\t// Basic usage of the splitcontainer\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [view({ margin: 10, width: 50, height: 50, bgcolor: 'red' }), view({ width: 50, height: 50, bgcolor: 'green', bordercolor: 'pink', borderwidth: 10, borderradius: 7 }), view({ x: 30, y: 10, width: 50, height: 50, bgcolor: 'blue' })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/ui/view.js\n// module id = 80\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/ui/view.js?");

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function ($ui$, view, label, bargraphic) {\n\t// Simple audio player, without controls. While the audio plays, a visual\n\t// representation of the audio can be displayed in the view\n\n\tthis.attributes = {\n\t\t// The URL to an audio file to play\n\t\turl: Config({ type: string, value: '' })\n\n\t\t// When true (default), start the audio track automatically.\n\t\t, autoplay: Config({ type: bool, value: true })\n\n\t\t// Audio volume (0-1)\n\t\t, volume: Config({ type: float, value: 0.5 })\n\n\t\t// Number of fft frames to use. Non-zero power of two from 32 to 2048\n\t\t, fftsize: Config({ type: int, value: 512 })\n\n\t\t// Amount of smoothing to apply to the fft analysis (0-1)\n\t\t, fftsmoothing: Config({ type: float, value: 0.8 })\n\n\t\t// Event generated when screen updates\n\t\t, update: Config({ type: Event })\n\n\t\t// True if the audio is playing\n\t};this.playing = false;\n\n\t// True if the audio is paused\n\tthis.paused = false;\n\n\t// Length of audio (seconds)\n\tthis.duration = -1;\n\n\t// Current location (time) of playback\n\tthis.currenttime = -1;\n\n\t// Current data to visualize\n\tthis.fftData = new Uint8Array(this.fftsize > 0 ? this.fftsize / 2 : 2);\n\tthis.fftData = function () {}\n\t//console.log('***** fftData is updated');\n\n\n\t// Play the audio\n\t;this.play = function () {\n\t\tif (!this.url) return;\n\n\t\tthis.audioinit();\n\n\t\t// play the music\n\t\tthis.audioElement.setAttribute('src', this.url);\n\n\t\tif (this.audioElement) {\n\t\t\tthis.audioElement.currentTime = 0;\n\t\t\tthis.currenttime = 0;\n\t\t\tthis.audioElement.play();\n\t\t\tthis.playing = true;\n\n\t\t\t// Updating in the animation loop is better than waiting for\n\t\t\t// the infrequent ontimeupdate events.\n\t\t\tif (window) {\n\t\t\t\tthis.animFrame = function (time) {\n\t\t\t\t\tthis.updateviz();\n\t\t\t\t\tif (this.playing) window.requestAnimationFrame(this.animFrame);\n\t\t\t\t}.bind(this);\n\n\t\t\t\twindow.requestAnimationFrame(this.animFrame);\n\t\t\t}\n\n\t\t\t//console.log('play', this.audioElement);\n\t\t}\n\t};\n\n\t// Pause or restart the audio\n\tthis.pause = function () {\n\t\tif (this.playing) {\n\t\t\tif (this.paused) {\n\t\t\t\tthis.paused = false;\n\t\t\t\tthis.audioElement.play();\n\t\t\t} else {\n\t\t\t\tthis.paused = true;\n\t\t\t\tthis.audioElement.pause();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Stop the audio\n\tthis.stop = function () {\n\t\tvar viz = this.screen.find('viz');\n\t\tif (viz) viz.clear();\n\n\t\tif (this.audioElement) {\n\t\t\tthis.audioElement.pause();\n\t\t\tthis.audioElement.currentTime = 0;\n\t\t\tthis.currenttime = -1;\n\t\t}\n\n\t\tthis.playing = false;\n\n\t\tthis.audiocleanup();\n\t};\n\n\t// Update the current visualization\n\tthis.updateviz = function () {\n\t\tif (!this.audioElement) return;\n\n\t\tthis.currenttime = this.audioElement.currentTime;\n\t\tthis.fftNode.getByteFrequencyData(this.fftData);\n\n\t\tvar viz = this.screen.find('viz');\n\t\tif (viz) {\n\t\t\t//viz.data = this.fftData;\n\t\t\tvar data = [];\n\t\t\tfor (var i = 0; i < this.fftData.length; i++) {\n\t\t\t\tdata.push(this.fftData[i] / 255.0);\n\t\t\t}\n\n\t\t\tviz.data = data;\n\t\t\t//console.log('data set', viz);\n\t\t}\n\n\t\tthis.emit('update');\n\t};\n\n\t// Initialize the AudioContext\n\tthis.audioinit = function () {\n\t\tif (!this.context) {\n\t\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\t\t\tthis.context = new AudioContext();\n\t\t}\n\n\t\tif (!this.audioElement) {\n\t\t\tthis.audioElement = document.createElement('audio');\n\t\t\tthis.audioElement.setAttribute('volume', this.volume);\n\t\t\tthis.audioElement.ondurationchange = function (data) {\n\t\t\t\t//console.log('ondurationchange', this.audioElement.duration)\n\t\t\t\tthis.duration = this.audioElement.duration;\n\t\t\t}.bind(this);\n\t\t\tthis.audioElement.onprogress = function (evt) {\n\t\t\t\t//console.log('onprogress', evt);\n\t\t\t}.bind(this);\n\n\t\t\t// This event does not fire often enough\n\t\t\t//this.audioElement.ontimeupdate = function(evt) {\n\t\t\t//\tthis.updateviz();\n\t\t\t//}.bind(this);\n\n\t\t\tthis.audioElement.onended = function (evt) {\n\t\t\t\tthis.stop();\n\t\t\t\t//console.log('onended', evt);\n\t\t\t}.bind(this);\n\n\t\t\t// Create fft\n\t\t\t//console.log('create fft', this.fftsize, this.fftsmoothing);\n\t\t\tthis.fftNode = this.context.createAnalyser();\n\t\t\tif (this.fftsize) {\n\t\t\t\tthis.fftNode.fftSize = this.fftsize;\n\t\t\t\tthis.fftNode.smoothingTimeConstant = this.fftsmoothing;\n\t\t\t}\n\n\t\t\t// Connect the audio to the analyzer, and to the output\n\t\t\tthis.source = this.context.createMediaElementSource(this.audioElement);\n\t\t\tthis.source.connect(this.fftNode);\n\t\t\tthis.fftNode.connect(this.context.destination);\n\t\t\tthis.fftData = new Uint8Array(this.fftNode.frequencyBinCount);\n\t\t}\n\t};\n\n\t// Cleanup the AudioContext\n\tthis.audiocleanup = function () {\n\t\tif (this.audioElement) {\n\t\t\tthis.source = null;\n\t\t\tthis.fftNode = null;\n\t\t\tthis.audioElement = null;\n\t\t}\n\n\t\tif (this.context) {\n\t\t\tthis.context = null;\n\t\t}\n\n\t\tthis.currenttime = -1;\n\t};\n\n\tthis.oninit = function () {\n\t\t//console.log('oninit');\n\t\tif (this.autoplay) this.play();\n\t};\n\n\tthis.render = function () {\n\t\treturn [bargraphic({ name: 'viz', width: this.width, height: this.height, fgcolor: this.fgcolor, data: this.fftData })];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/audioplayer.js\n// module id = 81\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/audioplayer.js?");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, label, scrollbar, textbox, numberbox) {\n\n\tvar Shader = this.Shader = requireDreem('$system/platform/$platform/shader$platform');\n\n\tthis.attributes = {\n\t\t// the value of the colorpicker, a color\n\t\tvalue: Config({ type: vec4, value: \"white\", meta: \"color\", rerender: false }),\n\t\t// the foreground color of the fonts\n\t\tfontsize: Config({ type: int, value: 14, meta: \"fontsize\" }),\n\t\t// internal border color\n\t\tinternalbordercolor: Config({ type: vec4, value: vec4(1, 1, 1, 0.6), meta: \"color\" }),\n\t\t// read-only the hue value (HSV)\n\t\tbasehue: Config({ type: float, value: 0.5, readonly: true, rerender: false }),\n\t\t// read-only the saturation value (HSV)\n\t\tbasesat: Config({ type: float, value: 0.8, readonly: true, rerender: false }),\n\t\t// read-only, the value (HSV)\n\t\tbaseval: Config({ type: float, value: 0.5, readonly: true, rerender: false }),\n\t\tsliderheight: Config({ type: float, value: 15 }),\n\n\t\tcolorwheel: Config({ type: Boolean, value: true }),\n\t\tcolorsliders: Config({ type: Boolean, value: true }),\n\t\tcolorbox: Config({ type: Boolean, value: true })\n\t};\n\n\tthis.basehue = 0.5;\n\tthis.bgcolor = vec4(0.0, 0.0, 0.0, 0.4);\n\tthis.flexdirection = \"column\";\n\tthis.padding = vec4(10);\n\tthis.minwidth = 200;\n\tthis.maxwidth = 300;\n\tthis.borderradius = 3;\n\tthis.borderwidth = 1;\n\tthis.bordercolor = this.internalbordercolor;\n\tthis.contrastcolor = vec4(\"black\");\n\n\tthis.internalbordercolor = function () {\n\t\tthis.bordercolor = this.internalbordercolor;\n\t};\n\n\tthis.updatecontrol = function (name, val) {\n\t\tvar c = this.findChild(name);\n\t\tif (c) {\n\t\t\tc.currentcolor = this.value;\n\t\t\tc.contrastcolor = this.contrastcolor;\n\t\t\tc.basehue = this.basehue;\n\t\t\tc.basesat = this.basesat;\n\t\t\tc.baseval = this.baseval;\n\t\t\tnewoff = val * 255;\n\t\t\tif (newoff < 0) newoff += 256;\n\n\t\t\tc._offset = newoff;\n\t\t}\n\t};\n\n\tthis.updatelabel = function (name, val) {\n\t\tvar c = this.findChild(name);\n\t\tif (c) c.value = val;\n\t\t//else console.log(\"not found\", name);\n\t};\n\n\tthis.numbertohex = function (num) {\n\t\tif (num < 16) {\n\t\t\treturn \"0\" + Math.round(num).toString(16);\n\t\t}\n\t\treturn Math.round(num).toString(16);\n\t};\n\n\tthis.buildhexnumber = function (vector) {\n\t\treturn \"\" + this.numbertohex(vector[0] * 255) + this.numbertohex(vector[1] * 255) + this.numbertohex(vector[2] * 255);\n\t};\n\n\tthis.updateallcontrols = function () {\n\t\tthis.updatecontrol(\"hsvider\", this.basehue);\n\t\tthis.updatecontrol(\"sslider\", this.basesat);\n\t\tthis.updatecontrol(\"lslider\", this.baseval);\n\t\tthis.updatecontrol(\"rslider\", this.value[0]);\n\t\tthis.updatecontrol(\"gslider\", this.value[1]);\n\t\tthis.updatecontrol(\"bslider\", this.value[2]);\n\t\tthis.updatecontrol(\"squareview\", this.basehue);\n\t\tthis.updatecontrol(\"colorcirclecontrol\", this.basehue);\n\n\t\tthis.updatelabel(\"texth\", Math.round(this.basehue * 360));\n\t\tthis.updatelabel(\"texts\", Math.round(this.basesat * 100));\n\t\tthis.updatelabel(\"textv\", Math.round(this.baseval * 100));\n\t\tthis.updatelabel(\"textr\", Math.round(this.value[0] * 255));\n\t\tthis.updatelabel(\"textg\", Math.round(this.value[1] * 255));\n\t\tthis.updatelabel(\"textb\", Math.round(this.value[2] * 255));\n\t\tthis.updatelabel(\"texta\", Math.round(this.value[3] * 255));\n\n\t\tvar t = this.buildhexnumber(this.value);\n\t\tthis.updatelabel(\"hexcolor\", t);\n\t};\n\n\tthis.value = function () {\n\t\tthis.createHSVFromColor();\n\t\tthis.contrastcolor = vec4.fromHSV(0, 0, 1 - this.baseval * (1 - this.basesat * 0.5), 1);\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.createColorFromHSV = function () {\n\t\tthis._value = vec4.fromHSV(this.basehue, this.basesat, this.baseval);\n\t\tif (this.valuechange) this.valuechange(this._value, this._value, this);\n\t};\n\n\tthis.createHSVFromColor = function () {\n\t\tvar res = vec4.toHSV(this.value);\n\t\tthis.basehue = res[0];\n\t\tthis.basesat = res[1];\n\t\tthis.baseval = res[2];\n\t};\n\n\tthis.setRed = function (r) {\n\t\tthis.value[0] = r;\n\t\tthis.createHSVFromColor();\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.setGreen = function (g) {\n\t\tthis.value[1] = g;\n\t\tthis.createHSVFromColor();\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.setBlue = function (b) {\n\t\tthis.value[2] = b;\n\t\tthis.createHSVFromColor();\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.setHueBase = function (h) {\n\t\tthis.basehue = h;\n\t\tthis.createColorFromHSV();\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.setSatBase = function (s) {\n\t\tthis.basesat = s;\n\t\tthis.createColorFromHSV();\n\t\tthis.updateallcontrols();\n\t};\n\n\tthis.setLumBase = function (s) {\n\t\tthis.baseval = s;\n\t\tthis.createColorFromHSV();\n\t\tthis.updateallcontrols();\n\t};\n\n\tdefineDreem.class(this, \"customslider\", function ($ui$, view) {\n\n\t\tthis.attributes = {\n\n\t\t\t// hsv color for the left side\n\t\t\thsvfrom: Config({ type: vec3, value: vec3(0, 1, 0.5) }),\n\n\t\t\t// hsv color for the right side\n\t\t\thsvto: Config({ type: vec3, value: vec3(1, 1, 0.5) }),\n\t\t\thsvhueadd: Config({ type: float, value: 0 }),\n\n\t\t\tbasehue: Config({ type: float, value: 0 }),\n\t\t\tcurrentcolor: Config({ type: vec4, value: vec4(\"red\") }),\n\t\t\tcontrastcolor: Config({ type: vec4, value: vec4(\"white\") }),\n\n\t\t\t// Color of the draggable part of the scrollbar\n\t\t\tdraggercolor: Config({ type: vec4, value: vec4(1, 1, 1, 0.8) }),\n\n\t\t\t// Color of the draggable part of the scrollbar\n\t\t\tdraggerradius: Config({ type: float, value: 3 }),\n\n\t\t\t// Color when the pointer is hovering over the draggable part of the scrollbar\n\t\t\thovercolor: Config({ type: vec4, value: vec4(\"#8080c0\") }),\n\n\t\t\t// Color of the draggable part of the scrollbar while actively scrolling\n\t\t\tactivecolor: Config({ type: vec4, value: vec4(\"#8080c0\") }),\n\n\t\t\t// Is this a horizontal or a vertical scrollbar?\n\t\t\tvertical: Config({ type: Boolean, value: false }),\n\n\t\t\t// Current start offset of the scrollbar. Ranges from 0 to total - page\n\t\t\toffset: Config({ type: float, value: 0 }),\n\n\t\t\t// Page size, in total\n\t\t\tpage: Config({ type: float, value: 25 }),\n\n\t\t\t// total size.\n\t\t\ttotal: Config({ type: float, value: 255 + 25 }),\n\n\t\t\t// set animation on bgcolor\n\t\t\tbgcolor: Config({ duration: 1.0 })\n\t\t};\n\n\t\tvar scrollbar = this.constructor;\n\n\t\tthis.page = function () {\n\t\t\tthis.redraw();\n\t\t};\n\n\t\tthis.offset = function () {\n\t\t\tthis.redraw();\n\t\t};\n\n\t\tvar mesh = vec2.array();\n\t\tmesh.pushQuad(0, 0, 0, 1, 1, 0, 1, 1);\n\t\tthis.borderwidth = 0;\n\t\tthis.margin = 1;\n\t\tthis.bordercolor = vec4(\"#303060\");\n\t\tthis.pressed = 0;\n\t\tthis.hovered = 0;\n\n\t\tthis.hardrect = {\n\t\t\toffset: 0,\n\t\t\tpage: 0.3,\n\n\t\t\tcolor: function color() {\n\t\t\t\t// we have a rectangle\n\t\t\t\tvar hsvamix = vec4(mix(view.hsvfrom, view.hsvto, mesh.x), 1.0);\n\t\t\t\thsvamix.r += view.hsvhueadd * view.basehue;\n\t\t\t\tvar bg = colorlib.hsva(hsvamix);\n\n\t\t\t\tvar rel = vec2(mesh.x * view.layout.width, mesh.y * view.layout.height);\n\t\t\t\tvar offset = view.offset / view.total;\n\t\t\t\tvar page = view.page / view.total;\n\t\t\t\tvar edge = 0.1; //min(length(vec2(length(dFdx(rel)), length(dFdy(rel)))) * SQRT_1_2, 0.001)\n\t\t\t\tvar field = float(0);\n\t\t\t\tif (view.vertical) {\n\t\t\t\t\tfield = shape.roundbox(rel, 0.00 * view.layout.width, offset * view.layout.height, .9 * view.layout.width, page * view.layout.height, view.draggerradius);\n\t\t\t\t} else {\n\t\t\t\t\tfield = shape.roundbox(rel, offset * view.layout.width, 0.00 * view.layout.height, page * view.layout.width, 1.0 * view.layout.height, view.draggerradius);\n\t\t\t\t}\n\t\t\t\tvar fg = vec4(view.contrastcolor.rgb, smoothstep(-edge, edge, 1 - abs(-field - 1.)) * view.contrastcolor.a);\n\t\t\t\tvar fg2 = vec4(view.currentcolor.rgb, smoothstep(0., -edge, field) * view.currentcolor.a);\n\t\t\t\t//return vec4(vec3(sin(field*0.1))+ fg2.a*vec3(1,0,0) + fg.a*vec3(0,1,0), 1.)\n\t\t\t\treturn mix(bg.rgba, mix(fg2.rgba, fg.rgba, fg.a), max(fg.a, fg2.a));\n\t\t\t},\n\t\t\tmesh: mesh,\n\t\t\tupdate: function update() {},\n\t\t\tposition: function position() {\n\t\t\t\treturn vec4(mesh.x * view.layout.width, mesh.y * view.layout.height, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t}\n\t\t};\n\t\tthis.hardrect = true;\n\t\t//\tthis.bg = true;\n\n\t\t// TODO(aki): fix slider and use pointer events\n\t\t// most of the logic below is unnecessary because pointer events include deltas.\n\t\t// this.pointerstart = function(event){\n\t\t// \tvar start = this.globalToLocal(event.position)\n\t\t// \t// detect if we clicked not on the button\n\t\t// \tif(this.vertical){\n\t\t// \t\tvar p = start[1] / this.layout.height\n\t\t// \t}\n\t\t// \telse{\n\t\t// \t\tvar p = start[0] / this.layout.width\n\t\t// \t}\n\t\t// \tvar offset = this.offset / this.total\n\t\t// \tvar page = this.page / this.total\n\t\t// \tvar start_offset  = 0;\n\t\t// \tif(p < offset){\n\t\t// \t\tvar value = clamp(p - 0.5 * page, 0, 1.-page) * this.total\n\t\t// \t\tif(value != this.offset){\n\t\t// \t\t\tthis.offset = value\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \telse if (p > offset + page){\n\t\t// \t\tvar value = clamp(p - 0.5*page, 0, 1.-page) * this.total\n\t\t// \t\tif(value != this.offset){\n\t\t// \t\t\tthis.offset = value\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \t start_offset = offset//this.offset / this.total\n\t\t// }\n\t\t// this.pointermove = function(event){\n\t\t// \tvar pos = this.globalToLocal(event.position)\n\t\t// \tif(this.vertical){\n\t\t// \t\tvar p = start_offset + (pos[1] - start[1]) / this.layout.height\n\t\t// \t}\n\t\t// \telse{\n\t\t// \t\tvar p = start_offset + (pos[0] - start[0]) / this.layout.width\n\t\t// \t}\n\t\t// \tvar value = clamp(p, 0, 1.-page) * this.total\n\t\t// \tif(value != this.offset){\n\t\t// \t\tthis.offset = value\n\t\t// \t}\n\t\t// }\n\n\n\t\t//this.height = 10;\n\t\t//this.width = 100;\n\t\t//this.flex = 1;\n\n\t\tthis.drawcount = 0;\n\t});\n\n\tdefineDreem.class(this, 'colorcirclecontrol', function ($ui$view) {\n\t\tthis.name = 'colorcirclecontrol';\n\t\tthis.width = 200;\n\t\tthis.height = 200;\n\t\tthis.bgcolor = NaN;\n\t\tthis.attributes = {\n\t\t\tringwidth: Config({ type: float, value: 0.3 }),\n\t\t\thover: Config({ type: float, value: 0, motion: \"linear\", duration: 0.2 }),\n\t\t\tbasehue: Config({ type: float, value: 0.7 }),\n\t\t\tbasesat: Config({ type: float, value: 0.7 }),\n\t\t\tbaseval: Config({ type: float, value: 0.7 }),\n\t\t\tcurrentcolor: Config({ type: vec4, value: \"white\" }),\n\t\t\tcontrastcolor: Config({ type: vec4, value: vec4(\"white\") }),\n\t\t\tdraggersize: Config({ type: float, value: 8 })\n\t\t};\n\n\t\tthis.updatehue = function (pos) {\n\t\t\tvar dx = pos[0] - this.layout.width / 2;\n\t\t\tvar dy = pos[1] - this.layout.height / 2;\n\t\t\tdx /= this.layout.width / 2;\n\t\t\tdy /= this.layout.height / 2;\n\t\t\tvar angle = Math.atan2(dy, dx);\n\t\t\tthis.outer.setHueBase(-angle / 6.283 + 0.25);\n\t\t};\n\n\t\tthis.pointerend = this.pointermove = function (event) {\n\t\t\tvar a = this.globalToLocal(event.position);\n\t\t\tthis.updatehue(a);\n\t\t\tthis.redraw();\n\t\t};\n\n\t\tdefineDreem.class(this, 'bgfill', this.Shader, function () {\n\t\t\tthis.draworder = 1;\n\n\t\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\t\tp: float,\n\t\t\t\tside: float\n\t\t\t});\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tthis.drawtype = this.TRIANGLE_STRIP;\n\n\t\t\tthis.position = function () {\n\t\t\t\tuv = vec2(sin(mesh.p), cos(mesh.p)) * (1 - view.ringwidth + view.ringwidth * mesh.side);\n\t\t\t\toff = mesh.p / 6.283;\n\t\t\t\tvar rad = min(view.layout.width, view.layout.height) / 2;\n\t\t\t\tpos = vec2(view.layout.width / 2 + rad * uv.x, view.layout.height / 2 + rad * uv.y);\n\t\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t};\n\n\t\t\tthis.color = function () {\n\n\t\t\t\tvar f = sin(mesh.side * 3.1415);\n\t\t\t\tvar edge = 1 - pow(f, .50);\n\t\t\t\tvar aaedge = pow(f, 0.2);\n\t\t\t\t//return vec4(view.hover, edge,0,1);\n\t\t\t\tvar color = colorlib.hsva(vec4(off, 1, 1, 1));\n\n\t\t\t\tvar edgecolor = vec4(1, 1, 1, 1);\n\t\t\t\tvar mixed = mix(color, edgecolor, view.hover * edge);\n\t\t\t\tmixed.a *= aaedge;\n\t\t\t\treturn mixed;\n\t\t\t};\n\n\t\t\tthis.update = function () {\n\t\t\t\tvar view = this.view;\n\t\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\t\tvar cx = width / 2;\n\t\t\t\tvar cy = height / 2;\n\t\t\t\tvar radius = Math.min(cx, cy);\n\t\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\t\tvar cnt = 100;\n\t\t\t\tfor (var i = 0; i < cnt; i++) {\n\t\t\t\t\tthis.mesh.push(i * 6.283 / (cnt - 1), 0);\n\t\t\t\t\tthis.mesh.push(i * 6.283 / (cnt - 1), 1);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tdefineDreem.class(this, 'fgfill', this.Shader, function () {\n\t\t\tthis.draworder = 2;\n\t\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\t\tp: vec2\n\t\t\t});\n\n\t\t\tthis.mesh = this.vertexstruct.array();\n\n\t\t\tthis.update = function () {\n\t\t\t\tvar view = this.view;\n\t\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\t\tvar cx = width / 2;\n\t\t\t\tvar cy = height / 2;\n\t\t\t\tvar radius = Math.min(cx, cy);\n\t\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\t\t//this.mesh.push(view.basehue,  vec3(0,0.5,0),0);\n\t\t\t\tthis.mesh.push(-1, -1);\n\t\t\t\tthis.mesh.push(1, -1);\n\t\t\t\tthis.mesh.push(1, 1);\n\t\t\t\tthis.mesh.push(-1, -1);\n\t\t\t\tthis.mesh.push(1, 1);\n\t\t\t\tthis.mesh.push(-1, 1);\n\t\t\t};\n\n\t\t\tthis.position = function () {\n\n\t\t\t\tvar huepos = vec2(sin(view.basehue * PI * 2 + mesh.p.x * .1), cos(view.basehue * PI * 2 + mesh.p.x * .1)) * (mesh.p.y * 0.15 + 0.85) * 100;\n\t\t\t\tpos = vec2(min(view.layout.width, view.layout.height)) / 2.0;\n\t\t\t\tpos += huepos;\n\t\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t};\n\n\t\t\tthis.color = function () {\n\t\t\t\tvar D = abs(mesh.p.x);\n\t\t\t\tvar alpha = vec4(view.contrastcolor.xyz, 0);\n\t\t\t\treturn mix(view.currentcolor, mix(view.contrastcolor, alpha, smoothstep(0.9, 1.0, D)), smoothstep(0.6, 1.0, D));\n\t\t\t\t//if (D<0.7) return view.currentcolor;\n\t\t\t\t//if (D<1.0) return view.contrastcolor;\n\t\t\t\t//return vec4(1.,1.,1.,0.);\n\t\t\t};\n\t\t});\n\t\tthis.bgfill = true;\n\t\tthis.fgfill = true;\n\t});\n\n\tdefineDreem.class(this, 'squareview', function ($ui$view) {\n\t\tthis.name = 'squareview';\n\t\tthis.width = 200;\n\t\tthis.height = 200;\n\t\tthis.bgcolor = NaN;\n\n\t\tthis.attributes = {\n\t\t\tbasehue: Config({ type: float, value: 0.7 }),\n\t\t\tbasesat: Config({ type: float, value: 0.7 }),\n\t\t\tbaseval: Config({ type: float, value: 0.7 }),\n\t\t\tcurrentcolor: Config({ type: vec4, value: \"white\" }),\n\t\t\tcontrastcolor: Config({ type: vec4, value: vec4(\"white\") }),\n\t\t\tdraggersize: Config({ type: float, value: 8 }),\n\t\t\thover: Config({ type: float, motion: \"linear\", duration: 0.1, value: 1 })\n\t\t};\n\n\t\tthis.updatecolorfrompointer = function (p) {\n\t\t\tvar p2 = vec2(p[0] - this.layout.width / 2, p[1] - this.layout.height / 2);\n\n\t\t\tvar satpos = vec2(Math.sin(this.basehue * PI * 2 + PI / 4), Math.cos(this.basehue * PI * 2 + PI / 4));\n\t\t\tvar valpos = vec2(Math.sin(this.basehue * PI * 2 + PI / 4 + PI / 2), Math.cos(this.basehue * PI * 2 + PI / 4 + PI / 2));\n\t\t\tvar sidelen = Math.sqrt(140 * 140 / 2);\n\t\t\tvar sat = (vec2.dot(satpos, p2) + sidelen / 2) / sidelen;\n\t\t\tvar val = 1 - (vec2.dot(valpos, p2) + sidelen / 2) / sidelen;\n\t\t\tsat = Math.max(0, Math.min(1, sat));\n\t\t\tval = Math.max(0, Math.min(1, val));\n\t\t\tthis.basesat = sat;\n\t\t\tthis.baseval = val;\n\t\t\tthis.outer.setSatBase(sat);\n\t\t\tthis.outer.setLumBase(val);\n\t\t};\n\n\t\tthis.pointerend = this.pointermove = function (event) {\n\t\t\tvar p = this.globalToLocal(event.position);\n\t\t\tthis.updatecolorfrompointer(p);\n\t\t};\n\n\t\tdefineDreem.class(this, 'fgfill', this.Shader, function () {\n\t\t\tthis.draworder = 5;\n\n\t\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\t\tp: vec2\n\t\t\t});\n\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tthis.update = function () {\n\t\t\t\tvar view = this.view;\n\t\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\t\tvar cx = width / 2;\n\t\t\t\tvar cy = height / 2;\n\t\t\t\tvar radius = Math.min(cx, cy);\n\t\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\t\t//this.mesh.push(view.basehue,  vec3(0,0.5,0),0);\n\t\t\t\tthis.mesh.push(-1, -1);\n\t\t\t\tthis.mesh.push(1, -1);\n\t\t\t\tthis.mesh.push(1, 1);\n\t\t\t\tthis.mesh.push(-1, -1);\n\t\t\t\tthis.mesh.push(1, 1);\n\t\t\t\tthis.mesh.push(-1, 1);\n\t\t\t};\n\n\t\t\tthis.position = function () {\n\n\t\t\t\thuepos = vec2(sin(view.basehue * PI * 2), cos(view.basehue * PI * 2)) * 0.7 * 100;\n\n\t\t\t\tvar satdir = vec2(sin((view.basehue - 1. / 4.) * PI * 2.), cos((view.basehue - 1. / 4.) * PI * 2.)) * 0.7 * 100.0;\n\t\t\t\tvar valdir = vec2(sin((view.basehue - 3. / 4.) * PI * 2.), cos((view.basehue - 3. / 4.) * PI * 2.)) * 0.7 * 100.0;\n\n\t\t\t\thuepos += (satdir - huepos) * (1 - view.basesat) + (valdir - huepos) * (1 - view.baseval);\n\n\t\t\t\tpos = vec2(min(view.layout.width, view.layout.height)) / 2 + mesh.p * view.draggersize;\n\t\t\t\tpos += huepos;\n\n\t\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t};\n\n\t\t\tthis.color = function () {\n\t\t\t\tvar D = sqrt(dot(mesh.p, mesh.p));\n\t\t\t\tif (D < 0.7) return view.currentcolor;\n\t\t\t\tif (D < 1.0) return view.contrastcolor;\n\n\t\t\t\treturn vec4(1., 1., 1., 0.);\n\t\t\t};\n\t\t});\n\n\t\tthis.fgfill = true;\n\n\t\tdefineDreem.class(this, 'bgfill', this.Shader, function () {\n\t\t\tthis.draworder = 1;\n\t\t\tthis.vertexstruct = defineDreem.struct({\n\t\t\t\tp: float,\n\t\t\t\thsvoff: vec3,\n\t\t\t\tcenter: float\n\t\t\t});\n\n\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\tthis.drawtype = this.TRIANGLES;\n\n\t\t\tthis.position = function () {\n\t\t\t\toff = mesh.p / 6.283;\n\t\t\t\tvar rad = min(view.layout.width, view.layout.height) / 2;\n\t\t\t\tuv = vec2(sin(mesh.p * PI * 2), cos(mesh.p * PI * 2)) * 0.7;\n\t\t\t\tpos = vec2(view.layout.width / 2 + rad * uv.x, view.layout.height / 2 + rad * uv.y);\n\t\t\t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t};\n\n\t\t\tthis.color = function () {\n\n\t\t\t\tvar edge = 1 - pow(mesh.center, 1.);\n\t\t\t\tvar aaedge = pow(mesh.center, 2.0);\n\t\t\t\tvar hsv = vec3(view.basehue, 1, 1) + mesh.hsvoff;\n\n\t\t\t\tvar color = colorlib.hsva(vec4(hsv, 1));;\n\t\t\t\tvar edgecolor = vec4(1, 1, 1, 1);\n\t\t\t\tvar mixed = mix(color, edgecolor, view.hover * edge);\n\t\t\t\t//mixed.a *= aaedge;\n\t\t\t\treturn color;\n\t\t\t};\n\n\t\t\tthis.update = function () {\n\t\t\t\tvar view = this.view;\n\t\t\t\tvar width = view.layout ? view.layout.width : view.width;\n\t\t\t\tvar height = view.layout ? view.layout.height : view.height;\n\t\t\t\tvar cx = width / 2;\n\t\t\t\tvar cy = height / 2;\n\t\t\t\tvar radius = Math.min(cx, cy);\n\t\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\t\t//this.mesh.push(view.basehue,  vec3(0,0.5,0),0);\n\t\t\t\tthis.mesh.push(view.basehue, vec3(0, 0, 0), 1);\n\t\t\t\tthis.mesh.push(view.basehue + 1 / 4, vec3(0, 0, -1), 1);\n\t\t\t\tthis.mesh.push(view.basehue + 2 / 4, vec3(0, -1, -1), 1);\n\n\t\t\t\tthis.mesh.push(view.basehue, vec3(0, 0, 0), 1);\n\t\t\t\tthis.mesh.push(view.basehue + 2 / 4, vec3(0, -1, -1), 1);\n\t\t\t\tthis.mesh.push(view.basehue + 3 / 4, vec3(0, -1, 0), 1);\n\t\t\t};\n\t\t});\n\t\tthis.bgfill = true;\n\t});\n\n\tdefineDreem.class(this, 'colorarea', function ($ui$view) {\n\t\tthis.hardrect = {\n\t\t\tcolor: function color() {\n\t\t\t\treturn vec4(mesh.x, mesh.y, 0, 1);\n\t\t\t}\n\t\t};\n\t\tthis.width = 100;\n\t\tthis.height = 100;\n\t});\n\n\tthis.layout = function () {\n\t\tthis.value = this.value;\n\t};\n\n\tthis.render = function () {\n\t\tvar _view;\n\n\t\tvar colorwheel = this.colorwheel ? view({ margin: 10, bgcolor: NaN, position: \"relative\", alignself: \"center\" }, view({ bgcolor: NaN, width: 200, height: 200, padding: 3 }), this.colorcirclecontrol({ position: \"absolute\", width: 200, height: 200 }), this.squareview({ basehue: this.basehue, position: \"absolute\" })) : [];\n\n\t\tvar colorsliders = this.colorsliders ? view({ bgcolor: NaN, flexdirection: \"column\", width: 280 }, this.customslider({ name: \"rslider\", height: this.sliderheight, flex: 1, hsvfrom: vec3(0, 1, 0), hsvto: vec3(0, 1, 0.5),\n\t\t\toffset: function offset(v) {\n\t\t\t\tthis.outer.setRed(v.value / 255);\n\t\t\t} }), this.customslider({ name: \"gslider\", height: this.sliderheight, flex: 1, hsvfrom: vec3(0.33, 1, 0), hsvto: vec3(0.333, 1, 0.5),\n\t\t\toffset: function offset(v) {\n\t\t\t\tthis.outer.setGreen(v.value / 255);\n\t\t\t} }), this.customslider({ name: \"bslider\", height: this.sliderheight, flex: 1, hsvfrom: vec3(0.666, 1, 0), hsvto: vec3(0.666, 1, 0.5),\n\t\t\toffset: function offset(v) {\n\t\t\t\tthis.outer.setBlue(v.value / 255);\n\t\t\t} }), view({ bgcolor: NaN }, view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"R\", flex: 1, minvalue: 0, maxvalue: 255, name: \"textr\", value: \"100\", fontsize: this.fontsize })), view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"G\", flex: 1, minvalue: 0, maxvalue: 255, name: \"textg\", value: \"100\", fontsize: this.fontsize })), view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"B\", flex: 1, minvalue: 0, maxvalue: 255, name: \"textb\", value: \"100\", fontsize: this.fontsize }))), this.customslider({ name: \"hsvider\", height: this.sliderheight, flex: 1, hsvfrom: vec3(0.0, this.basesat, this.baseval),\n\t\t\thsvto: vec3(1, this.basesat, this.baseval), offset: function offset(v) {\n\t\t\t\tthis.outer.setHueBase(v.value / 255);\n\t\t\t} }), this.customslider({ name: \"sslider\", height: this.sliderheight, flex: 1, hsvhueadd: 1, hsvfrom: vec3(0, 0, this.baseval),\n\t\t\thsvto: vec3(0, 1, this.baseval), offset: function offset(v) {\n\t\t\t\tthis.outer.setSatBase(v.value / 255);\n\t\t\t} }), this.customslider({ name: \"lslider\", height: this.sliderheight, flex: 1, hsvhueadd: 1,\n\t\t\thsvfrom: vec3(0, this.basesat, 0), hsvto: vec3(0, this.basesat, 1), offset: function offset(v) {\n\t\t\t\tthis.outer.setLumBase(v.value / 255);\n\t\t\t} }), view({ bgcolor: NaN }, view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"H\", flex: 1, minvalue: 0, maxvalue: 100, fontsize: this.fontsize, name: \"texth\", value: \"100\" })), view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"S\", flex: 1, minvalue: 0, maxvalue: 100, fontsize: this.fontsize, name: \"texts\", value: \"300\" })), view({ flex: 1, bgcolor: NaN }, numberbox({ title: \"V\", flex: 1, minvalue: 0, maxvalue: 100, fontsize: this.fontsize, name: \"textv\", value: \"100\" })))) : [];\n\n\t\tvar colorbox = this.colorbox ? view({ bgcolor: NaN, justifycontent: \"flex-end\", flexdirection: \"row\", alignitems: \"flex-end\" }, view((_view = { bgcolor: NaN }, _defineProperty(_view, \"bgcolor\", \"transparent\"), _defineProperty(_view, \"margin\", 2), _defineProperty(_view, \"borderwidth\", 1), _defineProperty(_view, \"borderradius\", 1), _defineProperty(_view, \"bordercolor\", this.internalbordercolor), _defineProperty(_view, \"flex\", 1), _defineProperty(_view, \"padding\", 1), _view), view({ flex: 1, bgcolor: NaN, alignitems: \"flex-end\", justifycontent: \"flex-end\" }, label(_defineProperty({ bgcolor: NaN, fontsize: this.fontsize, margin: vec4(10, 5, 0, 0), text: \"#\", fgcolor: this.contrastcolor }, \"fontsize\", this.fontsize)), textbox({\n\t\t\tname: \"hexcolor\",\n\t\t\tbgcolor: NaN,\n\t\t\tmargin: vec4(0, 5, 0, 0),\n\t\t\tvalue: \"ff00ff\",\n\t\t\tfgcolor: this.contrastcolor,\n\t\t\tpadding: vec4(20, 2, 2, 2),\n\t\t\tfontsize: this.fontsize\n\t\t})), view({ flex: 1, bgcolor: NaN, alignitems: \"flex-end\", justifycontent: \"flex-end\" }, label(_defineProperty({ bgcolor: NaN, fontsize: this.fontsize, margin: vec4(10, 5, 0, 0), text: \"alpha\", fgcolor: this.contrastcolor }, \"fontsize\", this.fontsize)), textbox({ name: \"texta\", bgcolor: NaN, margin: vec4(0, 5, 0, 0), value: \"128\", fgcolor: this.contrastcolor, padding: vec4(20, 2, 2, 2), fontsize: this.fontsize })))) : [];\n\n\t\treturn [view({ flexdirection: \"column\", flex: 1, alignitems: \"center\", justifycontent: \"center\", bgcolor: \"transparent\" }, colorwheel, colorsliders), colorbox];\n\t};\n\n\tvar colorpicker = this.constructor;\n\t// Basic usage of the button.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [colorpicker({ width: 300 })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/colorpicker.js\n// module id = 82\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/colorpicker.js?");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, foldcontainer, label, button, icon, $widgets$, markdown, jsviewer) {\n\n\tvar parseDoc = requireDreem('$system/parse/jsdocgen').parseDoc;\n\n\tthis.bgcolor = vec4(\"#343434\");\n\tthis.padding = 20;\n\tthis.flexdirection = \"column\";\n\tthis.alignitems = \"stretch\";\n\tthis.flexwrap = \"nowrap\";\n\tthis.viewport = \"2d\";\n\n\tthis.attributes = {\n\t\t// the class for which to create the documentation. If a string is assigned, the model will be interpreted as a markdown text document.\n\t\tclassconstr: Config({ type: Function })\n\n\t\t// A doc item is an item with a heading, such as methods or attributes\n\t};defineDreem.class(this, 'ClassDocItem', function ($ui$, view) {\n\t\tthis.bgcolor = NaN;\n\t\t// the item to display.\n\t\t// An \"attribute\" item can have name, body_text, defvalue and type properties.\n\t\t// A \"function\" item can have name, params and body_text properties.\n\t\tthis.attributes = {\n\t\t\titem: Config({ type: Object }),\n\t\t\t// the type of this display block. Accepted values: \"function\", \"attribute\"\n\t\t\tblocktype: Config({ type: String, value: \"function\" })\n\t\t};\n\t\tthis.flex = 1;\n\t\t//this.bgcolor = vec4(\"#ffffff\");\n\t\tthis.margin = 4;\n\t\tthis.padding = 4;\n\t\tthis.flexdirection = \"column\";\n\t\tthis.flexwrap = \"nowrap\";\n\n\t\tthis.render = function () {\n\t\t\tvar res = [];\n\t\t\tif (this.blocktype === \"function\") {\n\t\t\t\tvar functionsig = \"()\";\n\t\t\t\tif (this.item.params && this.item.params.length > 0) {\n\t\t\t\t\tfunctionsig = \"(\" + this.item.params.map(function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t}).join(\", \") + \")\";\n\t\t\t\t}\n\t\t\t\tres.push(label({ bgcolor: NaN, margin: vec4(2), text: this.item.name + functionsig, fontsize: 20, fgcolor: \"f0f0f0\", bold: true }));\n\t\t\t} else {\n\t\t\t\tvar sub = [];\n\n\t\t\t\tif (this.item.type) {\n\t\t\t\t\tsub.push(label({ bgcolor: NaN, margin: vec4(2), text: \"type: \" + this.item.type, fontsize: 15, fgcolor: \"white\" }));\n\t\t\t\t}\n\n\t\t\t\tif (this.item.defvalue !== undefined) {\n\t\t\t\t\tif (this.item.type === \"vec4\") {\n\t\t\t\t\t\tvar _view, _label;\n\n\t\t\t\t\t\tvar type = defineDreem.typemap.types[this.item.type];\n\t\t\t\t\t\tvar defvalue = type(this.item.defvalue);\n\t\t\t\t\t\tvar labeltext = Math.round(defvalue[0] * 100) / 100 + \", \" + Math.round(defvalue[1] * 100) / 100 + \", \" + Math.round(defvalue[2] * 100) / 100 + \", \" + Math.round(defvalue[3] * 100) / 100;\n\n\t\t\t\t\t\tvar zwartdiff = defvalue[0] + defvalue[1] + defvalue[2];\n\t\t\t\t\t\tvar witdiff = 1 - defvalue[0] + (1 - defvalue[1]) + (1 - defvalue[2]);\n\t\t\t\t\t\tvar color = \"black\";\n\t\t\t\t\t\tif (witdiff > zwartdiff) color = \"white\";\n\n\t\t\t\t\t\tsub.push(view({ bgcolor: NaN }, [label({ margin: vec4(2), text: \"default:\", bgcolor: NaN, fontsize: 15, fgcolor: \"white\" }), view((_view = { bgcolor: NaN, bordercolor: \"#808080\", borderwidth: 1, cornerradius: 4 }, _defineProperty(_view, \"bgcolor\", this.item.defvalue), _defineProperty(_view, \"padding\", vec4(8, 3, 8, 3)), _view), label((_label = { bgcolor: NaN, fgcolor: color, fontsize: 15 }, _defineProperty(_label, \"bgcolor\", \"transparent\"), _defineProperty(_label, \"text\", labeltext), _label)))]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.item.type === \"String\") {\n\t\t\t\t\t\t\tsub.push(label({ bgcolor: NaN, margin: vec4(2), text: \"default: \\\"\" + this.item.defvalue.toString() + \"\\\"\", fontsize: 15, fgcolor: \"#404040\" }));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsub.push(label({ bgcolor: NaN, margin: vec4(2), text: \"default: \" + this.item.defvalue.toString(), fontsize: 15, fgcolor: \"#404040\" }));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar name = this.item.name;\n\t\t\t\tif (this.blocktype === \"example\") {\n\t\t\t\t\tname = name.split(/(?=[A-Z])/).join(\" \");\n\t\t\t\t}\n\t\t\t\tvar title = label({ bgcolor: NaN, margin: vec4(2), text: name, fontsize: 20, fgcolor: \"white\" });\n\n\t\t\t\tres.push(view({ bgcolor: NaN, flex: 1, alignitems: \"flex-start\", justifycontent: \"space-between\" }, [title, view(_defineProperty({ bgcolor: NaN, alignself: \"flex-start\", alignitems: \"flex-end\", flexdirection: \"column\" }, \"alignitems\", \"flex-end\"), sub)]));\n\t\t\t}\n\n\t\t\tif (this.item.body_text) {\n\t\t\t\tfor (var t in this.item.body_text) {\n\t\t\t\t\tres.push(label({ bgcolor: NaN, text: this.item.body_text[t], fgcolor: \"white\", fontsize: 12, margin: vec4(10, 0, 10, 5) }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.item.params && this.item.params.length > 0) {\n\t\t\t\tres.push(label({ bgcolor: NaN, fgcolor: \"#808080\", margin: vec4(2, 0, 4, 4), text: \"parameters:\" }));\n\t\t\t\tfor (var a in this.item.params) {\n\t\t\t\t\tvar parm = this.item.params[a];\n\t\t\t\t\tvar left = label({ bgcolor: NaN, fgcolor: \"white\", margin: vec4(10, 0, 4, 4), text: parm.name });\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tif (parm.body_text && parm.body_text.length > 0) {\n\t\t\t\t\t\tright = view({ flex: 0.8 }, parm.body_text.map(function (a) {\n\t\t\t\t\t\t\treturn label({ fgcolor: \"#f0f0f0\", text: a });\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tright = view({ flex: 1.0 });\n\t\t\t\t\t}\n\t\t\t\t\tres.push(view({ bgcolor: NaN, height: 1, borderwidth: 1, bordercolor: \"#e0e0e0\", padding: 0 }));\n\t\t\t\t\tres.push(view({ bgcolor: NaN, flexdirection: \"row\" }, [left, right]));\n\t\t\t\t}\n\t\t\t\tres.push(view({ bgcolor: NaN, height: 1, borderwidth: 1, bordercolor: \"#e0e0e0\", padding: 0 }));\n\t\t\t}\n\n\t\t\tif (this.blocktype === \"example\") {\n\t\t\t\tres.push(view({ flexdirection: \"row\", flex: 1, padding: vec4(2), bgcolor: \"#202020\" }, view(_defineProperty({ bgcolor: NaN, flex: 1, borderwidth: 1, flexdirection: \"column\", padding: vec4(4), bordercolor: \"#eee\" }, \"bgcolor\", NaN), label({ fgcolor: \"#888\", bgcolor: NaN, text: \"Code\", margin: vec4(10) }), jsviewer({ margin: vec4(0), wrap: true, source: this.item.examplefunc.toString(), padding: vec4(4), fontsize: 12, bgcolor: \"#000025\", multiline: true })), view({ flex: 1, borderwidth: vec4(0, 1, 1, 1), flexdirection: \"column\", padding: vec4(4), bordercolor: \"#eee\", bgcolor: \"#333\" }, label({ fgcolor: \"white\", bgcolor: NaN, text: \"Live demo\", margin: vec4(10) }), this.item.examplefunc())));\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t});\n\n\t// Build a documentation structure for a given constructor function\n\t//\tthis.parseDoc =\n\n\t// This class will recursively expand a class_doc sturcture to an on-screen view.\n\n\tdefineDreem.class(this, 'dividerline', function ($ui$, view) {\n\t\tthis.height = 1;\n\t\tthis.borderwidth = 1;\n\t\tthis.bgcolor = vec4(\"#202020\");\n\t\tthis.bordercolor = vec4(\"#202020\");\n\t\tthis.padding = 0;\n\t\tthis.margin = vec4(0, 10, 0, 0);\n\t});\n\n\tdefineDreem.class(this, 'ClassDocView', function ($ui$, view) {\n\n\t\tthis.attributes = {\n\t\t\t// If collapsible is true, the render function will build a foldcontainer around this class. This is used for recursion levels > 0 of the docviewer class.\n\t\t\tcollapsible: Config({ type: Boolean, value: false }),\n\t\t\t// the class_doc structure to display.\n\t\t\tclass_doc: Config({ type: Object })\n\t\t};\n\n\t\tthis.flexdirection = \"column\";\n\t\tthis.flexwrap = \"nowrap\";\n\n\t\tthis.bgcolor = NaN;\n\n\t\tthis.BuildGroup = function (inputarray, title, icon, color, blocktype) {\n\t\t\tif (!blocktype) blocktype = \"attribute\";\n\t\t\tvar subs = [];\n\n\t\t\tfor (var i = 0; i < inputarray.length; i++) {\n\t\t\t\tsubs.push(this.outer.ClassDocItem({ blocktype: blocktype, item: inputarray[i] }));\n\t\t\t\tif (i < inputarray.length - 1) subs.push(this.outer.dividerline());\n\t\t\t}\n\n\t\t\treturn foldcontainer({\n\t\t\t\tcollapsed: true, bordercolor: \"#202020\", bgcolor: NaN,\n\t\t\t\tbasecolor: color, icon: icon, title: title, flex: 1, fontsize: 15, margin: vec4(10, 0, 0, 20), fgcolor: \"white\" }, view({ flexdirection: \"column\", flex: 1, bgcolor: NaN\n\t\t\t}, subs));\n\t\t};\n\n\t\tthis.render = function () {\n\t\t\tvar body = [];\n\t\t\tvar res = [];\n\t\t\tvar class_doc = this.class_doc;\n\t\t\tif (!this.class_doc) return [];\n\n\t\t\tif (!this.collapsible) {\n\t\t\t\tbody.push(view({ bgcolor: NaN }, [icon({ bgcolor: NaN, fontsize: 38, icon: \"cube\", fgcolor: \"White\" }), label({ bgcolor: NaN, text: class_doc.class_name, fontsize: 30, margin: vec4(10, 10, 0, 20), fgcolor: \"White\" })]));\n\t\t\t}\n\n\t\t\tif (class_doc.base_class_chain.length > 0) {\n\t\t\t\tbody.push(view({ bgcolor: NaN, margin: vec4(14) }, class_doc.base_class_chain.map(function (r) {\n\t\t\t\t\treturn [icon({ bgcolor: NaN, icon: \"arrow-right\", fgcolor: \"#f0f0f0\", fontsize: 15, margin: vec4(2) }), button({ margin: vec4(0), padding: vec4(10, 0, 10, 0), text: r.name, fontsize: 10, click: function () {\n\t\t\t\t\t\t\tthis.screen.locationhash = { path: '$root' + r.path };\n\t\t\t\t\t\t}.bind(this) })];\n\t\t\t\t}.bind(this))));\n\t\t\t}\n\n\t\t\tif (class_doc.body_text.length > 0) {\n\t\t\t\tbody.push(markdown({ bgcolor: NaN, body: class_doc.body_text, margin: vec4(10, 0, 10, 10), fontcolor: \"white\" }));\n\t\t\t}\n\n\t\t\tres.push(view({ bgcolor: NaN, flexdirection: \"column\", margin: vec4(10, 0, 0, 20) }, body));\n\n\t\t\tif (class_doc.examples.length > 0) res.push(this.BuildGroup(class_doc.examples, \"Examples\", \"flask\", \"#303030\", \"example\"));\n\t\t\tif (class_doc.attributes.length > 0) res.push(this.BuildGroup(class_doc.attributes, \"Attributes\", \"gears\", \"#303000\"));\n\t\t\tif (class_doc.state_attributes.length > 0) res.push(this.BuildGroup(class_doc.state_attributes, \"State Attributes\", \"archive\", \"#300000\"));\n\t\t\tif (class_doc.events.length > 0) res.push(this.BuildGroup(class_doc.events, \"Events\", \"plug\", \"#300033\"));\n\n\t\t\tif (class_doc.inner_classes.length > 0) {\n\t\t\t\tvar classes = [];\n\t\t\t\tfor (var a in class_doc.inner_classes) {\n\t\t\t\t\tclasses.push(this.outer.ClassDocView({ collapsible: true, class_doc: class_doc.inner_classes[a] }));\n\t\t\t\t}\n\t\t\t\tres.push(foldcontainer({ bgcolor: NaN, bordercolor: \"#202020\", collapsed: true, basecolor: \"#002000\", icon: \"cubes\", title: \"Inner classes\", fontsize: 15, margin: vec4(10, 0, 0, 20), fgcolor: \"white\" }, view({ flexdirection: \"column\", flex: 1, bgcolor: \"#404040\" }, classes)));\n\t\t\t}\n\n\t\t\tif (class_doc.methods.length > 0) res.push(this.BuildGroup(class_doc.methods, \"Methods\", \"paw\", \"#000030\", \"function\"));\n\n\t\t\tif (this.collapsible) {\n\n\t\t\t\treturn foldcontainer({ bgcolor: NaN, bordercolor: \"#202020\", basecolor: \"#002000\", collapsed: true, icon: \"cube\", title: class_doc.class_name, fontsize: 15 }, view({ bgcolor: NaN, flexdirection: \"column\", flex: 1 }, res));\n\t\t\t}\n\n\t\t\treturn res;\n\t\t};\n\t});\n\n\tthis.render = function () {\n\t\tvar functions = [];\n\t\tvar res = [];\n\t\tvar R = this.classconstr; // \trequireDreem(\"$classes/dataset\")\n\t\tif (typeof R === \"string\") {\n\t\t\treturn [markdown({ bgcolor: NaN, body: \" \" + R.toString() })];\n\t\t} else if (typeof R === 'function') {\n\n\t\t\tvar class_doc = parseDoc(R);\n\n\t\t\treturn [this.ClassDocView({ class_doc: class_doc })];\n\t\t}\n\t};\n\n\tvar docviewer = this.constructor;\n\t// Show the documentation for a dreemgl class.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [docviewer({ classconstr: docviewer })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/docviewer.js\n// module id = 83\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/docviewer.js?");

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('./jsviewer', function (requireDreem, baseclass, $ui$, textbox, label) {\n\n\tthis.readonly = false;\n\n\tvar enumchange = this.enumchange;\n\n\tthis.init = function () {};\n\n\tthis.format_options = {\n\t\tforce_newlines_array: false,\n\t\tforce_newlines_object: false\n\t\t// process inserts with matching parens\n\t};this.processInsert = function (lo, hi, text) {\n\t\tvar cdelta = 0;\n\t\tif (this.error_state) return [text, 0];\n\t\tif (this.textbuf.charCodeAt(lo) === 9) {\n\t\t\tcdelta += 1;\n\t\t}\n\t\tif (text == '\"') {\n\t\t\tif (this.textbuf.charCodeAt(lo) == 34) text = '', cdelta += 1;else text += '\"', cdelta -= 1;\n\t\t} else if (text == \"'\") {\n\t\t\tif (this.textbuf.charCodeAt(lo) == 39) text = '', cdelta += 1;else text += \"'\", cdelta -= 1;\n\t\t} else if (text == ')') {\n\t\t\tif (this.textbuf.charCodeAt(lo) == 41) text = '', cdelta += 1;\n\t\t} else if (text == ']') {\n\t\t\tif (this.textbuf.charCodeAt(lo) == 93) text = '', cdelta += 1;\n\t\t} else if (text == '}') {\n\t\t\t// do a forward scan\n\t\t\tif (this.textbuf.charCodeAt(lo) === 10 && this.textbuf.charCodeAt(lo + 1) === 9 && this.textbuf.charCodeAt(lo + 2) == 125) {\n\t\t\t\ttext = '', cdelta = 0;\n\t\t\t} else if (this.textbuf.charCodeAt(lo) == 125) text = '', cdelta += 1;\n\t\t} else if (text == '(') {\n\t\t\tcdelta -= 1;\n\t\t\ttext += ')';\n\t\t} else if (text == '[') {\n\t\t\tcdelta -= 1;\n\t\t\ttext += ']';\n\t\t} else if (text == '{') {\n\t\t\tif (lo != hi) {\n\t\t\t\t// do something special\n\t\t\t}\n\t\t\tcdelta -= 1;\n\t\t\ttext += '}';\n\t\t} else if (text == '\\n') {\n\t\t\t// autoindent code\n\t\t\tvar i = hi;\n\t\t\tvar state = 0;\n\t\t\tvar indent = 0;\n\t\t\tvar split = 0;\n\t\t\twhile (this.textbuf.charCodeAt(i) !== 9 && i >= 0) {\n\t\t\t\ti--;\n\t\t\t}\n\t\t\twhile (this.textbuf.charCodeAt(i) === 9) {\n\t\t\t\ti--;\n\t\t\t\tindent++;\n\t\t\t}\n\t\t\ttext += Array(indent + 1).join('\\t');\n\t\t}\n\t\treturn [text, cdelta];\n\t};\n\n\t// some patching up\n\tthis.stripNextOnBackspace = function (pos) {\n\t\treturn false;\n\t\t//ch = this.textbuf.charCodeAt(pos)\n\t\t//if(ch == 91 && this.textbuf.charCodeAt(pos+1) == 93) return true\n\t\t//if(ch == 123 && this.textbuf.charCodeAt(pos+1) == 125) return true\n\t\t//if(ch == 40 && this.textbuf.charCodeAt(pos+1) == 41) return true\n\t\t//return false\n\t};\n\n\tthis.update_force = function () {\n\t\tthis.change_timeout = undefined;\n\t\tbaseclass.cursorsChanged.call(this);\n\t\tthis.redraw();\n\t};\n\n\t// the change event\n\tthis.change_id = 0;\n\tthis.change_timeout = 0;\n\n\tthis.textChanged = function () {\n\t\tbaseclass.textChanged.call(this, true);\n\t\tthis.worker.postMessage({ change_id: ++this.change_id, format_options: this.format_options, source: this._value });\n\t\tif (this.change_timeout) return;\n\t\tthis.change_timeout = this.setTimeout(this.update_force, 30);\n\t};\n\n\tthis.cursorsChanged = function () {\n\t\tif (!this.change_timeout) {\n\t\t\tbaseclass.cursorsChanged.call(this);\n\n\t\t\tif (this.format_dirty) {\n\t\t\t\tthis.change = \"cursor\";\n\t\t\t\tthis.worker.postMessage({ change_id: ++this.change_id, format_options: this.format_options, source: this._value });\n\t\t\t}\n\t\t}\n\t\t//this.change_timeout = this.setTimeout(this.update_force, 30)\n\t};\n\n\t// we can skip tabs\n\tthis.atMoveLeft = function (pos) {\n\t\tif (this.textbuf.charCodeAt(pos) === 10) return pos - 1;\n\t\treturn pos;\n\t};\n\n\tthis.atMoveRight = function (pos) {\n\t\tif (this.textbuf.charCodeAt(pos) === 9) return pos + 1;\n\t\treturn pos;\n\t};\n\n\t// alright lets make a worker that parses and reserializes\n\tvar worker = defineDreem.class('$system/rpc/worker', function (requireDreem) {\n\n\t\tvar Parser = requireDreem('$system/parse/onejsparser');\n\t\tvar JSFormatter = requireDreem('$system/parse/jsformatter');\n\n\t\tthis.onmessage = function (msg) {\n\t\t\t// lets start a parse!\n\t\t\ttry {\n\t\t\t\tvar ast = Parser.parse(msg.source);\n\t\t\t} catch (e) {\n\t\t\t\tthis.postMessage({ error: e.message, pos: e.pos });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// ok now we need to reserialize from ast\n\n\t\t\tvar buf = {\n\t\t\t\tout: vec4.array(msg.source.length + 100),\n\t\t\t\tcharCodeAt: function charCodeAt(i) {\n\t\t\t\t\treturn this.out.array[i * 4];\n\t\t\t\t},\n\t\t\t\tchar_count: 0,\n\t\t\t\twalk_id: 0\n\t\t\t};\n\n\t\t\t// lets reserialize output\n\t\t\tvar out = buf.out;\n\t\t\tJSFormatter.walk(ast, buf, msg.format_options, function (text, padding, l1, l2, l3, node) {\n\t\t\t\tif (text === '\\n') {\n\t\t\t\t\tthis.last_is_newline = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (text === '\\t' && this.last_is_newline) {\n\t\t\t\t\ttext = '\\n';\n\t\t\t\t}\n\t\t\t\tthis.last_is_newline = false;\n\n\t\t\t\tout.ensureSize(out.length + text.length);\n\t\t\t\tvar o = out.length;\n\t\t\t\tvar first = text.charCodeAt(0);\n\t\t\t\tif (first !== 32 && first !== 9 && first !== 10) buf.walk_id++;\n\t\t\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\t\t\tvar v = o * 4 + i * 4;\n\t\t\t\t\tout.array[v] = text.charCodeAt(i);\n\t\t\t\t\tout.array[v + 1] = ((padding || 0) + this.actual_indent * 65536) * -1;\n\t\t\t\t\tif (l1 < 0) out.array[v + 2] = l1;else out.array[v + 2] = 65536 * (l1 || 0) + 256 * (l2 || 0) + (l3 || 0);\n\t\t\t\t\tout.array[v + 3] = buf.walk_id + 65536 * this.actual_line;\n\t\t\t\t}\n\t\t\t\tout.length += text.length;\n\t\t\t\tbuf.char_count += text.length;\n\t\t\t});\n\n\t\t\tthis.postMessage({ length: buf.out.length, change_id: msg.change_id, array: buf.out.array }, [buf.out.array.buffer]);\n\t\t};\n\t});\n\n\tthis.oninit = function (prev) {\n\n\t\tthis.worker = prev && prev.worker || worker();\n\t\t// if we get source back yay\n\t\tthis.worker.onmessage = function (msg) {\n\t\t\tvar mesh = this.shaders.typeface.mesh;\n\t\t\tif (this.change_timeout) {\n\t\t\t\tthis.clearTimeout(this.change_timeout);\n\t\t\t\tthis.update_force();\n\t\t\t}\n\t\t\t//return\n\t\t\tvar err = this.find('error');\n\t\t\tif (msg.error) {\n\t\t\t\tvar rect = mesh.cursorRect(msg.pos);\n\t\t\t\terr.x = rect.x;\n\t\t\t\terr.y = rect.y + rect.h + 4;\n\t\t\t\terr.text = '^' + msg.error;\n\t\t\t\terr.visible = true;\n\n\t\t\t\tthis.error_state = true;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.error_state = false;\n\t\t\t\tif (err._visible) err.visible = false;\n\t\t\t}\n\n\t\t\tif (msg.change_id !== this.change_id) return; // toss it, its too late.\n\t\t\tvar dt = Date.now();\n\t\t\tvar start = 0;\n\t\t\tvar data_new = msg.array;\n\t\t\tvar data_old = mesh.array;\n\t\t\tvar len_new = msg.length;\n\t\t\tvar len_old = mesh.length / 6;\n\t\t\tfor (; start < len_new && start < len_old; start++) {\n\t\t\t\tvar off_old = start * 10 * 6;\n\t\t\t\tvar off_new = start * 4;\n\n\t\t\t\tif (data_new[off_new] !== data_old[off_old + 6]) break;\n\t\t\t\tif (data_new[off_new + 1] !== data_old[off_old + 7]) break;\n\t\t\t\t//if(data_new[off_new+2] !== data_old[off_old + 8]) break\n\t\t\t\t//if(data_new[off_new+3] !== data_old[off_old + 9]) break\n\t\t\t\t// copy data over\n\t\t\t\tdata_old[off_old + 7] = data_old[off_old + 17] = data_old[off_old + 27] = data_old[off_old + 37] = data_old[off_old + 47] = data_old[off_old + 57] = data_new[off_new + 1];\n\t\t\t\tdata_old[off_old + 8] = data_old[off_old + 18] = data_old[off_old + 28] = data_old[off_old + 38] = data_old[off_old + 48] = data_old[off_old + 58] = data_new[off_new + 2];\n\t\t\t\tdata_old[off_old + 9] = data_old[off_old + 19] = data_old[off_old + 29] = data_old[off_old + 39] = data_old[off_old + 49] = data_old[off_old + 59] = data_new[off_new + 3];\n\t\t\t}\n\t\t\tvar end_old = len_old - 1,\n\t\t\t    end_new = len_new - 1;\n\t\t\tfor (; end_old > start && end_new > start; end_old--, end_new--) {\n\t\t\t\tvar off_old = end_old * 10 * 6;\n\t\t\t\tvar off_new = end_new * 4;\n\t\t\t\t//console.log(start, end_old, data_new[off_new], data_old[off_old+6],data_new[off_new] !== data_old[off_old + 6])\n\n\t\t\t\tif (data_new[off_new] !== data_old[off_old + 6]) break;\n\t\t\t\tif (data_new[off_new + 1] !== data_old[off_old + 7]) break;\n\t\t\t\t//if(data_new[off_new+2] !== data_old[off_old + 8]) break\n\t\t\t\t//if(data_new[off_new+3] !== data_old[off_old + 9]) break\n\t\t\t\tdata_old[off_old + 7] = data_old[off_old + 17] = data_old[off_old + 27] = data_old[off_old + 37] = data_old[off_old + 47] = data_old[off_old + 57] = data_new[off_new + 1];\n\t\t\t\tdata_old[off_old + 8] = data_old[off_old + 18] = data_old[off_old + 28] = data_old[off_old + 38] = data_old[off_old + 48] = data_old[off_old + 58] = data_new[off_new + 2];\n\t\t\t\tdata_old[off_old + 9] = data_old[off_old + 19] = data_old[off_old + 29] = data_old[off_old + 39] = data_old[off_old + 49] = data_old[off_old + 59] = data_new[off_new + 3];\n\t\t\t}\n\t\t\t//mesh.clean = false\n\t\t\tvar cursor_now = this.cursorset.list[0].start;\n\n\t\t\tvar new_range = end_new - start;\n\t\t\tvar old_range = end_old - start;\n\n\t\t\tif (old_range < new_range && this.change === 'delete') return this.format_dirty = true;\n\t\t\tif (old_range > new_range && this.change === 'keypress') return this.format_dirty = true;\n\n\t\t\t// do the cursor move magic\n\t\t\tvar deleted_whitespace = true;\n\t\t\tif (this.change === 'delete') {\n\t\t\t\tvar undo_data = this.undo_stack[this.undo_stack.length - 1].data;\n\t\t\t\tif (undo_data) for (var i = 0; i < undo_data.length; i++) {\n\t\t\t\t\tvar char = undo_data.array[i * 4];\n\t\t\t\t\tif (char !== 32 && char !== 9 && char !== 10) deleted_whitespace = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// dont autoreformat immediately when deleting characters, only with whitespace\n\t\t\tif (new_range < old_range && this.change === 'delete' && start < cursor_now && !deleted_whitespace) return this.format_dirty = true;\n\n\t\t\tif (this.change === 'undoredo') return this.format_dirty = true;\n\t\t\t// if we insert a newline or do a delete use the marker\n\n\t\t\tif (new_range !== old_range) {\n\t\t\t\tif (this.change === 'keypress' && this.change_keypress === '\\n' || this.change === 'delete' && deleted_whitespace) {\n\t\t\t\t\t// use the tag\n\t\t\t\t\tvar nextto = mesh.tagAt(cursor_now, 3);\n\n\t\t\t\t\tfor (var t = start; t < len_new; t++) {\n\t\t\t\t\t\tif (nextto == data_new[t * 4 + 3]) {\n\t\t\t\t\t\t\tcursor_now = t; //this.cursorset.list[0].moveToOffset(t)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.change === 'delete') {\n\t\t\t\t\t//console.log(\"BE HERE\")\n\t\t\t\t\t//this.cursorset.list[0].moveToOffset(cursor_now - 1)\n\t\t\t\t} else if (this.change === 'keypress') {\n\t\t\t\t\t// stick to the character\n\t\t\t\t\tvar char_at = data_new[cursor_now * 4];\n\t\t\t\t\t//if(char_at === 9){ // we are typing in a tab\n\t\t\t\t\t//\tthis.cursorset.list[0].moveToOffset(end_new+1)\n\t\t\t\t\t//}\n\t\t\t\t\t//else\n\t\t\t\t\tif (char_at !== 44) {\n\t\t\t\t\t\tvar nextto = mesh.tagAt(cursor_now - 1, 0);\n\t\t\t\t\t\tvar fd = 0;\n\t\t\t\t\t\tfor (var t = cursor_now - 1; t < len_new; t++) {\n\t\t\t\t\t\t\tif (nextto == data_new[t * 4 + 0]) {\n\t\t\t\t\t\t\t\tfd = 1;\n\t\t\t\t\t\t\t} else if (fd) {\n\t\t\t\t\t\t\t\t// move the cursor\n\t\t\t\t\t\t\t\tcursor_now = t; //this.cursorset.list[0].moveToOffset(t)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.cursorset.update();\n\t\t\t\t// create the undo entry\n\t\t\t\tif (new_range) {\n\t\t\t\t\tthis.undo_group--;\n\t\t\t\t\tthis.addUndoInsert(start, end_old + 1);\n\t\t\t\t\tthis.addUndoDelete(start, end_new + 1);\n\t\t\t\t\tthis.undo_group++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.cursorset.update();\n\t\t\t}\n\n\t\t\t// this replaces the textbuffer\n\t\t\tmesh.setLength(start);\n\t\t\tvar buf = { struct: 1, start: start, array: data_new, length: len_new };\n\t\t\tmesh.add(buf);\n\n\t\t\t// lets figure out the linenumbers between start and end_new\n\t\t\tif (new_range > old_range) {\n\t\t\t\tvar min = Infinity,\n\t\t\t\t    max = -Infinity;\n\t\t\t\tfor (var i = start; i < end_new; i++) {\n\t\t\t\t\tvar line = Math.floor(data_new[i * 4 + 3] / 65536);\n\t\t\t\t\tif (line < min) min = line;\n\t\t\t\t\tif (line > max) max = line;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.line_start = min;\n\t\t\tthis.line_end = max;\n\t\t\tthis._line_anim = 1.0;\n\t\t\tthis.line_anim = 0.;\n\t\t\tthis.cursorset.list[0].moveToOffset(cursor_now);\n\t\t\t//var rect = mesh.cursorRect(start)\n\t\t\t//err.x = rect.x\n\t\t\t//err.y = rect.y + rect.h + 4\n\t\t\t//err.text = 'WOOPWOOP'\n\t\t\t//err.visible = true\n\t\t\t//console.log(mesh.tagAt(start, 0))\n\t\t\t//console.log(mesh.tagAt(start, 1), data_new[start*4+1])\n\n\t\t\tthis.format_dirty = false;\n\t\t\tmesh.clean = false;\n\t\t\tthis.redraw();\n\t\t}.bind(this);\n\t};\n\n\tthis.render = function () {\n\t\treturn label({ position: 'absolute', name: 'error', bgcolor: 'red', fgcolor: 'white', borderradius: 1, visible: false });\n\t};\n\n\t// Basic usage\n\tvar jseditor = this.constructor;\n\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [jseditor({ bgcolor: \"#000040\", padding: vec4(14), source: \"console.log(\\\"Hello world!\\\");\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/jseditor.js\n// module id = 84\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/jseditor.js?");

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/textbox', function (requireDreem) {\n\n\tvar JSFormatter = requireDreem('$system/parse/jsformatter');\n\tvar Parser = requireDreem('$system/parse/onejsparser');\n\n\tthis.attributes = {\n\t\t// The code to display\n\t\tsource: Config({ type: String, value: \"\" }),\n\t\tsourceset: null,\n\t\tast: null,\n\t\t// wrap the text\n\t\twrap: Config({ type: Boolean, value: false }),\n\t\tinit_anim: Config({ value: 0.0, duration: 1, motion: 'outexpo' }),\n\t\tline_anim: Config({ value: 1.0, duration: 0.25, motion: 'outexpo' })\n\t};\n\tthis.linespacing = 1.3;\n\tthis.tab_size = 1;\n\tthis.line_start = 0;\n\tthis.line_end = 0;\n\tthis.boldness = 0.2;\n\n\tthis.format_options = {\n\t\tforce_newlines_array: false,\n\t\tforce_newlines_object: false\n\n\t\t// lets go and move this fucker\n\t};this.textpositionfn = function (pos, tag) {\n\t\tvar p = pos;\n\t\tvar indent = floor(tag.y * -1. / 65536.) * tab_size;\n\t\tvar line = floor(tag.w / 65536.);\n\t\tif (line >= line_start && line <= line_end) {\n\t\t\tp.x += 2 * indent * (line - line_start) * line_anim;\n\t\t}\n\t\tp.x += -min(indent, init_anim * 100.);\n\t\treturn p;\n\t};\n\n\tthis.bgcolor = vec4(12 / 255, 33 / 255, 65 / 255, 1);\n\n\tthis.readonly = true;\n\n\tthis.fontsize = 12;\n\tthis.subpixel = false;\n\n\tvar font = this.font = requireDreem('$resources/fonts/ubuntu_monospace_ascii_baked.glf');\n\n\tfor (var key in JSFormatter.types) {\n\t\tthis[key] = String(JSFormatter.types[key]);\n\t}\n\n\tthis.init = function () {\n\t\t//this.init_anim = .0\n\t};\n\n\tthis.textstyle = function (style, tag) {\n\n\t\tvar type = int(tag.z / 65536.);\n\t\tvar sub = int(mod(tag.z / 256., 256.));\n\t\tvar part = int(mod(tag.z, 256.));\n\t\tvar unicode = int(tag.x);\n\n\t\t//if(unicode == 10 || unicode == 32 || unicode == 9) discard\n\n\t\tif (tag.z <= 0.) {\n\t\t\tvar col = -tag.z;\n\n\t\t\tstyle.fgcolor = vec4(floor(col / 65536.) / 255., floor(mod(col / 256., 256.)) / 255., floor(mod(col, 256.)) / 255., 1.);\n\t\t} else if (sub == _Paren || sub == _Brace || sub == _Bracket) {\n\t\t\tif (sub == _Paren) {\n\t\t\t\tstyle.fgcolor = \"#cfffff\";\n\t\t\t} else if (sub == _Bracket) {\n\t\t\t\tstyle.fgcolor = \"#ffcfff\";\n\t\t\t} else {\n\t\t\t\tstyle.fgcolor = \"#ffffcf\";\n\t\t\t}\n\t\t\tif (type == _Function) {\n\t\t\t\tstyle.fgcolor = \"white\";\n\t\t\t}\n\t\t} else if (sub == _Operator) {\n\t\t\tstyle.fgcolor = \"#ff9d00\";\n\t\t} else if (type == _Id) {\n\t\t\tstyle.fgcolor = \"white\";\n\t\t\tif (sub == _Color) {\n\t\t\t\tstyle.fgcolor = \"pink\";\n\t\t\t}\n\t\t} else if (type == _Value) {\n\t\t\tif (sub == _String) {\n\t\t\t\tstyle.fgcolor = \"#00cf7f\"; //#ff7fe1\"//\"#0f0\"\n\t\t\t} else if (sub == _Boolean) {\n\t\t\t\tif (part > 0) {\n\t\t\t\t\tstyle.fgcolor = \"#0f0\";\n\t\t\t\t} else {\n\t\t\t\t\tstyle.fgcolor = '#f00';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyle.fgcolor = \"aero\";\n\t\t\t}\n\t\t} else if (type == _Comment) {\n\t\t\tstyle.fgcolor = \"#777\";\n\t\t} else if (type == _This) {\n\t\t\tstyle.fgcolor = \"#ff7fe1\";\n\t\t} else if (type == _Function) {\n\t\t\tstyle.fgcolor = \"#ffdd00\";\n\t\t} else if (type == _Property) {\n\t\t\tif (sub == _Object) {\n\t\t\t\tstyle.fgcolor = '#afafaf';\n\t\t\t} else {\n\t\t\t\tstyle.fgcolor = 'white'; //'#9fa3ff'*1.2\n\t\t\t}\n\t\t} else {\n\t\t\tstyle.fgcolor = \"#ff9d00\";\n\t\t}\n\n\t\treturn style;\n\t\t//if(type>7)mesh.outline = true\n\t};\n\n\t// extend the font shader\n\tthis.typeface = function () {\n\t\tthis.font = font;\n\n\t\tfor (var key in JSFormatter.types) {\n\t\t\tthis[key] = String(JSFormatter.types[key]);\n\t\t}\n\n\t\tthis.paint = function (p, edge, pixelsize) {\n\t\t\t//var edge = min(length(dpx))\n\t\t\t//dump = edge\n\t\t\tvar unicode = int(mesh.tag.x);\n\t\t\tvar selected = mesh.tag.w;\n\n\t\t\tif (unicode == 10) {\n\t\t\t\treturn vec4(0);\n\t\t\t}\n\n\t\t\tif (unicode == 32) {\n\t\t\t\tif (selected < 0.) {\n\t\t\t\t\tvar w = .3;\n\t\t\t\t\tvar h = .13;\n\t\t\t\t\tvar field = shape.box(p, .5 - .5 * w, .5 - .5 * h, w, h);\n\t\t\t\t\treturn vec4(\"#AF8F7E\".rgb, smoothstep(.75 * edge, -.75 * edge, field));\n\t\t\t\t}\n\t\t\t\treturn vec4(0);\n\t\t\t}\n\n\t\t\tif (unicode == 9) {\n\t\t\t\t// the screen aligned tab dots\n\t\t\t\t//return 'darkblue'\n\t\t\t\t// make a nice tab line\n\t\t\t\t//var out = vec4(0)\n\t\t\t\t//dump = edge\n\t\t\t\t//if(pixelsize < 0.5){//edge > 0.1){ // pixel drawing\n\t\t\t\t//if(mod(gl_FragCoord.x, 24*6.) < 1.) return '#445'\n\t\t\t\tvar s = pixelsize * 130.;\n\t\t\t\tif (p.x > s && p.x < 1.5 * s && mod(p.y, 1.5 * s) > s) return '#443';\n\t\t\t\t//if(p.x > dpdx.x && p.x <= 3*dpdx.x && mod(p.y, 2.*dpdy.y) > dpdy.y) return '#445'\n\t\t\t\t//}\n\t\t\t\t//else { // switch to vector drawing\n\t\t\t\t//\tvar w = 1\n\t\t\t\t//\tvar h = 1\n\t\t\t\t//\tvar field = shape.box(mod(p, vec2(24*6, 3.)), .5 * w, 0, w, h)\n\t\t\t\t//\tvar col = vec4(\"#667\".rgb, smoothstep(edge, -edge, field))\n\t\t\t\t//\tif(col.a > 0.01) return col\n\t\t\t\t//}\n\n\t\t\t\tif (selected < 0.) {\n\t\t\t\t\t//if(edge > 0.02){\n\t\t\t\t\t//\tif(p.x > 3. * dpdx.x && p.y >= .5 - .5 * dpdy.y && p.y <= .5 + .5 * dpdy.y)\n\t\t\t\t\t//\t\treturn vec4(\"#AF8F7E\".rgb,1.)\n\t\t\t\t\t//\treturn vec4(0)\n\t\t\t\t\t//}\n\t\t\t\t\tvar sz = .01;\n\t\t\t\t\tvar field = shape.line(p, 0., .5 - sz, 1., .5 - sz, 2. * sz);\n\t\t\t\t\treturn vec4(\"#AF8F7E\".rgb, smoothstep(edge, -edge, field));\n\t\t\t\t}\n\t\t\t\treturn vec4(0);\n\t\t\t}\n\t\t\treturn vec4(-1.);\n\t\t};\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tvar textbuf = this.mesh = this.newText();\n\n\t\t\ttextbuf.font = view.font;\n\t\t\tvar cycle = Date.now();\n\t\t\tvar ast = view.ast ? view.ast : view.sourceset ? view.sourceset.ast : Parser.parse(view.source);\n\n\t\t\ttextbuf.linespacing = view.linespacing;\n\t\t\ttextbuf.fontsize = view.fontsize;\n\t\t\ttextbuf.add_y = textbuf.line_height;\n\t\t\ttextbuf.align = 'left';\n\t\t\ttextbuf.start_y = textbuf.line_height;\n\n\t\t\tview.tab_size = textbuf.font.glyphs[9].advance * textbuf.fontsize;\n\n\t\t\ttextbuf.clear();\n\t\t\tvar node_id = 0;\n\t\t\tif (view.wrap) {\n\t\t\t\tvar maxwidth = view.layout.width;\n\t\t\t\tJSFormatter.walk(ast, textbuf, view.format_options, function (text, padding, l1, l2, l3, node) {\n\t\t\t\t\tif (text === '\\n') {\n\t\t\t\t\t\tthis.last_is_newline = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (text === '\\t' && this.last_is_newline) {\n\t\t\t\t\t\ttext = '\\n';\n\t\t\t\t\t}\n\t\t\t\t\tthis.last_is_newline = false;\n\t\t\t\t\tvar start = text.charCodeAt(0);\n\t\t\t\t\tvar combo;\n\t\t\t\t\tif (l1 <= 0) combo = l1;else combo = 65536 * (l1 || 0) + 256 * (l2 || 0) + (l3 || 0);\n\t\t\t\t\tif (start !== 32 && start !== 10 && start !== 9) node_id++;\n\t\t\t\t\tvar indent = textbuf.font.glyphs[9].advance * textbuf.fontsize * (this.actual_indent + 1);\n\t\t\t\t\ttextbuf.addWithinWidth(text, maxwidth, indent, ((padding || 0) + this.actual_indent * 65536) * -1, combo, node_id + 65536 * this.actual_line);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// if we process a newline, we should wait for the next tab\n\t\t\t\tJSFormatter.walk(ast, textbuf, view.format_options, function (text, padding, l1, l2, l3, node) {\n\t\t\t\t\tif (text === '\\n') {\n\t\t\t\t\t\tthis.last_is_newline = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (text === '\\t' && this.last_is_newline) {\n\t\t\t\t\t\ttext = '\\n';\n\t\t\t\t\t}\n\t\t\t\t\tthis.last_is_newline = false;\n\t\t\t\t\t// ok if we are adding a \\t, lets add it to the previous newline as a mode 4.\n\t\t\t\t\tvar start = text.charCodeAt(0);\n\t\t\t\t\t//console.log(this.actual_line)\n\t\t\t\t\tif (start !== 32 && start !== 10 && start !== 9) node_id++;\n\t\t\t\t\tvar combo;\n\t\t\t\t\tif (l1 <= 0) combo = l1;else combo = 65536 * (l1 || 0) + 256 * (l2 || 0) + (l3 || 0);\n\t\t\t\t\ttextbuf.add(text, ((padding || 0) + this.actual_indent * 65536) * -1, combo, node_id + 65536 * this.actual_line);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\t// Basic usage\n\tvar jsviewer = this.constructor;\n\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [jsviewer({ bgcolor: \"#000040\", padding: vec4(14), source: \"console.log(\\\"Hello world!\\\");\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/jsviewer.js\n// module id = 85\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/jsviewer.js?");

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// ported to dreemgl from: https://github.com/tangrams/tangram/blob/master/src/geo.js\n// original license text:\n\n// The MIT License (MIT)\n\n// Copyright (c) 2013 Brett Camper\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\ndefineDreem.class(function (requireDreem, $server$, service) {\n\tthis.init = function () {\n\t\tconsole.log(\"geo init\");\n\t};\n\tthis.default_max_zoom = 18;\n\tthis.tile_size = 256;\n\n\tthis.half_circumference_meters = 20037508.342789244;\n\tthis.circumference_meters = this.half_circumference_meters * 2;\n\tthis.min_zoom_meters_per_pixel = this.circumference_meters / this.tile_size; // min zoom draws world as 2 tiles wide\n\n\tthis.meters_per_pixel = [];\n\tthis.metersPerPixel = function (z) {\n\t\tthis.meters_per_pixel[z] = this.meters_per_pixel[z] || this.min_zoom_meters_per_pixel / Math.pow(2, z);\n\t\treturn this.meters_per_pixel[z];\n\t};\n\n\tthis.meters_per_tile = [];\n\tthis.metersPerTile = function (z) {\n\t\tthis.meters_per_tile[z] = this.meters_per_tile[z] || this.circumference_meters / Math.pow(2, z);\n\t\treturn this.meters_per_tile[z];\n\t};\n\n\t// Conversion functions based on an defined tile scale\n\tthis.tile_scale = 4096; // coordinates are locally scaled to the range [0, tile_scale]\n\tthis.units_per_pixel = this.tile_scale / this.tile_size;\n\n\tthis.units_per_meter = [];\n\tthis.unitsPerMeter = function (z) {\n\t\tunits_per_meter[z] = units_per_meter[z] || this.tile_scale / (this.tile_size * this.metersPerPixel(z));\n\t\treturn units_per_meter[z];\n\t};\n\n\t// Convert tile location to mercator meters - multiply by pixels per tile, then by meters per pixel, adjust for map origin\n\tthis.metersForTile = function (tile) {\n\t\treturn {\n\t\t\tx: tile.x * this.circumference_meters / Math.pow(2, tile.z) - this.half_circumference_meters,\n\t\t\ty: -(tile.y * this.circumference_meters / Math.pow(2, tile.z) - this.half_circumference_meters)\n\t\t};\n\t};\n\n\t/**\n    Given a point in mercator meters and a zoom level, return the tile X/Y/Z that the point lies in\n */\n\tthis.tileForMeters = function (x, y, zoom) {\n\t\treturn {\n\t\t\tx: Math.floor((x + this.half_circumference_meters) / (this.circumference_meters / Math.pow(2, zoom))),\n\t\t\ty: Math.floor((-y + this.half_circumference_meters) / (this.circumference_meters / Math.pow(2, zoom))),\n\t\t\tz: zoom\n\t\t};\n\t};\n\tthis.tileForMetersFrac = function (x, y, zoom) {\n\t\treturn {\n\t\t\tx: (x + this.half_circumference_meters) / (this.circumference_meters / Math.pow(2, zoom)),\n\t\t\ty: (-y + this.half_circumference_meters) / (this.circumference_meters / Math.pow(2, zoom)),\n\t\t\tz: zoom\n\t\t};\n\t};\n\n\t// Wrap a tile to positive #s for zoom\n\t// Optionally specify the axes to wrap\n\tthis.wrapTile = function (x, y, z, maskx, masky) {\n\t\tvar m = (1 << z) - 1;\n\t\tif (maskx) {\n\t\t\tx = x & m;\n\t\t}\n\n\t\tif (masky) {\n\t\t\ty = y & m;\n\t\t}\n\t\treturn [x, y, z];\n\t};\n\n\t/**\n    Convert mercator meters to lat-lng\n */\n\tthis.metersToLatLng = function (x, y) {\n\n\t\tx /= this.half_circumference_meters;\n\t\ty /= this.half_circumference_meters;\n\n\t\ty = (2 * Math.atan(Math.exp(y * Math.PI)) - Math.PI / 2) / Math.PI;\n\n\t\tx *= 180;\n\t\ty *= 180;\n\n\t\treturn [x, y];\n\t};\n\n\t/**\n   Convert lat-lng to mercator meters\n */\n\tthis.latLngToMeters = function (x, y) {\n\t\ty = this.wrapLng(y + 360);\n\t\t// Latitude\n\t\t// var t = Math.tan(((y*Math.PI/360) + Math.PI/2)/2);\n\t\ty = Math.log(Math.tan(y * Math.PI / 360 + Math.PI / 4)) / Math.PI;\n\t\ty *= this.half_circumference_meters;\n\n\t\t// y = Math.log(t) / Math.PI;\n\t\t// y *= this.half_circumference_meters;\n\n\t\t// Longitude\n\t\tx *= this.half_circumference_meters / 180;\n\t\treturn [x, y];\n\t};\n\n\tthis.wrapLng = function (x) {\n\t\tif (x > 180 || x < -180) {\n\t\t\tx = ((x + 180) % 360 + 360) % 360 - 180;\n\t\t}\n\t\treturn x;\n\t};\n\n\t/*// Run an in-place transform function on each cooordinate in a GeoJSON geometry\n this.transformGeometry = function (geometry, transform) {\n \tif (geometry == null) {\n \t\treturn; // skip if missing geometry (valid GeoJSON)\n \t}\n \t\tif (geometry.type === 'Point') {\n \t\ttransform(geometry.coordinates);\n \t}\n \telse if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n \t\tgeometry.coordinates.forEach(transform);\n \t}\n \telse if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n \t\tgeometry.coordinates.forEach(coordinates => coordinates.forEach(transform));\n \t}\n \telse if (geometry.type === 'MultiPolygon') {\n \t\tgeometry.coordinates.forEach(polygon => {\n \t\t\tpolygon.forEach(coordinates => coordinates.forEach(transform));\n \t\t});\n \t}\n \t// TODO: support GeometryCollection\n };*/\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/map/geo.js\n// module id = 86\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/map/geo.js?");

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the 'License'); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License. */\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, label, button, labelset, $$, geo, urlfetch) {\n\n\tvar BufferGen = requireDreem('$widgets/map/mapbuffers')();\n\tvar geo = this.geo = geo();\n\tvar ubuntufont = requireDreem('$resources/fonts/ubuntu_medium_256_baked.glf');\n\n\tthis.attributes = {\n\t\t// TODO(aki): Why latlong inverse?\n\t\tlatlong: Config({ type: vec2, value: vec2(52.3608307, 4.8626387) }),\n\t\tzoomlevel: Config({ type: Number, value: 16 }),\n\t\tlatlongchange: Config({ type: Event }),\n\t\tshowlabels: Config({ type: Boolean, value: false })\n\t};\n\n\tfunction createHash(x, y, z) {\n\t\treturn x + '_' + y + '_' + z;\n\t}\n\n\tthis.zoomTo = function (z, time) {\n\t\tthis.dataset.zoomTo(z, time);\n\t};\n\n\tthis.onpointerwheel = function (ev) {\n\t\tif (!ev.touch) {\n\t\t\tthis.zoomTo(this.dataset.zoomlevel - ev.wheel[1] / 120);\n\t\t\tthis.clearTimeout(this.zoomTimeout);\n\t\t\tthis.zoomTimeout = this.setTimeout(function () {\n\t\t\t\tthis.emitUpward('latlongchange', [this.latlong[0], this.latlong[1], this.zoomlevel]);\n\t\t\t}.bind(this), 100);\n\t\t}\n\t};\n\n\tthis.onpointerstart = function (ev) {\n\t\tthis.dragging = true;\n\t};\n\n\tthis.onpointermultimove = function (ev) {\n\t\tif (!this.dragging) return;\n\t\tif (ev.length == 1) {\n\t\t\tthis.panByVectorMovement(ev[0].position, ev[0].movement);\n\t\t} else if (ev.length == 2) {\n\t\t\tvar center = vec2.mix(ev[0].position, ev[1].position, 0.5);\n\t\t\tvar movement = vec2.mix(ev[0].movement, ev[1].movement, 0.5);\n\t\t\tthis.panByVectorMovement(center, movement);\n\t\t\tvar distance = vec2.distance(ev[0].position, ev[1].position);\n\t\t\tvar distanceOld = vec2.distance(vec2.sub(ev[0].position, ev[0].movement), vec2.sub(ev[1].position, ev[1].movement));\n\t\t\tvar distanceDelta = (distance - distanceOld) / this.layout.width * 5;\n\t\t\tthis.zoomTo(this.dataset.zoomlevel + distanceDelta);\n\t\t}\n\t};\n\n\tthis.panByVectorMovement = function (vector, movement) {\n\t\tvar startPos = vec2.sub(vector, movement);\n\t\tvar R = this.projectonplane(this.globalToLocal(startPos));\n\t\tif (R) {\n\t\t\tthis.prevvect = vec2(R[0] / (BufferGen.TileSize * 16), R[2] / (BufferGen.TileSize * 16));\n\t\t}\n\t\tR = this.projectonplane(this.globalToLocal(vector));\n\t\tif (R) {\n\t\t\tthis.newvect = vec2(R[0] / (BufferGen.TileSize * 16), R[2] / (BufferGen.TileSize * 16));\n\t\t\tvar metoffset = vec2((this.newvect[0] - this.prevvect[0]) * geo.metersPerTile(this.zoomlevel) * Math.pow(2.0, -this.fraczoom), -(this.newvect[1] - this.prevvect[1]) * geo.metersPerTile(this.zoomlevel) * Math.pow(2.0, -this.fraczoom));\n\t\t\tvar latlongoffset = geo.metersToLatLng(metoffset[0], metoffset[1]);\n\t\t\tthis.dataset.setCenterLatLng(this.dataset.latlong[0] - latlongoffset[0], this.dataset.latlong[1] - latlongoffset[1], this.dataset.zoomlevel);\n\t\t\tthis.updateTiles();\n\t\t}\n\t};\n\n\tthis.onpointerend = function (ev) {\n\t\tthis.dragging = false;\n\t\tthis.emitUpward('latlongchange', [this.latlong[0], this.latlong[1], this.zoomlevel]);\n\t};\n\n\tthis.onpointertap = function (ev) {\n\t\tvar coord = this.globalToLocal(ev.position);\n\t\tvar R = this.projectonplane(coord);\n\t\tif (R) {\n\t\t\tvar centermeters = geo.latLngToMeters(this.dataset.latlong[0], this.dataset.latlong[1]);\n\t\t\tvar zoomoffs = 0;\n\t\t\tif (ev.clicker == 2) zoomoffs++;\n\t\t\t// convert GL unit to map meters\n\t\t\tvar r0 = R[0] / (BufferGen.TileSize * 16) * geo.metersPerTile(this.zoomlevel) * Math.pow(2.0, -this.fraczoom);\n\t\t\tvar r2 = -R[2] / (BufferGen.TileSize * 16) * geo.metersPerTile(this.zoomlevel) * Math.pow(2.0, -this.fraczoom);\n\t\t\t//\tvar M = this.find('MARKER')\n\t\t\tvar latlong = geo.metersToLatLng(centermeters[0] + r0, centermeters[1] + r2);\n\t\t\tthis.dataset.setCenterLatLng(latlong[0], latlong[1], this.dataset.zoomlevel + zoomoffs, 1);\n\t\t\tthis.emitUpward('latlongchange', [latlong[0], latlong[1], this.zoomlevel]);\n\t\t}\n\t};\n\n\tthis.gotoCity = function (city, zoomlevel, time) {\n\t\tthis.dataset.gotoCity(city, zoomlevel, time);\n\t};\n\n\tthis.flyTo = function (lat, lng, zoom, time) {\n\t\tif (this.dataset) this.dataset.flyTo(lat, lng, zoom, time);\n\t};\n\n\tthis.framePoints = function (points, time) {\n\t\tif (this.dataset) this.dataset.framePoints(points, time);\n\t};\n\n\t// data interaction, needs to inherit from view because of animation\n\tdefineDreem.class(this, 'mapdataset', '$ui/view', function ($$, geo) {\n\n\t\tthis.requestPending = false;\n\t\t// all the blocks that need to be loaded (empty tile objects)\n\t\tthis.loadqueue = [];\n\t\t// see if a block is in the queue (array of hashes)\n\t\tthis.loadqueuehash = [];\n\t\t// hash of tile objects (simple objects containing all the geometry)\n\t\tthis.loadedblocks = {};\n\t\t// geo library\n\t\tvar geo = this.geo = geo();\n\n\t\tthis.attributes = {\n\t\t\t// cent\n\t\t\tcenterpos: vec2(0, 0),\n\t\t\t// position of the map\n\t\t\tlatlong: vec2(0, 0),\n\t\t\t// tile zoom level\n\t\t\tzoomlevel: 16,\n\t\t\t// amount of blocks in the cache\n\t\t\tthrowawaythreshold: 100\n\n\t\t\t// animatedly fly to a lat/long/zoom position in time with fly bounce (zoom level switching)\n\t\t};this.flyTo = function (lat, lng, zoom, time) {\n\t\t\ttime = time ? time : 0;\n\t\t\tif (zoom > geo.default_max_zoom) zoom = geo.default_max_zoom;\n\n\t\t\tif (time > 0) {\n\t\t\t\tvar anim = {};\n\t\t\t\tanim[time] = { motion: 'inoutquad', value: vec2(lat, lng) };\n\t\t\t\tthis.latlong = Animate(anim);\n\t\t\t\tvar anim = {};\n\t\t\t\t// anim[time / 2] = {motion: 'inoutquad', value: Math.min(zoom - 0.5, this.zoomlevel - 0.5)}\n\t\t\t\tanim[time] = { motion: 'inoutquad', value: zoom };\n\t\t\t\tthis.zoomlevel = Animate(anim);\n\t\t\t} else {\n\t\t\t\tthis.zoomlevel = zoom;\n\t\t\t\tthis.latlong = vec2(lat, lng);\n\t\t\t}\n\t\t};\n\n\t\tthis.framePoints = function (pointdata, time) {\n\t\t\tsum = vec2(0, 0);\n\t\t\tmaxpos = vec2(-Infinity, -Infinity);\n\t\t\tminpos = vec2(Infinity, Infinity);\n\t\t\t// TODO: lan/lng is swapped. Fix map.js\n\t\t\tfor (var i = 0; i < pointdata.length; i++) {\n\t\t\t\tsum[1] = sum[1] + pointdata[i].latitude;\n\t\t\t\tsum[0] = sum[0] + pointdata[i].longitude;\n\t\t\t\tmaxpos[1] = max(maxpos[1], pointdata[i].latitude);\n\t\t\t\tmaxpos[0] = max(maxpos[0], pointdata[i].longitude);\n\t\t\t\tminpos[1] = min(minpos[1], pointdata[i].latitude);\n\t\t\t\tminpos[0] = min(minpos[0], pointdata[i].longitude);\n\t\t\t}\n\t\t\tmaxpos = geo.latLngToMeters(maxpos[0], maxpos[1]);\n\t\t\tminpos = geo.latLngToMeters(minpos[0], minpos[1]);\n\t\t\tvar distance = vec2.distance(maxpos, minpos);\n\t\t\tvar zoom = geo.default_max_zoom;\n\t\t\t// TODO: make frustum aware zoom level estimation\n\t\t\tif (distance < 312) zoom = 15;else if (distance < 625) zoom = 14;else if (distance < 1250) zoom = 13;else if (distance < 2500) zoom = 12;else if (distance < 5000) zoom = 11;else if (distance < 10000) zoom = 10;else if (distance < 20000) zoom = 10;else if (distance < 40000) zoom = 9;else if (distance < 80000) zoom = 8;else if (distance < 160000) zoom = 7;else if (distance < 320000) zoom = 6;else if (distance < 640000) zoom = 5;else if (distance < 128000) zoom = 4;else if (distance < 256000) zoom = 3;else if (distance < 512000) zoom = 2;else if (distance < 1024000) zoom = 1;\n\t\t\tthis.flyTo(sum[0] / pointdata.length, sum[1] / pointdata.length, zoom, time);\n\t\t};\n\n\t\t// animatedly fly to lat/long without fly-bouncing\n\t\tthis.setCenterLatLng = function (lat, lng, zoom, time) {\n\t\t\ttime = time ? time : 0;\n\t\t\tif (zoom > geo.default_max_zoom) zoom = geo.default_max_zoom;\n\t\t\tif (time > 0) {\n\t\t\t\tvar anim = {};\n\t\t\t\tanim[time] = { motion: 'inoutquad', value: vec2(lat, lng) };\n\t\t\t\tthis.latlong = Animate(anim);\n\t\t\t} else {\n\t\t\t\tthis.latlong = vec2(lat, lng);\n\t\t\t}\n\t\t\tthis.zoomTo(zoom, time);\n\t\t};\n\n\t\t// if zoomlevel changes update tiles\n\t\tthis.onzoomlevel = function () {\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.updateTiles();\n\t\t\t}\n\t\t};\n\n\t\t// latlong changes, for all zoomlevels calculate tile centers\n\t\tthis.onlatlong = function () {\n\t\t\tif (!this.latlong) return;\n\t\t\tthis.parent.latlong = this.latlong;\n\t\t\tvar m = geo.latLngToMeters(this.latlong[0], this.latlong[1]);\n\t\t\tm[0] = Math.round(m[0]);\n\t\t\tm[1] = Math.round(m[1]);\n\t\t\tvar basecenter = geo.tileForMeters(m[0], m[1], 20);\n\t\t\tvar compmeters = geo.metersForTile({ x: basecenter[0], y: basecenter[1], z: 20 });\n\n\t\t\tvar centerset = [];\n\t\t\tfor (var i = 0; i < 20; i++) {\n\t\t\t\tvar center = geo.tileForMeters(m[0], m[1], i);\n\t\t\t\tcenterset.push([center.x, center.y]);\n\t\t\t}\n\t\t\tthis.centers = centerset;\n\t\t};\n\n\t\t// zoom to animatedly zooms to a certain zoom\n\t\tthis.zoomTo = function (newz, time) {\n\t\t\tif (newz > geo.default_max_zoom) newz = geo.default_max_zoom;\n\n\t\t\ttime = time ? time : 0;\n\t\t\tif (time > 0) {\n\t\t\t\tvar anim = {};\n\t\t\t\tanim[time] = { motion: 'inoutquad', value: newz };\n\t\t\t\tthis.zoomlevel = Animate(anim);\n\t\t\t} else {\n\t\t\t\tthis.zoomlevel = newz;\n\t\t\t}\n\t\t};\n\n\t\t// set the center in tile position x/y/zoom, uses to setCenterLatLng\n\t\tthis.setCenter = function (x, y, z, time) {\n\t\t\tvar m = geo.metersForTile({ x: x, y: y, z: z });\n\t\t\tvar ll = geo.metersToLatLng(m.x, m.y);\n\t\t\tthis.setCenterLatLng(ll[0], ll[1], time);\n\t\t\tthis.zoomTo(z, time);\n\t\t};\n\n\t\t// queues up a block for loading at x,y,z\n\t\tthis.addToQueue = function (x, y, z) {\n\t\t\tif (x < 0 || y < 0 || z < 0 || z > geo.default_max_zoom) return;\n\t\t\tvar hash = createHash(x, y, z);\n\t\t\tif (this.loadqueuehash[hash]) return; // already queued for load.\n\t\t\tif (this.loadedblocks[hash]) return; // already loaded.\n\n\t\t\tthis.loadqueuehash[hash] = 1;\n\t\t\tthis.loadqueue.push({ x: x, y: y, z: z });\n\t\t\tthis.updateLoadQueue();\n\t\t};\n\n\t\t// Stores a loaded block into the loadedblocks structure\n\t\tthis.processLoadedBlock = function (x, y, z, data) {\n\t\t\tvar hash = createHash(x, y, z);\n\t\t\tthis.loadedblocks[hash] = { x: x, y: y, z: z, blockdata: data };\n\t\t};\n\n\t\t// prunes the loadedblocks to live below throwawaythreshold\n\t\tthis.cleanLoadedBlocks = function () {\n\t\t\tvar keys = Object.keys(this.loadedblocks);\n\t\t\tif (keys.length < this.throwawaythreshold) return;\n\n\t\t\tvar zscalar = 1280;\n\n\t\t\tvar dellist = [];\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar q = this.loadedblocks[keys[i]];\n\t\t\t\tvar dx = this.centers[q.z][0] - q.x;\n\t\t\t\tvar dy = this.centers[q.z][1] - q.y;\n\n\t\t\t\tvar dz = (20 - q.z) * zscalar;\n\t\t\t\tvar dist = (dx * dx + dy * dy) * (50000 - dz);\n\t\t\t\tdellist.push({ hash: keys[i], dist: dist });\n\t\t\t}\n\n\t\t\tdellist = dellist.sort(function (a, b) {\n\t\t\t\tif (a.dist > b.dist) return 1;\n\t\t\t\tif (a.dist < b.dist) return -1;\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tfor (var i = this.throwawaythreshold; i < dellist.length; i++) {\n\t\t\t\tvar todelete = dellist[i];\n\t\t\t\tvar blk = this.loadedblocks[todelete.hash];\n\t\t\t\tdelete this.loadedblocks[todelete.hash];\n\t\t\t\tif (blk.buildingVertexBuffer) {\n\t\t\t\t\tif (blk.buildingVertexBuffer.glvb) {\n\t\t\t\t\t\tthis.screen.device.gl.deleteBuffer(blk.buildingVertexBuffer.glvb);\n\t\t\t\t\t\tblk.buildingVertexBuffer.glvb = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (blk.landVertexBuffer.glvb) {\n\t\t\t\t\t\tthis.screen.device.gl.deleteBuffer(blk.landVertexBuffer.glvb);\n\t\t\t\t\t\tblk.landVertexBuffer.glvb = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (blk.roadVertexBuffer.glvb) {\n\t\t\t\t\t\tthis.screen.device.gl.deleteBuffer(blk.roadVertexBuffer.glvb);\n\t\t\t\t\t\tblk.roadVertexBuffer.glvb = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// the geometry generation worker\n\t\tvar worker = defineDreem.class('$system/rpc/worker', function (requireDreem) {\n\t\t\tthis.BufferGen = requireDreem('$widgets/map/mapbuffers')();\n\n\t\t\tthis.build = function (str, r) {\n\t\t\t\tvar ret = vec2.array(10);\n\n\t\t\t\ttry {\n\t\t\t\t\tvar thedata = JSON.parse(str);\n\t\t\t\t\tthis.BufferGen.build(r, thedata);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\tconsole.log(' while loading ', r.x, r.y, r.z);\n\t\t\t\t\tr.transform = { translate: { x: 0, y: 0 } };\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t};\n\t\t});\n\n\t\t// loads a json string tile and sends it off to the worker\n\t\tthis.loadstring = function (str) {\n\t\t\t// if (!window.teller) window.teller = 0\n\t\t\t// window.teller += str.length\n\n\t\t\tif (this.currentRequest) {\n\n\t\t\t\tvar r = this.currentRequest;\n\t\t\t\tvar hash = createHash(r.x, r.y, r.z);\n\t\t\t\tr.hash = hash;\n\n\t\t\t\tthis.workers.build(str, r).then(function (result) {\n\t\t\t\t\tif (!result) return;\n\t\t\t\t\tvar dt = Date.now();\n\t\t\t\t\tthis.loadedblocks[r.hash] = result.value;\n\t\t\t\t\tthis.loadqueuehash[r.hash] = undefined;\n\t\t\t\t\tthis.parent.redraw(); //updateTiles()\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.currentRequest = undefined;\n\t\t\t\tthis.cleanLoadedBlocks();\n\t\t\t\tthis.updateLoadQueue();\n\t\t\t}\n\t\t};\n\n\t\t// returns a block by hash\n\t\tthis.getBlockByHash = function (hash) {\n\t\t\treturn this.loadedblocks[hash];\n\t\t};\n\n\t\t// Check if there are tiles in the queue and loads the next one via RPC\n\t\tthis.updateLoadQueue = function () {\n\n\t\t\tif (this.currentRequest) return; // already loading something...\n\t\t\tif (this.loadqueue.length > 0) {\n\n\t\t\t\tvar zscalar = 1280;\n\n\t\t\t\t// sort queue on distance to cursor\n\t\t\t\tfor (var i = 0; i < this.loadqueue.length; i++) {\n\t\t\t\t\tvar q = this.loadqueue[i];\n\t\t\t\t\tvar dx = this.centers[q.z][0] - q.x;\n\t\t\t\t\tvar dy = this.centers[q.z][1] - q.y;\n\n\t\t\t\t\tvar dz = (20 - q.z) * zscalar;\n\t\t\t\t\tq.dist = (dx * dx + dy * dy) * (50000 - dz);\n\t\t\t\t}\n\n\t\t\t\tthis.loadqueue = this.loadqueue.sort(function (a, b) {\n\t\t\t\t\tif (a.dist > b.dist) return -1;\n\t\t\t\t\tif (a.dist < b.dist) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tvar R = this.currentRequest = this.loadqueue.pop();\n\t\t\t\tthis.rpc.urlfetch.grabmap(R.x, R.y, R.z).then(function (result) {\n\t\t\t\t\tthis.loadstring(result.value);\n\t\t\t\t}.bind(this));\n\n\t\t\t\t// take closest one from the queue\n\t\t\t}\n\t\t};\n\n\t\tthis.destroy = function () {\n\t\t\tthis.clearInterval(this.theinterval);\n\t\t};\n\n\t\t// looks up a city by latlong in city dictionary\n\t\tthis.gotoCity = function (name, zoom, time) {\n\t\t\tif (!name || name.length == 0) return;\n\t\t\tvar n2 = name.toLowerCase().replace(' ', '');\n\n\t\t\tvar c = this.cities[n2];\n\t\t\tif (c) {\n\t\t\t\tthis.setCenterLatLng(c[1], c[0], zoom, time);\n\t\t\t} else {\n\t\t\t\tconsole.log('city not found: ', name);\n\t\t\t}\n\t\t};\n\n\t\tthis.init = function (prev) {\n\t\t\tthis.centers = [];\n\n\t\t\tthis.workers = prev && prev.workers || worker(0);\n\t\t\t// lookup table of cities\n\t\t\tthis.cities = {\n\t\t\t\tmanhattan: [40.7072121, -74.0067985],\n\t\t\t\tamsterdam: [52.3608307, 4.8626387],\n\t\t\t\tsanfrancisco: [37.6509102, -122.4889338],\n\t\t\t\tsanfrancisco_goldengatepark: [37.7677892, -122.4853213],\n\t\t\t\tseoul: [37.5275421, 126.9748078],\n\t\t\t\tseoel: [37.5275421, 126.9748078],\n\t\t\t\tshenzhen_hqb: [22.5402897, 114.0846914],\n\t\t\t\thongkong: [22.2854084, 114.1600463],\n\t\t\t\tsydney: [-33.8466226, 151.2277997],\n\t\t\t\tlondon: [51.5091502, -0.1471011],\n\t\t\t\ttexel: [53.0731212, 4.712878]\n\t\t\t};\n\n\t\t\tthis.gotoCity('manhattan', 13);\n\n\t\t\t// interval to poll the loadqueue\n\t\t\t//!TODO maybe remove\n\t\t\tthis.theinterval = this.setInterval(function () {\n\t\t\t\tthis.updateLoadQueue();\n\t\t\t}.bind(this), 100);\n\n\t\t\tthis.rpc.urlfetch.sessionstart();\n\t\t\t//this.setCenter(33656/2,21534/2, 16)\n\t\t};\n\t});\n\n\t// Every time we re-draw process the\n\tthis.atAnimate = function () {\n\t\tthis.updateTiles();\n\t};\n\n\t// make a new dataset and updatetiles\n\tthis.oninit = function () {\n\t\tthis.dataset = this.mapdataset({ name: 'mapdata' });\n\t\t//!TODO odd redraw might miss? please remove\n\t\tthis.setInterval(this.updateTiles, 1000);\n\t};\n\n\t// Unproject camera to XYZ (see GLU Unproject)\n\tfunction UnProject(glx, gly, glz, modelview, projection) {\n\t\tvar inv = vec4();\n\t\tvar A = mat4.mat4_mul_mat4(modelview, projection);\n\t\tvar m = mat4.invert(A);\n\t\tinv[0] = glx;\n\t\tinv[1] = gly;\n\t\tinv[2] = 2.0 * glz - 1.0;\n\t\tinv[3] = 1.0;\n\t\tout = vec4.vec4_mul_mat4(inv, m);\n\t\t// divide by W to perform perspective!\n\t\tout[0] /= out[3];\n\t\tout[1] /= out[3];\n\t\tout[2] /= out[3];\n\t\treturn vec3(out);\n\t}\n\n\t// Project a mousecoord to map plane decoding (in, mouse, out, GL units)\n\tthis.projectonplane = function (coord) {\n\t\tvar vp = this.find('mapinside');\n\t\tif (!vp) return;\n\n\t\tvar sx = vp.layout.width;\n\t\tvar sy = vp.layout.height;\n\n\t\tvar mx = coord[0] / (sx / 2) - 1.0;\n\t\tvar my = coord[1] / (sy / 2) - 1.0;\n\n\t\tvar view = vp.colormatrices.lookatmatrix;\n\t\tvar invview = mat4.identity();\n\t\tmat4.invert(view, invview);\n\n\t\tvar aspect = vp.layout.width / vp.layout.height;\n\t\tvar nearheight = Math.tan(vp.fov / 2 * (Math.PI * 2 / 360.0)) * vp.nearplane;\n\t\tvar nearwidth = nearheight * aspect;\n\t\tvar zeropos = vec4(0, 0, 0, 1.0);\n\t\tvar camerainview = vec4(mx * nearwidth, my * nearheight, -vp.nearplane, 0.0);\n\t\tvar zeroworld = vec4.mul_mat4(zeropos, invview);\n\t\tvar cameraworld = vec4.mul_mat4(camerainview, invview);\n\t\tvar end = vec3(zeroworld[0] + cameraworld[0] * 1000, zeroworld[1] + cameraworld[1] * 1000, zeroworld[2] + cameraworld[2] * 1000);\n\n\t\tvar R = vec3.intersectplane(zeroworld, end, vec3(0, 1, 0), 0);\n\t\tif (!R) return null;\n\n\t\tvar M = this.find('MARKER');\n\t\tif (M) {\n\t\t\tM.pos = vec3(R[0], R[1] - M.fontsize, R[2]);\n\t\t\tM.text = Math.round(M.pos[0] * 100) / 100 + ', ' + Math.round(M.pos[2] * 100) / 100;\n\t\t}\n\t\treturn R;\n\t};\n\n\t// debug tile counter\n\tvar alltiles = 0;\n\n\t// All tiles use tilebasemixin\n\tvar tilebasemixin = defineDreem.class(Object, function () {\n\n\t\tthis.drawtarget = 'color';\n\n\t\tthis.attributes = {\n\t\t\t// the translate in integer units\n\t\t\ttrans: vec2(0),\n\t\t\t// the coordinate in integer units\n\t\t\tcoord: vec2(0),\n\t\t\t// center coordinate in mercatormeters\n\t\t\tcenterpos: vec2(4, 3),\n\t\t\t// zoomlevel of the tile\n\t\t\tzoomlevel: 16,\n\t\t\t// animation for bufferloaded\n\t\t\tbufferloaded: 0.0,\n\n\t\t\t//tiletrans: vec2(0),\n\t\t\t// fog color\n\t\t\tfog: vec4('lightblue'),\n\t\t\t// fog start\n\t\t\tfogstart: 14000.0,\n\t\t\t// fog end\n\t\t\tfogend: 24000.,\n\t\t\t// how many zoom levels away from basezoom\n\t\t\tlayeroffset: 0,\n\t\t\t// thickness of the layer\n\t\t\tlayerzmult: 0,\n\t\t\t// layer z offset\n\t\t\tlayerzoff: 0,\n\t\t\t// how far inbetween two zoomlevels you are\n\t\t\tfraczoom: 0.5,\n\t\t\t// center in mercatormeters\n\t\t\tcentermeter: vec2(0),\n\t\t\t// how many meters a tile spans\n\t\t\tmeterspertile: 1\n\t\t\t// amount of frames it has waited since it got queued in the load\n\t\t};this.frameswaited = 0;\n\t\t// not animated bufferloaded as boolean\n\t\tthis.bufferloadbool = false;\n\n\t\tthis.lastpos = vec2(0);\n\n\t\t// return the tile position\n\t\tthis.calctilepos = function () {\n\t\t\tvar x = Math.floor(this._coord[0] + this._trans[0]);\n\t\t\tvar y = Math.floor(this._coord[1] + this._trans[1]);\n\t\t\treturn [x, y, this._zoomlevel];\n\t\t};\n\n\t\tthis.init = function () {\n\t\t\tvar R = this.calctilepos();\n\t\t\tthis.tilename = 'tile' + alltiles.toString() + '_' + this.layeroffset;\n\t\t\talltiles++;\n\t\t\tthis.lastpos = vec3(R[0], R[1], R[2]);\n\t\t};\n\n\t\t// sets the position informatio of the tile\n\t\tthis.setpos = function (newcoord, newzoom, frac, fraczoom, centermeter) {\n\t\t\tthis._tiletrans = frac;\n\t\t\tthis._centermeter = centermeter;\n\t\t\tthis._zoomlevel = newzoom;\n\t\t\tthis._coord = vec2(Math.floor(newcoord.x), Math.floor(newcoord.y));\n\t\t\tthis._fraczoom = fraczoom;\n\t\t\tthis.checknewpos();\n\t\t};\n\n\t\t// calculate if the position changed since the last frame, used for tile buffer recycling\n\t\t// see if it should have a new vertexbuffer compared to last frame\n\t\tthis.checknewpos = function (thetime) {\n\t\t\tvar R = this.calctilepos();\n\t\t\tvar newpos = vec3(R[0], R[1], R[2]);\n\t\t\tif (this.lastpos[0] != newpos[0] || this.lastpos[1] != newpos[1] || this.lastpos[2] != newpos[2]) {\n\t\t\t\tthis.lastpos = newpos;\n\t\t\t\tthis.tilehash = createHash(this.lastpos[0], this.lastpos[1], this.lastpos[2]);\n\t\t\t\tthis.bufferloaded = 0;\n\t\t\t\tthis.frameswaited = 0;\n\t\t\t\tthis.bufferloadbool = false;\n\t\t\t\tthis.queued = 0;\n\t\t\t\tthis.redraw();\n\t\t\t\tthis.loadbuffer(thetime);\n\t\t\t} else {\n\t\t\t\tif (this.bufferloadbool == false) this.loadbuffer(thetime);else this.bl.lasttime = thetime;\n\t\t\t}\n\t\t};\n\n\t\t// loads the tile buffer, wraps around loadBufferFromTile\n\t\t// called in updateTiles\n\t\tthis.loadbuffer = function () {\n\t\t\tmd = this.mapdata;\n\t\t\tif (md) {\n\t\t\t\tthis.bl = md.getBlockByHash(this.tilehash);\n\t\t\t\tif (this.bl) {\n\t\t\t\t\tif (this.loadBufferFromTile(this.bl)) {\n\n\t\t\t\t\t\tif (this.frameswaited == 0) {\n\t\t\t\t\t\t\tthis.bufferloaded = 1.0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.bufferloaded = Animate({ 1: { value: 1.0, motion: 'inoutquad' } });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.bufferloadbool = true;\n\n\t\t\t\t\t\tvar trans = this.bl.transform.translate;\n\t\t\t\t\t\tvar mercmeter = geo.latLngToMeters(trans[0], trans[1]);\n\t\t\t\t\t\tthis.centerpos = vec2(mercmeter[0], mercmeter[1]);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frameswaited++;\n\t\t\t\t\tif (this.queued == 0) {\n\t\t\t\t\t\tif (this.shaders && this.shaders.hardrect && this.shaders.hardrect.update) this.shaders.hardrect.update();\n\t\t\t\t\t\tif (this.resetbuffer) this.resetbuffer();\n\t\t\t\t\t\tmd.addToQueue(this.lastpos[0], this.lastpos[1], this.lastpos[2]);\n\t\t\t\t\t\tthis.queued = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.tilesize = BufferGen.TileSize;\n\t\tthis.width = this.tilesize;\n\t\tthis.height = this.tilesize;\n\t});\n\n\t// view implementation of the building\n\tdefineDreem.class(this, 'buildingtile', '$ui/view', function () {\n\t\tthis.is = tilebasemixin;\n\t\tthis.loadBufferFromTile = function (tile) {\n\t\t\tif (!this.shaders || !this.shaders.hardrect || !tile.buildingVertexBuffer) return false;\n\t\t\tthis.shaders.hardrect.mesh = tile.buildingVertexBuffer;\n\t\t\tthis.shaders.hardrect.mesh.sticky = true;\n\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.hardrect = function () {\n\n\t\t\tthis.position = function () {\n\t\t\t\t//idxpos = (view.trans.xy * vec2(1, -1)) * vec2(1, -1)\n\t\t\t\tpos = vec2(1, -1) * mesh.pos.xy; // + (idxpos - view.tiletrans) * view.tilesize\n\t\t\t\tpos.xy -= (view.centerpos - view.centermeter) / view.meterspertile * 1024.0 * vec2(-1.0, 1.0);\n\t\t\t\tpos.xy /= pow(2.0, view.layeroffset - view.fraczoom - 2);\n\t\t\t\t//pos.xy *= view.meterspertile/view.tilesize\n\n\t\t\t\trespos = vec4(pos.x, -(mesh.pos.z * 1024. / (view.meterspertile / pow(2.0, view.fraczoom))) * view.bufferloaded + view.layeroffset * view.layerzmult + view.layerzoff, pos.y, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t\t//r.w += 0.002\n\t\t\t\treturn respos;\n\t\t\t};\n\n\t\t\tthis.mesh = BufferGen.BuildingVertexStruct.array();\n\n\t\t\tthis.update = function () {\n\t\t\t\tthis.mesh = BufferGen.BuildingVertexStruct.array();\n\t\t\t};\n\n\t\t\tthis.drawtype = this.TRIANGLES;\n\n\t\t\tthis.color = function () {\n\t\t\t\tvar noise = noise.cheapnoise(pos * 0.02) * 0.1 + 0.5;\n\t\t\t\tvar prefog = mesh.color1;\n\t\t\t\tprefog.xyz *= 0.6 + 0.4 * max(0.0, min(1.0, (mesh.pos.z - mesh.height) * 0.001 + 0.4));\n\t\t\t\tvar zdist = max(0., min(1., (respos.z - view.fogstart) / view.fogend));\n\t\t\t\t//zdist *= zdist\n\t\t\t\treturn mix(prefog, view.fog, zdist);\n\t\t\t};\n\t\t};\n\t});\n\n\t// view implementation of the land\n\tdefineDreem.class(this, 'landtile', '$ui/view', function () {\n\n\t\tthis.is = tilebasemixin;\n\n\t\tthis.loadBufferFromTile = function (tile) {\n\t\t\tif (!this.shaders || !this.shaders.hardrect || !tile.landVertexBuffer) return false;\n\t\t\tthis.shaders.hardrect.mesh = tile.landVertexBuffer;\n\t\t\tthis.shaders.hardrect.mesh.sticky = true;\n\n\t\t\treturn true;\n\t\t};\n\t\tthis.pickalpha = 0.1;\n\t\tthis.hardrect = function () {\n\t\t\tthis.texture = requireDreem('./mapmaterial.png');\n\t\t\tthis.position = function () {\n\t\t\t\tidxpos = view.trans.xy * vec2(1, -1) * vec2(1, -1);\n\t\t\t\tpos = vec2(1, -1) * mesh.pos.xy;\n\t\t\t\tpos.xy -= (view.centerpos - view.centermeter) / view.meterspertile * 1024.0 * vec2(-1.0, 1.0);\n\t\t\t\tpos.xy /= pow(2.0, view.layeroffset - view.fraczoom - 2);\n\t\t\t\trespos = vec4(pos.x, view.layeroffset * view.layerzmult + view.layerzoff, pos.y, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t\treturn respos;\n\t\t\t};\n\n\t\t\tthis.mesh = BufferGen.LandVertexStruct.array();\n\n\t\t\tthis.update = function () {\n\t\t\t\tthis.mesh = BufferGen.LandVertexStruct.array();\n\t\t\t\tvar a = BufferGen.TileSize * 0.05;\n\t\t\t\tvar b = BufferGen.TileSize - a;\n\t\t\t\tvar col = vec4(0, 0, 1, 0.2);\n\t\t\t};\n\n\t\t\tthis.drawtype = this.TRIANGLES;\n\t\t\tthis.depth_test = 'disabled';\n\n\t\t\tthis.color = function () {\n\t\t\t\tPickGuid = mesh.pos.z;\n\t\t\t\tvar noise = noise.cheapnoise(pos * 0.02) * 0.07 + 0.5;\n\t\t\t\tvar texcol = mesh.color1;\n\t\t\t\tvar prefog = texcol;\n\t\t\t\tvar zdist = max(0., min(1., (respos.z - view.fogstart) / view.fogend));\n\t\t\t\tzdist *= zdist;\n\t\t\t\treturn mix(prefog, view.fog, zdist);\n\t\t\t};\n\t\t};\n\t});\n\n\t// view implementation of the label tile\n\tdefineDreem.class(this, 'labeltile', '$ui/labelset', function () {\n\t\t//this.polygonoffset = 100.0\n\t\tthis.is = tilebasemixin;\n\t\tthis.fgcolor = 'black';\n\t\tthis.font = ubuntufont;\n\n\t\tthis.textpositionfn = function (pos, tag) {\n\t\t\t//\tidxpos = (this.trans.xy * vec2(1, -1)) * vec2(1, -1)\n\t\t};\n\n\t\tthis.textstyle = function (style, tag) {\n\t\t\tvar pos = style.pos;\n\t\t\tvar rpos = vec2(1, -1) * pos.xz;\n\t\t\trpos.y += pos.y;\n\t\t\trpos.xy -= (this.centerpos - this.centermeter) / this.meterspertile * 1024.0 * vec2(-1.0, 1.0);\n\t\t\trpos.xy /= pow(2.0, this.layeroffset - this.fraczoom - 2);\n\t\t\tstyle.pos = vec3(rpos.x, -25 + this.layeroffset * this.layerzmult + this.layerzoff, rpos.y);\n\t\t\tstyle.fgcolor = 'black';\n\t\t\t// style.outlinecolor = 'white'\n\t\t\t// style.outlinethickness = 1.0\n\t\t\t// style.outline = true\n\t\t\treturn style;\n\t\t};\n\n\t\tthis.resetbuffer = function () {\n\t\t\tthis.labels = [];\n\t\t};\n\n\t\tthis.loadBufferFromTile = function (tile) {\n\t\t\tvar LabelSource = tile.Labels;\n\n\t\t\tif (!LabelSource) {\n\t\t\t\tthis.labels = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar thelabels = [];\n\t\t\tvar rankfontsizes = {\n\t\t\t\t0: 60,\n\t\t\t\t1: 55,\n\t\t\t\t2: 50,\n\t\t\t\t3: 45,\n\t\t\t\t4: 40,\n\t\t\t\t5: -1,\n\t\t\t\t6: -1,\n\t\t\t\t7: -1\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < LabelSource.length; i++) {\n\t\t\t\tvar l = LabelSource[i];\n\t\t\t\tvar f = 30;\n\t\t\t\tif (l.scalerank !== undefined) {\n\t\t\t\t\tf = rankfontsizes[l.scalerank] * Math.pow(2, this.layeroffset - 1);\n\t\t\t\t}\n\n\t\t\t\tif (f > -1) {\n\t\t\t\t\tvar l2 = { text: l.name, fontsize: f, outline: false, color: vec4('white'), outlinecolor: vec4('black'), pos: vec3(l.x, -11, l.y) };\n\t\t\t\t\tthelabels.push(l2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.labels = thelabels;\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.typeface = function () {\n\t\t\tthis.depth_test = 'src_depth <= dst_depth';\n\t\t};\n\t\t//this.depth_test = 'enabled'\n\n\t\tthis.position = 'absolute';\n\t\tthis.bgcolor = NaN;\n\t\tthis.align = 'center';\n\t\tthis.render = function () {};\n\t});\n\n\t// view class of the roadtile\n\tdefineDreem.class(this, 'roadtile', '$ui/view', function () {\n\t\tthis.is = tilebasemixin;\n\t\tthis.loadBufferFromTile = function (tile) {\n\t\t\tif (!this.shaders || !this.shaders.hardrect || !tile.roadVertexBuffer) return;\n\t\t\tthis.shaders.hardrect.mesh = tile.roadVertexBuffer;\n\t\t\tthis.shaders.hardrect.mesh.sticky = true;\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.hardrect = function () {\n\t\t\tthis.texture = requireDreem('./mapmaterial.png');\n\t\t\tthis.position = function () {\n\t\t\t\tvar sidevec = mesh.pos.zw;\n\t\t\t\tvar side = mesh.geom.x;\n\t\t\t\tvar dist = mesh.geom.y;\n\t\t\t\tvar linewidth = mesh.geom.z;\n\t\t\t\tvar possrc = mesh.pos.xy + sidevec * side * linewidth * 0.5;\n\t\t\t\tvar pos = vec2(1, -1) * possrc.xy; // + (idxpos - view.tiletrans) * view.tilesize\n\n\t\t\t\tpos.xy -= (view.centerpos - view.centermeter) / view.meterspertile * 1024.0 * vec2(-1.0, 1.0);\n\t\t\t\tpos.xy /= pow(2.0, view.layeroffset - view.fraczoom - 2);\n\t\t\t\trespos = vec4(pos.x, view.layeroffset * view.layerzmult + view.layerzoff, pos.y, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t\trespos.w += mesh.pos.z * 0.1;\n\t\t\t\treturn respos;\n\t\t\t};\n\n\t\t\tthis.vertexstruct = BufferGen.RoadVertexStruct;\n\n\t\t\tthis.mesh = this.vertexstruct.array();\n\n\t\t\tthis.update = function () {\n\t\t\t\tthis.mesh = this.vertexstruct.array();\n\t\t\t\t/* var a = TileSize / 4\n    var b = TileSize - a\n    this.mesh.push(a,a)\n    this.mesh.push(b,a)\n    this.mesh.push(b,b)\n    this.mesh.push(a,a)\n    this.mesh.push(b,b)\n    this.mesh.push(a,b); */\n\t\t\t};\n\n\t\t\tthis.drawtype = this.TRIANGLES;\n\t\t\tthis.depth_test = 'disabled';\n\n\t\t\tthis.color = function () {\n\t\t\t\tvar texcol = mesh.color;\n\t\t\t\tvar prefog = texcol;\n\t\t\t\tvar zdist = max(0., min(1., (respos.z - view.fogstart) / view.fogend));\n\t\t\t\tzdist *= zdist;\n\t\t\t\treturn mix(prefog, view.fog, zdist);\n\t\t\t};\n\t\t};\n\n\t\tthis.hardrect = true;\n\t});\n\n\tthis.bgcolor = vec4('#c0c0d0');\n\tthis.flex = 1;\n\tthis.clearcolor = 'black';\n\tthis.framessincerender = 0;\n\n\tthis.atDraw = function () {\n\t\tthis.framessincerender++;\n\t};\n\n\t// update the map tiles\n\tthis.updateTiles = function () {\n\t\tif (!this.dataset) return;\n\t\tif (!this.dataset.centers) return;\n\t\tif (!this.dataset.latlong) return;\n\n\t\tvar sourcezoom = this.dataset.zoomlevel;\n\t\tthis.zoomlevel = Math.ceil(sourcezoom);\n\t\tthis.fraczoom = sourcezoom - this.zoomlevel;\n\t\tthis.meters_per_pixel = geo.metersPerPixel(this.zoomlevel);\n\n\t\t// Center of viewport in meters, and tile\n\t\tthis.center_meters = geo.latLngToMeters(this.dataset.latlong[0], this.dataset.latlong[1]);\n\n\t\tthis.center_tile = [];\n\t\tvar frac = [];\n\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfrac.push(vec2(0, 0));\n\t\t\tthis.center_tile.push(geo.tileForMeters(this.center_meters[0], this.center_meters[1], this.zoomlevel + i));\n\t\t}\n\n\t\tfor (var a = 0; a < this.tilestoupdate.length; a++) {\n\t\t\tvar rt = this.tilestoupdate[a];\n\t\t\trt.meterspertile = geo.metersPerTile(this.zoomlevel + rt._layeroffset);\n\t\t\trt.setpos(this.center_tile[rt.layeroffset], this.zoomlevel + rt._layeroffset, frac[rt._layeroffset], this.fraczoom, this.center_meters);\n\t\t\trt.redraw();\n\t\t}\n\t};\n\n\tthis.dumpdebug = function () {\n\t\tfor (var a = 0; a < this.tilestoupdate.length; a++) {\n\t\t\tvar rt = this.tilestoupdate[a];\n\t\t\tconsole.log(rt.lastpos);\n\t\t}\n\t};\n\n\tthis.layout = function () {\n\t\tthis.dotwice = 0;\n\t\tif (this.rerender) this.rerender();\n\t};\n\n\tthis.render = function () {\n\t\tvar _view;\n\n\t\tvar layout = this._layout;\n\t\tthis.tilestoupdate = [];\n\n\t\tvar res = [this.dataset];\n\t\tvar res3d = [];\n\t\tvar buildings3d = [];\n\t\tvar labels3d = [];\n\t\tvar poi3d = [];\n\t\tvar div = 512;\n\t\tthis.tilewidth = Math.ceil(layout.width / div);\n\t\tthis.tileheight = Math.ceil(layout.height / div);\n\n\t\tthis.camdist = 20000;\n\n\t\tvar aspect = layout.width / layout.height;\n\t\tvar fov = Math.atan(layout.width / 2 * 40 / this.camdist) * 360 / 6.283 / aspect;\n\n\t\tvar basew = this.tilewidth / 2;\n\t\tvar baseh = this.tileheight / 2;\n\t\tvar showland = true;\n\n\t\tfor (var layer = 0; layer < 2; layer++) {\n\t\t\tthis.tilewidth = 0;\n\t\t\tthis.tileheight = 0;\n\t\t\tvar tilearea = vec2(this.tilewidth, this.tileheight);\n\t\t\tvar ltx = 0;\n\t\t\tvar lty = 0;\n\t\t\tvar extw = basew * Math.pow(2.0, layer - 0.5);\n\t\t\tvar exth = baseh * Math.pow(2.0, layer - 0.5);\n\t\t\txs = -extw;\n\t\t\txe = -xs + 1;\n\t\t\tys = -exth;\n\t\t\tye = -ys + 1;\n\t\t\tif (showland) {\n\t\t\t\tfor (var x = xs; x < xe; x++) {\n\t\t\t\t\tfor (var y = ys; y < ye; y++) {\n\t\t\t\t\t\tvar land = this.landtile({ host: this, mapdata: this.dataset, fog: this.bgcolor, tilearea: tilearea, trans: vec2(x, y), layeroffset: layer });\n\t\t\t\t\t\tthis.tilestoupdate.push(land);\n\t\t\t\t\t\tres3d.push(land);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var x = xs; x < xe; x++) {\n\t\t\t\tfor (var y = ys; y < ye; y++) {\n\t\t\t\t\tvar road = this.roadtile({ host: this, mapdata: this.dataset, fog: this.bgcolor, tilearea: tilearea, trans: vec2(x, y), layeroffset: layer });\n\t\t\t\t\tthis.tilestoupdate.push(road);\n\t\t\t\t\tres3d.push(road);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var x = xs; x < xe; x++) {\n\t\t\t\tfor (var y = ys; y < ye; y++) {\n\t\t\t\t\tvar building = this.buildingtile({ host: this, mapdata: this.dataset, fog: this.bgcolor, tilearea: tilearea, trans: vec2(x, y), layeroffset: layer });\n\t\t\t\t\tthis.tilestoupdate.push(building);\n\t\t\t\t\tbuildings3d.push(building);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (layer == 1 && this.showlabels) {\n\t\t\t\tfor (var x = xs; x < xe; x++) {\n\t\t\t\t\tfor (var y = ys; y < ye; y++) {\n\t\t\t\t\t\tvar labels = this.labeltile({ host: this, mapdata: this.dataset, fog: this.bgcolor, tilearea: tilearea, trans: vec2(x, y), layeroffset: layer });\n\t\t\t\t\t\tthis.tilestoupdate.push(labels);\n\t\t\t\t\t\tlabels3d.push(labels);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar zoom = 0.25;\n\n\t\tres.push(view((_view = {\n\t\t\tbgcolor: 'red',\n\t\t\tflex: 1,\n\t\t\tviewport: '3d',\n\t\t\tname: 'mapinside',\n\t\t\tnearplane: 100,\n\t\t\tfov: fov,\n\t\t\tfarplane: this.camdist * 2,\n\t\t\tcamera: vec3(0, -this.camdist * zoom * 0.13, this.camdist * zoom * 0.3)\n\t\t}, _defineProperty(_view, 'fov', fov), _defineProperty(_view, 'up', vec3(0, 1, 0)), _defineProperty(_view, 'lookat', vec3(0, 0, 0)), _view), [view({\n\t\t\tbgcolor: NaN\n\t\t}, [res3d, buildings3d, labels3d, this.constructor_children])]));\n\t\t//res.push(this.constructor_children)\n\t\tvar camdist = this.camdist;\n\t\tres.push(button({\n\t\t\tposition: 'absolute',\n\t\t\ttop: 20,\n\t\t\tlabel: '2D/3D',\n\t\t\tmode: 1,\n\t\t\tclick: function click() {\n\t\t\t\tvar map = this.find('mapinside');\n\t\t\t\tif (this.mode == 1) {\n\t\t\t\t\tthis.mode = 2;\n\t\t\t\t\tmap.camera = Animate({ 1: vec3(0, -4650, 150) });\n\t\t\t\t} else {\n\t\t\t\t\tthis.mode = 1;\n\t\t\t\t\tmap.camera = Animate({ 1: vec3(0, -camdist * zoom * 0.13, camdist * zoom * 0.3) });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tres.push(label({\n\t\t\tbottom: 10,\n\t\t\tfontsize: 8,\n\t\t\tposition: 'absolute',\n\t\t\tfgcolor: 'black',\n\t\t\ttext: 'Vector data copyright OpenStreetMap contributors, Whos On First. Webservice by mapzen.',\n\t\t\tfont: ubuntufont\n\t\t}));\n\t\tthis.framessincerender = 0;\n\n\t\tif (!this.dotwice && this.rerender) this.dotwice++, this.rerender();\n\n\t\treturn res;\n\t};\n\n\tthis.atChildrenRendered = function () {\n\t\tthis.updateTiles();\n\t\tthis.redraw();\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/map/map.js\n// module id = 87\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/map/map.js?");

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the 'License'); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $server$, service) {\n\tvar _displaykinds, _noignoreuse;\n\n\tvar earcut = requireDreem('$system/lib/earcut-port.js')().earcut;\n\tvar styleset = requireDreem('$widgets/map/mapstyle.js')();\n\n\tthis.TileSize = 256.0;\n\n\tvar KindSet = this.KindSet = {};\n\tvar UnhandledKindSet = this.UnhandledKindSet = {};\n\n\tvar roadwidths = {\n\t\twater: 20,\n\t\tferry: 6,\n\t\tFerry: 6,\n\t\trail: 6,\n\t\trailway: 6,\n\t\tracetrack: 6,\n\t\tminor_road: 4,\n\t\tmajor_road: 6,\n\t\tpath: 4, highway: 15,\n\t\tRoad: 200\n\t};\n\n\tvar roadcolors = {\n\t\twater: '#30a0ff',\n\t\tpath: '#d0d0d0',\n\t\tferry: 'lightblue',\n\t\trail: vec4('purple'),\n\t\tminor_road: vec4('#505050'),\n\t\tmajor_road: vec4('#404040'),\n\t\thighway: vec4('#303030')\n\t};\n\n\tvar roadmarkcolors = {\n\t\twater: '#30a0ff',\n\t\tmajor_road: 'white',\n\t\tminor_road: '#a0a0a0'\n\n\t\t//this.ignoreuse = {}\n\t\t//this.displaykinds = {}\n\t};this.displaykinds = (_displaykinds = {\n\t\twater: true,\n\t\tmeadow: true,\n\t\tplaya: true,\n\t\tforest: true,\n\t\tpedestrian: true,\n\t\tearth: true,\n\t\triver: true,\n\t\tbeach: true,\n\t\tgrass: true,\n\t\tlake: true,\n\t\tbuilding: true,\n\t\tcanal: true,\n\t\tland: true,\n\t\tpark: true,\n\t\tparking: true,\n\t\tpitch: true,\n\t\tfootway: true,\n\t\tplayground: true,\n\t\twood: true,\n\t\tresidential: true,\n\t\tfarm: true,\n\t\trail: true,\n\t\twetland: true,\n\t\taerodrome: true,\n\t\tfarmyard: true, scrub: true\n\t}, _defineProperty(_displaykinds, 'forest', true), _defineProperty(_displaykinds, 'nature_reserve', false), _defineProperty(_displaykinds, 'riverbank', true), _defineProperty(_displaykinds, 'railway', true), _defineProperty(_displaykinds, 'runway', true), _defineProperty(_displaykinds, 'farmland', true), _displaykinds);\n\n\tthis.noignoreuse = (_noignoreuse = {\n\t\tallotments: true,\n\t\tapron: true,\n\t\tcemetery: true,\n\t\tcinema: true,\n\t\tcollege: true,\n\t\tcommercial: true,\n\t\tcommon: true,\n\t\tfarm: true,\n\t\tfarmland: true,\n\t\tfarmyard: true,\n\t\tfootway: true,\n\t\tforest: false,\n\t\tfuel: true,\n\t\tgarden: false, glacier: false, golf_course: true, grass: false,\n\t\thospital: true, industrial: false, land: false, library: true,\n\t\tmeadow: false, nature_reserve: false, park: false, parking: true,\n\t\tpedestrian: true,\n\t\tpitch: true,\n\t\tnational_park: true,\n\t\tplace_of_worship: true, playground: true, quarry: true, railway: true, recreation_ground: false, residential: false, retail: true,\n\t\triverbank: true, reservoir: true,\n\t\trunway: true, school: true, scrub: true, sports_centre: true, stadium: true, taxiway: true, theatre: true, university: true, village_green: true, wetland: true, wood: true, 'urban area': true }, _defineProperty(_noignoreuse, 'park', true), _defineProperty(_noignoreuse, 'protected land', true), _defineProperty(_noignoreuse, 'protected_area', true), _noignoreuse);\n\n\tvar mapstyle = this.mapstyle = styleset.mapstyle;\n\n\tif (true) {\n\n\t\tfor (var a in this.mapstyle) {\n\t\t\tvar st = this.mapstyle[a];\n\t\t\t//\tif (st.color1) st.color1 = vec4.desaturate(st.color1,0.85);\n\t\t\t//\tif (st.color2) st.color2 = vec4.desaturate(st.color2,0.84);\n\t\t}\n\t}\n\n\tthis.dumpkindset = function () {\n\t\tvar mapstylestring = 'var mapstyle = {\\n';\n\t\tfor (var i in KindSet) {\n\t\t\tmapstylestring += '\\t' + i + ':{\\n';\n\t\t\tif (landoffsets[i]) mapstylestring += '\\t\\toffset:' + landoffsets[i] + ',\\n ';\n\t\t\tif (landcolor1[i]) mapstylestring += '\\t\\tcolor1: vec4(' + vec4(landcolor1[i]) + '),\\n ';\n\t\t\tif (landcolor2[i]) mapstylestring += '\\t\\tcolor2: vec4(' + vec4(landcolor2[i]) + '),\\n ';\n\t\t\tif (roadcolors[i]) mapstylestring += '\\t\\troadcolor: vec4(' + vec4(roadcolors[i]) + '),\\n ';\n\t\t\tmapstylestring += '\\t},\\n';\n\t\t\t// console.log('Handled:', i);\n\t\t}\n\t\tfor (var i in UnhandledKindSet) {\n\t\t\tconsole.log('Unhandled:', i, UnhandledKindSet[i]);\n\t\t}\n\t\tmapstylestring += '\\tdefault:\\n\\t{\\n\\t\\tcolor1:vec4(\"red\")\\n\\t}\\n}';\n\t\tconsole.log(mapstylestring);\n\t};\n\n\tvar BuildingVertexStruct = this.BuildingVertexStruct = defineDreem.struct({\n\t\tpos: vec3,\n\t\tcolor1: vec4,\n\t\tid: float,\n\t\tbuildingid: float,\n\t\theight: float\n\t});\n\n\tvar RoadVertexStruct = this.RoadVertexStruct = defineDreem.struct({\n\t\tpos: vec4,\n\t\tgeom: vec4, //sidevec:vec2\n\t\t//geom:vec3,\n\t\tcolor: vec4\n\t\t//side: float,\n\t\t//dist: float,\n\t\t//linewidth:float,\n\t});\n\n\tvar LandVertexStruct = this.LandVertexStruct = defineDreem.struct({\n\t\tpos: vec4,\n\t\tcolor1: vec4\n\t\t//color1:vec4,\n\t\t//color2:vec4,\n\t\t//id: float\n\t});\n\n\tfunction arcToFlatVertices(arc, flatverts) {\n\t\tif (!arc) return [];\n\t\tif (!flatverts) flatverts = [];\n\t\tvar A0 = arc[0];\n\t\tvar nx = A0[0];\n\t\tvar ny = A0[1];\n\n\t\tflatverts.push(nx);\n\t\tflatverts.push(ny);\n\n\t\tfor (var i = 1; i < arc.length; i++) {\n\t\t\tvar A = arc[i];\n\t\t\tnx += A[0];\n\t\t\tny += A[1];\n\t\t\tflatverts.push(nx);\n\t\t\tflatverts.push(ny);\n\t\t}\n\n\t\treturn flatverts;\n\t}\n\n\tfunction polyToTriangles(poly) {\n\t\tif (!poly) return [];\n\t\tvar verts = [];\n\n\t\tvar flatverts = arcToFlatVertices(poly.outline);\n\t\tvar holeindices = [];\n\n\t\tfor (var i = 0; i < poly.holes.length; i++) {\n\t\t\tholeindices.push(flatverts.length / 2);\n\t\t\tarcToFlatVertices(poly.holes[i], flatverts);\n\t\t}\n\t\tvar triangles = earcut(flatverts, holeindices);\n\n\t\tfor (var i = 0; i < triangles.length; i++) {\n\t\t\tidx = triangles[i];\n\t\t\tverts.push(flatverts[idx * 2], flatverts[idx * 2 + 1]);\n\t\t}\n\n\t\treturn verts;\n\t}\n\n\tfunction arcToTriangles(arc) {\n\t\tif (!arc) return [];\n\t\tvar verts = [];\n\n\t\tvar flatverts = arcToFlatVertices(arc);\n\t\tvar triangles = earcut(flatverts);\n\n\t\tfor (var i = 0; i < triangles.length; i++) {\n\t\t\tidx = triangles[i];\n\t\t\tverts.push([flatverts[idx * 2], flatverts[idx * 2 + 1]]);\n\t\t}\n\n\t\treturn verts;\n\t}\n\n\tthis.buildBuildingVertexBuffer = function (buildings) {\n\t\tvar mesh = BuildingVertexStruct.array(buildings.length * 30);\n\t\tvar buildingcolor = mapstyle.building.color1;\n\t\tvar c0 = buildingcolor[0];\n\t\tvar c1 = buildingcolor[1];\n\t\tvar c2 = buildingcolor[2];\n\n\t\tfor (var i = 0; i < buildings.length; i++) {\n\t\t\tvar building = buildings[i];\n\n\t\t\tvar theH = building.h;\n\t\t\tvar isofac = 0;\n\t\t\tvar isox = theH * 0.5 * isofac;\n\t\t\tvar isoy = theH * isofac;\n\t\t\tvar bid = building.id;\n\n\t\t\tif (building.arcs) for (var j = 0; j < building.arcs.length; j++) {\n\t\t\t\tvar arc = building.arcs[j];\n\n\t\t\t\tvar tris = arcToTriangles(arc);\n\t\t\t\tvar A1 = [arc[0][0], arc[0][1]];\n\t\t\t\tvar OA1 = A1;\n\t\t\t\tvar c = 0.3;\n\t\t\t\tfor (var a = 1; a < arc.length + 1; a++) {\n\t\t\t\t\tvar ca = arc[a % arc.length];\n\n\t\t\t\t\tvar A2 = [A1[0] + ca[0], A1[1] + ca[1]];\n\t\t\t\t\tif (a == arc.length) {\n\t\t\t\t\t\tA2[1] -= OA1[1];\n\t\t\t\t\t\tA2[0] -= OA1[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tc = 0.8 + 0.2 * Math.sin(Math.atan2(A2[1] - A1[1], A2[0] - A1[0]));\n\t\t\t\t\tmesh.push(A1[0], A1[1], 0, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tmesh.push(A2[0], A2[1], 0, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tmesh.push(A2[0] + isox, A2[1] + isoy, theH, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tmesh.push(A1[0], A1[1], 0, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tmesh.push(A2[0] + isox, A2[1] + isoy, theH, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tmesh.push(A1[0] + isox, A1[1] + isoy, theH, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t\tA1 = A2;\n\t\t\t\t}\n\t\t\t\tc = 1.0;\n\t\t\t\tfor (var a = 0; a < tris.length; a++) {\n\t\t\t\t\tvar atri = tris[a];\n\t\t\t\t\tmesh.push(atri[0] + isox, atri[1] + isoy, theH, c0 * c, c1 * c, c2 * c, 1, i, bid, theH);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//if (!window.teller) window.teller = 0;\n\t\t//window.teller += mesh.length * 40;\n\t\treturn mesh;\n\t};\n\n\tthis.calculateAreaPolygonVertexBuffer = function (areas) {\n\t\tvar total = 0;\n\t\tfor (var i = 0; i < areas.length; i++) {\n\t\t\tland = areas[i];\n\t\t\tif (land.arcs) {\n\t\t\t\tfor (var j = 0; j < land.arcs.length; j++) {\n\t\t\t\t\tvar arc = land.arcs[j];\n\t\t\t\t\tvar tris = arcToTriangles(arc);\n\t\t\t\t\tarc.tris = tris;\n\t\t\t\t\ttotal += tris.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (land.polygons) {\n\t\t\t\tfor (var j = 0; j < land.polygons.length; j++) {\n\t\t\t\t\tvar poly = land.polygons[j];\n\t\t\t\t\tvar tris = polyToTriangles(poly);\n\t\t\t\t\tpoly.tris = tris;\n\t\t\t\t\ttotal += tris.length / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t};\n\n\tthis.buildAreaPolygonVertexBuffer = function (areas, mesh) {\n\t\t//console.log(areas);\n\t\tfor (var i = 0; i < areas.length; i++) {\n\t\t\tvar off = 0;\n\t\t\tvar land = areas[i];\n\n\t\t\tvar color1 = vec4(1, 0, 1, 1);;\n\t\t\t//var color2 = ;\n\t\t\tvar t = mapstyle[land.kind];\n\t\t\tif (!t) {\n\t\t\t\tt = mapstyle['default'];\n\t\t\t\t//\tconsole.log('defaulting for:', land.kind);\n\t\t\t};\n\n\t\t\tif (t.color1) color1 = t.color1;else {\n\t\t\t\tUnhandledKindSet[land.kind] = 'land - no color1';\n\t\t\t\tconsole.log('no color for: ', land.kind);\n\t\t\t}\n\t\t\t//if (t.color2) color2 = t.color2;else UnhandledKindSet[land.kind] = 'land - no color2 ';\n\t\t\t//if (t.offset) off = t.offset;else UnhandledKindSet[land.kind] = 'land - no offset'\n\n\t\t\tif (land.arcs) {\n\t\t\t\tfor (var j = 0; j < land.arcs.length; j++) {\n\t\t\t\t\tvar arc = land.arcs[j];\n\t\t\t\t\tvar tris = arc.tris;\n\t\t\t\t\tfor (var a = 0; a < tris.length; a++) {\n\t\t\t\t\t\tmesh.push(tris[a][0], tris[a][1], color1[0], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (land.polygons) {\n\n\t\t\t\tvar array = mesh.array;\n\t\t\t\tvar o = mesh.length * 8;\n\n\t\t\t\tfor (var j = 0; j < land.polygons.length; j++) {\n\t\t\t\t\tvar poly = land.polygons[j];\n\t\t\t\t\tvar tris = poly.tris;\n\t\t\t\t\tfor (var a = 0; a < tris.length; a += 2, o += 8) {\n\t\t\t\t\t\tarray[o + 0] = tris[a];\n\t\t\t\t\t\tarray[o + 1] = tris[a + 1];\n\t\t\t\t\t\tarray[o + 2] = i;\n\t\t\t\t\t\tarray[o + 3] = 0;\n\n\t\t\t\t\t\t//array[o + 2] = off\n\t\t\t\t\t\tarray[o + 4] = color1[0];\n\t\t\t\t\t\tarray[o + 5] = color1[1];\n\t\t\t\t\t\tarray[o + 6] = color1[2];\n\t\t\t\t\t\tarray[o + 7] = color1[3];\n\t\t\t\t\t\t//array[o + 4] = color1[1]\n\t\t\t\t\t\t//array[o + 5] = color1[2]\n\t\t\t\t\t\t//array[o + 6] = color1[3]\n\t\t\t\t\t\t//array[o + 7] = color2[0]\n\t\t\t\t\t\t//array[o + 8] = color2[1]\n\t\t\t\t\t\t//array[o + 9] = color2[2]\n\t\t\t\t\t\t//array[o + 10] = color2[3]\n\t\t\t\t\t\tmesh.length++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mesh;\n\t};\n\n\tthis.buildRoadPolygonVertexBuffer = function (roads, zoomlevel) {\n\t\tif (!zoomlevel) zoomlevel = 10;\n\t\tvar mesh = RoadVertexStruct.array();\n\t\tvar z = 10;\n\t\tfor (var i = 0; i < roads.length; i++) {\n\n\t\t\tvar R = roads[i];\n\t\t\tvar linewidth = 3;\n\t\t\tvar color = vec4('gray');\n\n\t\t\tvar st = mapstyle[R.kind];\n\t\t\tif (!st) st = mapstyle['default'];\n\t\t\tif (roadwidths[R.kind]) linewidth = roadwidths[R.kind];else {\n\t\t\t\t//console.log('no width:', R.kind);\n\t\t\t\tUnhandledKindSet[R.kind] = 'road';\n\t\t\t}\n\n\t\t\tlinewidth *= Math.pow(2.0, zoomlevel - 13);\n\t\t\tif (st.roadcolor) {\n\t\t\t\tcolor = st.roadcolor;\n\t\t\t} else {\n\t\t\t\tUnhandledKindSet[R.kind] = 'road';\n\t\t\t\t//console.log('roadkind with no color', R.kind);\n\t\t\t}\n\n\t\t\tvar colorid = i;\n\t\t\t//var markcolor = color;\n\t\t\t//if (roadmarkcolors[R.kind]) markcolor = vec4(roadmarkcolors[R.kind]);\n\t\t\t// linewidth *= Math.pow(2, this.view.zoomlevel-14);\n\n\t\t\tvar showcaps = false;\n\t\t\tvar showfill = true;\n\t\t\tvar showcorner = true;\n\n\t\t\tfor (var rr = 0; rr < R.arcs.length; rr++) {\n\n\t\t\t\tvar currentarc = R.arcs[rr];\n\t\t\t\tif (currentarc.length == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//continue;\n\t\t\t\tvar A0 = currentarc[0];\n\t\t\t\tvar A1 = vec2(currentarc[1][0] + A0[0], currentarc[1][1] + A0[1]);\n\n\t\t\t\t//mesh.push(A0[0], A0[1], this.view.color);\n\t\t\t\tvar nx = A0[0];\n\t\t\t\tvar ny = A0[1];\n\n\t\t\t\tvar odx = A1[0] - A0[0];\n\t\t\t\tvar ody = A1[1] - A0[1];\n\n\t\t\t\tvar predelta = vec2.normalize(vec2(odx, ody));\n\t\t\t\tvar pre_side_delta = vec2.rotate(predelta, 3.1415 / 2.0);\n\n\t\t\t\tvar dist = 0;\n\t\t\t\tvar dist2 = 0;\n\t\t\t\tvar lastsdelta = vec2(0, 0);\n\n\t\t\t\tif (showcaps) {\n\t\t\t\t\tmesh.push(nx, ny, pre_side_delta[0], pre_side_delta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx, ny, pre_side_delta[0], pre_side_delta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx - predelta[0] * linewidth * 0.5, ny - predelta[1] * linewidth * 0.5, pre_side_delta[0], pre_side_delta[1], 0.5, -linewidth, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\n\t\t\t\t\tmesh.push(nx - predelta[0] * linewidth * 0.5, ny - predelta[1] * linewidth * 0.5, pre_side_delta[0], pre_side_delta[1], 0.5, -linewidth, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx - predelta[0] * linewidth * 0.5, ny - predelta[1] * linewidth * 0.5, pre_side_delta[0], pre_side_delta[1], -0.5, -linewidth, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx, ny, pre_side_delta[0], pre_side_delta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t}\n\n\t\t\t\tvar lastdelta = vec2(0);\n\n\t\t\t\tfor (var a = 1; a < currentarc.length; a++) {\n\t\t\t\t\tvar A = currentarc[a];\n\n\t\t\t\t\tvar tnx = nx + A[0];\n\t\t\t\t\tvar tny = ny + A[1];\n\t\t\t\t\tvar predelt = vec2(tnx - nx, tny - ny);\n\t\t\t\t\tvar delta = vec2.normalize(predelt);\n\t\t\t\t\tvar sdelta = vec2.rotate(delta, PI / 2);\n\n\t\t\t\t\tvar dist2 = dist + vec2.len(predelt);\n\t\t\t\t\tif (a > 1 && showcorner) {\n\t\t\t\t\t\tmesh.push(nx, ny, lastsdelta[0], lastsdelta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\n\t\t\t\t\t\tmesh.push(nx, ny, lastsdelta[0], lastsdelta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(nx, ny, lastsdelta[0], lastsdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t}\n\t\t\t\t\t//color = vec4(0,1,0,0.2)\n\t\t\t\t\tif (showfill) {\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(tnx, tny, sdelta[0], sdelta[1], 1, dist2, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\n\t\t\t\t\t\tmesh.push(nx, ny, sdelta[0], sdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(tnx, tny, sdelta[0], sdelta[1], 1, dist2, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t\tmesh.push(tnx, tny, sdelta[0], sdelta[1], -1, dist2, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\t}\n\t\t\t\t\tlastsdelta = vec2(sdelta[0], sdelta[1]);\n\t\t\t\t\tdist = dist2;\n\t\t\t\t\tnx = tnx;\n\t\t\t\t\tny = tny;\n\t\t\t\t\tlastdelta = delta;\n\t\t\t\t}\n\t\t\t\t//color = vec4('red');\n\t\t\t\tif (showcaps) {\n\t\t\t\t\tmesh.push(nx, ny, lastsdelta[0], lastsdelta[1], 1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx, ny, lastsdelta[0], lastsdelta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx + lastdelta[0] * linewidth * 0.5, ny + lastdelta[1] * linewidth * 0.5, lastsdelta[0], lastsdelta[1], 0.5, dist + linewidth * 0.5, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\n\t\t\t\t\tmesh.push(nx + lastdelta[0] * linewidth * 0.5, ny + lastdelta[1] * linewidth * 0.5, lastsdelta[0], lastsdelta[1], 0.5, dist + linewidth * 0.5, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx + lastdelta[0] * linewidth * 0.5, ny + lastdelta[1] * linewidth * 0.5, lastsdelta[0], lastsdelta[1], -0.5, dist + linewidth * 0.5, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t\tmesh.push(nx, ny, pre_side_delta[0], pre_side_delta[1], -1, dist, linewidth, colorid, color[0], color[1], color[2], color[3]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mesh;\n\t};\n\n\tfunction DecodeAndAdd(Bb, TargetSet, SourceArcs, defaultkind) {\n\t\tvar Barcs = Bb.arcs;\n\t\tvar Bprops = Bb.properties;\n\t\tif (!Barcs) return;\n\t\tvar B = { arcs: [], polygons: [], kind: Bprops.kind ? Bprops.kind : defaultkind };\n\t\tif (Bprops.name) B.name = Bprops.name;\n\t\tvar Tarcs = B.arcs;\n\t\tvar Tpolies = B.polygons;\n\n\t\tif (Bb.type == 'MultiLineString') {\n\t\t\tvar arc = [];\n\t\t\tfor (var k = 0; k < Barcs.length; k++) {\n\t\t\t\tvar sourcearc = SourceArcs[Barcs[k]];\n\t\t\t\tvar x = sourcearc[0][0];\n\t\t\t\tvar y = sourcearc[0][1];\n\t\t\t\tarc.push(x, y);\n\t\t\t\tfor (var l = 1; l < sourcearc.length; l++) {\n\t\t\t\t\tx += sourcearc[l][0];\n\t\t\t\t\ty += sourcearc[l][1];\n\t\t\t\t\tarc.push(x, y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTarcs.push(arc);\n\t\t} else {\n\t\t\tif (Bb.type == 'MultiPolygon') {\n\t\t\t\tfor (var k = 0; k < Bb.arcs.length; k++) {\n\t\t\t\t\tvar L = Bb.arcs[k].length;\n\t\t\t\t\tvar outlinearc = SourceArcs[Bb.arcs[k][0]];\n\t\t\t\t\tvar holes = [];\n\t\t\t\t\tfor (var m = 1; m < L; m++) {\n\t\t\t\t\t\tvar holearc = SourceArcs[Bb.arcs[k][m]];\n\t\t\t\t\t\tholes.push(holearc);\n\t\t\t\t\t}\n\t\t\t\t\tTpolies.push({ outline: outlinearc, holes: holes });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Bb.type == 'Polygon') {\n\n\t\t\t\t\tvar outlinearc = SourceArcs[Bb.arcs[0][0]];\n\t\t\t\t\tvar holes = [];\n\t\t\t\t\tfor (var k = 1; k < Bb.arcs.length; k++) {\n\t\t\t\t\t\tvar L = Bb.arcs[k].length;\n\t\t\t\t\t\tvar holearc = SourceArcs[Bb.arcs[k]];\n\t\t\t\t\t\tholes.push(holearc);\n\t\t\t\t\t}\n\t\t\t\t\tTpolies.push({ outline: outlinearc, holes: holes });\n\t\t\t\t} else {\n\t\t\t\t\tif (Bb.type == 'LineString') {\n\t\t\t\t\t\tfor (var k = 0; k < Bb.arcs.length; k++) {\n\t\t\t\t\t\t\tTarcs.push(SourceArcs[Bb.arcs[k]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Bb.type == 'LineString') {\n\t\t\t// ignore linestrings stuck in things expected to be polygons.\n\t\t} else {\n\t\t\tTargetSet.push(B);\n\t\t}\n\t}\n\n\tthis.getRoadSortKey = function (kind) {\n\t\tif (!kind) return 0;\n\t\tvar s = mapstyle[kind];\n\t\tif (!s) return 0;\n\t\tif (s.sortkey) return s.sortkey;\n\t\treturn 0;\n\t};\n\n\tthis.sortroads = function (a, b) {\n\t\treturn a.sortkey - b.sortkey;\n\t};\n\n\tthis.build = function (target, sourcedata) {\n\t\tvar dt = Date.now();\n\t\tvar Bset = [];\n\t\tvar Rset = [];\n\t\tvar Wset = [];\n\t\tvar Eset = [];\n\t\tvar Lset = [];\n\t\tvar Labels = [];\n\t\tvar Allset = [];\n\t\tvar Places = [];\n\t\tvar Sarcs = sourcedata.arcs;\n\n\t\ttarget.transform = sourcedata.transform;\n\t\tvar objects = sourcedata.objects;\n\t\tvar BuildingGeoms = objects.buildings.geometries;\n\t\tfor (var i = 0; i < BuildingGeoms.length; i++) {\n\t\t\tvar Bb = BuildingGeoms[i];\n\t\t\tvar Barcs = Bb.arcs;\n\t\t\tif (Barcs) {\n\t\t\t\tvar B = { id: Bb.properties.id, h: Bb.properties.height ? Bb.properties.height : 30.0, kind: Bb.properties.kind, name: Bb.properties.name, street: Bb.properties['addr_street'], housenumber: Bb.properties.addr_housenumber, arcs: [] };\n\t\t\t\tvar Tarcs = B.arcs;\n\t\t\t\tfor (var k = 0; k < Bb.arcs.length; k++) {\n\t\t\t\t\tTarcs.push(Sarcs[Barcs[k]]);\n\t\t\t\t}\n\t\t\t\tKindSet[B.kind] = true;\n\t\t\t\tBset.push(B);\n\t\t\t}\n\t\t}\n\t\tvar PlacesGeoms = objects.places.geometries;\n\t\tfor (var i = 0; i < PlacesGeoms.length; i++) {\n\t\t\tvar Bb = PlacesGeoms[i];\n\t\t\tif (Bb.type == 'Point') {\n\t\t\t\tvar x = Bb.coordinates[0];;\n\t\t\t\tvar y = Bb.coordinates[1];;\n\t\t\t\tLabels.push({ x: x, y: y, kind: Bb.properties.kind, name: Bb.properties.name, scalerank: Bb.properties.scalerank });\n\t\t\t\tif (!Bb.properties.scalerank) {}\n\t\t\t\t//console.log(Bb.properties);\n\n\t\t\t\t// console.log(Bb.properties.kind, Bb.properties);\n\t\t\t} else {\n\t\t\t\tconsole.log(Bb);\n\t\t\t}\n\t\t}\n\t\tvar WaterGeoms = objects.water.geometries;\n\t\tfor (var i = 0; i < WaterGeoms.length; i++) {\n\t\t\tvar Bb = WaterGeoms[i];\n\t\t\tDecodeAndAdd(Bb, Wset, Sarcs, 'water');\n\t\t}\n\t\tvar EarthGeoms = objects.earth.geometries;\n\t\tfor (var i = 0; i < EarthGeoms.length; i++) {\n\t\t\tvar Bb = EarthGeoms[i];\n\t\t\tDecodeAndAdd(Bb, Eset, Sarcs, 'earth');\n\t\t}\n\n\t\tvar LandUseGeoms = objects.landuse.geometries;\n\t\tfor (var i = 0; i < LandUseGeoms.length; i++) {\n\t\t\tvar Bb = LandUseGeoms[i];\n\t\t\tif (this.displaykinds[Bb.properties.kind]) {\n\t\t\t\tDecodeAndAdd(Bb, Lset, Sarcs, 'landuse');\n\t\t\t} else {\n\t\t\t\t//console.log('ignoring', Bb.properties.kind);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < objects.roads.geometries.length; i++) {\n\t\t\tvar Bb = objects.roads.geometries[i];\n\t\t\tvar B = { arcs: [], kind: Bb.properties.kind, sortkey: this.getRoadSortKey(Bb.properties.kind) };\n\t\t\tvar Barcs = Bb.arcs;\n\t\t\tfor (var k = 0; k < Barcs.length; k++) {\n\t\t\t\tB.arcs.push(Sarcs[Barcs[k]]);\n\t\t\t}\n\t\t\tRset.push(B);\n\t\t\tKindSet[B.kind] = true;\n\t\t}\n\n\t\tRset.sort(this.sortroads);\n\n\t\t/*  Skip transits for now..\n  for (var i = 0;i<objects.transit.geometries.length;i++){\n  \tvar Bb = objects.transit.geometries[i];\n  \tvar B = { arcs:[]};\n  \t\tfor(var k = 0;k<Bb.arcs.length;k++){\n  \t\tB.arcs.push(Sarcs[Bb.arcs[k]]);\n  \t}\n  \tKindSet[B.kind] = true;\n  \t//Rset.push(B);\n  }*/\n\n\t\t//target.buildings = Bset;\n\t\t//target.roads = Rset;\n\t\ttarget.Labels = Labels;\n\t\t//target.waters = Wset;\n\t\t//target.earths = Eset;\n\t\t//target.landuses = Lset;\n\n\t\tvar empty = [];\n\t\ttarget.roadVertexBuffer = this.buildRoadPolygonVertexBuffer(Rset, target.z);\n\t\t//target.roadVertexBuffer = this.buildRoadPolygonVertexBuffer([]);\n\t\ttarget.buildingVertexBuffer = this.buildBuildingVertexBuffer(Bset);\n\n\t\tif (1) {\n\t\t\tvar geomsize = 0;\n\t\t\tgeomsize += this.calculateAreaPolygonVertexBuffer(Eset);\n\t\t\tgeomsize += this.calculateAreaPolygonVertexBuffer(Lset);\n\t\t\tgeomsize += this.calculateAreaPolygonVertexBuffer(Wset);\n\t\t\tvar landmesh = LandVertexStruct.array(geomsize);\n\n\t\t\tthis.buildAreaPolygonVertexBuffer(Eset, landmesh);\n\t\t\tthis.buildAreaPolygonVertexBuffer(Lset, landmesh);\n\t\t\tthis.buildAreaPolygonVertexBuffer(Wset, landmesh);\n\t\t\ttarget.landVertexBuffer = landmesh;\n\t\t}\n\n\t\t//\ttarget.landVertexBuffer = this.buildAreaPolygonVertexBuffer(Wset);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/map/mapbuffers.js\n// module id = 88\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/map/mapbuffers.js?");

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\n\tvar watercolor = vec4(\"#90cccb\");\n\n\tthis.mapstyle = {\n\t\tferry: {\n\t\t\troadcolor: vec4(0.6784313917160034, 0.8470588326454163, 0.9019607901573181, 1)\n\t\t},\n\t\triverbank: { color1: watercolor },\n\t\tmarina: { color1: watercolor },\n\t\treservoir: { color1: watercolor },\n\t\tstream: { color1: watercolor },\n\t\tcanal: { color1: watercolor },\n\t\tlake: { color1: watercolor },\n\t\tplaya: { color1: watercolor },\n\t\triver: { color1: watercolor },\n\t\tbasin: { color1: watercolor },\n\t\tswimming_pool: { color1: watercolor },\n\t\tsea: {\n\t\t\tcolor1: watercolor\n\t\t},\n\t\tocean: {\n\t\t\tcolor1: watercolor\n\t\t},\n\t\tearth: {\n\t\t\tcolor1: vec4(\"#f6f5f0\")\n\t\t},\n\t\tnational_park: {\n\t\t\tcolor1: vec4(\"#b2c29d\")\n\t\t},\n\t\tpark: {\n\t\t\toffset: -7,\n\t\t\tcolor1: vec4(\"#d0dcae\", 1)\n\t\t},\n\t\tresidential: {\n\t\t\tcolor1: vec4(\"#ffffff\")\n\t\t},\n\t\tindustrial: {\n\t\t\tcolor1: vec4(\"#dcd6d6\")\n\t\t},\n\t\trecreation_ground: {\n\t\t\tcolor1: vec4(\"#deddbe\")\n\t\t},\n\t\tscrub: {\n\t\t\tcolor1: vec4(\"#e1e8d6\")\n\t\t},\n\t\twetland: {\n\t\t\toffset: -18.5,\n\t\t\tcolor1: vec4(\"#e2e8e1\")\n\t\t},\n\t\tbeach: {\n\t\t\toffset: -19,\n\t\t\tcolor1: vec4(\"#f0f0e8\")\n\t\t},\n\t\tnature_reserve: {\n\t\t\toffset: -18,\n\t\t\tcolor1: vec4(\"#deddbe\")\n\t\t},\n\t\tcommercial: {},\n\t\tgolf_course: {},\n\t\tfarm: {\n\t\t\tcolor1: vec4(\"#e6e5e0\")\n\t\t},\n\t\tgrass: {\n\t\t\tcolor1: vec4(\"#d0dcae\")\n\t\t},\n\t\tsports_centre: {\n\t\t\tcolor1: vec4(1, 0, 0, 1)\n\t\t},\n\t\tfarmland: {\n\t\t\tcolor1: vec4(\"#dddcbd\")\n\t\t},\n\t\thospital: {},\n\t\tretail: {\n\t\t\toffset: 27,\n\t\t\tcolor1: vec4('#dcd6d6')\n\t\t},\n\t\tallotments: {},\n\t\trunway: {\n\t\t\toffset: -20,\n\t\t\tcolor1: vec4(\"#dcdf9d\")\n\t\t},\n\t\taerodrome: {\n\t\t\toffset: -20,\n\t\t\tcolor1: vec4(\"#dddddd\")\n\t\t},\n\t\tforest: {\n\t\t\toffset: -30,\n\t\t\tcolor1: vec4(\"#b2c29d\")\n\t\t},\n\t\tmeadow: {\n\t\t\tcolor1: vec4(\"#deddbe\")\n\t\t},\n\t\tparking: {\n\t\t\toffset: -8,\n\t\t\tcolor1: vec4(0.501960813999176, 0.501960813999176, 0.501960813999176, 1)\n\t\t},\n\t\tplant: {\n\t\t\tcolor1: vec4(\"#b2c29d\")\n\t\t},\n\t\tpitch: {\n\t\t\tcolor1: vec4(\"#efeecd\")\n\t\t},\n\t\tcemetery: {\n\t\t\tcolor1: vec4(\"gray\")\n\t\t},\n\t\tzoo: {},\n\t\tattraction: {},\n\t\tuniversity: {\n\t\t\toffset: -21,\n\t\t\tcolor1: vec4('#dcd6d6')\n\t\t},\n\t\tapron: {},\n\t\tmilitary: {},\n\t\twastewater_plant: {},\n\t\tplayground: {\n\t\t\toffset: -19,\n\t\t\tcolor1: vec4(\"#f0eee4\")\n\t\t},\n\t\tstadium: {},\n\t\trailway: {\n\t\t\troadcolor: vec4(\"#f6f5f0\"),\n\t\t\tcolor1: vec4(\"#f6f5f0\"),\n\t\t\tsortkey: 3\n\t\t},\n\t\trail: {\n\t\t\troadcolor: vec4(\"#999999\"),\n\t\t\tsortkey: 3\n\t\t},\n\t\tgarden: {\n\t\t\tcolor1: vec4(\"#d0dcae\")\n\t\t},\n\t\tfarmyard: {\n\t\t\tcolor1: vec4(\"#deddbe\")\n\t\t},\n\t\tgenerator: {},\n\t\tcollege: {},\n\t\tpedestrian: {\n\t\t\tcolor1: vec4('#dddde8')\n\t\t},\n\t\tschool: {},\n\t\tsubstation: {},\n\t\tpetting_zoo: {},\n\t\twood: {\n\t\t\tcolor1: vec4(\"#b2c19c\")\n\t\t},\n\t\tcommon: {\n\t\t\tcolor1: vec4('#f6f5f0')\n\t\t},\n\t\tvillage_green: {\n\t\t\tcolor1: vec4(\"#deddbe\")\n\t\t},\n\t\tprison: {},\n\t\tracetrack: {\n\t\t\troadcolor: vec4(\"#eeece2\")\n\t\t},\n\t\tmajor_road: {\n\t\t\troadcolor: vec4(\"#d1928d\")\n\t\t},\n\t\tFerry: {\n\t\t\troadcolor: vec4(\"#509b9a\"),\n\t\t\tsortkey: -1\n\t\t},\n\t\thighway: {\n\t\t\troadcolor: vec4(\"#a098b0\"),\n\t\t\tsortkey: 2\n\t\t},\n\t\tminor_road: {\n\t\t\troadcolor: vec4(\"#dcdf9d\")\n\t\t},\n\t\tRoad: {\n\t\t\troadcolor: vec4(\"#d2938e\")\n\t\t},\n\t\tundefined: {},\n\t\tworks: {},\n\t\tprotected_area: {\n\t\t\tcolor1: vec4(\"#f6f5f0\")\n\t\t},\n\t\ttheme_park: {},\n\t\tpath: {\n\t\t\troadcolor: vec4('#ebe9dc')\n\t\t},\n\t\tquarry: {\n\t\t\tcolor1: vec4(\"#cccccc\")\n\t\t},\n\t\tbridge: {\n\t\t\toffset: -22,\n\t\t\tcolor1: vec4('#e8cab0')\n\t\t},\n\t\tbreakwater: {\n\t\t\toffset: -20,\n\t\t\tcolor1: watercolor\n\t\t},\n\t\twater: {\n\t\t\toffset: 0,\n\t\t\tcolor1: watercolor\n\t\t},\n\t\tbuilding: {\n\t\t\tcolor1: vec4(\"#dcd6d6\")\n\t\t},\n\t\tapartments: {},\n\t\tgarages: {},\n\t\tstorage_tank: {},\n\t\tpier: {\n\t\t\toffset: -5,\n\t\t\tcolor1: vec4('#f6f5f0')\n\t\t},\n\t\tplace_of_worship: {},\n\t\twater_works: {},\n\t\tcinema: {},\n\t\ttaxiway: {},\n\t\tfuel: {},\n\t\tfootway: {\n\t\t\toffset: -12,\n\t\t\tcolor1: vec4('#eeeeee')\n\t\t},\n\t\tgroyne: {},\n\t\troller_coaster: {},\n\t\tdefault: {\n\t\t\tcolor1: vec4('#fafafc')\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/map/mapstyle.js\n// module id = 89\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/map/mapstyle.js?");

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $server$, service) {\n\n\tvar BufferGen = requireDreem(\"$widgets/map/mapbuffers\")();\n\n\tthis.generatebuffer = function (targetfile, datastring) {\n\t\ttry {\n\t\t\tvar thedata = JSON.parse(datastring);\n\t\t\tvar targetobj = {};\n\t\t\t// BufferGen.build(targetobj, thedata);\n\t\t\t// console.log(targetobj.landVertexBuffer.length, targetobj.roadVertexBuffer.length, targetobj.buildingVertexBuffer.length);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"exception during bugger generation:\", e);\n\t\t}\n\t};\n\n\tthis.sessionstart = function () {\n\t\tconsole.log(\"[Map] Session started\");\n\t};\n\n\tthis.cachemap = defineDreem.classPath(this) + \"../../../cache/map/\";\n\n\tthis.grabmap = function (x, y, z) {\n\t\tvar nodehttp = requireDreem('$system/server/nodehttp');\n\t\tvar fs = requireDreem('fs');\n\t\ttry {\n\t\t\tfs.mkdirSync(defineDreem.expandVariables(this.cachemap));\n\t\t} catch (e) {}\n\t\tvar cachedname = defineDreem.expandVariables(this.cachemap + x + \"_\" + y + \"_\" + z + \".json\");\n\n\t\t//var dogeneratebuffer = fs.existsSync(cachedbuffername)?false:true;\n\n\t\tif (fs.existsSync(cachedname)) {\n\t\t\t//console.log(\"[Map] Cache:\", x,y,z);\n\t\t\tvar data = fs.readFileSync(cachedname).toString();\n\n\t\t\t// if (dogeneratebuffer) this.generatebuffer(cachedbuffername, data);\n\t\t\t//\n\t\t\t// small error check... mapzen returns html/xml pages for all its errors\n\t\t\t// if (data.slice(0, 100).indexOf(\"<?xml\")<0){\n\t\t\treturn data;\n\t\t\t//}\n\t\t\tconsole.log(\"[Map] Cached slice has an error... loading again\");\n\t\t}\n\n\t\tconsole.log(\"[Map] Downloading from mapzen:\", x, y, z, \"...\");\n\t\tvar fileurl = \"http://vector.mapzen.com/osm/all/\" + z + \"/\" + x + \"/\" + y + \".topojson?api_key=vector-tiles-Qpvj7U4\";\n\t\tvar P = defineDreem.deferPromise();\n\n\t\tnodehttp.get(fileurl).then(function (data) {\n\n\t\t\ttry {\n\t\t\t\tvar thedata = JSON.parse(data);\n\n\t\t\t\tfs.writeFileSync(cachedname, data);\n\t\t\t\tconsole.log(\" -- done. Saved to cache: \", x, y, z, \"!\", cachedname);\n\t\t\t\t//if (dogeneratebuffer) this.generatebuffer(cachedbuffername, v);\n\n\t\t\t\tP.resolve(data);\n\t\t\t} catch (e) {\n\n\t\t\t\tconsole.log(\"Mapzen returned error:\", e);\n\t\t\t}\n\t\t\tP.resolve(\"{}\");\n\t\t});\n\n\t\treturn P;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/map/urlfetch.js\n// module id = 90\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/map/urlfetch.js?");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function ($ui$, view, label) {\n\t// Markdown display class - this element can display a small subset of the \"markdown\" syntax. See the SUPPORTED_MARKDOWN.md file in the docviewer for supported elements.\n\n\tthis.attributes = {\n\t\t// Body can be a single string or an array of strings - each string will be its own paragraph.\n\t\tbody: {},\n\n\t\t// alignment of the bodytext.\n\t\t// accepted values are \"left\", \"right\", \"justify\" and \"center\"\n\t\talign: Config({ type: String, value: \"left\" }),\n\n\t\t// Base fontsize - heading sizes will be multiples of this value.\n\t\tfontsize: Config({ type: Number, value: 14 }),\n\n\t\t// The color to use as the default color for this textblock.\n\t\tfontcolor: Config({ type: vec4, value: vec4(\"#202020\") })\n\t};\n\n\tthis.flexdirection = \"column\";\n\n\tvar markdown = this.constructor;\n\n\t// Create a set of visual elements for an array of textlines.\n\tthis.buildMarkdown = function (lines) {\n\t\tvar res = [];\n\n\t\tfor (var a in lines) {\n\t\t\tvar L = lines[a];\n\t\t\tvar LT = L.trim();\n\t\t\tif (LT.length == 0) continue;\n\n\t\t\tvar fontsize = this.fontsize;\n\t\t\tvar Margin = vec4(10, 10, 10, 10);\n\t\t\tif (LT.indexOf(\"######\") == 0) {\n\t\t\t\tL = LT.substr(7);\n\t\t\t\tfontsize = this.fontsize * (16. / 14.);\n\t\t\t} else if (LT.indexOf(\"#####\") == 0) {\n\t\t\t\tL = LT.substr(6);\n\t\t\t\tfontsize = this.fontsize * (18. / 14.);\n\t\t\t} else if (LT.indexOf(\"####\") == 0) {\n\t\t\t\tL = LT.substr(5);\n\t\t\t\tfontsize = this.fontsize * (22. / 14.);\n\t\t\t} else if (LT.indexOf(\"###\") == 0) {\n\t\t\t\tL = LT.substr(4);\n\t\t\t\tfontsize = this.fontsize * (25. / 14.);\n\t\t\t} else if (LT.indexOf(\"##\") == 0) {\n\t\t\t\tL = LT.substr(3);\n\t\t\t\tfontsize = this.fontsize * (27. / 14.);\n\t\t\t} else if (LT.indexOf(\"#\") == 0) {\n\t\t\t\tL = LT.substr(2);\n\t\t\t\tfontsize = this.fontsize * (30. / 14.);\n\t\t\t} else {\n\t\t\t\t// default text\n\t\t\t}\n\n\t\t\tres.push(label({ fgcolor: this.fontcolor, bgcolor: NaN, margin: Margin, text: L, fontsize: fontsize, multiline: true, align: this.align }));\n\t\t}\n\n\t\treturn res;\n\t};\n\n\tthis.render = function () {\n\t\tif (!this.body) return [];\n\t\tif (typeof this.body === \"array\" || this.body.length && typeof this.body !== \"string\") {\n\t\t\t// join parts and do markup\n\n\t\t\tvar lines = [];\n\t\t\tfor (var i = 0; i < this.body.length; i++) {\n\t\t\t\tvar splitted = this.body[i].split('\\n');\n\t\t\t\tfor (var j in splitted) {\n\t\t\t\t\tlines.push(splitted[j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.buildMarkdown(lines);;\n\t\t} else {\n\t\t\tif (typeof this.body === \"string\") {\n\n\t\t\t\tvar lines = [];\n\t\t\t\tvar splitted = this.body.split('\\n');\n\t\t\t\tfor (var j in splitted) {\n\t\t\t\t\tlines.push(splitted[j]);\n\t\t\t\t}return this.buildMarkdown(lines);\n\t\t\t} else {\n\t\t\t\treturn [label({ fgcolor: \"#303030\", bgcolor: NaN, text: \"unknown format for body!\\n\\n\" + this.body.toString(), multiline: true, fontsize: 12 })];\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [markdown({ align: \"right\", body: \"# Heading on the right\\nBodytext\" }), markdown({ align: \"justify\", body: \"## Justified text\\nShould space out neatly on the line.\" }), markdown({ align: \"left\", body: \"### Basic leftalignment\\nAs usual\" }), markdown({ align: \"center\", body: \"#### CENTER STAGE\\nText in the middle\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/markdown.js\n// module id = 91\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/markdown.js?");

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, icon, label, checkbox) {\n\t// A palatte is a container view with drag-dropable components\n\n\tthis.flexdirection = 'column';\n\tthis.alignitems = 'stretch';\n\tthis.overflow = 'scroll';\n\n\tthis.attributes = {\n\n\t\t// The items to render into the palette.  This is either an array of components, or an Object where\n\t\t// every key:value pair is a Section Name : components-array pair.\n\t\t// Each component is an Object with `label` and `desc` properties, in addition to one of\n\t\t// `image`, `icon`, or `text` properties.  `image` is the url or file path to an image, icon is the\n\t\t// FontAwesome icon identifier, and `text` is simply some printed text.\n\t\titems: Config({ type: Object, meta: 'hidden' }),\n\n\t\t// Function to call globally when testing if a palette item can be dropped onto another view.\n\t\t// This can also be defined on the individual components to override behavior.\n\t\t// The signature of the function is function(dropevent,view,item,origevent,dropview){}\n\t\tdropTest: Config({ type: Function }),\n\n\t\t// Function to call globally when dropping a palette item onto a view.\n\t\t// This can also be defined on the individual components to override behavior.\n\t\t// The signature of the function is function(dropevent,view,item,origevent,dropview){}\n\t\tdrop: Config({ type: Function })\n\t};\n\n\tdefineDreem.class(this, \"panel\", view, function () {\n\t\tthis.bgcolor = 'transparent';\n\t\tthis.padding = vec4(20, 10, 20, 10);\n\t\tthis.justifycontent = 'space-between';\n\t\tthis.attributes = {\n\t\t\t// The display mode.  `compact` mode displays all the items as compact icons in a grid in multiple columns.\n\t\t\t// `detail` mode displays items as a list in a single column, with extended description.\n\t\t\tmode: Config({ type: Enum('compact', 'detail'), value: 'compact' }),\n\n\t\t\t// Items to display in this panel.\n\t\t\titems: Config({ type: Array, value: [] }),\n\n\t\t\tdividercolor: Config({ type: vec4, meta: \"color\", value: \"#999\" }),\n\t\t\tdividermargin: 10,\n\n\t\t\tonmode: function onmode() {\n\t\t\t\tif (this.mode == 'compact') {\n\t\t\t\t\tthis.flexdirection = 'row';\n\t\t\t\t} else {\n\t\t\t\t\tthis.flexdirection = 'column';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.render = function () {\n\t\t\tvar views = [];\n\n\t\t\tfor (var i = 0; i < this.items.length; i++) {\n\t\t\t\tvar itemdef = this.items[i];\n\n\t\t\t\tvar item = this.outer.panelitem(itemdef);\n\n\t\t\t\titem.panel = this;\n\n\t\t\t\tif (this.mode == 'detail') {\n\n\t\t\t\t\tvar labels = [];\n\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\tlabels.push(label({ text: item.label, bold: true, bgcolor: NaN }));\n\t\t\t\t\t\titem.marginright = 5;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar desc = item.description || item.desc;\n\t\t\t\t\tif (desc) {\n\t\t\t\t\t\tlabels.push(label({ text: desc, bgcolor: 'transparent' }));\n\t\t\t\t\t}\n\n\t\t\t\t\tvar detail = view({\n\t\t\t\t\t\tflexdirection: 'row',\n\t\t\t\t\t\talignitems: 'stretch',\n\t\t\t\t\t\tbgcolor: 'transparent',\n\t\t\t\t\t\tpaddingbottom: 10,\n\t\t\t\t\t\tborderbottomwidth: i < this.items.length - 1 ? 1 : 0,\n\t\t\t\t\t\tbordercolor: this.dividercolor,\n\t\t\t\t\t\tmarginbottom: this.dividermargin\n\t\t\t\t\t}, item, view({\n\t\t\t\t\t\tbgcolor: 'transparent',\n\t\t\t\t\t\tmarginleft: this.dividermargin,\n\t\t\t\t\t\tflexdirection: 'column'\n\t\t\t\t\t}, labels));\n\n\t\t\t\t\tviews.push(detail);\n\t\t\t\t} else {\n\t\t\t\t\tviews.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn views;\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"divider\", view, function () {\n\t\tthis.justifycontent = \"space-between\";\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.margin = vec4(5, 5, 10, 0);\n\t\tthis.borderbottomwidth = 1;\n\t\tthis.paddingbottom = 3;\n\t\tthis.bordercolor = '#999';\n\t\tthis.attributes = {\n\t\t\tfontsize: 12,\n\t\t\ttext: Config({ type: String }),\n\t\t\tpanel: Config({ type: Object })\n\t\t};\n\t\tthis.render = function () {\n\t\t\tvar views = [];\n\t\t\tif (this.text) {\n\t\t\t\tviews.push(label({\n\t\t\t\t\tfgcolor: this.bordercolor,\n\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\ttext: this.text,\n\t\t\t\t\tfontsize: this.fontsize,\n\t\t\t\t\tmargintop: 5,\n\t\t\t\t\tmarginleft: 5\n\t\t\t\t}));\n\t\t\t}\n\t\t\tif (this.panel) {\n\t\t\t\tvar icn;\n\t\t\t\tif (this.panel.mode == \"compact\") {\n\t\t\t\t\ticn = \"list\";\n\t\t\t\t} else {\n\t\t\t\t\ticn = \"th-large\";\n\t\t\t\t}\n\n\t\t\t\tvar self = this;\n\n\t\t\t\tviews.push(checkbox({\n\t\t\t\t\tbgcolor: this.outer.bgcolor,\n\t\t\t\t\ttextcolor: this.bordercolor,\n\t\t\t\t\ttextactivecolor: this.bordercolor,\n\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tpaddingright: 7,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\ticon: icn,\n\t\t\t\t\tpickalpha: -1,\n\t\t\t\t\tonvalue: function onvalue(ev) {\n\t\t\t\t\t\tif (ev.value) {\n\t\t\t\t\t\t\tself.panel.mode = \"detail\";\n\t\t\t\t\t\t\tthis.icon = \"th-large\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.panel.mode = \"compact\";\n\t\t\t\t\t\t\tthis.icon = \"list\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn views;\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"panelview\", view, function () {\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.pickalpha = -1;\n\t});\n\n\tdefineDreem.class(this, \"panellabel\", label, function () {\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.pickalpha = -1;\n\t\tthis.fgcolor = \"#e4e4e4\";\n\t\tthis.padding = 0;\n\t\tthis.margin = 0;\n\t});\n\n\tdefineDreem.class(this, \"panelicon\", icon, function () {\n\t\tthis.bgcolor = 'transparent';\n\t\tthis.pickalpha = -1;\n\t\tthis.fgcolor = '#e4e4e4';\n\t\tthis.align = 'center';\n\t\tthis.padding = 0;\n\t\tthis.margin = 0;\n\t});\n\n\tdefineDreem.class(this, \"panelitem\", view, function () {\n\n\t\tthis.bgcolor = 'transparent';\n\t\tthis.flexdirection = 'column';\n\t\tthis.pickalpha = -1;\n\t\tthis.padding = 0;\n\t\tthis.margin = 0;\n\n\t\tthis.attributes = {\n\t\t\ttext: Config({ type: String }),\n\t\t\timage: Config({ type: String }),\n\t\t\ticon: Config({ type: String }),\n\t\t\tlabel: Config({ type: String }),\n\t\t\ticonfontsize: 40,\n\t\t\thovercolor: 'white',\n\t\t\thoverstate: false\n\t\t};\n\n\t\tthis.pointerhover = function () {\n\t\t\tthis.hoverstate = true;\n\t\t};\n\n\t\tthis.pointerout = function () {\n\t\t\tthis.hoverstate = false;\n\t\t};\n\n\t\tthis.pointerstart = function (event) {\n\t\t\tthis.startDrag(event, function () {\n\n\t\t\t\tvar pitem = this;\n\t\t\t\treturn this.buildClas({\n\n\t\t\t\t\tdrawtarget: 'color',\n\n\t\t\t\t\tposition: 'absolute',\n\n\t\t\t\t\tbgcolor: NaN,\n\n\t\t\t\t\twidth: this.iconfontsize,\n\t\t\t\t\theight: this.iconfontsize * 2,\n\n\t\t\t\t\tisDropTarget: function isDropTarget(v, ev) {\n\t\t\t\t\t\tvar droptest = true;\n\t\t\t\t\t\tif (pitem.dropTest) {\n\t\t\t\t\t\t\tdroptest = pitem.dropTest(ev, v, pitem, event, this);\n\t\t\t\t\t\t} else if (this.outer && this.outer.dropTest) {\n\t\t\t\t\t\t\tdroptest = this.outer.dropTest(ev, v, pitem, event, this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!droptest) {\n\t\t\t\t\t\t\tthis.screen.pointer.cursor = 'no-drop';\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.screen.pointer.cursor = 'copy';\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\tatDrop: function atDrop(v, ev) {\n\t\t\t\t\t\tif (pitem.drop) {\n\t\t\t\t\t\t\tpitem.drop(ev, v, pitem, event, this);\n\t\t\t\t\t\t} else if (this.outer && this.outer.drop) {\n\t\t\t\t\t\t\tthis.outer.drop(ev, v, pitem, event, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t};\n\n\t\tthis.buildClas = function (args) {\n\n\t\t\tif (!args) {\n\t\t\t\targs = { bgcolor: 'transparent' };\n\t\t\t}\n\n\t\t\tvar clas = this.outer.panelview;\n\n\t\t\tif (this.image) {\n\t\t\t\targs.bgimage = this.image;\n\t\t\t}\n\n\t\t\tif (this.bgimage) {\n\t\t\t\targs.bgimage = this.bgimage;\n\t\t\t}\n\n\t\t\tif (this.text) {\n\t\t\t\tclas = this.outer.panellabel;\n\t\t\t\targs.fontsize = this.iconfontsize;\n\t\t\t\targs.text = this.text;\n\t\t\t}\n\n\t\t\tif (this.icon) {\n\t\t\t\tclas = this.outer.panelicon;\n\t\t\t\targs.fontsize = this.iconfontsize;\n\t\t\t\targs.icon = this.icon;\n\t\t\t}\n\n\t\t\tif (this.hoverstate) {\n\t\t\t\targs.fgcolor = this.hovercolor;\n\t\t\t}\n\n\t\t\treturn clas(args);\n\t\t};\n\n\t\tthis.render = function () {\n\t\t\tvar views = [];\n\n\t\t\tviews.push(this.buildClas());\n\n\t\t\t//if (this.hoverstate) {\n\t\t\t//\tviews.push(label({text:this.label, bg:0}))\n\t\t\t//}\n\n\t\t\treturn views;\n\t\t};\n\t});\n\n\tthis.render = function () {\n\t\tif (Array.isArray(this.items)) {\n\t\t\treturn this.panel({ items: this.items });\n\t\t}\n\n\t\tvar views = [];\n\n\t\tif (!this.items) {\n\t\t\treturn views;\n\t\t}\n\n\t\tfor (var section in this.items) {\n\n\t\t\tvar items = this.items[section];\n\t\t\tvar pan = this.panel({ items: items });\n\n\t\t\tvar divider = this.divider({ text: section, panel: pan });\n\n\t\t\tviews.push(divider);\n\t\t\tviews.push(pan);\n\t\t}\n\n\t\treturn views;\n\t};\n\n\tvar palette = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn palette({\n\t\t\t\twidth: 300,\n\t\t\t\tbgcolor: \"#4e4e4e\",\n\t\t\t\titems: { Views: [{ label: 'Flask', icon: 'flask', desc: 'A flask icon' }, { label: 'File',\n\t\t\t\t\t\ticon: 'file',\n\t\t\t\t\t\tdesc: 'A file',\n\t\t\t\t\t\tdrop: function drop(v) {\n\t\t\t\t\t\t\tconsole.log('file dropped using own drop method onto', v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, { label: 'Text',\n\t\t\t\t\t\ttext: 'Aa',\n\t\t\t\t\t\tdesc: 'A text label',\n\t\t\t\t\t\tdropTest: function dropTest(v) {\n\t\t\t\t\t\t\tconsole.log(this, 'cannot be dropped onto', v);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\tdropTest: function dropTest(ev, v, item) {\n\t\t\t\t\tconsole.log('test', item, 'againt', v);\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tdrop: function drop(ev, v, item, orig) {\n\t\t\t\t\tconsole.log('dropped', item, 'onto', v, '@', ev.position, 'started @', orig.position);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/palette.js\n// module id = 92\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/palette.js?");

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, checkbox, foldcontainer, label, icon, button, scrollbar, textbox, numberbox, $widgets$, colorpicker, radiogroup) {\n\t// internal\n\n\tthis.attributes = {\n\t\ttarget: Config({ type: Object }),\n\t\tproperty: Config({ type: Object }),\n\t\tvalue: Config({ type: Object }),\n\t\tpropertyname: Config({ type: String, value: \"\" }),\n\t\tfontsize: Config({ type: float, value: 13 }),\n\t\tshowunknown: Config({ type: bool, value: false }),\n\t\tcallback: Config({ type: Function, value: function value(val, ed, commit) {\n\t\t\t\tvar t = ed.target;\n\t\t\t\tif (typeof t === 'string') {\n\t\t\t\t\tt = ed.find(t);\n\t\t\t\t}\n\t\t\t\tif (t && ed.propertyname) {\n\t\t\t\t\t// console.log('Set \"', this.propertyname, '\" to \"', val, '\" (', typeof(val), ') on: ', t);\n\t\t\t\t\tt[ed.propertyname] = val;\n\t\t\t\t}\n\t\t\t} })\n\t};\n\n\tthis.hardrect = {\n\t\tcolor: function color() {\n\t\t\tvar col1 = vec3(\"#4e4e4e\");\n\t\t\tvar col2 = vec3(\"#4e4e4e\");\n\t\t\treturn vec4(mix(col1, col2, 1.0 - pow(abs(uv.y), 4.0)), 1.0);\n\t\t}\n\t};\n\n\tthis.margin = 0;\n\tthis.padding = 0;\n\tthis.border = 0;\n\tthis.flexdirection = \"row\";\n\tthis.flex = 1;\n\tthis.bordercolor = \"gray\";\n\tthis.fgcolor = \"#c0c0c0\";\n\n\tthis.style = {\n\t\tradiogroup: {\n\t\t\tmargin: vec4(2, 0, 2, 5)\n\t\t},\n\t\t$_color: {\n\t\t\twidth: 302, title: \"colorpicker\", bordercolor: \"#383838\", icon: \"paint-brush\", collapsed: true\n\t\t},\n\t\t$_colorview: {\n\t\t\tbgcolor: NaN, width: 300, flexdirection: \"column\"\n\t\t},\n\t\t$_vec4: {\n\t\t\tflex: 1, decimals: 3, stepvalue: 1.00, margin: 2\n\t\t},\n\t\t$_vec3: {\n\t\t\tflex: 1, decimals: 3, stepvalue: 1.00, margin: 2\n\t\t},\n\t\t$_vec2: {\n\t\t\tflex: 1, decimals: 3, stepvalue: 1.00\n\t\t},\n\t\t$_floatlike: {\n\t\t\tdecimals: 3, stepvalue: 0.01, margin: 2, flex: 1\n\t\t}\n\t};\n\n\tthis.render = function () {\n\t\tvar _label;\n\n\t\tvar typename = this.property.type ? this.property.type.name : \"\";\n\t\tvar meta = this.property.meta ? this.property.meta : \"\";\n\n\t\tvar editor;\n\n\t\tif (typename == \"Enum\") {\n\n\t\t\teditor = radiogroup({\n\t\t\t\tmargin: vec4(2, 0, 2, 5),\n\t\t\t\tvalues: this.property.type.values,\n\t\t\t\tcurrentvalue: this.value,\n\t\t\t\toncurrentvalue: function (ev, val) {\n\t\t\t\t\tthis.callback(val, this, true);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t} else if (typename == \"vec4\") {\n\n\t\t\tif (this.property.meta == \"color\") {\n\n\t\t\t\teditor = foldcontainer({\n\t\t\t\t\tclass: 'color',\n\t\t\t\t\ticon: 'paint-brush',\n\t\t\t\t\tbasecolor: vec4(this.value[0], this.value[1], this.value[2], 1.0)\n\t\t\t\t}, view({ class: 'color_view' }, colorpicker({\n\t\t\t\t\tvalue: this.value,\n\t\t\t\t\tvaluechange: function (val) {\n\t\t\t\t\t\tthis.callback(val, this);\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tpointerend: function (ev) {\n\t\t\t\t\t\tthis.callback(\"color\", null, true);\n\t\t\t\t\t}.bind(this)\n\t\t\t\t})));\n\t\t\t} else {\n\t\t\t\tvar t1 = \"\";\n\t\t\t\tvar t2 = \"\";\n\t\t\t\tvar t3 = \"\";\n\t\t\t\tvar t4 = \"\";\n\t\t\t\tif (this.property.meta == \"tlbr\") {\n\t\t\t\t\tt1 = \"top\";\n\t\t\t\t\tt2 = \"left\";\n\t\t\t\t\tt3 = \"bottom\";\n\t\t\t\t\tt4 = \"right\";\n\t\t\t\t} else if (this.property.meta == \"ltrb\") {\n\t\t\t\t\tt1 = \"left\";\n\t\t\t\t\tt2 = \"top\";\n\t\t\t\t\tt3 = \"right\";\n\t\t\t\t\tt4 = \"bottom\";\n\t\t\t\t}\n\t\t\t\teditor = view({ bgcolor: NaN }, numberbox({ title: t1, class: 'vec4', value: this.value[0],\n\t\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\t\tif (!v) {\n\t\t\t\t\t\t\tthis.callback(\"vec4a\", null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\t\tthis.value = vec4(v, this.value[1], this.value[2], this.value[3]);\n\t\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t\t}.bind(this) }), numberbox({ title: t2, class: 'vec4', value: this.value[1],\n\t\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\t\tif (!v) {\n\t\t\t\t\t\t\tthis.callback(\"vec4b\", null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\t\tthis.value = vec4(this.value[0], v, this.value[2], this.value[3]);\n\t\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t\t}.bind(this) }), numberbox({ title: t3, class: 'vec4', value: this.value[2],\n\t\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\t\tif (!v) {\n\t\t\t\t\t\t\tthis.callback(\"vec4c\", null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\t\tthis.value = vec4(this.value[0], this.value[1], v, this.value[3]);\n\t\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t\t}.bind(this) }), numberbox({ title: t4, class: 'vec4', value: this.value[3],\n\t\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\t\tif (!v) {\n\t\t\t\t\t\t\tthis.callback(\"vec4d\", null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\t\tthis.value = vec4(this.value[0], this.value[1], this.value[2], v);\n\t\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t\t}.bind(this) }));\n\t\t\t}\n\t\t} else if (typename == \"vec3\") {\n\n\t\t\tvar t1 = \"\";\n\t\t\tvar t2 = \"\";\n\t\t\tvar t3 = \"\";\n\t\t\tif (this.property.meta == \"xyz\") {\n\t\t\t\tt1 = \"X\";\n\t\t\t\tt2 = \"Y\";\n\t\t\t\tt3 = \"Z\";\n\t\t\t}\n\n\t\t\teditor = view({ bgcolor: NaN }, numberbox({ title: t1, class: 'vec3', value: this.value[0],\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"vec3a\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.value = vec3(v, this.value[1], this.value[2]);\n\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t}.bind(this) }), numberbox({ title: t2, class: 'vec3', value: this.value[1],\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"vec3b\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.value = vec3(this.value[0], v, this.value[2]);\n\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t}.bind(this) }), numberbox({ title: t3, class: 'vec3', value: this.value[2],\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"vec3c\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.value = vec3(this.value[0], this.value[1], v);\n\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t}.bind(this) }));\n\t\t} else if (typename == \"vec2\") {\n\t\t\teditor = view({ bgcolor: NaN }, numberbox({ class: 'vec2', value: this.value[0], margin: 2,\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"vec2a\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.value = vec2(v, this.value[1]);\n\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t}.bind(this) }), numberbox({ class: 'vec2', value: this.value[1], margin: 2,\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"vec2b\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.value = vec2(this.value[0], v);\n\t\t\t\t\tthis.callback(this.value, this);\n\t\t\t\t}.bind(this) }));\n\t\t} else if (typename == \"FloatLike\" || typename == \"float32\") {\n\t\t\teditor = view({ bgcolor: NaN }, numberbox({ class: 'floatlike',\n\t\t\t\tminvalue: this.property.minvalue,\n\t\t\t\tmaxvalue: this.property.maxvalue,\n\t\t\t\tvalue: this.value,\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"float\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v) {\n\t\t\t\t\tthis.callback(v, this);\n\t\t\t\t}.bind(this)\n\t\t\t}));\n\t\t} else if (typename == \"IntLike\" || typename == \"int32\") {\n\t\t\teditor = view({ bgcolor: NaN }, numberbox({\n\t\t\t\tflex: 1,\n\t\t\t\tminvalue: this.property.minvalue,\n\t\t\t\tmaxvalue: this.property.maxvalue,\n\t\t\t\tfontsize: this.fontsize,\n\t\t\t\tvalue: this.value,\n\t\t\t\tstepvalue: 1,\n\t\t\t\tmargin: 2,\n\t\t\t\tontextfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"int\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v) {\n\t\t\t\t\tthis.callback(v, this);\n\t\t\t\t}.bind(this)\n\t\t\t}));\n\t\t} else if (typename == \"String\" || typeof typename === \"undefined\") {\n\t\t\teditor = view({ bgcolor: NaN }, textbox({\n\t\t\t\tflex: 1,\n\t\t\t\tfontsize: this.fontsize,\n\t\t\t\tfgcolor: \"#d0d0d0\",\n\t\t\t\tbgcolor: \"#505050\",\n\t\t\t\tvalue: this.value ? this.value : '',\n\t\t\t\tpadding: 4,\n\t\t\t\tborderradius: 0,\n\t\t\t\tborderwidth: 1,\n\t\t\t\tbordercolor: \"gray\",\n\t\t\t\tmargin: 2,\n\t\t\t\tmultiline: false,\n\t\t\t\tonfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"string\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.callback(v, this);\n\t\t\t\t}.bind(this)\n\t\t\t}));\n\t\t} else if (typename == \"Boolean\" || typename == \"BoolLike\" || typename == \"boolean\" || typename == \"bool\") {\n\n\t\t\teditor = checkbox({\n\t\t\t\tflex: 0,\n\t\t\t\tfgcolor: \"white\",\n\t\t\t\ttextcolor: this.fgcolor,\n\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\thovercolor1: \"transparent\",\n\t\t\t\thovercolor2: \"transparent\",\n\t\t\t\tpressedcolor1: \"transparent\",\n\t\t\t\tpressedcolor2: \"transparent\",\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\tpickalpha: -1,\n\t\t\t\tvalue: this.value,\n\t\t\t\tpadding: 4,\n\t\t\t\tborderradius: 0,\n\t\t\t\tborderwidth: 1,\n\t\t\t\tbordercolor: \"#262626\",\n\t\t\t\tmargin: 2,\n\t\t\t\tonvalue: function (ev, val) {\n\t\t\t\t\tthis.callback(val, this, true);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t} else if (typename == \"Object\" && meta == \"font\") {\n\t\t\teditor = checkbox({ icon: 'circle', fontsize: this.fontsize, margin: 4, text: \"[FONT PICKER]\", bgcolor: NaN, textcolor: this.fgcolor, borderwidth: 0 });\n\t\t} else if (typename == \"Object\" && meta == \"texture\") {\n\t\t\teditor = view({ bgcolor: NaN }, button({\n\t\t\t\ticon: 'folder-open',\n\t\t\t\tfontsize: this.fontsize,\n\t\t\t\tmargin: 4,\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\thovercolor1: \"transparent\",\n\t\t\t\thovercolor2: \"transparent\",\n\t\t\t\tpickalpha: -1,\n\t\t\t\ttextactivecolor: \"white\",\n\t\t\t\ttextcolor: this.fgcolor,\n\t\t\t\tborderwidth: 0,\n\t\t\t\tclick: function () {\n\t\t\t\t\tvar input = document.createElement('input');\n\t\t\t\t\tinput.type = \"file\";\n\t\t\t\t\tinput.onchange = function (changeEvent) {\n\t\t\t\t\t\tvar files = changeEvent.target.files;\n\t\t\t\t\t\tthis.callback(files, this, \"file\");\n\t\t\t\t\t}.bind(this);\n\t\t\t\t\tinput.click();\n\t\t\t\t}.bind(this)\n\t\t\t}), textbox({\n\t\t\t\tflex: 1,\n\t\t\t\tfontsize: this.fontsize,\n\t\t\t\tfgcolor: \"#d0d0d0\",\n\t\t\t\tbgcolor: \"#505050\",\n\t\t\t\tvalue: this.value ? this.value : '',\n\t\t\t\tpadding: 4,\n\t\t\t\tborderradius: 0,\n\t\t\t\tborderwidth: 1,\n\t\t\t\tbordercolor: \"gray\",\n\t\t\t\tmargin: 2,\n\t\t\t\tmultiline: false,\n\t\t\t\tonfocus: function (ev, v, o) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\tthis.callback(\"texture\", null, true);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t\tonvalue: function (ev, v, o) {\n\t\t\t\t\tthis.callback(v, this);\n\t\t\t\t}.bind(this)\n\t\t\t}));\n\t\t} else {\n\t\t\tif (!this.showunknown || !this.property) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconsole.log('UNKNOWN PROPERTY TYPE NAME', typename);\n\t\t\teditor = label({ margin: 4, text: typename + \" \" + meta, bgcolor: NaN, fgcolor: this.fgcolor });\n\t\t}\n\n\t\tif (!editor) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar proplabel = label((_label = { bgcolor: NaN, margin: 4, fontsize: this.fontsize, flex: 0.2, text: this.propertyname }, _defineProperty(_label, \"bgcolor\", NaN), _defineProperty(_label, \"fgcolor\", this.fgcolor), _label));\n\n\t\treturn [proplabel, editor];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/propeditor.js\n// module id = 93\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/propeditor.js?");

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, foldcontainer, view, label, scrollbar, textbox, $widgets$, propeditor) {\n\t// The property viewer allows for the visual inspection and manipulation of properties on DreemGL objects\n\n\tthis.attributes = {\n\n\t\t// The target who's properties to view.  Can be either a DreemGL object or a named reference to one.\n\t\ttarget: Config({ type: Object, value: \"\" }),\n\t\t// Shows properties for unknown property types\n\t\tshowunknown: Config({ type: boolean, value: false }),\n\n\t\t// internal, Callback used by the property editor to actually set properties.\n\t\tcallback: Config({ type: Function })\n\t};\n\n\tthis.borderwidth = 0;\n\tthis.flexdirection = \"column\";\n\tthis.margin = 0;\n\tthis.clearcolor = \"#4e4e4e\";\n\tthis.padding = 0;\n\tthis.bgcolor = NaN;\n\n\tthis.uppercaseFirst = function (inp) {\n\t\tif (!inp || inp.length == 0) return inp;\n\t\treturn inp.charAt(0).toUpperCase() + inp.slice(1);\n\t};\n\n\tthis.render = function () {\n\t\tvar c = this.target;\n\t\tif (typeof this.target === 'string') {\n\t\t\tc = this.find(this.target);\n\t\t}\n\n\t\tif (!c) return [];\n\n\t\tvar res = [];\n\t\tvar keysgroups = {};\n\n\t\tfor (var key in c._attributes) {\n\t\t\tvar attr = c._attributes[key];\n\n\t\t\tvar typename = \"NONE\";\n\t\t\tvar meta = attr.meta;\n\n\t\t\tif (attr.type) {\n\t\t\t\ttypename = attr.type.name;\n\t\t\t\tif (attr.type.meta) {\n\t\t\t\t\tmeta = attr.type.meta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (key == \"layout\") {\n\t\t\t\tmeta = \"hidden\";\n\t\t\t}\n\n\t\t\tif (typename != \"NONE\" && typename != \"Event\" && meta != \"hidden\") {\n\t\t\t\tif (!keysgroups[attr.group]) keysgroups[attr.group] = [];\n\t\t\t\tkeysgroups[attr.group].push(key);\n\t\t\t}\n\t\t}\n\n\t\tfor (var group in keysgroups) {\n\t\t\tvar groupcontent = [];\n\n\t\t\tkeys = keysgroups[group];\n\n\t\t\tkeys.sort();\n\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tvar thevalue = c[\"_\" + key];\n\t\t\t\tvar attr = c._attributes[key];\n\t\t\t\tvar props = {\n\t\t\t\t\ttarget: this.target,\n\t\t\t\t\tvalue: thevalue,\n\t\t\t\t\tproperty: attr,\n\t\t\t\t\tpropertyname: key,\n\t\t\t\t\tfontsize: this.fontsize,\n\t\t\t\t\tshowunknown: this.showunknown\n\t\t\t\t};\n\n\t\t\t\tif (this.callback) {\n\t\t\t\t\tprops.callback = this.callback;\n\t\t\t\t}\n\t\t\t\tgroupcontent.push(propeditor(props));\n\t\t\t}\n\n\t\t\tres.push(foldcontainer({\n\t\t\t\tcollapsed: true,\n\t\t\t\tbasecolor: this.clearcolor,\n\t\t\t\tautogradient: false,\n\t\t\t\ticon: undefined,\n\t\t\t\ttitle: this.uppercaseFirst(group),\n\t\t\t\tbordercolor: \"#565656\",\n\t\t\t\tfontsize: this.fontsize\n\t\t\t}, view({\n\t\t\t\tflexdirection: \"column\",\n\t\t\t\tflex: 1,\n\t\t\t\tmargin: 0,\n\t\t\t\tpadding: 0,\n\t\t\t\tbgcolor: NaN\n\t\t\t}, groupcontent)));\n\n\t\t\tres[res.length - 1].collapsed = function () {\n\t\t\t\twindow.mydbg = 1;\n\t\t\t};\n\t\t}\n\t\treturn res;\n\t};\n\n\tvar propviewer = this.constructor;\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [label({ height: 30, width: 300,\n\t\t\t\tname: \"inspectable\",\n\t\t\t\ttext: \"Inspect me below!\",\n\t\t\t\tfgcolor: 'red',\n\t\t\t\tbordercolor: 'pink',\n\t\t\t\tborderwidth: 3 }), propviewer({ y: 40, width: 300, height: 700, target: \"inspectable\", overflow: \"scroll\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/propviewer.js\n// module id = 94\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/propviewer.js?");

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, label, button, scrollbar, textbox, icon) {\n\n\tthis.attributes = {\n\t\tvalues: Config({ type: Object, value: [] }),\n\t\tcurrentvalue: Config({ type: String, value: \"\" }),\n\t\tfgcolor: Config({ type: vec4, value: vec4(\"white\"), meta: \"color\" }),\n\t\tfontsize: Config({ type: float, value: 12, meta: \"fontsize\" })\n\t};\n\n\tthis.flexdirection = \"row\";\n\tthis.bgcolor = \"#262626\";\n\tthis.title = \"\";\n\tthis.borderradius = 5;\n\n\tthis.render = function () {\n\t\tvar res = [];\n\n\t\tif (this.title && this.title.length > 0) {\n\t\t\tres.push(view({ bgcolor: this.bordercolor, margin: 0, borderradius: vec4(4, 1, 1, 4), padding: 4 }, label({ name: \"thetitle\", margin: vec4(5, 0, 5, 0), align: \"right\", bgcolor: NaN, text: this.title, flex: 1, fontsize: this.fontsize, fgcolor: this.fgcolor })));\n\t\t}\n\n\t\tvar radio = this;\n\t\tfor (var i = 0; i < this.values.length; i++) {\n\t\t\tvar v = this.values[i] ? this.values[i].toString() : \"undefined\";\n\t\t\tif (v == this.currentvalue || (v == undefined || v == \"undefined\") && !this.currentvalue) {\n\n\t\t\t\tres.push(view({\n\t\t\t\t\talignitems: \"center\",\n\t\t\t\t\tbgcolor: \"#3b3b3b\",\n\t\t\t\t\tpadding: 2,\n\n\t\t\t\t\tborderradius: i == this.values.length - 1 ? vec4(1, 4, 4, 1) : vec4(1),\n\t\t\t\t\tmargin: i == this.values.length - 1 ? vec4(2, 2, 2, 0) : vec4(2, 2, 0, 2)\n\n\t\t\t\t}, label({\n\t\t\t\t\tbold: true,\n\t\t\t\t\ttext: v && v.trim().length > 0 ? v : \"undefined\",\n\t\t\t\t\tbgcolor: NaN,\n\t\t\t\t\tmargin: vec4(5, 0, 5, 0),\n\t\t\t\t\tfgcolor: this.fgcolor,\n\t\t\t\t\tfontsize: this.fontsize\n\t\t\t\t})));\n\t\t\t} else {\n\t\t\t\tres.push(button({\n\t\t\t\t\tbgcolor: \"#3b3b3b\",\n\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\tpadding: 2,\n\t\t\t\t\tbuttoncolor1: \"#3b3b3b\",\n\t\t\t\t\tbuttoncolor2: \"#3b3b3b\",\n\t\t\t\t\tinternalmargin: vec4(5, 0, 5, 0),\n\t\t\t\t\tborderradius: i == this.values.length - 1 ? vec4(1, 4, 4, 1) : vec4(1),\n\t\t\t\t\tmargin: i == this.values.length - 1 ? vec4(2, 2, 2, 2) : vec4(2, 2, 0, 2),\n\t\t\t\t\tfgcolor: \"#909090\",\n\t\t\t\t\tbold: false,\n\n\t\t\t\t\ttext: v === undefined ? \"unD\" : v.trim().length > 0 ? v : \"AAA\", pointerstart: function pointerstart() {\n\t\t\t\t\t\tradio.currentvalue = this.text == \"undefined\" || this.text == \"unD\" ? undefined : this.text;\n\t\t\t\t\t}, fontsize: this.fontsize\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/radiogroup.js\n// module id = 95\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/radiogroup.js?");

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, label, button, scrollbar, textbox, icon) {\n\tthis.attributes = {\n\t\tsearchtextlabel: \"search\",\n\t\tfontsize: 12,\n\t\tvalue: \"\"\n\t};\n\n\tthis.margin = 4;\n\tthis.bgcolor = \"#3b3b3b\";\n\n\tthis.flexdirection = \"row\";\n\tthis.bordercolor = \"#505050\";\n\tthis.borderwidth = 2;\n\tthis.borderradius = 5;\n\tthis.dofocus = function () {\n\n\t\tvar tb = this.findChild(\"thetext\");\n\t\tif (tb) {\n\t\t\tif (tb.focus) {\n\t\t\t\tthis.find(\"thelabel\").visible = false;\n\t\t\t} else {\n\t\t\t\tif (this.value.trim() == \"\") {\n\t\t\t\t\tthis.find(\"thelabel\").visible = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.find(\"thelabel\").visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tthis.justifycontent = \"center\";\n\n\t// forward the focus\n\tthis.focus = function () {\n\t\tif (this._focus) this.find(\"thetext\").focus = true;\n\t};\n\n\tthis.render = function () {\n\t\treturn [textbox({\n\t\t\tmultiline: false,\n\t\t\tborderradius: 15,\n\t\t\tname: \"thetext\",\n\t\t\tvalue: function value() {\n\t\t\t\tthis.parent.value = this.value;\n\t\t\t},\n\t\t\tflex: 1,\n\t\t\tbgcolor: \"#3b3b3b\",\n\t\t\tfgcolor: \"white\",\n\t\t\tfocus: function () {\n\t\t\t\tthis.dofocus();\n\t\t\t}.bind(this)\n\t\t}), label({ name: \"thelabel\", position: \"absolute\", margin: 7, text: this.searchtextlabel, fontsize: this.fontsize, bgcolor: NaN, fgcolor: \"#707070\" }), icon({ icon: \"search\", margin: 6, fgcolor: \"#707070\", alignself: \"center\" })];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/searchbox.js\n// module id = 96\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/searchbox.js?");

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function ($ui$, view, label) {\n\n\t// internal, Slide viewer is an automatic slide viewer that turns child nodes into slides\n\t// use attributes named 'slidetitle' on a child to set the slide title1\n\tthis.attributes = {\n\t\t// the width of a slide\n\t\tslidewidth: 1024,\n\t\t// the height of a slide\n\t\tslideheight: 1024,\n\t\t// the margin between slides\n\t\tslidemargin: 10,\n\t\t// the current page\n\t\tpage: Config({ type: int, persist: true, value: 0 }),\n\t\t// animate the scroll\n\t\tscroll: Config({ motion: 'inoutsine', duration: 0.5 }),\n\t\t// persist the postiion\n\t\tpos: Config({ persist: true })\n\n\t\t// the class for a nested slide, its automatically wrapped around children\n\t};defineDreem.class(this, 'slide', function ($ui$, view) {\n\t\tthis.borderradius = vec4(10);\n\t\tthis.borderwidth = 0;\n\t\tthis.bordercolor = vec4(\"blue\");\n\t\tthis.bgcolor = \"white\";\n\n\t\tthis.flex = 0;\n\t\tthis.viewport = '2d';\n\t\tthis.overflow = 'hidden';\n\t\tthis.padding = vec4(6);\n\n\t\tthis.viewportblend = function () {\n\t\t\tthis.color = function () {\n\t\t\t\t//return 'red'\n\n\t\t\t\tvar col = texture.sample(mesh.xy);\n\t\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t\t};\n\t\t};\n\n\t\tthis.render = function () {\n\t\t\treturn view({\n\t\t\t\thardrect: {\n\t\t\t\t\tcolor: function color() {\n\t\t\t\t\t\treturn vec4(1 - mesh.y * 0.4, 1 - mesh.y * 0.4, 1 - mesh.y * 0.2, 1);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t//bgcolor: 'blue',\n\t\t\t\t//borderradius:vec4(10),\n\t\t\t\tflex: 1,\n\t\t\t\tflexdirection: 'column'\n\t\t\t}, label({\n\t\t\t\tmargin: [10, 10, 10, 10],\n\t\t\t\tfgcolor: 'black',\n\t\t\t\tbgcolor: NaN,\n\t\t\t\tfontsize: 50,\n\t\t\t\talignself: 'center',\n\t\t\t\ttext: this.title\n\t\t\t}), view({\n\t\t\t\tflex: 1,\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\tpadding: vec4(10)\n\t\t\t}, this.constructor_children, 0), 0);\n\t\t};\n\t});\n\n\tthis.page = function (event) {\n\t\tif (!this.children) return;\n\t\tif (event.mark) return;\n\t\t// set the scroll from the page\n\t\tif (this._page < 0) this._page = 0;\n\t\tvar len = this.constructor_children.length;\n\t\tif (this._page > len - 1) this._page = len - 1;\n\n\t\tthis.scroll = vec2(this.page * (this.slidewidth + this.slidemargin * 2), 0);\n\t};\n\n\tthis.scroll = function (event) {\n\t\tvar page = ceil(event.value[0] / (this.slidewidth + this.slidemargin * 2));\n\n\t\tif (event.animate) {} else if (event.mark) {\n\t\t\tthis._page = page;\n\t\t} else {\n\t\t\tthis.page = Mark(page);\n\t\t}\n\t};\n\n\tthis.flexwrap = \"nowrap\";\n\tthis.constructor.slide = this.slide;\n\tthis.boundscheck = true;\n\n\tthis.keydown = function (key) {\n\t\t// alright we have a keydown!\n\t\tif (key.name == 'leftarrow') {\n\t\t\t// we need to animate to the left\n\t\t\tif (this.page > 0) this.page--;\n\t\t} else if (key.name == 'rightarrow') {\n\t\t\t// animate to the right\n\t\t\tif (this.page < this.constructor_children.length - 1) this.page++;\n\t\t}\n\t};\n\n\t// deny focus loss\n\tthis.focuslost = function () {\n\t\tthis.screen.setFocus(this);\n\t};\n\n\tthis.init = function () {\n\t\tthis.screen.setFocus(this);\n\t};\n\n\tthis.render = function () {\n\t\t// ok lets render all our slides using our container slide\n\t\tvar count = 0;\n\t\treturn this.constructor_children.map(function (item) {\n\t\t\tcount++;\n\t\t\treturn this.slide({\n\t\t\t\tflexdirection: 'column',\n\t\t\t\twidth: this.slidewidth,\n\t\t\t\tmargin: this.slidemargin,\n\t\t\t\theight: this.slideheight,\n\t\t\t\ttitle: item.slidetitle\n\t\t\t}, item);\n\t\t}.bind(this));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/slideviewer.js\n// module id = 97\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/slideviewer.js?");

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (requireDreem, $ui$, view, icon) {\n\t// A table is a container view that lays out it's children in either rows or columns.\n\t// Individual rows and columns can be configured via styles and are given names and style classes conforming to\n\t// either `row#` or `column#` style where `#` is the index of the particular row or column.\n\t// <br/><a href=\"/examples/tables\">examples &raquo;</a>\n\n\tthis.attributes = {\n\t\t// The number of rows in the table (not compatible with `columns`)\n\t\trows: -1,\n\n\t\t// The number of columns in the table (not compatible with `rows`)\n\t\tcolumns: -1,\n\n\t\t// internal, The number of rows or columns in the table (set automatically via `rows` or `columns`)\n\t\tsections: 1,\n\n\t\t// justifycontent passed to the inner rows or columns\n\t\tjustifysection: Config({ group: \"layout\", type: Enum('', 'flex-start', 'center', 'flex-end', 'space-between', 'space-around'), value: \"\" }),\n\n\t\t// alignitems passed to the inner rows or columns\n\t\talignsection: Config({ group: \"layout\", type: Enum('flex-start', 'center', 'flex-end', 'stretch'), value: \"stretch\" })\n\t};\n\n\tthis.onrows = function (ev, v, o) {\n\t\tthis._columns = -1;\n\t\tthis.flexdirection = \"column\";\n\t\tthis.sections = v;\n\t\tthis.relayout();\n\t};\n\n\tthis.oncolumns = function (ev, v, o) {\n\t\tthis._rows = -1;\n\t\tthis.flexdirection = \"row\";\n\t\tthis.sections = v;\n\t\tthis.relayout();\n\t};\n\n\tthis.render = function () {\n\n\t\tvar rows = [];\n\n\t\tfor (var i = 0; i < this.sections; i++) {\n\t\t\tvar views = [];\n\t\t\tfor (var j = i % this.sections; j < this.constructor_children.length; j += this.sections) {\n\t\t\t\tvar child = this.constructor_children[j];\n\t\t\t\tif (child) {\n\t\t\t\t\tviews.push(child);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar sectionflex = this.flexdirection === \"column\" ? \"row\" : \"column\";\n\t\t\tvar sectionname = sectionflex + i;\n\n\t\t\trows.push(this.rowcol({\n\t\t\t\tflex: 1,\n\t\t\t\tname: sectionname,\n\t\t\t\tclass: sectionname,\n\t\t\t\talignitems: this.alignsection,\n\t\t\t\tjustifycontent: this.justifysection,\n\t\t\t\tflexdirection: sectionflex\n\t\t\t}, views));\n\t\t}\n\n\t\treturn rows;\n\t};\n\n\tdefineDreem.class(this, \"rowcol\", \"$ui/view\", function () {});\n\n\tvar table = this.constructor;\n\t// Basic usage of the table.\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [table({\n\t\t\t\twidth: 200,\n\t\t\t\tcolumns: 3,\n\t\t\t\talignsection: \"center\",\n\t\t\t\tstyle: {\n\t\t\t\t\trowcol: {\n\t\t\t\t\t\tborderwidth: vec4(0, 1, 0, 0),\n\t\t\t\t\t\tbordercolor: \"white\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, icon({ icon: \"facebook\" }), icon({ icon: \"digg\" }), icon({ icon: \"cc\" }), icon({ icon: \"envelope\" }), icon({ icon: \"empire\" }), icon({ icon: \"eye\" }), icon({ icon: \"circle\" }), icon({ icon: \"circle-o\" }), icon({ icon: \"star\" }), icon({ icon: \"star-o\" }))];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/table.js\n// module id = 98\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/table.js?");

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function () {\n\n\tthis.fgcolor = 'black';\n\tthis.cursor = 'move';\n\n\tthis.TIME_SCALE = 86400000; // millis to days\n\n\tthis.attributes = {\n\t\tzoom: wire('this.parent.zoom'),\n\t\tscroll: wire('this.parent.scroll'),\n\t\thoursegs: Config({ type: Number, value: 24 }),\n\t\tsegments: Config({ type: vec3, value: vec3() }),\n\t\tdayoffset: Config({ type: Number, value: 1 })\n\t};\n\n\tthis.layout = function () {\n\t\tthis.layout.top = 0;\n\t\tthis.layout.width = this.parent._layout.width;\n\t\tthis.layout.height = this.parent._layout.height;\n\t};\n\n\t// Data-binding is buggy. set values at draw.\n\tthis.atDraw = function () {\n\t\tthis.segments = this.parent._segments;\n\t\tthis.hoursegs = this.parent._hoursegs;\n\t\t// TODO(aki): this is a hack. Handle dates and timezones better\n\t\tvar startDate = new Date(this.parent.getStart());\n\t\tthis.dayoffset = 1 - (startDate.getTime() - startDate.getTimezoneOffset() * 60 * 1000) / this.TIME_SCALE % 1;\n\t};\n\n\tthis.hardrect = function () {\n\t\tvar array = new Float32Array(4 * 2048);\n\t\tthis.caltexture = this.Texture.fromArray(array, 2048, 1);\n\n\t\tthis.update = function () {\n\t\t\tvar array = new Float32Array(4 * 2048);\n\t\t\tvar start = this.view.parent.getStart();\n\t\t\tfor (var i = 0; i < array.length / 4; i++) {\n\t\t\t\tvar day = new Date(start + i * this.TIME_SCALE);\n\t\t\t\tarray[i * 4 + 0] = day.getDate();\n\t\t\t\tarray[i * 4 + 1] = day.getDay();\n\t\t\t\tarray[i * 4 + 2] = day.getMonth();\n\t\t\t\tarray[i * 4 + 3] = day.getFullYear();\n\t\t\t}\n\n\t\t\tthis.caltexture = this.Texture.fromArray(array, 2048, 1);\n\t\t\tthis.caltexture.updateid = random();\n\t\t};\n\n\t\tthis.makepattern = function (field1, field2) {\n\t\t\tif (field1 != field2) return 1.0;\n\t\t\treturn 0.0;\n\t\t};\n\n\t\tthis.pickpattern = function (val, year, month, weekp, day, hour, minute) {\n\t\t\tif (val == 1.0) return year;else if (val == 2.0) return month;else if (val == 3.0) return weekp;else if (val == 4.0) return day;else if (val == 5.0) return hour;else if (val == 6.0) return minute;\n\t\t\treturn 0.0;\n\t\t};\n\n\t\tthis.color = function () {\n\t\t\tvar fgcolor = vec4(\"#ffffff\");\n\t\t\tvar bgcolor = vec4(\"#4e4e4e\");\n\t\t\tvar a = 24.0 / view.layout.height;\n\t\t\tvar b = 48.0 / view.layout.height;\n\n\t\t\tvar dayfield1 = (uv.x + view.scroll.x) * view.zoom - view.dayoffset;\n\t\t\tvar dayfield2 = (uv.x + 1.0 / view.layout.width + view.scroll.x) * view.zoom - view.dayoffset;\n\t\t\tvar caldata1 = this.caltexture.point(vec2(dayfield1 / 2048, 0.0)) * 255.0;\n\t\t\tvar caldata2 = this.caltexture.point(vec2(dayfield2 / 2048, 0.0)) * 255.0;\n\n\t\t\tvar year = makepattern(caldata1.a, caldata2.a);\n\t\t\tvar month = makepattern(caldata1.b, caldata2.b);\n\t\t\tvar week = makepattern(floor(dayfield1 / 7.0), floor(dayfield2 / 7.0));\n\t\t\tvar day = makepattern(floor(dayfield1), floor(dayfield2));\n\t\t\tvar hour = makepattern(floor(dayfield1 * view.hoursegs), floor(dayfield2 * view.hoursegs));\n\t\t\tvar minute = makepattern(floor(dayfield1 * 96.0), floor(dayfield2 * 96.0));\n\n\t\t\tvar color = vec4(\"#4e4e4e\");\n\t\t\tvar pattern = 0.0;\n\n\t\t\tpattern += pickpattern(view.segments.x, year, month, week, day, hour, minute);\n\t\t\tif (uv.y > a) pattern = max(pattern, 0.5 * pickpattern(view.segments.y, year, month, week, day, hour, minute));\n\t\t\tcolor = mix(bgcolor, fgcolor, pattern);\n\t\t\tif (uv.y > b) pattern = max(pattern, 0.25 * pickpattern(view.segments.z, year, month, week, day, hour, minute));\n\t\t\tcolor = mix(bgcolor, fgcolor, pattern);\n\n\t\t\treturn color;\n\t\t};\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/timeline/background.js\n// module id = 99\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/timeline/background.js?");

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/label', function (require, $ui$, view, label) {\n\n\tvar ROW_HEIGHT = 28;\n\n\tthis.text = '';\n\tthis.bgcolor = NaN;\n\tthis.height = ROW_HEIGHT;\n\tthis.cursor = 'move';\n\n\tvar ubuntufont = requireDreem('$resources/fonts/ubuntu_medium_256_baked.glf');\n\n\tthis.attributes = {\n\t\tzoom: wire('this.parent.zoom'),\n\t\tscroll: wire('this.parent.scroll'),\n\t\tdata: Config({ type: Array, value: wire('this.parent.data') }),\n\t\trows: Config({ type: Number, value: 1 })\n\t};\n\n\tthis.onrows = function () {\n\t\tthis.height = this.rows * ROW_HEIGHT;\n\t};\n\n\t// Temporarily disable new event creation on drag\n\t// this.pointermove = function(event) {\n\t// \tvar eventghost = this.find('eventghost')\n\t// \tvar timeline = this.parent\n\t// \teventghost.title = ''\n\t// \teventghost.start = timeline.getRangeStart() + timeline.getRange() * (event.min[0] / this.layout.width)\n\t// \teventghost.end = timeline.getRangeStart() + timeline.getRange() * (event.max[0] / this.layout.width)\n\t// \ttimeline.lockscroll = true\n\t// \tthis.redraw()\n\t// }\n\t//\n\t// this.pointerend = function(event) {\n\t// \tvar eventghost = this.find('eventghost')\n\t// \tvar timeline = this.parent\n\t// \tif (abs(event.delta.x) > 2) {\n\t// \t\tvar eventdata = {\n\t// \t\t\ttitle: 'New Event',\n\t// \t\t\tdate: eventghost.start,\n\t// \t\t\tenddate: eventghost.end,\n\t// \t\t\tmetadata: {\n\t// \t\t\t\tlocation: {\n\t// \t\t\t\t\tname: 'New Location',\n\t// \t\t\t\t\tlattitude: 0,\n\t// \t\t\t\t\tlongitute: 0\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\ttimeline.makeEvent(eventdata)\n\t// \t}\n\t// \teventghost.start = 0\n\t// \teventghost.end = 0\n\t// \ttimeline.lockscroll = false\n\t// }\n\n\tdefineDreem.class(this, 'event', view, function () {\n\n\t\tthis.bgcolor = '#999999';\n\t\tthis.position = 'absolute';\n\t\tthis.flexdirection = 'row';\n\t\tthis.justifycontent = \"center\";\n\t\tthis.borderradius = 6;\n\t\tthis.cursor = 'ew-resize';\n\n\t\tvar RESIZE_HANDLE_WIDTH = 10;\n\n\t\tthis.attributes = {\n\t\t\ttitle: '',\n\t\t\tid: null,\n\t\t\tcolor: vec4(1, 1, 1, 1),\n\t\t\tduration: 1,\n\t\t\toffset: 0,\n\t\t\tstart: 0,\n\t\t\tend: 0,\n\t\t\trow: 0\n\t\t};\n\n\t\tvar editmode = '';\n\n\t\tthis.pointerhover = this.pointerstart = function (event) {\n\t\t\tthis.cursor = 'ew-resize';\n\t\t\teditmode = 'move';\n\n\t\t\tvar localstart = this.globalToLocal(event.position);\n\t\t\tvar localstartx = localstart[0] - (this.offset - this.scroll[0]) * event.view.layout.width;\n\t\t\tvar pxduration = this.duration * event.view.layout.width;\n\n\t\t\tif (localstartx < min(RESIZE_HANDLE_WIDTH, pxduration / 2)) {\n\t\t\t\tthis.cursor = 'w-resize';\n\t\t\t\teditmode = 'setstart';\n\t\t\t} else if (pxduration - localstartx < min(RESIZE_HANDLE_WIDTH, pxduration / 2)) {\n\t\t\t\tthis.cursor = 'e-resize';\n\t\t\t\teditmode = 'setend';\n\t\t\t}\n\t\t};\n\n\t\tthis.pointermove = function (event) {\n\t\t\tvar eventghost = this.parent.find('eventghost');\n\t\t\tvar timeline = this.parent.parent;\n\t\t\tvar offset = event.delta[0] / timeline.layout.width;\n\t\t\tif (editmode == 'setstart') {\n\t\t\t\teventghost.start = this.start + timeline.getRange() * offset;\n\t\t\t\teventghost.end = this.end;\n\t\t\t} else if (editmode == 'move') {\n\t\t\t\teventghost.start = this.start + timeline.getRange() * offset;\n\t\t\t\teventghost.end = this.end + timeline.getRange() * offset;\n\t\t\t} else if (editmode == 'setend') {\n\t\t\t\teventghost.start = this.start;\n\t\t\t\teventghost.end = this.end + timeline.getRange() * offset;\n\t\t\t}\n\t\t\tif (eventghost.start > eventghost.end) {\n\t\t\t\tvar start = eventghost.start;\n\t\t\t\teventghost.start = eventghost.end;\n\t\t\t\teventghost.end = start;\n\t\t\t}\n\t\t\ttimeline.lockscroll = true;\n\t\t\tthis.redraw();\n\t\t};\n\n\t\tthis.pointerend = function (event) {\n\t\t\tif (abs(event.delta[0]) < 2) return;\n\t\t\tvar eventghost = this.parent.find('eventghost');\n\t\t\tvar timeline = this.parent.parent;\n\t\t\ttimeline.updateEvent(this.id, {\n\t\t\t\tdate: eventghost.start,\n\t\t\t\tenddate: eventghost.end\n\t\t\t});\n\t\t\teventghost.start = 0;\n\t\t\teventghost.end = 0;\n\t\t\ttimeline.lockscroll = false;\n\t\t};\n\n\t\tthis.pointertap = function (event) {\n\t\t\tif (event.clicker === 2) {\n\t\t\t\tvar timeline = this.parent.parent;\n\t\t\t\ttimeline.deleteEvent(this.id);\n\t\t\t}\n\t\t};\n\n\t\tthis.layout = function () {\n\t\t\tthis._layout.width = this.parent._layout.width;\n\t\t\tthis._layout.height = this.parent._layout.height / this.parent.rows;\n\t\t\tif (this.row === -1) {\n\t\t\t\tthis._layout.top = 0;\n\t\t\t\tthis._layout.height = this.parent._layout.height;\n\t\t\t} else {\n\t\t\t\tthis._layout.top = this._layout.height * this.row;\n\t\t\t}\n\t\t};\n\n\t\tthis.atDraw = function () {\n\t\t\tthis.scroll = this.parent.scroll;\n\t\t\tthis.duration = new Date(this.end).getTime() - new Date(this.start).getTime();\n\t\t\tthis.duration = this.duration / this.parent.parent.TIME_SCALE / this.parent.zoom;\n\t\t\tthis.offset = new Date(this.start).getTime() - this.parent.parent.getStart();\n\t\t\tthis.offset = this.offset / this.parent.parent.TIME_SCALE / this.parent.zoom;\n\t\t\tthis.find('eventlabel').xoffset = (this.offset - this.scroll[0]) * this.layout.width;\n\t\t\tthis.find('eventlabel').xwidth = this.duration * this.layout.width;\n\t\t};\n\n\t\tthis.roundedrect = {\n\t\t\tposition: function position() {\n\t\t\t\tpos = mesh.pos.xy;\n\t\t\t\tpos.x = pos.x * view.duration + (view.offset - view.scroll.x) * view.layout.width;\n\t\t\t\tvar ca = cos(mesh.angle + PI);\n\t\t\t\tvar sa = sin(mesh.angle + PI);\n\t\t\t\tvar rad = mesh.radmult.x * view.borderradius.x + mesh.radmult.y * view.borderradius.y + mesh.radmult.z * view.borderradius.z + mesh.radmult.w * view.borderradius.w;\n\t\t\t\tpos.x += ca * rad;\n\t\t\t\tpos.y += sa * rad;\n\t\t\t\tuv = vec2(pos.x / view.layout.width, pos.y / view.layout.height);\n\t\t\t\tsized = vec2(pos.x, pos.y);\n\t\t\t\treturn vec4(sized.x, sized.y, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t},\n\t\t\tcolor: function color() {\n\t\t\t\tvar col = view.bgcolorfn(vec2(pos.x / view.layout.width, pos.y / view.layout.height));\n\t\t\t\tif (uv.y > 0.85) {\n\t\t\t\t\treturn vec4(view.color.rgb, col.a * view.opacity);\n\t\t\t\t} else {\n\t\t\t\t\treturn vec4(col.rgb, col.a * view.opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.hardrect = {\n\t\t\tposition: function position() {\n\t\t\t\tvar pos = vec2(mesh.x * view.duration + view.offset - view.scroll.x, mesh.y);\n\t\t\t\treturn vec4(pos.x * view.layout.width, pos.y * view.layout.height, 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t\t}\n\t\t};\n\n\t\tdefineDreem.class(this, 'eventlabel', label, function () {\n\t\t\tthis.xoffset = 0;\n\t\t\tthis.xwidth = 0;\n\t\t\tthis.fgcolor = \"black\";\n\t\t\tthis.alignself = \"center\";\n\t\t\tthis.padding = vec4(6);\n\n\t\t\tthis.atDraw = function () {\n\t\t\t\tthis.fontsize = 13;\n\t\t\t\tthis.opacity = this.xwidth < this.layout.width * 0.6 ? 0 : 1;\n\t\t\t};\n\n\t\t\tthis.textstyle = function (style, tag) {\n\t\t\t\tvar pos = style.pos;\n\t\t\t\tstyle.pos = vec3(pos.x + this.xoffset, pos.y, 0);\n\t\t\t\treturn style;\n\t\t\t};\n\t\t});\n\n\t\tthis.render = function () {\n\t\t\treturn [this.eventlabel({\n\t\t\t\tname: 'eventlabel',\n\t\t\t\ttext: this.title,\n\t\t\t\tfont: ubuntufont\n\t\t\t})];\n\t\t};\n\t});\n\n\tthis.renderEvents = function (data) {\n\t\tvar rows = [[], [], [], [], [], []];\n\t\tthis.rows = 1;\n\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\tvar color = data[i].color || null;\n\t\t\tvar event = this.event({\n\t\t\t\ttitle: data[i].title,\n\t\t\t\tid: data[i].id,\n\t\t\t\tbgcolor: vec4(0.75, 0.75, 0.75, 1),\n\t\t\t\tcolor: color || vec4(1, 1, 1, 1),\n\t\t\t\tstart: new Date(data[i].date).getTime(),\n\t\t\t\tend: new Date(data[i].enddate).getTime()\n\t\t\t});\n\t\t\tfor (var r = 0; r < rows.length; r++) {\n\t\t\t\tvar canfit = true;\n\t\t\t\tfor (var k = 0; k < rows[r].length; k++) {\n\t\t\t\t\tif (!(rows[r][k].start > event.end && rows[r][k].end > event.end || rows[r][k].start < event.start && rows[r][k].end < event.start)) {\n\t\t\t\t\t\tcanfit = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (canfit) {\n\t\t\t\t\tevent.row = r;\n\t\t\t\t\tthis.rows = max(this.rows, r + 1);\n\t\t\t\t\trows[r].push(event);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn rows;\n\t};\n\n\tthis.render = function () {\n\t\treturn [this.renderEvents(this.data), this.event({\n\t\t\tname: \"eventghost\",\n\t\t\tid: -1,\n\t\t\tsize: 3,\n\t\t\topacity: 0.5,\n\t\t\tfontsize: 6,\n\t\t\tstart: 0,\n\t\t\tend: 0,\n\t\t\tbgcolor: vec4(0.2, 0.7, 1, 0.5),\n\t\t\trow: -1\n\t\t})];\n\t};\n\n\t// defineDreem.class(this, 'eventrects', this.Shader, function(){\n\t//\n\t// \tvar vertstruct = defineDreem.struct({\n\t// \t\tpos: vec2,\n\t// \t\tuv: vec2,\n\t// \t\tid: float\n\t// \t})\n\t// \tthis.mesh = vertstruct.array()\n\t//\n\t// \tthis.update = function(){\n\t// \t\tvar startTime = this.view.parent.getStart()\n\t// \t\tvar view = this.view\n\t// \t\tvar data = view.data\n\t// \t\tvar mesh = this.mesh = vertstruct.array();\n\t// \t\tfor (var i = 0; i < data.length; i++) {\n\t//\n\t// \t\t\tvar date = new Date(data[i].date)\n\t// \t\t\tvar enddate = new Date(data[i].enddate)\n\t//\n\t// \t\t\tvar timeOffset = date.getTime() - startTime\n\t// \t\t\tvar dayOffset = timeOffset / 1000 / 60 / 60 / 24\n\t// \t\t\tvar dayWidth = (enddate.getTime() - date.getTime()) / 1000 / 60 / 60 / 24\n\t//\n\t// \t\t\tvar w = dayWidth\n\t// \t\t\tvar h = 1\n\t// \t\t\tvar x = dayOffset\n\t// \t\t\tvar y = 0\n\t//\n\t// \t\t\tmesh.pushQuad(\n\t// \t\t\t\tx  , y  , 0, 0, i,\n\t// \t\t\t\tx+w, y  , 1, 0, i,\n\t// \t\t\t\tx  , y+h, 0, 1, i,\n\t// \t\t\t\tx+w, y+h, 1, 1, i\n\t// \t\t\t)\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tthis.position = function(){\n\t// \t\tvar pos = mesh.pos\n\t// \t\tpos.x = pos.x - view.zoom * view.scroll.x\n\t// \t\tpos = pos * vec2(view.layout.width / view.zoom, view.layout.height)\n\t// \t\treturn vec4(pos, 0, 1) * view.totalmatrix * view.viewmatrix\n\t// \t}\n\t// \tthis.color = function(){\n\t// \t\tPickGuid = mesh.id\n\t// \t\tif (view.hoverid == mesh.id){\n\t// \t\t\treturn vec4(0.5, 0.75, 1, 1)\n\t// \t\t}\n\t// \t\treturn vec4(0.75, 0.75, 0.75, 1)\n\t// \t}\n\t// })\n\t//\n\t// this.eventrects = true\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/timeline/events.js\n// module id = 100\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/timeline/events.js?");

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/label', function (require) {\n\n\tthis.position = 'absolute';\n\tthis.bgcolor = NaN;\n\tthis.fgcolor = 'white';\n\tthis.drawtarget = 'color';\n\tthis.bold = true;\n\n\tvar ubuntufont = requireDreem('$resources/fonts/ubuntu_medium_256_baked.glf');\n\tthis.font = ubuntufont;\n\n\tthis.attributes = {\n\t\tzoom: wire('this.parent.zoom'),\n\t\tscroll: wire('this.parent.scroll')\n\t};\n\n\tvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\tvar DAYS = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th', '13th', '14th', '15th', '16th', '17th', '18th', '19th', '20th', '21st', '22nd', '23rd', '24th', '25th', '26th', '27th', '28th', '29th', '30th', '31st'];\n\tvar MONTH_COLLAPSE = 200.0;\n\n\tthis.typeface = function () {\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tvar zoom = view.zoom;\n\t\t\t// hack to trigger update on scroll change\n\t\t\tvar scroll = view.scroll;\n\t\t\tvar w = view.parent._layout.width;\n\t\t\tvar h = view.parent._layout.height;\n\n\t\t\tvar mw = w / 11.774193548387096 * 365 / zoom;\n\t\t\tvar dw = w / zoom;\n\t\t\tvar hw = w / 24 / zoom;\n\n\t\t\tvar ts = view.parent.TIME_SCALE;\n\n\t\t\tvar mesh = this.newText();\n\t\t\tif (view.font) mesh.font = view.font;\n\t\t\tif (view.align) mesh.align = view.align;\n\t\t\tif (view.fontsize) mesh.fontsize = view.fontsize;\n\t\t\tmesh.clear();\n\n\t\t\tvar i, x, y, start, offset, date, text;\n\n\t\t\tstart = new Date(view.parent.getStart());\n\t\t\tfirst = new Date(view.parent.getRangeStart());\n\n\t\t\tvar firstYear = first.getFullYear();\n\t\t\tvar firstMonth = first.getMonth();\n\t\t\tvar firstDate = first.getDate();\n\t\t\tvar firstHour = first.getHours();\n\n\t\t\tfunction drawLabel(text, date, xoffset, yoffset) {\n\t\t\t\tx = (date.getTime() - first) / ts / zoom * w + xoffset + 5;\n\t\t\t\ty = yoffset - 5;\n\t\t\t\tmesh.add_x = x;\n\t\t\t\tmesh.add_y = y;\n\t\t\t\tmesh.add(text, 0, 0, 0);\n\t\t\t}\n\n\t\t\tfunction drawYears(yoffset) {\n\t\t\t\tdate = new Date(\"0\");\n\t\t\t\tdate.setYear(firstYear);\n\t\t\t\txoffset = (date.getTime() - first) / ts / zoom * w;\n\t\t\t\tx = 0, i = -1;\n\t\t\t\twhile (x < w) {\n\t\t\t\t\tdate = new Date(first);\n\t\t\t\t\tdate.setYear(firstYear + i);\n\t\t\t\t\tdrawLabel(date.getFullYear().toString(), date, xoffset, yoffset);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction drawMonths(yoffset) {\n\t\t\t\tdate = new Date(\"0\");\n\t\t\t\tdate.setYear(firstYear);\n\t\t\t\tdate.setMonth(firstMonth);\n\t\t\t\txoffset = (date.getTime() - first) / ts / zoom * w + 1;\n\t\t\t\tx = 0, i = -1;\n\t\t\t\twhile (x < w && i < 100) {\n\t\t\t\t\tdate = new Date(first);\n\t\t\t\t\tdate.setMonth(firstMonth + i);\n\t\t\t\t\ttext = MONTHS[date.getMonth() % 12];\n\t\t\t\t\tif (mw > 220) {\n\t\t\t\t\t\ttext = text + ' ' + date.getFullYear();\n\t\t\t\t\t}\n\t\t\t\t\tdrawLabel(text, date, xoffset, yoffset);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction drawDays(yoffset) {\n\t\t\t\tdate = new Date(\"0\");\n\t\t\t\tdate.setYear(firstYear);\n\t\t\t\tdate.setMonth(firstMonth);\n\t\t\t\tdate.setDate(firstDate);\n\t\t\t\txoffset = (date.getTime() - first) / ts / zoom * w + 5;\n\t\t\t\tx = 0, i = -1;\n\t\t\t\twhile (x < w && i < 100) {\n\t\t\t\t\tdate = new Date(first);\n\t\t\t\t\tdate.setDate(firstDate + i);\n\t\t\t\t\ttext = DAYS[(date.getDate() - 1) % 31];\n\t\t\t\t\tif (dw > 220) {\n\t\t\t\t\t\ttext = MONTHS[date.getMonth() % 12] + ' ' + text + ' ' + date.getFullYear();\n\t\t\t\t\t} else if (dw > 120) {\n\t\t\t\t\t\ttext = MONTHS[date.getMonth() % 12] + ' ' + text;\n\t\t\t\t\t}\n\t\t\t\t\tdrawLabel(text, date, xoffset, yoffset);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction drawHours(yoffset) {\n\t\t\t\tdate = new Date(\"0\");\n\t\t\t\tdate.setYear(firstYear);\n\t\t\t\tdate.setMonth(firstMonth);\n\t\t\t\tdate.setDate(firstDate);\n\t\t\t\tdate.setHours(firstHour);\n\t\t\t\txoffset = (date.getTime() - first) / ts / zoom * w;\n\t\t\t\tvar c = 24 / view.parent.hoursegs;\n\t\t\t\tx = 0, i = -1;\n\t\t\t\twhile (x < w && i < 100) {\n\t\t\t\t\tvar h = (firstHour + i) % 24;\n\t\t\t\t\tdate = new Date(first);\n\t\t\t\t\tdate.setHours(firstHour + i);\n\t\t\t\t\tif (view.parent.format == 12) {\n\t\t\t\t\t\ttext = (h % 12 || 12) + ' ' + (h < 12 ? 'am' : 'pm');\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = h % 24 + ' h';\n\t\t\t\t\t}\n\t\t\t\t\tif (h % c == 0) {\n\t\t\t\t\t\tdrawLabel(text, date, xoffset, yoffset);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmesh.fontsize = view.fontsize * 0.75;\n\n\t\t\tswitch (view.parent.segments[0]) {\n\t\t\t\tcase 1:\n\t\t\t\t\tdrawYears(26);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tdrawMonths(26);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tdrawDays(26);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmesh.fontsize = view.fontsize * 0.5;\n\n\t\t\tswitch (view.parent.segments[1]) {\n\t\t\t\tcase 2:\n\t\t\t\t\tdrawMonths(42);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tdrawDays(42);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tdrawHours(42);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.mesh = mesh;\n\t\t};\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/timeline/labels.js\n// module id = 101\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/timeline/labels.js?");

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/scrollbar', function () {\n\t// internal\n\n\t//TODO(aki): implement with view scrollbar and overflow instead.\n\n\tthis.position = 'absolute';\n\tthis.vertical = false;\n\tthis.visible = true;\n\n\tthis.attributes = {\n\t\tzoom: wire('this.parent.zoom'),\n\t\tscroll: wire('this.parent.scroll')\n\t};\n\n\tthis.value = function (event) {\n\t\tif (event.mark) return;\n\t\tthis.parent.scroll = vec2(this._value, 0);\n\t};\n\n\tthis.layout = function () {\n\t\tthis._layout.left = 0;\n\t\tthis._layout.height = 10;\n\t\tthis._layout.width = this.parent._layout.width;\n\t\tthis._layout.top = this.parent._layout.height - 10;\n\t};\n\n\tthis.scroll = function () {\n\t\tthis.value = this.scroll[0];\n\t\tthis.updateScrollbar();\n\t};\n\n\t// TODO(aki): hack to stopPropagation of multimove\n\tthis.pointermultimove = function () {};\n\n\t// internal: show/hide and resize scrollbar\n\tthis.updateScrollbar = function () {\n\t\tthis._total = this.parent.getDuration() / this.zoom / this.parent.TIME_SCALE;\n\t\tthis._page = 1;\n\t\tif (this._total > this._page - 0.2) {\n\t\t\tvar offset = clamp(this._value, 0, this._total - this._page);\n\t\t\tif (offset !== this._value) {\n\t\t\t\tthis._value = offset;\n\t\t\t}\n\t\t\tthis.visible = true;\n\t\t} else {\n\t\t\t// TODO: hide when full range\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/timeline/scrollbar.js\n// module id = 102\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/timeline/scrollbar.js?");

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/view', function (background, labels, events, scrollbar) {\n\n\tthis.flexdirection = 'column';\n\tthis.padding = vec4(0, 48, 0, 15);\n\tthis.bgcolor = NaN;\n\t// TODO(aki): hide overflow\n\n\tthis.MIN_ZOOM = 0.125;\n\tthis.TIME_SCALE = 86400000; // millis to days\n\n\tthis.attributes = {\n\t\tformat: Config({ type: Enum('12', '24'), value: \"12\" }),\n\t\tstart: Config({ type: String, value: \"Jan 1 2016\" }),\n\t\tend: Config({ type: String, value: \"Dec 31 2016\" }),\n\t\tdata: Config({ type: Array, value: [] }),\n\t\thoursegs: Config({ type: Number, value: 24 }),\n\t\tsegments: Config({ type: vec3, value: vec3() }),\n\t\tlockscroll: Config({ type: Boolean, value: false }),\n\t\tautoexpand: Config({ type: Boolean, value: false }),\n\t\tchange: Config({ type: Event })\n\t};\n\n\tthis.emitChange = function () {\n\t\tthis.emitUpward('change', {\n\t\t\tdata: this.data,\n\t\t\tstart: this.start,\n\t\t\tend: this.end,\n\t\t\trangeStart: this.getRangeStart(),\n\t\t\trangeEnd: this.getRangeEnd(),\n\t\t\tzoom: this.zoom,\n\t\t\tscroll: this.scroll\n\t\t});\n\t};\n\n\tthis.onzoom = function () {\n\t\tif (this._zoom > this.getDuration() / this.TIME_SCALE) {\n\t\t\tthis.zoom = this.getDuration() / this.TIME_SCALE;\n\t\t}\n\t};\n\n\tthis.dropEvent = function (eventdata, pointer) {\n\t\tvar pos = this.globalToLocal(pointer.position).x / this.layout.width;\n\t\tvar stardate = this.getRangeStart() + this.getRange() * pos;\n\t\tvar snap = eventdata.snap || 900000; // snap to 15 min by default\n\t\tstardate = floor(stardate / snap) * snap;\n\t\tvar enddate = stardate + (eventdata.duration || 10800000); // 3 hrs default\n\n\t\teventdata.date = stardate;\n\t\teventdata.enddate = enddate;\n\n\t\tthis.makeEvent(eventdata);\n\t};\n\n\tthis.makeEvent = function (eventdata) {\n\t\teventdata.id = eventdata.id || this.data.length + 1;\n\t\tthis.data.push(eventdata);\n\t\tthis.data = this.data;\n\t\tthis.emitChange();\n\t};\n\n\tthis.updateEvent = function (id, eventdata) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\tif (this.data[i].id === id) {\n\t\t\t\tfor (key in eventdata) {\n\t\t\t\t\tthis.data[i][key] = eventdata[key];\n\t\t\t\t}\n\t\t\t\tthis.data = this.data;\n\t\t\t\tthis.emitChange();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.deleteEvent = function (id) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\tif (this.data[i].id === id) {\n\t\t\t\tthis.data.splice(i, 1);\n\t\t\t\tthis.data = this.data;\n\t\t\t\tthis.emitChange();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.ondata = function () {\n\t\tvar eventstart, eventend;\n\t\tvar starttime = this.getStart();\n\t\tvar oldstarttime = this.getStart();\n\t\tvar endtime = this.getEnd();\n\t\tif (!this.data) return;\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\teventstart = new Date(this.data[i].date);\n\t\t\teventend = new Date(this.data[i].enddate);\n\t\t\tif (eventend > endtime) endtime = eventend;\n\t\t\tif (eventstart < starttime) starttime = eventstart;\n\t\t}\n\t\tthis.start = new Date(starttime).toString();\n\t\tthis.end = new Date(endtime).toString();\n\t\tthis.scroll = vec2(this.scroll[0] + (oldstarttime - this.getStart()) / this.zoom / this.TIME_SCALE, 0);\n\t};\n\n\tthis.onscroll = function () {\n\t\tif (this.autoexpand) {\n\n\t\t\tvar starttime = this.getStart();\n\t\t\tvar oldstarttime = this.getStart();\n\t\t\tvar endtime = this.getEnd();\n\n\t\t\tvar scrollstart = new Date(this.getRangeStart() - this.getRange());\n\t\t\tvar scrollend = new Date(this.getRangeEnd() + this.getRange());\n\t\t\tvar expand = false;\n\n\t\t\tif (scrollend.getTime() > endtime + 1000) {\n\t\t\t\tendtime = scrollend.getTime();\n\t\t\t\texpand = true;\n\t\t\t}\n\t\t\tif (scrollstart.getTime() < starttime - 1000) {\n\t\t\t\tstarttime = scrollstart.getTime();\n\t\t\t\texpand = true;\n\t\t\t}\n\t\t\tif (expand) {\n\t\t\t\tthis.clearTimeout(this.expandTimeout);\n\t\t\t\tthis.expandTimeout = this.setTimeout(function () {\n\t\t\t\t\tthis.start = new Date(starttime).toString();\n\t\t\t\t\tthis.end = new Date(endtime).toString();\n\t\t\t\t\tthis.scroll = vec2(this.scroll[0] + (oldstarttime - this.getStart()) / this.zoom / this.TIME_SCALE, 0);\n\t\t\t\t}.bind(this), 50);\n\t\t\t}\n\t\t}\n\n\t\tthis.clearTimeout(this.emitChangeTimeout);\n\t\tthis.emitChangeTimeout = this.setTimeout(function () {\n\t\t\tthis.emitChange();\n\t\t}.bind(this), 100);\n\t};\n\n\tthis.atDraw = function () {\n\t\tthis.hscrollbar = this.find(\"scrollbar\");\n\t\tif (this.hscrollbar) {\n\t\t\tthis.hscrollbar.updateScrollbars();\n\t\t}\n\t\tvar daywidth = this._layout.width / this.zoom;\n\n\t\t//TODO(aki): Don't use magic numbers!\n\n\t\tif (daywidth < 12) {\n\t\t\tthis.segments = vec3(1, 2, 3); // y m w\n\t\t} else if (daywidth < 32) {\n\t\t\tthis.segments = vec3(2, 3, 4); // m w d\n\t\t} else if (daywidth < 440) {\n\t\t\tthis.segments = vec3(2, 4, 5); // m d h\n\t\t} else if (daywidth < 1040) {\n\t\t\tthis.segments = vec3(4, 5, 6); // d h h\n\t\t} else {\n\t\t\tthis.segments = vec3(4, 5, 6); // d h m\n\t\t}\n\n\t\tif (daywidth < 250) {\n\t\t\tthis.hoursegs = 4;\n\t\t} else if (daywidth < 440) {\n\t\t\tthis.hoursegs = 8;\n\t\t} else if (daywidth < 1040) {\n\t\t\tthis.hoursegs = 8;\n\t\t} else if (daywidth < 2100) {\n\t\t\tthis.hoursegs = 12;\n\t\t} else {\n\t\t\tthis.hoursegs = 24;\n\t\t}\n\t};\n\n\tthis.getStart = function () {\n\t\treturn new Date(this.start).getTime();\n\t};\n\n\tthis.getEnd = function () {\n\t\treturn new Date(this.end).getTime();\n\t};\n\n\tthis.getDuration = function () {\n\t\treturn this.getEnd() - this.getStart();\n\t};\n\n\tthis.getRange = function () {\n\t\treturn this.getRangeEnd() - this.getRangeStart();\n\t};\n\n\tthis.getRangeStart = function () {\n\t\treturn this.getStart() + this.zoom * this.scroll[0] * this.TIME_SCALE;\n\t};\n\n\tthis.getRangeEnd = function () {\n\t\tvar rangefactor = this.zoom / (this.getDuration() / this.TIME_SCALE);\n\t\treturn this.getRangeStart() + this.getDuration() * rangefactor;\n\t};\n\n\tthis.pointermultimove = function (event) {\n\t\tif (this.lockscroll) return;\n\t\tthis.hscrollbar = this.find(\"scrollbar\");\n\t\tif (event.length === 1) {\n\t\t\tthis.scroll = vec2(clamp(this._scroll[0] - event[0].movement[0] / this.layout.width, 0, this.hscrollbar._total - this.hscrollbar._page), 0);\n\t\t} else if (event.length === 2) {\n\t\t\tvar lastzoom = this._zoom;\n\n\t\t\tvar center = vec2.mix(event[0].position, event[1].position, 0.5);\n\t\t\tvar movement = vec2.mix(event[0].movement, event[1].movement, 0.5);\n\t\t\tvar distance = abs(event[0].position[0] - event[1].position[0]);\n\t\t\tvar oldDistance = abs(event[0].position[0] - event[0].movement[0] - (event[1].position[0] - event[1].movement[0]));\n\n\t\t\t// TODO(aki): delta doesent feel right\n\t\t\tvar delta = (distance - oldDistance) / this.layout.width * this.zoom * 2;\n\t\t\tvar newzoom = clamp(this.zoom - delta, this.MIN_ZOOM, this.getDuration() / this.TIME_SCALE);\n\n\t\t\tthis.zoom = newzoom;\n\n\t\t\tvar xpos0 = this._scroll[0] * lastzoom + this.globalToLocal(center)[0] / this.layout.width * lastzoom;\n\t\t\tvar xpos1 = this._scroll[0] * newzoom + this.globalToLocal(center)[0] / this.layout.width * newzoom;\n\t\t\tvar shiftx = (xpos0 - xpos1) / newzoom;\n\n\t\t\tthis.scroll = vec2(clamp(this._scroll[0] + shiftx - movement[0] / this.layout.width, 0, this.hscrollbar._total - this.hscrollbar._page), 0);\n\t\t}\n\t};\n\n\tthis.pointerwheel = function (event) {\n\t\tif (this.lockscroll) return;\n\t\tthis.hscrollbar = this.find(\"scrollbar\");\n\t\tif (!event.touch) {\n\t\t\tif (event.wheel[0] && abs(event.wheel[0]) > abs(event.wheel[1])) {\n\t\t\t\tthis.scroll = vec2(clamp(this._scroll[0] + event.wheel[0] / this.layout.width, 0, this.hscrollbar._total - this.hscrollbar._page), 0);\n\t\t\t}\n\t\t\tif (event.value[1] && abs(event.value[1]) > abs(event.value[0])) {\n\t\t\t\tvar lastzoom = this._zoom;\n\n\t\t\t\tvar delta = event.value[1] / this.layout.width * this.zoom;\n\t\t\t\tvar newzoom = clamp(this.zoom + delta, this.MIN_ZOOM, this.getDuration() / this.TIME_SCALE);\n\n\t\t\t\tthis.zoom = newzoom;\n\n\t\t\t\tvar xpos0 = this.scroll[0] * lastzoom + this.globalToLocal(event.position)[0] / this.layout.width * lastzoom;\n\t\t\t\tvar xpos1 = this.scroll[0] * newzoom + this.globalToLocal(event.position)[0] / this.layout.width * newzoom;\n\t\t\t\tvar shiftx = (xpos0 - xpos1) / newzoom;\n\n\t\t\t\tthis.scroll = vec2(clamp(this.scroll[0] + shiftx, 0, this.hscrollbar._total - this.hscrollbar._page), 0);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.render = function () {\n\t\treturn [background({ name: \"background\" }), labels({ name: \"labels\" }), events({ name: \"events\" }), scrollbar({ name: \"scrollbar\" })];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/timeline/timeline.js\n// module id = 103\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/timeline/timeline.js?");

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"$ui/view\", function (requireDreem, $ui$, view, label, textbox, icon, checkbox, treeview, button, tabbar, $widgets$, palette, propviewer, jseditor, $server$, astio) {\n\n\t// The DreemGL Visual Toolkit allows for visual manipulation of a running composition\n\t// <br/><a href=\"/examples/usingtoolkit\">examples &raquo;</a>\n\n\tthis.name = \"toolkit\";\n\tthis.clearcolor = \"#565656\";\n\tthis.bgcolor = \"#565656\";\n\tthis.flex = 1;\n\tthis.flexdirection = \"column\";\n\tthis.alignitems = \"stretch\";\n\tthis.tooltarget = false;\n\n\tthis.position = \"absolute\";\n\tthis.width = 400;\n\tthis.height = 800;\n\tthis.opacity = 0.7;\n\tthis.visible = false;\n\n\tthis.borderradius = 7;\n\tthis.bordercolor = vec4(0.3, 0.6, 0.8, 0.4);\n\tthis.borderwidth = 1;\n\n\tthis.defaultcomponents = {\n\t\tViews: [{\n\t\t\tlabel: \"View\",\n\t\t\ticon: \"sticky-note\",\n\t\t\tdesc: \"A rectangular view\",\n\t\t\tclassname: \"view\",\n\t\t\tclassdir: \"$ui$\",\n\t\t\tparams: {\n\t\t\t\theight: 150,\n\t\t\t\twidth: 200,\n\t\t\t\tpickalpha: -1,\n\t\t\t\tbgcolor: 'white'\n\t\t\t}\n\t\t}, {\n\t\t\tlabel: \"Text\",\n\t\t\ttext: \"Aa\",\n\t\t\tdesc: \"A text label\",\n\t\t\tclassname: \"label\",\n\t\t\tclassdir: \"$ui$\",\n\t\t\tparams: {\n\t\t\t\tfontsize: 44,\n\t\t\t\tpickalpha: -1,\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\tfgcolor: '#999',\n\t\t\t\ttext: 'Label'\n\t\t\t}\n\t\t},\n\t\t//{\n\t\t//\tlabel:\"Check Button\",\n\t\t//\ticon:\"check-square-o\",\n\t\t//\tdesc:\"A check button\",\n\t\t//\tclassname:\"checkbox\",\n\t\t//\tclassdir:\"$ui$\",\n\t\t//\tparams:{\n\t\t//\t\ttooldragroot:true,\n\t\t//\t\tfontsize:24,\n\t\t//\t\tbgcolor:\"transparent\",\n\t\t//\t\tbuttoncolor1:\"transparent\",\n\t\t//\t\tbuttoncolor2:\"transparent\",\n\t\t//\t\thovercolor1:\"transparent\",\n\t\t//\t\thovercolor2:\"transparent\",\n\t\t//\t\tpressedcolor1:\"transparent\",\n\t\t//\t\tpressedcolor2:\"transparent\",\n\t\t//\t\tpickalpha:-1,\n\t\t//\t\tfgcolor:'white'\n\t\t//\t}\n\t\t//},\n\t\t//{\n\t\t//\tlabel:\"Button\",\n\t\t//\ticon:\"stop\",\n\t\t//\tdesc:\"A basic button\",\n\t\t//\tclassname:\"button\",\n\t\t//\tclassdir:\"$ui$\",\n\t\t//\tparams:{\n\t\t//\t\ttooldragroot:true,\n\t\t//\t\tfontsize:24,\n\t\t//\t\tpickalpha:-1,\n\t\t//\t\ttext:'Button'\n\t\t//\t}\n\t\t//},\n\t\t{\n\t\t\tlabel: \"Icon\",\n\t\t\ticon: \"flag\",\n\t\t\tdesc: \"A Fontawesome icon\",\n\t\t\tclassname: \"icon\",\n\t\t\tclassdir: \"$ui$\",\n\t\t\tparams: {\n\t\t\t\tfgcolor: '#e22',\n\t\t\t\tbgcolor: 'transparent',\n\t\t\t\tpickalpha: -1,\n\t\t\t\ticon: 'flag',\n\t\t\t\tfontsize: 80\n\t\t\t}\n\t\t}]\n\t\t//Behaviors:[\n\t\t//\t{\n\t\t//\t\tlabel:\"Hover Border\",\n\t\t//\t\ticon:\"square\",\n\t\t//\t\tdesc:\"Adds a hover event that turns on and off a border\",\n\t\t//\t\tbehaviors:{\n\t\t//\t\t\tpointerhover:function(ev,v,o) {\n\t\t//\t\t\t\to.borderwidth = 3;\n\t\t//\t\t\t\to.bordercolor = \"yellow\";\n\t\t//\t\t\t},\n\t\t//\t\t\tpointerout:function(ev,v,o) {\n\t\t//\t\t\t\to.borderwidth = 0;\n\t\t//\t\t\t\to.bordercolor = NaN;\n\t\t//\t\t\t}\n\t\t//\t\t}\n\t\t//\t}\n\t\t//]\n\t};\n\n\tthis.attributes = {\n\n\t\t// The target for the property inspector\n\t\tinspect: Config({ type: Object }),\n\n\t\t// Components available to be dragged into compositions.\n\t\tcomponents: this.defaultcomponents,\n\n\t\t// When in 'design' mode buttons in compositions no longer become clickable, text fields become immutable,\n\t\t// and views can be resized and manipulated.  In 'live' mode views lock into place the composition regains\n\t\t// it's active behaviors\n\t\tmode: Config({ type: Enum('design', 'live'), value: 'design' }),\n\n\t\t// Should views be dropped as absolute or relative children\n\t\tdropmode: Config({ type: Enum('absolute', 'relative'), value: 'absolute' }),\n\n\t\t// The size of the reticle hot corners inside of a view\n\t\treticlesize: 9,\n\n\t\t// When dragging multiple selections, `groupdrag:true` will result in all selected views dragging together\n\t\t// whereas `groupdrag:false` will only move the view under the cursor\n\t\tgroupdrag: true,\n\n\t\t// When dropping a multiple selection into a view, should all views be reparented into the view that the\n\t\t// mouse is over, or should they drop exactly where they are physically locate don the canvas.\n\t\tgroupreparent: false,\n\n\t\t// Show or hide the rules when selecting and dragging\n\t\trulers: true,\n\n\t\t// Show or hide the rotatation handle\n\t\thandles: true,\n\n\t\t// Show guide bars\n\t\tguides: true,\n\n\t\t// Snap to guides\n\t\tsnap: true,\n\n\t\t// Show guidelines when moving\n\t\tmovelines: true,\n\n\t\t// Always center guideline crosshairs on the mouse cursor\n\t\thoverlines: false,\n\n\t\t// internal\n\t\tclipboard: Config({ persist: true, value: [], meta: \"hidden\" }),\n\n\t\t// internal\n\t\tselection: Config({ value: [], meta: \"hidden\" }),\n\n\t\t// internal\n\t\tselected: Config({ persist: true, value: [], meta: \"hidden\" })\n\t};\n\n\tthis.setupFileDrop = function () {\n\t\tvar doc = document.documentElement;\n\t\tdoc.ondragover = function (e) {\n\t\t\treturn !this.visible;\n\t\t}.bind(this);\n\t\tdoc.ondragend = function (e) {\n\t\t\treturn !this.visible;\n\t\t}.bind(this);\n\t\tdoc.ondrop = function (e) {\n\t\t\tif (!this.visible) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\te.preventDefault && e.preventDefault();\n\t\t\tvar files = e.dataTransfer.files;\n\n\t\t\tvar formData = new FormData();\n\t\t\tvar imagename;\n\t\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\t\tvar file = files[i];\n\n\t\t\t\tif (file.type && file.type.indexOf(\"image/\") === 0) {\n\t\t\t\t\timagename = file.name;\n\t\t\t\t}\n\n\t\t\t\tformData.append('file', file);\n\t\t\t}\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('POST', window.location.pathname, true);\n\t\t\txhr.onload = function () {\n\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\tif (imagename) {\n\t\t\t\t\t\tthis.screen.device.doPick(function (v) {\n\t\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\t\tvar compfile = v.screen.composition.constructor.module.filename;\n\t\t\t\t\t\t\t\tvar compdir = compfile.substring(0, compfile.lastIndexOf('/'));\n\t\t\t\t\t\t\t\tvar filename = compdir + \"/\" + imagename;\n\t\t\t\t\t\t\t\tthis.setASTObjectProperty(v, \"bgimage\", filename);\n\t\t\t\t\t\t\t\tthis.commit();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Oops, upload failed', xhr, files);\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\txhr.send(formData);\n\n\t\t\treturn false;\n\t\t}.bind(this);\n\t};\n\n\tthis.init = function () {\n\t\tthis.sourcefile = astio(this.screen.composition.constructor);\n\t\tthis.sourcefile.onchange = this.onchange.bind(this);\n\n\t\tthis.onselected(null, this.selected, this);\n\n\t\tthis.ensureDeps();\n\t\tthis.screen.globalpointerstart = this.globalpointerstart.bind(this);\n\t\tthis.screen.globalpointermove = this.globalpointermove.bind(this);\n\t\tthis.screen.globalpointerend = this.globalpointerend.bind(this);\n\t\tthis.screen.globalpointerhover = this.globalpointerhover.bind(this);\n\t\tthis.screen.globalpointerout = this.globalpointerout.bind(this);\n\t\tthis.screen.globalkeydown = this.globalkeydown.bind(this);\n\n\t\tthis.setupFileDrop();\n\t};\n\n\tthis.onchange = function (ev, src, o) {\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar formData = new FormData();\n\n\t\tvar fullpath = this.screen.composition.constructor.module.filename;\n\t\tvar filename = fullpath.substring(fullpath.lastIndexOf('/') + 1);\n\t\tvar source = 'defineDreem.class(\"$server/composition\",' + src + ');';\n\t\tvar blob = new Blob([source], { type: 'plain/text' });\n\t\tformData.append('file', blob, filename);\n\n\t\txhr.open(\"POST\", window.location.pathname, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\n\t\t\t\tconsole.log(\"[COMMIT]\"); //, src);\n\t\t\t}\n\t\t};\n\t\txhr.send(formData);\n\t};\n\n\tthis.onselected = function (ev, v, o) {\n\t\tvar selection = [];\n\t\tif (v && v.length && this.sourcefile) {\n\t\t\tvar find = function (a, b) {\n\t\t\t\tif (a === this.sourcefile.nodeFor(b)) return b;\n\t\t\t\tif (b.children) {\n\t\t\t\t\tfor (var i = 0; i < b.children.length; i++) {\n\t\t\t\t\t\tvar c = find(a, b.children[i]);\n\t\t\t\t\t\tif (c) return c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\tvar astpath = JSON.parse(v[i]);\n\t\t\t\tthis.sourcefile.reset();\n\t\t\t\tvar node = this.sourcefile.nodeForPath(astpath);\n\t\t\t\tvar found = find(node, this.screen);\n\n\t\t\t\tif (found !== this.screen) {\n\t\t\t\t\tselection.push(found);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.selection = selection;\n\t};\n\n\tthis.onselection = function (ev, v, o) {\n\t\tvar i;\n\n\t\tvar inspector = this.find('inspector');\n\n\t\tif (this.__selrects) {\n\t\t\tfor (i = 0; i < this.__selrects.length; i++) {\n\t\t\t\tvar selrect = this.__selrects[i];\n\t\t\t\tselrect.closeOverlay();\n\t\t\t}\n\t\t}\n\n\t\tif (this.selection) {\n\t\t\tthis.__selrects = [];\n\n\t\t\tif (inspector) {\n\t\t\t\tif (this.selection.length <= 1) {\n\t\t\t\t\tvar selected = this.selection[0];\n\t\t\t\t\tif (selected && inspector.target != selected) {\n\t\t\t\t\t\tinspector.astarget = JSON.stringify(this.sourcefile.nodePathFor(selected));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinspector.target = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.selection.length; i++) {\n\t\t\t\tvar target = this.selection[i];\n\t\t\t\tif (target.toolrect !== false && this.testView(target)) {\n\t\t\t\t\tvar selectrect = this.screen.openOverlay(this.selectedrect);\n\t\t\t\t\tselectrect.target = target;\n\t\t\t\t\tthis.__selrects.push(selectrect);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinspector.target = null;\n\t\t}\n\n\t\tvar tree = this.find(\"structure\");\n\t\tif (tree && tree.reload) {\n\t\t\ttree.reload();\n\t\t}\n\t};\n\n\tthis.globalpointerstart = function (ev) {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.__ruler) {\n\t\t\tthis.__ruler.rulermarkstart = ev.pointer.position;\n\t\t}\n\n\t\tif (ev.view == this) {\n\t\t\tthis.__startpos = ev.view.globalToLocal(ev.pointer.position);\n\n\t\t\tthis.__originalpos = {\n\t\t\t\tx: ev.view.x,\n\t\t\t\ty: ev.view.y\n\t\t\t};\n\n\t\t\tthis.__originalsize = {\n\t\t\t\tw: ev.view.width,\n\t\t\t\th: ev.view.height\n\t\t\t};\n\n\t\t\tthis.__resizecorner = this.resetCursor(ev);\n\n\t\t\tif (!this.__resizecorner) {\n\t\t\t\tvar inspector = this.find('inspector');\n\t\t\t\tif (inspector) {\n\t\t\t\t\tinspector.astarget = JSON.stringify(this.sourcefile.nodePathFor(this));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.testView(ev.view)) {\n\n\t\t\tvar astpath = JSON.stringify(this.sourcefile.nodePathFor(ev.view));\n\t\t\tif (!this.selected || this.selected.indexOf(astpath) < 0) {\n\t\t\t\tif (this.selected && (ev.pointer.meta || ev.pointer.ctrl)) {\n\t\t\t\t\tthis.selected = this.selected.concat([astpath]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selected = [astpath];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dragview = ev.view;\n\t\t\tif (!dragview.tooldragroot) {\n\t\t\t\tvar p = dragview;\n\t\t\t\twhile (p = p.parent) {\n\t\t\t\t\tif (p.tooldragroot) {\n\t\t\t\t\t\tdragview = p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dragview.toolmove === false) {\n\t\t\t\tdragview.cursor = \"crosshair\";\n\t\t\t\tthis.__startrect = ev.pointer.position;\n\t\t\t} else {\n\t\t\t\t// This may be a drag\n\n\t\t\t\tthis.__startpos = dragview.globalToLocal(ev.pointer.position);\n\n\t\t\t\tthis.__originalpos = {\n\t\t\t\t\tx: dragview.x,\n\t\t\t\t\ty: dragview.y\n\t\t\t\t};\n\n\t\t\t\tthis.__originalsize = {\n\t\t\t\t\tw: dragview.width,\n\t\t\t\t\th: dragview.height\n\t\t\t\t};\n\n\t\t\t\tthis.__resizecorner = this.resetCursor(ev, dragview);\n\t\t\t\tthis.screen.pointer.cursor = \"move\";\n\t\t\t\tdragview.cursor = \"move\";\n\t\t\t\tdragview.drawtarget = \"color\";\n\t\t\t\tev.pointer.pickview = true;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.globalpointermove = function (ev) {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.__ruler) {\n\t\t\tif (ev.pointer.pick && this.testView(ev.pointer.pick) && this.__ruler.target !== ev.pointer.pick) {\n\t\t\t\tthis.__ruler.target = ev.pointer.pick;\n\t\t\t}\n\t\t\tif (this.__ruler.target == ev.view) {\n\t\t\t\tthis.__ruler.target = ev.view.parent;\n\t\t\t}\n\n\t\t\tthis.__ruler.rulermarkstart = ev.view.pos;\n\t\t\tthis.__ruler.rulermarkend = vec3(ev.view._layout.left + ev.view._layout.width, ev.view._layout.top + ev.view._layout.height, 0);\n\t\t\tthis.__ruler.guides = this.guides;\n\t\t}\n\n\t\tvar dragview = ev.view;\n\t\tif (!dragview.tooldragroot) {\n\t\t\tvar p = dragview;\n\t\t\twhile (p = p.parent) {\n\t\t\t\tif (p.tooldragroot) {\n\t\t\t\t\tdragview = p;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.__resizecorner) {\n\n\t\t\t// Resize\n\n\t\t\tif (this.__resizecorner === \"bottom-right\") {\n\t\t\t\tdragview.width = this.__originalsize.w + ev.pointer.delta.x;\n\t\t\t\tdragview.height = this.__originalsize.h + ev.pointer.delta.y;\n\t\t\t} else if (this.__resizecorner === \"bottom\") {\n\t\t\t\tdragview.height = this.__originalsize.h + ev.pointer.delta.y;\n\t\t\t} else if (this.__resizecorner === \"right\") {\n\t\t\t\tdragview.width = this.__originalsize.w + ev.pointer.delta.x;\n\t\t\t} else if (this.__resizecorner === \"top-left\") {\n\t\t\t\tdragview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t\tdragview.y = ev.pointer.position.y - this.__startpos.y;\n\t\t\t\tdragview.width = this.__originalsize.w - ev.pointer.delta.x;\n\t\t\t\tdragview.height = this.__originalsize.h - ev.pointer.delta.y;\n\t\t\t} else if (this.__resizecorner === \"left\") {\n\t\t\t\tdragview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t\tdragview.width = this.__originalsize.w - ev.pointer.delta.x;\n\t\t\t} else if (this.__resizecorner === \"top\") {\n\t\t\t\tdragview.y = ev.pointer.position.y - this.__startpos.y;\n\t\t\t\tdragview.height = this.__originalsize.h - ev.pointer.delta.y;\n\t\t\t} else if (this.__resizecorner === \"bottom-left\") {\n\t\t\t\tdragview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t\tdragview.width = this.__originalsize.w - ev.pointer.delta.x;\n\t\t\t\tdragview.height = this.__originalsize.h + ev.pointer.delta.y;\n\t\t\t} else if (this.__resizecorner === \"top-right\") {\n\t\t\t\tdragview.y = ev.pointer.position.y - this.__startpos.y;\n\t\t\t\tdragview.height = this.__originalsize.h - ev.pointer.delta.y;\n\t\t\t\tdragview.width = this.__originalsize.w + ev.pointer.delta.x;\n\t\t\t}\n\t\t} else if (this.__startpos && this.testView(ev.view) && ev.view.toolmove !== false) {\n\n\t\t\t// Move\n\n\t\t\tthis.screen.pointer.cursor = \"move\";\n\t\t\tev.view.cursor = \"move\";\n\n\t\t\tif (dragview.parent) {\n\t\t\t\tif (dragview.position != \"absolute\") {\n\t\t\t\t\tdragview.position = \"absolute\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ax, ay, bx, by;\n\t\t\tif (this.selection) {\n\t\t\t\tev.view.pos = vec3(ev.view.pos.x + ev.pointer.movement.x, ev.view.pos.y + ev.pointer.movement.y, 0);\n\t\t\t\tax = ev.view.pos[0];\n\t\t\t\tay = ev.view.pos[1];\n\t\t\t\tbx = ax + ev.view._layout.width;\n\t\t\t\tby = ay + ev.view._layout.height;\n\n\t\t\t\tif (this.__ruler && this.__ruler.target && this.movelines !== false) {\n\t\t\t\t\tthis.__ruler.lines = vec4(ax, ay, bx, by);\n\t\t\t\t}\n\n\t\t\t\tif (this.groupdrag) {\n\t\t\t\t\tfor (var i = 0; i < this.selection.length; i++) {\n\t\t\t\t\t\tvar selected = this.selection[i];\n\n\t\t\t\t\t\tif (this.__input) {\n\t\t\t\t\t\t\tif (this.__input.target === selected) {\n\t\t\t\t\t\t\t\tthis.__input.pos = vec3(this.__input.pos.x + ev.pointer.movement.x, this.__input.pos.y + ev.pointer.movement.y, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (selected === ev.view) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselected.pos = vec3(selected.pos.x + ev.pointer.movement.x, selected.pos.y + ev.pointer.movement.y, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.__lastpick = ev.pointer.pick;\n\t\t} else if (this.__startrect) {\n\n\t\t\t//select rect\n\n\t\t\tvar select = this.__selectrect || this.find('selectorrect');\n\t\t\tif (!select) {\n\t\t\t\tselect = this.__selectrect = this.screen.openOverlay(this.selectorrect);\n\t\t\t\tthis.__selectrect.pos = this.__startrect;\n\t\t\t}\n\n\t\t\tvar pos = ev.pointer.position;\n\n\t\t\tvar a = this.__startrect;\n\t\t\tvar b = pos;\n\n\t\t\tif (a.x < b.x && a.y < b.y) {\n\t\t\t\t//normal\n\t\t\t\tselect.pos = a;\n\t\t\t\tselect.size = vec3(b.x - a.x, b.y - a.y, 0);\n\t\t\t} else if (b.x < a.x && a.y < b.y) {\n\t\t\t\t// b lower left, a upper right\n\t\t\t\tselect.pos = vec3(b.x, a.y, 0);\n\t\t\t\tselect.size = vec3(a.x - b.x, b.y - a.y);\n\t\t\t} else if (a.x < b.x && b.y < a.y) {\n\t\t\t\t// a lower left, b upper right\n\t\t\t\tselect.pos = vec3(a.x, b.y, 0);\n\t\t\t\tselect.size = vec3(b.x - a.x, a.y - b.y, 0);\n\t\t\t} else {\n\t\t\t\tselect.pos = vec3(b.x, b.y);\n\t\t\t\tselect.size = vec3(a.x - b.x, a.y - b.y, 0);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.globalpointerend = function (ev) {\n\t\tif (ev.view.drawtarget != \"both\") {\n\t\t\tev.view.drawtarget = \"both\";\n\t\t}\n\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.__ruler && this.__ruler.target !== ev.view && this.testView(ev.view)) {\n\t\t\tthis.__ruler.lines = vec4(0, 0, 0, 0);\n\t\t\tthis.__ruler.target = ev.view;\n\t\t\tthis.__ruler.guides = false;\n\t\t}\n\n\t\tif (this.__handle && this.__handle.target !== ev.view && this.testView(ev.view)) {\n\t\t\tthis.__handle.target = ev.view;\n\t\t}\n\n\t\tvar evview = ev.view;\n\t\tevview.cursor = 'arrow';\n\t\tvar commit = false;\n\t\tif (this.__resizecorner && (evview == this || this.testView(evview)) && evview.toolresize !== false) {\n\n\t\t\t// Resize\n\n\t\t\tif (this.__resizecorner === \"top-left\") {\n\t\t\t\tevview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t\tevview.y = ev.pointer.position.y - this.__startpos.y;\n\t\t\t} else if (this.__resizecorner === \"top\") {\n\t\t\t\tevview.y = ev.pointer.position.y - this.__startpos.y;\n\t\t\t} else if (this.__resizecorner === \"left\") {\n\t\t\t\tevview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t} else if (this.__resizecorner === \"bottom-left\") {\n\t\t\t\tevview.x = ev.pointer.position.x - this.__startpos.x;\n\t\t\t}\n\n\t\t\tthis.setASTObjectProperty(evview, \"position\", \"absolute\");\n\t\t\tthis.setASTObjectProperty(evview, \"x\", evview._layout.absx);\n\t\t\tthis.setASTObjectProperty(evview, \"y\", evview._layout.absy);\n\t\t\tthis.setASTObjectProperty(evview, \"width\", evview._layout.width);\n\t\t\tthis.setASTObjectProperty(evview, \"height\", evview._layout.height);\n\n\t\t\tcommit = Math.abs(evview.x - this.__originalpos.x) > 0.5 || Math.abs(evview.y - this.__originalpos.y) > 0.5 || Math.abs(evview._layout.width - this.__originalsize.w) > 0.5 || Math.abs(evview._layout.height - this.__originalsize.h) > 0.5;\n\t\t} else if (this.__startpos && this.testView(evview) && evview.toolmove !== false) {\n\n\t\t\t// Move view\n\n\t\t\tvar pos = ev.pointer.position;\n\t\t\tif (evview.parent) {\n\t\t\t\t//if (evview.position != \"absolute\") {\n\t\t\t\t//\tevview.position = \"absolute\";\n\t\t\t\t//}\n\t\t\t\tpos = evview.parent.globalToLocal(ev.pointer.position);\n\t\t\t}\n\n\t\t\tvar nx = pos.x - this.__startpos.x;\n\t\t\tvar dx = Math.abs(evview.pos.x - this.__originalpos.x);\n\t\t\tif (dx > 0.5) {\n\t\t\t\tcommit = true;\n\t\t\t}\n\n\t\t\tvar ny = pos.y - this.__startpos.y;\n\t\t\tvar dy = Math.abs(evview.pos.y - this.__originalpos.y);\n\t\t\tif (dy > 0.5) {\n\t\t\t\tcommit = true;\n\t\t\t}\n\n\t\t\tif (commit && this.selection) {\n\t\t\t\tif (this.testView(evview) && evview.toolmove !== false && evview.position === \"absolute\") {\n\t\t\t\t\tnx = evview.pos.x + ev.pointer.movement.x;\n\t\t\t\t\tthis.setASTObjectProperty(evview, \"x\", nx);\n\n\t\t\t\t\tny = evview.pos.y + ev.pointer.movement.y;\n\t\t\t\t\tthis.setASTObjectProperty(evview, \"y\", ny);\n\t\t\t\t}\n\t\t\t\tif (this.groupdrag) {\n\t\t\t\t\tfor (var i = 0; i < this.selection.length; i++) {\n\t\t\t\t\t\tvar selected = this.selection[i];\n\t\t\t\t\t\tif (selected === evview) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.testView(selected) && selected.toolmove !== false && selected.position === \"absolute\") {\n\t\t\t\t\t\t\tthis.setASTObjectProperty(selected, \"x\", selected.pos.x + ev.pointer.movement.x);\n\t\t\t\t\t\t\tthis.setASTObjectProperty(selected, \"y\", selected.pos.y + ev.pointer.movement.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.__lastpick && this.__lastpick !== evview.parent && this.testView(this.__lastpick) && this.__lastpick.tooldrop !== false) {\n\n\t\t\t\t// Reparent because we dropped into a new view\n\n\t\t\t\tpos = this.__lastpick.globalToLocal(ev.pointer.position);\n\n\t\t\t\tnx = pos.x - this.__startpos.x;\n\t\t\t\tny = pos.y - this.__startpos.y;\n\n\t\t\t\tthis.setASTObjectProperty(evview, \"x\", nx, false);\n\t\t\t\tthis.setASTObjectProperty(evview, \"y\", ny, false);\n\n\t\t\t\tthis.appendASTNodeOn(this.__lastpick, evview);\n\t\t\t\tthis.removeASTNodeFor(evview);\n\n\t\t\t\tif (this.selection && this.groupdrag && this.groupreparent) {\n\t\t\t\t\tfor (var j = 0; j < this.selection.length; j++) {\n\t\t\t\t\t\tvar sel = this.selection[j];\n\t\t\t\t\t\tif (sel === evview) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.appendASTNodeOn(this.__lastpick, sel);\n\t\t\t\t\t\tthis.removeASTNodeFor(selected);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcommit = true;\n\t\t\t}\n\n\t\t\tif (!commit) {\n\t\t\t\t// Just a click ending, let's target what we clicked\n\n\t\t\t\tvar inspector = this.find('inspector');\n\t\t\t\tif (inspector) {\n\t\t\t\t\tinspector.astarget = JSON.stringify(this.sourcefile.nodePathFor(evview));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.__startrect) {\n\n\t\t\t// Selection rectangle\n\n\t\t\tvar pos = ev.pointer.position;\n\n\t\t\tvar a = this.__startrect;\n\t\t\tvar b = pos;\n\n\t\t\tvar rect = vec4();\n\n\t\t\tif (a.x < b.x && a.y < b.y) {\n\t\t\t\t//normal\n\t\t\t\trect.x = a.x;\n\t\t\t\trect.y = a.y;\n\t\t\t\trect.w = b.x - a.x;\n\t\t\t\trect.z = b.y - a.y;\n\t\t\t} else if (b.x < a.x && a.y < b.y) {\n\t\t\t\t// b lower left, a upper right\n\t\t\t\trect.x = b.x;\n\t\t\t\trect.y = a.y;\n\t\t\t\trect.w = a.x - b.x;\n\t\t\t\trect.z = b.y - a.y;\n\t\t\t} else if (a.x < b.x && b.y < a.y) {\n\t\t\t\t// a lower left, b upper right\n\t\t\t\trect.x = a.x;\n\t\t\t\trect.y = b.y;\n\t\t\t\trect.w = b.x - a.x;\n\t\t\t\trect.z = a.y - b.y;\n\t\t\t} else {\n\t\t\t\trect.x = b.x;\n\t\t\t\trect.y = b.y;\n\t\t\t\trect.w = a.x - b.x;\n\t\t\t\trect.z = a.y - b.y;\n\t\t\t}\n\t\t\tvar select = this.__selectrect || this.find('selectorrect');\n\t\t\tif (select) {\n\t\t\t\tselect.closeOverlay();\n\t\t\t\tthis.__selectrect = undefined;\n\t\t\t}\n\n\t\t\tif (rect.w > 0.5 || rect.z > 0.5) {\n\t\t\t\tvar selection = this.screen.childrenInRect(rect, [select]);\n\t\t\t\tvar selctedinrect = [];\n\t\t\t\tfor (var i = 0; i < selection.length; i++) {\n\t\t\t\t\tvar selected = selection[i];\n\t\t\t\t\tif (selected !== this && this.testView(selected) && this.toolselect !== false) {\n\t\t\t\t\t\tvar astpath = JSON.stringify(this.sourcefile.nodePathFor(selected));\n\t\t\t\t\t\tselctedinrect.push(astpath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.selected && (ev.pointer.meta || ev.pointer.ctrl)) {\n\t\t\t\t\tthis.selected = this.selected.concat(selctedinrect);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selected = selctedinrect;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (commit) {\n\t\t\tthis.ensureDeps();\n\t\t\tthis.commit();\n\t\t}\n\n\t\tthis.__lastpick = this.__startrect = this.__startpos = this.__originalpos = this.__resizecorner = this.__originalsize = undefined;\n\t};\n\n\tthis.globalpointerout = function (ev) {\n\t\tif (ev.view.emit_block_set) {\n\t\t\tev.view.emit_block_set = null;\n\t\t}\n\t};\n\n\tthis.globalpointerhover = function (ev) {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar pointer = ev.pointer;\n\n\t\tthis.__lasthover = pointer.position;\n\t\tthis.__lastover = ev.view;\n\n\t\tif (this.mode === \"design\" && this.testView(ev.view)) {\n\t\t\tif (ev.view.constructor.name === \"button\" || ev.view.constructor.module.factory.baseclass === \"/ui/button\" || ev.view.constructor.name === \"checkbox\" || ev.view.constructor.module.factory.baseclass === \"/ui/checkbox\") {\n\t\t\t\tev.view.emit_block_set = [\"pointerhover\", \"pointerover\", \"pointerstart\", \"pointerend\", \"pointerout\"];\n\t\t\t}\n\t\t}\n\n\t\tvar text = ev.view.constructor.name;\n\t\tif (ev.view.name) {\n\t\t\ttext = ev.view.name + \" (\" + text + \")\";\n\t\t}\n\n\t\tvar pos = ev.view.globalToLocal(pointer.position);\n\n\t\tif (this.__ruler && this.__ruler.target) {\n\t\t\tthis.__ruler.rulermarkstart = this.__ruler.target.globalToLocal(pointer.position);\n\t\t\tif (this.hoverlines !== false) {\n\t\t\t\tvar rpos = this.__ruler.target.globalToLocal(pointer.position);\n\t\t\t\tthis.__ruler.lines = vec4(rpos.x, rpos.y, 0, 0);\n\t\t\t}\n\t\t}\n\n\t\ttext = text + \" @ \" + ev.pointer.position.x.toFixed(0) + \", \" + ev.pointer.position.y.toFixed(0);\n\t\ttext = text + \" <\" + pos.x.toFixed(0) + \", \" + pos.y.toFixed(0) + \">\";\n\n\t\tthis.find(\"pointer\").text = text;\n\n\t\tthis.resetCursor(ev);\n\n\t\tif (this.__selectrect) {\n\t\t\tvar m = this.__selectrect;\n\t\t\tthis.__selectrect = undefined;\n\t\t\tm.closeOverlay();\n\t\t}\n\t};\n\n\tthis.globalkeydown = function (ev) {\n\t\tif (ev.name === \"t\" && ev.ctrl && ev.shift) {\n\t\t\tthis.setASTObjectProperty(this, \"visible\", !this.visible);\n\t\t\tthis.ensureDeps();\n\t\t\tthis.commit();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ev.name === \"z\" && (ev.ctrl || ev.meta) && ev.shift) {\n\t\t\tthis.selected = [];\n\t\t\tthis.sourcefile.redo();\n\t\t} else if (ev.name === \"z\" && (ev.ctrl || ev.meta)) {\n\t\t\tthis.selected = [];\n\t\t\tthis.sourcefile.undo();\n\t\t} else if (ev.name === \"backspace\" && this.selection && this.selection.length) {\n\t\t\tvar candelete = !this.screen.focus_view || [\"textbox\", \"jseditor\"].indexOf(this.screen.focus_view.constructor.name) === -1 && this.screen.focus_view.constructor.name !== \"input\";\n\t\t\tif (candelete) {\n\t\t\t\tthis.deleteselection();\n\t\t\t}\n\t\t} else if (ev.name === \"x\" && (ev.ctrl || ev.meta)) {\n\t\t\tthis.copyselection();\n\t\t\tvar candelete = !this.screen.focus_view || [\"textbox\", \"jseditor\"].indexOf(this.screen.focus_view.constructor.name) === -1 && this.screen.focus_view.constructor.name !== \"input\";\n\t\t\tif (candelete) {\n\t\t\t\tthis.deleteselection();\n\t\t\t}\n\t\t} else if (ev.name === \"c\" && (ev.ctrl || ev.meta)) {\n\t\t\tthis.copyselection();\n\t\t} else if (ev.name === \"v\" && (ev.ctrl || ev.meta)) {\n\t\t\tvar commit = false;\n\t\t\tif (this.clipboard && this.clipboard.length) {\n\t\t\t\tvar pastetargets = this.selection || [];\n\n\t\t\t\tif (this.__lastover && !pastetargets.length) {\n\t\t\t\t\tpastetargets.push(this.__lastover);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < pastetargets.length; i++) {\n\t\t\t\t\tvar v = pastetargets[i];\n\t\t\t\t\tif (this.testView(v)) {\n\t\t\t\t\t\tfor (var j = 0; j < this.clipboard.length; j++) {\n\t\t\t\t\t\t\tvar ast = JSON.parse(this.clipboard[j]);\n\t\t\t\t\t\t\tif (this.dropmode === \"absolute\") {\n\t\t\t\t\t\t\t\tthis.sourcefile.setCallNodeValue(ast, \"position\", \"absolute\");\n\t\t\t\t\t\t\t\tvar indent = j * 10;\n\t\t\t\t\t\t\t\tif (this.__lasthover) {\n\t\t\t\t\t\t\t\t\tvar pos = v.globalToLocal(this.__lasthover);\n\t\t\t\t\t\t\t\t\tthis.sourcefile.setCallNodeValue(ast, \"x\", pos[0] + indent);\n\t\t\t\t\t\t\t\t\tthis.sourcefile.setCallNodeValue(ast, \"y\", pos[1] + indent);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.sourcefile.setCallNodeValue(ast, \"x\", indent);\n\t\t\t\t\t\t\t\t\tthis.sourcefile.setCallNodeValue(ast, \"y\", indent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tthis.sourcefile.deleteCallNodeKey(ast, \"position\");\n\t\t\t\t\t\t\t\tthis.sourcefile.deleteCallNodeKey(ast, \"x\");\n\t\t\t\t\t\t\t\tthis.sourcefile.deleteCallNodeKey(ast, \"y\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.appendASTArgOn(v, ast);\n\t\t\t\t\t\t\tcommit = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (commit) {\n\t\t\t\tthis.ensureDeps();\n\t\t\t\tthis.commit();\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.deleteselection = function () {\n\t\tvar commit = false;\n\t\tfor (var i = this.selection.length - 1; i >= 0; i--) {\n\t\t\tvar v = this.selection[i];\n\t\t\tif (this.testView(v) && v.toolremove !== false) {\n\t\t\t\tthis.removeASTNodeFor(v);\n\t\t\t\tcommit = true;\n\t\t\t}\n\t\t}\n\t\tif (commit) {\n\t\t\tthis.ensureDeps();\n\t\t\tthis.commit();\n\t\t}\n\t};\n\n\tthis.copyselection = function () {\n\t\tvar copied = [];\n\t\tfor (var i = this.selection.length - 1; i >= 0; i--) {\n\t\t\tvar v = this.selection[i];\n\t\t\tif (this.testView(v)) {\n\t\t\t\tcopied.push(JSON.stringify(this.sourcefile.nodeFor(v)));\n\t\t\t}\n\t\t}\n\t\tthis.clipboard = copied;\n\t};\n\n\tthis.ensureDeps = function () {\n\t\tvar at = \"\";\n\t\tvar arglist = [];\n\t\tvar plist = {};\n\n\t\tvar main = this.sourcefile.nodeFor(this.screen.composition);\n\t\t//\t\tconsole.log('AST', main);\n\t\tif (main && main.params) {\n\t\t\tfor (var i = 0; i < main.params.length; i++) {\n\t\t\t\tvar param = main.params[i];\n\t\t\t\tif (param && param.id && param.id.name) {\n\t\t\t\t\tvar name = param.id.name;\n\t\t\t\t\tif (name[0] === '$' && name[name.length - 1] === '$') {\n\t\t\t\t\t\tat = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!plist[at]) {\n\t\t\t\t\t\t\tplist[at] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplist[at].push(name);\n\t\t\t\t\t}\n\t\t\t\t\targlist.push(name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.components) {\n\t\t\t\tvar missing = {};\n\t\t\t\tif (Array.isArray(this.components)) {\n\n\t\t\t\t\tfor (var i = 0; i < this.components.length; i++) {\n\t\t\t\t\t\tvar compdef = this.components[i];\n\n\t\t\t\t\t\tvar classname = compdef.classname;\n\t\t\t\t\t\tif (classname) {\n\t\t\t\t\t\t\tvar cdir = compdef.classdir || \"$$\";\n\n\t\t\t\t\t\t\tvar included = plist[cdir];\n\t\t\t\t\t\t\tif (!included) {\n\t\t\t\t\t\t\t\tincluded = [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (included.indexOf(classname) < 0) {\n\t\t\t\t\t\t\t\tif (!missing[cdir]) {\n\t\t\t\t\t\t\t\t\tmissing[cdir] = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmissing[cdir].push(classname);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tfor (var key in this.components) {\n\t\t\t\t\t\tif (this.components.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tvar section = this.components[key];\n\t\t\t\t\t\t\tfor (var s = 0; s < section.length; s++) {\n\t\t\t\t\t\t\t\tvar compdef = section[s];\n\n\t\t\t\t\t\t\t\tvar classname = compdef.classname;\n\t\t\t\t\t\t\t\tif (classname) {\n\t\t\t\t\t\t\t\t\tvar cdir = compdef.classdir || \"$$\";\n\n\t\t\t\t\t\t\t\t\tvar included = plist[cdir];\n\t\t\t\t\t\t\t\t\tif (!included) {\n\t\t\t\t\t\t\t\t\t\tincluded = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (included.indexOf(classname) < 0) {\n\t\t\t\t\t\t\t\t\t\tif (!missing[cdir]) {\n\t\t\t\t\t\t\t\t\t\t\tmissing[cdir] = [];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tmissing[cdir].push(classname);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (var dir in missing) {\n\t\t\t\t\tif (missing.hasOwnProperty(dir)) {\n\t\t\t\t\t\tvar position = arglist.indexOf(dir);\n\t\t\t\t\t\tif (position < 0) {\n\t\t\t\t\t\t\tposition = arglist.length;\n\t\t\t\t\t\t\targlist.push(dir);\n\t\t\t\t\t\t\tthis.spliceASTParam(dir);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar missed = missing[dir];\n\t\t\t\t\t\tfor (var m = 0; m < missed.length; m++) {\n\t\t\t\t\t\t\tvar item = missed[m];\n\t\t\t\t\t\t\targlist.splice(position + 1, 0, item);\n\t\t\t\t\t\t\tthis.spliceASTParam(item, position + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.resetCursor = function (ev, useview) {\n\t\tvar resize = false;\n\n\t\tvar vw = useview || ev.view;\n\n\t\tif (vw === this || this.testView(vw) && ev.view.toolmove !== false && ev.view.toolresize !== false) {\n\t\t\tvar pos = vw.globalToLocal(ev.pointer.position);\n\t\t\tvar edge = this.reticlesize;\n\n\t\t\tif (vw._layout.width < edge * 2) {\n\t\t\t\tedge = Math.max(3, vw._layout.width * 0.25);\n\t\t\t}\n\t\t\tif (vw._layout.height < edge * 2) {\n\t\t\t\tedge = Math.max(3, vw._layout.height * 0.25);\n\t\t\t}\n\n\t\t\tvw.cursor = 'arrow';\n\n\t\t\tif (pos.x < edge && pos.y < edge) {\n\t\t\t\tresize = \"top-left\";\n\t\t\t\tvw.cursor = 'nwse-resize';\n\t\t\t} else if (pos.x > vw.width - edge && pos.y < edge) {\n\t\t\t\tresize = \"top-right\";\n\t\t\t\tvw.cursor = 'nesw-resize';\n\t\t\t} else if (pos.x < edge && pos.y > vw.height - edge) {\n\t\t\t\tresize = \"bottom-left\";\n\t\t\t\tvw.cursor = 'nesw-resize';\n\t\t\t} else if (pos.x > vw.width - edge && pos.y > vw.height - edge) {\n\t\t\t\tresize = \"bottom-right\";\n\t\t\t\tvw.cursor = 'nwse-resize';\n\t\t\t} else if (pos.x < edge) {\n\t\t\t\tresize = \"left\";\n\t\t\t\tvw.cursor = 'ew-resize';\n\t\t\t} else if (pos.y < edge) {\n\t\t\t\tresize = \"top\";\n\t\t\t\tvw.cursor = 'ns-resize';\n\t\t\t} else if (pos.x > vw.width - edge) {\n\t\t\t\tresize = \"right\";\n\t\t\t\tvw.cursor = 'ew-resize';\n\t\t\t} else if (pos.y > vw.height - edge) {\n\t\t\t\tresize = \"bottom\";\n\t\t\t\tvw.cursor = 'ns-resize';\n\t\t\t}\n\n\t\t\tif (!resize) {\n\t\t\t\tvw.cursor = 'arrow';\n\t\t\t}\n\t\t} else if (vw.toolallow === false) {\n\t\t\tvw.cursor = 'not-allowed';\n\t\t} else {\n\t\t\tvw.cursor = 'arrow';\n\t\t}\n\n\t\treturn resize;\n\t};\n\n\tthis.testView = function (v) {\n\t\tvar ok = v != this.screen;\n\t\tvar p = v;\n\t\twhile (p && ok) {\n\t\t\tok = p.tooltarget !== false;\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn ok;\n\t};\n\n\tthis.pointerstart = function (ev, v, o) {\n\t\tvar at = this.globalToLocal(ev.position);\n\t\tvar lowest;\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tvar layout = child.layout;\n\t\t\tvar childbottom = layout.top + layout.height;\n\t\t\tif (childbottom < at.y) {\n\t\t\t\tif (child.title !== \"Cursor\" && (!lowest || lowest._layout.top + lowest._layout.height < childbottom)) {\n\t\t\t\t\tlowest = child;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.__movepanel = lowest;\n\t};\n\n\tthis.pointermove = function (ev, v, o) {\n\t\tif (this.__movepanel) {\n\t\t\tthis.__movepanel.flex = 0;\n\t\t\tthis.__movepanel.height = this.__movepanel._layout.height + ev.movement.y;\n\t\t\t//\t\t\tthis.height = this._layout.height + ev.movement.y;\n\t\t}\n\t};\n\n\tthis.pointerend = function () {\n\t\tthis.__movepanel = undefined;\n\t};\n\n\tthis.paletteDropTest = function (ev, v, item, orig, dv) {\n\t\treturn v !== this && this.testView(v);\n\t};\n\n\tthis.paletteDrop = function (ev, v, item, orig, dv) {\n\t\tif (!v) {\n\t\t\tv = this.screen;\n\t\t}\n\n\t\tif (item.behaviors) {\n\t\t\tfor (var o in item.behaviors) {\n\t\t\t\tif (item.behaviors.hasOwnProperty(o)) {\n\t\t\t\t\tvar behave = item.behaviors[o];\n\t\t\t\t\tthis.setASTObjectProperty(v, o, behave, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item.classname && item.params) {\n\t\t\tvar params = JSON.parse(JSON.stringify(item.params));\n\n\t\t\tif (v != this.screen) {\n\t\t\t\tvar pos = v.globalToLocal(ev.position);\n\t\t\t\tparams.position = this.dropmode;\n\t\t\t\tif (this.dropmode === 'absolute') {\n\t\t\t\t\tparams.x = pos.x;\n\t\t\t\t\tparams.y = pos.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.createASTNodeOn(v, { classname: item.classname, params: params });\n\t\t}\n\n\t\tthis.ensureDeps();\n\t\tthis.commit();\n\n\t\t//TODO(mason) set propviewer to inspect new object on reload?\n\t};\n\n\tthis.render = function () {\n\t\tvar views = [];\n\n\t\tvar vertical = this.flexdirection === \"column\";\n\n\t\tif (vertical) {\n\t\t\tviews = [view({\n\t\t\t\tjustifycontent: 'space-between',\n\t\t\t\tbgcolor: \"white\",\n\t\t\t\thardrect: { pickonly: true },\n\t\t\t\tpointerstart: function pointerstart(p) {\n\t\t\t\t\tthis.__grabpos = p.view.globalToLocal(p.position);\n\t\t\t\t},\n\t\t\t\tpointermove: function pointermove(p) {\n\t\t\t\t\tif (this.parent.position === \"absolute\") {\n\t\t\t\t\t\tthis.screen.pointer.cursor = \"move\";\n\n\t\t\t\t\t\t// TODO(mason) Figure out why this fixes the bug (comment the following and drag toolkit to see the bug)\n\t\t\t\t\t\tthis.parent.find(\"components\").pos = vec3(0, 0, 0);\n\t\t\t\t\t\tthis.parent.find(\"structure\").pos = vec3(0, 0, 0);\n\t\t\t\t\t\tthis.parent.find(\"inspector\").pos = vec3(0, 0, 0);\n\t\t\t\t\t\tthis.parent.find(\"code\").pos = vec3(0, 0, 0);\n\n\t\t\t\t\t\tif (this.__grabpos) {\n\t\t\t\t\t\t\tthis.parent.pos = vec3(p.position.x - this.__grabpos.x, p.position.y - this.__grabpos.y, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpointerend: function pointerend(p) {\n\t\t\t\t\tvar parent = this.parent;\n\t\t\t\t\tif (parent.testView && parent.toolmove !== false && parent.position === \"absolute\") {\n\n\t\t\t\t\t\tparent.pos = vec3(p.position.x - this.__grabpos.x, p.position.y - this.__grabpos.y, 0);\n\n\t\t\t\t\t\tparent.setASTObjectProperty(parent, \"position\", \"absolute\");\n\t\t\t\t\t\tparent.setASTObjectProperty(parent, \"x\", parent._layout.absx);\n\t\t\t\t\t\tparent.setASTObjectProperty(parent, \"y\", parent._layout.absy);\n\t\t\t\t\t\tparent.setASTObjectProperty(parent, \"width\", parent._layout.width);\n\t\t\t\t\t\tparent.setASTObjectProperty(parent, \"height\", parent._layout.height);\n\t\t\t\t\t\tparent.ensureDeps();\n\t\t\t\t\t\tparent.commit();\n\t\t\t\t\t}\n\t\t\t\t\tthis.screen.pointer.cursor = \"arrow\";\n\t\t\t\t\tthis.__grabpos = undefined;\n\t\t\t\t}\n\t\t\t}, icon({\n\t\t\t\ticon: \"gears\",\n\t\t\t\tfgcolor: vec4(0.8, 0.8, 0.8, 0.6),\n\t\t\t\tmarginleft: 5,\n\t\t\t\tpadding: 5,\n\t\t\t\tdrawtarget: 'color'\n\t\t\t}), label({\n\t\t\t\tname: \"title\",\n\t\t\t\ttext: \"DreemGL Visual Toolkit\",\n\t\t\t\tbgcolor: NaN,\n\t\t\t\tfgcolor: vec4(0.8, 0.8, 0.8, 0.8),\n\t\t\t\tpadding: 5,\n\t\t\t\tdrawtarget: 'color'\n\t\t\t}), button({\n\t\t\t\tfontsize: 16,\n\t\t\t\ticon: \"times\",\n\t\t\t\tpickalpha: -1,\n\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\tborderwidth: 0,\n\t\t\t\tmargintop: 0,\n\t\t\t\tmarginright: 7,\n\t\t\t\ttextactivecolor: \"white\",\n\t\t\t\ttextcolor: vec4(0.8, 0.8, 0.8, 0.8),\n\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\thovercolor1: \"transparent\",\n\t\t\t\thovercolor2: \"transparent\",\n\t\t\t\tpressedcolor1: \"transparent\",\n\t\t\t\tpressedcolor2: \"transparent\",\n\t\t\t\tclick: function (ev, v, o) {\n\t\t\t\t\tthis.setASTObjectProperty(this, \"visible\", false);\n\t\t\t\t\tthis.ensureDeps();\n\t\t\t\t\tthis.commit();\n\t\t\t\t}.bind(this)\n\t\t\t}))];\n\t\t}\n\n\t\tviews.push(this.panel({ flex: 1.0 }, palette({\n\t\t\tname: \"components\",\n\t\t\tflex: 1,\n\t\t\tbgcolor: \"#4e4e4e\",\n\t\t\titems: this.components,\n\t\t\tdropTest: this.paletteDropTest.bind(this),\n\t\t\tdrop: this.paletteDrop.bind(this)\n\t\t})));\n\n\t\tviews.push(this.panel({ flex: vertical ? 0 : 2 }, label({ name: \"pointer\", text: \"\", padding: 5, paddingleft: 10, bgcolor: \"#4e4e4e\" })));\n\n\t\tviews.push(this.panel({ flex: 1 }, treeview({\n\t\t\tflex: 1,\n\t\t\tname: \"structure\",\n\t\t\tbgcolor: \"#4e4e4e\",\n\t\t\tstyle: {\n\t\t\t\t$: {\n\t\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\tbgcolor: \"#4e4e4e\"\n\t\t\t\t},\n\t\t\t\ttreeline: {\n\t\t\t\t\tbgcolor: \"#4e4e4e\"\n\t\t\t\t}\n\t\t\t},\n\t\t\treload: function reload() {\n\t\t\t\tvar swalk = function (v) {\n\t\t\t\t\tif (v.tooltarget !== false) {\n\t\t\t\t\t\tvar children = [];\n\t\t\t\t\t\tfor (var i = 0; i < v.children.length; i++) {\n\t\t\t\t\t\t\tvar child = swalk(v.children[i]);\n\t\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar name = v.constructor.name;\n\t\t\t\t\t\tif (v.name) {\n\t\t\t\t\t\t\tname = v.name + \" (\" + name + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar selected = !!this.selection && this.selection.indexOf(v) > -1;\n\n\t\t\t\t\t\tvar itemview = view({\n\t\t\t\t\t\t\tbgcolor: NaN,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\theight: 25,\n\t\t\t\t\t\t\talignitems: \"center\"\n\t\t\t\t\t\t}, checkbox({\n\t\t\t\t\t\t\ticon: \"lock\",\n\t\t\t\t\t\t\tpickalpha: -1,\n\t\t\t\t\t\t\ttextactivecolor: vec4(0.1, 0.6, 0.8, 1),\n\t\t\t\t\t\t\ttextcolor: \"#666\",\n\t\t\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\t\t\tfontsize: 14,\n\t\t\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tvalue: v.toolmove === false,\n\t\t\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t\t\tv.toolmove = !this.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}), button({\n\t\t\t\t\t\t\ttext: name,\n\t\t\t\t\t\t\tbgcolor: \"#4e4e4e\",\n\t\t\t\t\t\t\tbuttoncolor1: \"transparent\",\n\t\t\t\t\t\t\tbuttoncolor2: \"transparent\",\n\t\t\t\t\t\t\thovercolor1: \"transparent\",\n\t\t\t\t\t\t\thovercolor2: \"transparent\",\n\t\t\t\t\t\t\tpressedcolor1: \"transparent\",\n\t\t\t\t\t\t\tpressedcolor2: \"transparent\",\n\t\t\t\t\t\t\ttextcolor: \"#ddd\",\n\t\t\t\t\t\t\ttextactivecolor: \"#fff\",\n\t\t\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\t\t\tclick: function (ev, val, o) {\n\t\t\t\t\t\t\t\tvar astpath = JSON.stringify(this.sourcefile.nodePathFor(v));\n\t\t\t\t\t\t\t\tif (!this.selected || this.selected.indexOf(astpath) < 0) {\n\t\t\t\t\t\t\t\t\tthis.selected = [astpath];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//o.state = \"selected\"\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\tmargintop: 5,\n\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\tfontsize: 14,\n\t\t\t\t\t\t\tpickalpha: -1\n\t\t\t\t\t\t}), checkbox({\n\t\t\t\t\t\t\ticon: \"eye-slash\",\n\t\t\t\t\t\t\tpickalpha: -1,\n\t\t\t\t\t\t\tfontsize: 14,\n\t\t\t\t\t\t\ttextactivecolor: vec4(1, 0.5, 0.5, 1),\n\t\t\t\t\t\t\ttextcolor: \"#666\",\n\t\t\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tvalue: !v.visible,\n\t\t\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t\t\tv.visible = !v.visible;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}), checkbox({\n\t\t\t\t\t\t\ticon: \"warning\",\n\t\t\t\t\t\t\tpickalpha: -1,\n\t\t\t\t\t\t\ttextactivecolor: \"yellow\",\n\t\t\t\t\t\t\ttextcolor: \"#444\",\n\t\t\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\t\t\tfontsize: 12,\n\t\t\t\t\t\t\t//margintop:7,\n\t\t\t\t\t\t\tmarginleft: 3,\n\t\t\t\t\t\t\tborderwidth: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tvalue: v.tooltarget === false,\n\t\t\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t\t\tv.tooltarget = !this.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\titemview: itemview,\n\t\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\t\tselected: selected,\n\t\t\t\t\t\t\tcollapsed: false,\n\t\t\t\t\t\t\tview: v\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}.bind(this.parent.outer);\n\t\t\t\tthis.data = swalk(this.screen);\n\t\t\t},\n\t\t\tinit: function init() {\n\t\t\t\tthis.reload();\n\t\t\t}\n\t\t})));\n\n\t\tviews.push(this.panel({ flex: 1.7 }, propviewer({\n\t\t\tname: \"inspector\",\n\t\t\ttarget: this.inspect,\n\t\t\tflex: 1,\n\t\t\toverflow: \"scroll\",\n\t\t\tbgcolor: \"#4e4e4e\",\n\t\t\tcallback: function (val, editor, commit) {\n\t\t\t\tif (editor && editor.target && editor.propertyname) {\n\t\t\t\t\tvar t = editor.target;\n\t\t\t\t\tif (typeof t === 'string') {\n\t\t\t\t\t\tt = editor.find(t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t && (t == this || this.testView(t)) && t.tooledit !== false) {\n\t\t\t\t\t\tif (commit === \"file\") {\n\t\t\t\t\t\t\tvar formData = new FormData();\n\t\t\t\t\t\t\tvar fileobjname;\n\t\t\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\n\t\t\t\t\t\t\t\tvar file = val[i];\n\t\t\t\t\t\t\t\tfileobjname = file.name;\n\t\t\t\t\t\t\t\tformData.append('file', file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (fileobjname) {\n\t\t\t\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\t\t\t\t\t\txhr.open('POST', window.location.pathname, true);\n\t\t\t\t\t\t\t\txhr.onload = function () {\n\t\t\t\t\t\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\t\t\t\t\t\tvar compfile = t.screen.composition.constructor.module.filename;\n\t\t\t\t\t\t\t\t\t\tvar compdir = compfile.substring(0, compfile.lastIndexOf('/'));\n\t\t\t\t\t\t\t\t\t\tvar filename = compdir + \"/\" + fileobjname;\n\t\t\t\t\t\t\t\t\t\tthis.setASTObjectProperty(t, editor.propertyname, filename);\n\t\t\t\t\t\t\t\t\t\tthis.ensureDeps();\n\t\t\t\t\t\t\t\t\t\tthis.commit();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconsole.log('Oops, upload failed', xhr, val);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this);\n\t\t\t\t\t\t\t\txhr.send(formData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setASTObjectProperty(t, editor.propertyname, val);\n\t\t\t\t\t\t\tthis.__needscommit = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (commit && this.__needscommit) {\n\t\t\t\t\tthis.__needscommit = false;\n\t\t\t\t\tthis.ensureDeps();\n\t\t\t\t\tthis.commit();\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t\tontarget: function (ev, v, o) {\n\t\t\t\tif (v) {\n\t\t\t\t\tif (this.__ruler) {\n\t\t\t\t\t\tthis.__ruler.closeOverlay();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.rulers && this.testView(v)) {\n\t\t\t\t\t\tthis.__ruler = this.screen.openOverlay(this.ruler);\n\t\t\t\t\t\tthis.__ruler.target = v;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.__input) {\n\t\t\t\t\t\tif (this.__input.target) {\n\t\t\t\t\t\t\tthis.__input.target.opacity = 1.0 * this.__input.target.__toolkitopacity;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.__input.closeOverlay();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.testView(v) && v.tooltextedit !== false && (v.constructor.name === \"label\" || v.constructor.module.factory.baseclass === \"/ui/label\")) {\n\t\t\t\t\t\tthis.__input = this.screen.openOverlay(this.input);\n\t\t\t\t\t\tthis.__input.target = v;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.__handle) {\n\t\t\t\t\t\tthis.__handle.closeOverlay();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.handles && this.testView(v) && v.toolrotate !== false) {\n\t\t\t\t\t\tthis.__handle = this.screen.openOverlay(this.handle);\n\t\t\t\t\t\tthis.__handle.target = v;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (v === this || this.testView(v)) {\n\t\t\t\t\t\tvar editor = this.find(\"code\");\n\t\t\t\t\t\tif (editor) {\n\t\t\t\t\t\t\t// todo(mason) remove this ugly hack when jseditor events exist\n\t\t\t\t\t\t\teditor.__lasttarget = editor.__target;\n\t\t\t\t\t\t\teditor.__target = v;\n\t\t\t\t\t\t\teditor.ast = this.sourcefile.nodeFor(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t\tastarget: Config({ type: String, persist: true }),\n\t\t\tonastarget: function (ev, v, o) {\n\t\t\t\tif (v) {\n\t\t\t\t\tvar find = function (a, b) {\n\t\t\t\t\t\tif (a === this.sourcefile.nodeFor(b)) return b;\n\t\t\t\t\t\tif (b.children) {\n\t\t\t\t\t\t\tfor (var i = 0; i < b.children.length; i++) {\n\t\t\t\t\t\t\t\tvar c = find(a, b.children[i]);\n\t\t\t\t\t\t\t\tif (c) return c;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this);\n\n\t\t\t\t\tvar astpath = JSON.parse(v);\n\t\t\t\t\tthis.sourcefile.reset();\n\t\t\t\t\tvar node = this.sourcefile.nodeForPath(astpath);\n\t\t\t\t\to.target = find(node, this.screen);\n\t\t\t\t}\n\t\t\t}.bind(this)\n\t\t}), jseditor({\n\t\t\tname: \"code\",\n\t\t\tflex: 1,\n\t\t\toverflow: 'scroll',\n\t\t\tmargin: vec4(2, 7, 2, 2),\n\t\t\tfontsize: 12,\n\t\t\tboldness: 0.1,\n\t\t\twrap: true,\n\t\t\tformat_options: {\n\t\t\t\tforce_newlines_array: false,\n\t\t\t\tforce_newlines_object: true\n\t\t\t},\n\t\t\tonfocus: function (ev, v, o) {\n\t\t\t\tif (!v && o._value && o.__lasttarget) {\n\t\t\t\t\tvar newsource = o._value;\n\t\t\t\t\tvar newast = this.sourcefile.parse(newsource);\n\t\t\t\t\tif (newast) {\n\t\t\t\t\t\t// TODO(mason) make this less of a terrible hack\n\t\t\t\t\t\tthis.sourcefile.fork(function (src) {\n\t\t\t\t\t\t\tvar currentnode = src.nodeFor(o.__lasttarget);\n\t\t\t\t\t\t\tvar parentnode = src.nodeFor(o.__lasttarget.parent);\n\t\t\t\t\t\t\tvar index = parentnode.args.indexOf(currentnode);\n\t\t\t\t\t\t\tvar node = newast.steps[0];\n\t\t\t\t\t\t\tparentnode.args.splice(index, 1, node);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this)\n\t\t})));\n\n\t\treturn views;\n\t};\n\n\tthis.spliceASTParam = function (param, pos) {\n\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tvar change = {\n\t\t\tparam: param\n\t\t};\n\n\t\tif (pos) {\n\t\t\tchange.pos = pos;\n\t\t}\n\n\t\tthis.__changes.push(change);\n\t};\n\n\tthis.createASTNodeOn = function (parent, params) {\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tthis.__changes.push({ parent: parent, params: params });\n\t};\n\n\tthis.appendASTNodeOn = function (parent, child) {\n\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tthis.__changes.push({ parent: parent, child: child });\n\t};\n\n\tthis.appendASTArgOn = function (parent, arg) {\n\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tthis.__changes.push({ parent: parent, arg: arg });\n\t};\n\n\tthis.removeASTNodeFor = function (v) {\n\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tthis.__changes.push({ remove: v });\n\t};\n\n\tthis.setASTObjectProperty = function (v, name, value, setval) {\n\t\tif (v == this.screen || v.constructor.name === \"screen\") {\n\t\t\tconsole.error(\"how did a screen get selected to be edited?\");\n\t\t\treturn;\n\t\t}\n\t\tif (setval !== false) {\n\t\t\tv[name] = value;\n\t\t}\n\n\t\tif (!this.__changes) {\n\t\t\tthis.__changes = [];\n\t\t}\n\n\t\tvar changes;\n\t\tfor (var i = 0; i < this.__changes.length; i++) {\n\t\t\tvar ch = this.__changes[i];\n\t\t\tif (ch.view === v) {\n\t\t\t\tchanges = ch;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!changes) {\n\t\t\tchanges = { view: v, changes: [] };\n\t\t\tthis.__changes.push(changes);\n\t\t}\n\n\t\tchanges.changes.push({ key: name, value: value });\n\t};\n\n\tthis.commit = function () {\n\t\tif (this.__changes && this.__changes.length) {\n\t\t\tthis.sourcefile.fork(function (src) {\n\t\t\t\twhile (this.__changes.length) {\n\t\t\t\t\tvar changes = this.__changes;\n\t\t\t\t\tthis.__changes = [];\n\t\t\t\t\tfor (var i = 0; i < changes.length; i++) {\n\t\t\t\t\t\tvar changeset = changes[i];\n\t\t\t\t\t\tsrc.reset();\n\t\t\t\t\t\tif (changeset.changes) {\n\t\t\t\t\t\t\tfor (var j = 0; j < changeset.changes.length; j++) {\n\t\t\t\t\t\t\t\tvar change = changeset.changes[j];\n\t\t\t\t\t\t\t\tsrc.reset();\n\t\t\t\t\t\t\t\tsrc.seekNodeFor(changeset.view);\n\t\t\t\t\t\t\t\tsrc.setArgValue(change.key, change.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (changeset.remove) {\n\t\t\t\t\t\t\tvar v = changeset.remove;\n\t\t\t\t\t\t\tvar node = src.nodeFor(v);\n\t\t\t\t\t\t\tsrc.seekNodeFor(v.parent);\n\t\t\t\t\t\t\tsrc.removeArgNode(node);\n\t\t\t\t\t\t} else if (changeset.param) {\n\t\t\t\t\t\t\tvar param = changeset.param;\n\t\t\t\t\t\t\tvar def = src.build.Def(src.build.Id(param));\n\t\t\t\t\t\t\tvar main = this.sourcefile.nodeFor(this.screen.composition);\n\t\t\t\t\t\t\tif (changeset.pos) {\n\t\t\t\t\t\t\t\tmain.params.splice(changeset.pos, 0, def);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmain.params.push(def);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (changeset.parent) {\n\t\t\t\t\t\t\tsrc.seekNodeFor(changeset.parent);\n\t\t\t\t\t\t\tif (changeset.child) {\n\t\t\t\t\t\t\t\tsrc.pushArg(src.nodeFor(changeset.child));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (changeset.params) {\n\t\t\t\t\t\t\t\tvar item = changeset.params;\n\t\t\t\t\t\t\t\t//\t\t\t\t\t\t\t\tconsole.log(\"build\", item.params)\n\t\t\t\t\t\t\t\tvar newo = src.createASTNode(item.params);\n\t\t\t\t\t\t\t\t//\t\t\t\t\t\t\t\tconsole.log(\"build2\", newo)\n\t\t\t\t\t\t\t\tvar obj = src.build.Call(src.build.Id(item.classname), [newo]);\n\t\t\t\t\t\t\t\t//\t\t\t\t\t\t\t\tconsole.log(\"build3\", obj)\n\t\t\t\t\t\t\t\tsrc.pushArg(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (changeset.arg) {\n\t\t\t\t\t\t\t\tsrc.pushArg(changeset.arg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"bad change?\", changeset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}\n\t};\n\n\tdefineDreem.class(this, \"selectorrect\", view, function () {\n\t\tthis.name = \"selectorrect\";\n\t\tthis.drawtarget = \"color\";\n\t\tthis.bordercolorfn = function (pos) {\n\t\t\tvar speed = time * 27.0;\n\t\t\tvar size = 0.0008;\n\t\t\tvar slices = 3.5;\n\t\t\tvar v = int(mod(size * (gl_FragCoord.x - gl_FragCoord.y + speed), slices));\n\t\t\treturn vec4((v + 0.45) * vec3(0.5, 0.9, 0.9), 0.8);\n\t\t};\n\t\tthis.borderwidth = 1;\n\t\tthis.bgcolor = vec4(0.7, 0.7, 0.7, 0.07);\n\t\tthis.borderradius = 7;\n\t\tthis.position = \"absolute\";\n\t\tthis.tooltarget = false;\n\t});\n\n\tdefineDreem.class(this, \"selectedrect\", view, function () {\n\t\tthis.visible = wire('this.outer.visible');\n\t\tthis.drawtarget = \"color\";\n\t\tthis.attributes = {\n\t\t\tborderseed: Math.random() + 17.0,\n\t\t\ttarget: Config({ persist: true, type: Object })\n\t\t};\n\t\tthis.bordercolorfn = function (pos) {\n\t\t\tvar size = 0.02;\n\t\t\tvar slices = 2.0;\n\t\t\tvar v = int(mod(size * (gl_FragCoord.x - gl_FragCoord.y + this.borderseed), slices));\n\t\t\treturn vec4((v + 1) * vec3(0.9, 0.5, 0.8), 0.8);\n\t\t};\n\n\t\tthis.minimumborderradius = 3;\n\t\tthis.borderradius = this.minimumborderradius;\n\t\tthis.onborderradius = function (ev, v, o) {\n\t\t\tif (v) {\n\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\tif (!v[i]) {\n\t\t\t\t\t\tv[i] = this.minimumborderradius;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.borderwidth = 1.5;\n\t\tthis.bgcolor = NaN;\n\t\tthis.position = \"absolute\";\n\t\tthis.tooltarget = false;\n\t\tthis.ontarget = function (ev, v, o) {\n\t\t\tthis.pos = vec3(v._layout.absx - this.borderwidth[0] / 2.0, v._layout.absy - this.borderwidth[0] / 2.0, 0);\n\t\t\tthis.size = vec3(v._layout.width + this.borderwidth[0], v._layout.height + this.borderwidth[0], 0);\n\t\t\tthis.rotate = v.rotate;\n\n\t\t\tvar p = v;\n\t\t\twhile (p = p.parent) {\n\t\t\t\tfor (var i = 0; i < this.rotate.length; i++) {\n\t\t\t\t\tthis.rotate[i] += p.rotate[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (v.borderradius && v.borderradius[0] + v.borderradius[1] + v.borderradius[2] + v.borderradius[3]) {\n\t\t\t\tthis.borderradius = v.borderradius;\n\t\t\t}\n\n\t\t\t//TODO (mason) these events maybe need to be cleaned up later, not sure yet\n\n\t\t\tv.onsize = function (ev, v, o) {\n\t\t\t\tthis.size = vec3(v.x + this.borderwidth[0], v.y + this.borderwidth[0], v.z);\n\t\t\t}.bind(this);\n\n\t\t\tv.onpos = function (ev, v, o) {\n\t\t\t\tvar x = v.x - (this.borderwidth[0] + this.borderwidth[1]) / 2.0;\n\t\t\t\tvar y = v.y - (this.borderwidth[2] + this.borderwidth[3]) / 2.0;\n\t\t\t\tvar p = o;\n\t\t\t\twhile (p = p.parent) {\n\t\t\t\t\tx = x + p.x;\n\t\t\t\t\ty = y + p.y;\n\t\t\t\t}\n\t\t\t\tthis.pos = vec3(x, y, v.z);\n\t\t\t}.bind(this);\n\n\t\t\tv.onfontsize = function (ev, fs, o) {\n\t\t\t\tvar v = o.layout;\n\t\t\t\tthis.size = vec3(v.width + this.borderwidth[0], v.height + this.borderwidth[0], 0);\n\t\t\t\tvar x = v.left - (this.borderwidth[0] + this.borderwidth[1]) / 2.0;\n\t\t\t\tvar y = v.top - (this.borderwidth[2] + this.borderwidth[3]) / 2.0;\n\t\t\t\tvar p = o;\n\t\t\t\twhile (p = p.parent) {\n\t\t\t\t\tx = x + p.x;\n\t\t\t\t\ty = y + p.y;\n\t\t\t\t}\n\t\t\t\tthis.pos = vec3(x, y, 0);\n\t\t\t}.bind(this);\n\n\t\t\tv.onrotate = function (ev, v, o) {\n\t\t\t\tthis.rotate = v;\n\t\t\t\tvar p = o;\n\t\t\t\twhile (p = p.parent) {\n\t\t\t\t\tfor (var i = 0; i < this.rotate.length; i++) {\n\t\t\t\t\t\tthis.rotate[i] += p.rotate[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tv.onborderradius = function (ev, v, o) {\n\t\t\t\tthis.borderradius = v;\n\t\t\t}.bind(this);\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"ruler\", view, function () {\n\t\tthis.visible = wire('this.outer.visible');\n\t\tthis.drawtarget = \"color\";\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.position = \"absolute\";\n\t\tthis.tooltarget = false;\n\t\tthis.borderwidth = vec4(5.0, 5.0, 5.0, 5.0);\n\t\tthis.attributes = {\n\t\t\ttarget: Config({ type: Object }),\n\t\t\trulertickwidth: 1,\n\t\t\trulertickspacing: 10.0,\n\t\t\trulermajorevery: 10,\n\t\t\trulermajorcolor: vec4(\"#F9F6F4\"),\n\t\t\trulerminorcolor: vec4(\"#B0C4DE\"),\n\t\t\trulermarkstartcolor: vec4(\"#00CCDD\"),\n\t\t\trulermarkstart: vec3(0, 0, 0),\n\t\t\trulermarkendcolor: vec4(\"#DD00BB\"),\n\t\t\trulermarkend: vec3(0, 0, 0),\n\t\t\tlinecolor: vec4(\"#00CCDD\"),\n\t\t\tlines: vec4(0, 0, 0, 0),\n\t\t\tlinedotspacing: 10.0,\n\t\t\tguidecolor: vec4(\"#FFDD00\"),\n\t\t\tedges: vec4(0, 0, 0, 0),\n\t\t\tguides: false,\n\t\t\tcentertrigger: 100.0\n\t\t};\n\n\t\tthis.calculateEdges = function () {};\n\n\t\tthis.bgcolorfn = function (p) {\n\t\t\tvar px = width * p.x;\n\n\t\t\tvar py = height * p.y;\n\n\t\t\tif (guides) {\n\t\t\t\tif (abs(layout.width * 0.5 - px) < 0.5 && abs(layout.width * 0.5 - (lines[0] + (lines[2] - lines[0]) * 0.5)) < 1.0 || abs(layout.height * 0.5 - py) < 0.5 && abs(layout.height * 0.5 - (lines[1] + (lines[3] - lines[1]) * 0.5)) < 1.0) {\n\t\t\t\t\treturn guidecolor;\n\t\t\t\t}\n\n\t\t\t\tif (abs(layout.width * 0.5 - px) < 0.5 && abs(layout.width * 0.5 - (lines[0] + (lines[2] - lines[0]) * 0.5)) < centertrigger) {\n\t\t\t\t\treturn vec4(guidecolor.rgb, 0.5 + (1.0 - abs(layout.width * 0.5 - (lines[0] + (lines[2] - lines[0]) * 0.5))) / centertrigger * 0.5);\n\t\t\t\t}\n\n\t\t\t\tif (abs(layout.height * 0.5 - py) < 0.5 && abs(layout.height * 0.5 - (lines[1] + (lines[3] - lines[1]) * 0.5)) < centertrigger) {\n\t\t\t\t\treturn vec4(guidecolor.rgb, 0.5 + (1.0 - abs(layout.height * 0.5 - (lines[1] + (lines[3] - lines[1]) * 0.5))) / centertrigger * 0.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lines[0] > 0.0 && abs(px - lines[0]) < 0.5 && int(mod(py, linedotspacing)) == 0) {\n\t\t\t\treturn rulermarkstartcolor;\n\t\t\t} else if (lines[1] > 0.0 && abs(py - lines[1]) < 0.5 && int(mod(px, linedotspacing)) == 0) {\n\t\t\t\treturn rulermarkstartcolor;\n\t\t\t} else if (lines[2] > 0.0 && abs(px - lines[2]) < 0.5 && int(mod(py, linedotspacing)) == 0) {\n\t\t\t\treturn rulermarkendcolor;\n\t\t\t} else if (lines[3] > 0.0 && abs(py - lines[3]) < 0.5 && int(mod(px, linedotspacing)) == 0) {\n\t\t\t\treturn rulermarkendcolor;\n\t\t\t} else {\n\t\t\t\treturn bgcolor;\n\t\t\t}\n\t\t};\n\n\t\tthis.bordercolorfn = function (p) {\n\t\t\tvar atx = p.x * layout.width;\n\t\t\tvar aty = p.y * layout.height;\n\t\t\tif (aty > borderwidth[2] && aty < layout.height - borderwidth[3] && (atx < borderwidth[0] || atx > layout.width - borderwidth[1])) {\n\t\t\t\tif (aty > rulermarkstart[1] - rulertickwidth * 0.5 && aty < rulermarkstart[1] + rulertickwidth * 0.5) {\n\t\t\t\t\treturn rulermarkstartcolor;\n\t\t\t\t} else if (aty > rulermarkend[1] - rulertickwidth * 0.5 && aty < rulermarkend[1] + rulertickwidth * 0.5) {\n\t\t\t\t\treturn rulermarkendcolor;\n\t\t\t\t}\n\n\t\t\t\tvar c = int(mod(gl_FragCoord.y, rulertickspacing * rulermajorevery));\n\t\t\t\tif (c < int(rulertickwidth * 2.0)) {\n\t\t\t\t\treturn rulermajorcolor;\n\t\t\t\t}\n\n\t\t\t\tif (atx < borderwidth[0] * 0.5 || atx > layout.width - borderwidth[1] * 0.5) {\n\t\t\t\t\tvar m = int(mod(gl_FragCoord.y, rulertickspacing));\n\t\t\t\t\tif (m < int(rulertickwidth)) {\n\t\t\t\t\t\treturn rulerminorcolor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (atx > borderwidth[0] && atx < layout.width - borderwidth[1] && (aty < borderwidth[2] || aty > layout.height - borderwidth[3])) {\n\n\t\t\t\tif (atx > rulermarkstart[0] - rulertickwidth * 0.5 && atx < rulermarkstart[0] + rulertickwidth * 0.5) {\n\t\t\t\t\treturn rulermarkstartcolor;\n\t\t\t\t} else if (atx > rulermarkend[0] - rulertickwidth * 0.5 && atx < rulermarkend[0] + rulertickwidth * 0.5) {\n\t\t\t\t\treturn rulermarkendcolor;\n\t\t\t\t}\n\n\t\t\t\tvar b = int(mod(gl_FragCoord.x, rulertickspacing * rulermajorevery));\n\t\t\t\tif (b < int(rulertickwidth * 2.0)) {\n\t\t\t\t\treturn rulermajorcolor;\n\t\t\t\t}\n\n\t\t\t\tif (aty < borderwidth[2] * 0.5 || aty > layout.height - borderwidth[3] * 0.5) {\n\t\t\t\t\tvar n = int(mod(gl_FragCoord.x, rulertickspacing));\n\t\t\t\t\tif (n < int(rulertickwidth)) {\n\t\t\t\t\t\treturn rulerminorcolor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn bordercolor;\n\t\t};\n\n\t\tthis.ontarget = function (ev, v, o) {\n\t\t\tif (!v) {\n\t\t\t\tthis.visible = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.visible = wire('this.outer.visible');\n\t\t\tthis.pos = vec3(v._layout.absx, v._layout.absy, 0);\n\t\t\tthis.size = vec3(v._layout.width, v._layout.height, 0);\n\t\t\tthis.rotate = v.rotate;\n\n\t\t\tvar p = v;\n\t\t\twhile (p = p.parent) {\n\t\t\t\tfor (var i = 0; i < this.rotate.length; i++) {\n\t\t\t\t\tthis.rotate[i] += p.rotate[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"handle\", icon, function () {\n\t\tthis.tooltarget = false;\n\t\tthis.visible = wire('this.outer.visible');\n\t\tthis.position = \"absolute\";\n\t\tthis.width = 50;\n\t\tthis.height = 50;\n\t\tthis.pickalpha = -1;\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.fgcolor = vec4(1, 1, 1, 0.3);\n\t\tthis.fontsize = 50;\n\n\t\tthis.icon = \"compass\";\n\n\t\tthis.attributes = {\n\t\t\ttarget: Config({ type: Object }),\n\t\t\tspinmode: true\n\t\t};\n\n\t\tthis.onspinmode = function (ev, v, o) {\n\t\t\tthis.icon = v ? \"compass\" : \"arrows\";\n\t\t};\n\n\t\tthis.pointertap = function (ev, v, o) {\n\t\t\tthis.spinmode = !this.spinmode;\n\t\t};\n\n\t\tthis.pointerstart = function (ev, v, o) {\n\t\t\tthis.__startrotation = this.target.rotate;\n\t\t};\n\n\t\tthis.pointermove = function (ev, v, o) {\n\t\t\tvar cx = this.target._layout.absx + this.target._layout.width * 0.5;\n\t\t\tvar cy = this.target._layout.absy + this.target._layout.height * 0.5;\n\n\t\t\tthis.pos = vec3(this.pos[0] + ev.movement.x, this.pos[1] + ev.movement.y);\n\n\t\t\tif (this.spinmode) {\n\t\t\t\tvar d;\n\t\t\t\tif (this.pos.y < cy && this.pos.x < cx) {\n\t\t\t\t\td = ev.movement.x * 0.01 - ev.movement.y * 0.01;\n\t\t\t\t} else if (this.pos.y < cy && this.pos.x > cx) {\n\t\t\t\t\td = ev.movement.x * 0.01 + ev.movement.y * 0.01;\n\t\t\t\t} else if (this.pos.y > cy && this.pos.x < cx) {\n\t\t\t\t\td = -ev.movement.x * 0.01 - ev.movement.y * 0.01;\n\t\t\t\t} else if (this.pos.y > cy && this.pos.x > cx) {\n\t\t\t\t\td = -ev.movement.x * 0.01 + ev.movement.y * 0.01;\n\t\t\t\t}\n\n\t\t\t\tif (d) {\n\t\t\t\t\tthis.target.rotate = vec3(this.target.rotate[0], this.target.rotate[1], this.target.rotate[2] + d);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.target.rotate = vec3(this.target.rotate[0] + ev.movement.y * 0.01, this.target.rotate[1] + ev.movement.x * 0.01, this.target.rotate[2]);\n\t\t\t}\n\t\t\tif (this.outer.__ruler) {\n\t\t\t\tthis.outer.__ruler.rotate = this.target.rotate;\n\t\t\t}\n\t\t};\n\n\t\tthis.pointerend = function (ev, v, o) {\n\n\t\t\tif (Math.abs(this.target.rotate[0] - this.__startrotation[0]) >= 0.01 || Math.abs(this.target.rotate[1] - this.__startrotation[1]) >= 0.01 || Math.abs(this.target.rotate[2] - this.__startrotation[2]) >= 0.01) {\n\t\t\t\tthis.outer.setASTObjectProperty(this.target, \"rotate\", this.target.rotate, false);\n\t\t\t\tthis.outer.commit();\n\t\t\t} else {\n\t\t\t\tthis.resetPosition();\n\t\t\t}\n\t\t};\n\n\t\tthis.resetPosition = function () {\n\t\t\tthis.pos = vec3(this.target._layout.absx + this.target._layout.width + 20, this.target._layout.absy - 20, 0);\n\t\t};\n\n\t\tthis.ontarget = function (ev, v, o) {\n\t\t\tif (!v) {\n\t\t\t\tthis.visible = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.visible = wire('this.outer.visible');\n\t\t\tthis.resetPosition();\n\t\t};\n\t});\n\n\tdefineDreem.class(this, \"input\", textbox, function () {\n\t\tthis.tooltarget = false;\n\t\tthis.visible = wire('this.outer.visible');\n\t\tthis.position = \"absolute\";\n\t\tthis.bgcolor = \"transparent\";\n\t\tthis.fgcolor = vec4(1, 0, 0, 1);\n\n\t\tthis.attributes = {\n\t\t\ttarget: Config({ type: Object })\n\t\t};\n\n\t\tthis.onvalue = function (ev, v, o) {\n\t\t\tvar rect;\n\t\t\tif (this.outer.__selrects) {\n\t\t\t\tfor (i = 0; i < this.outer.__selrects.length; i++) {\n\t\t\t\t\tvar selrect = this.outer.__selrects[i];\n\t\t\t\t\tif (selrect.target === this.target) {\n\t\t\t\t\t\trect = selrect;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rect) {\n\t\t\t\trect.size = vec3(this._layout.width, this._layout.height, 0);\n\t\t\t}\n\t\t\tif (this.outer.__ruler) {\n\t\t\t\tthis.outer.__ruler.size = vec3(this._layout.width, this._layout.height, 0);\n\t\t\t}\n\t\t};\n\n\t\tthis.reset = function () {\n\t\t\tthis.pos = vec3(this.target._layout.absx, this.target._layout.absy, 0);\n\t\t\tthis.size = vec3(this.target._layout.width, this.target._layout.height, 0);\n\n\t\t\tthis.fgcolor = this.target.fgcolor;\n\t\t\tthis.bgcolor = this.target.bgcolor;\n\t\t\tthis.text = this.target.text;\n\t\t\tthis.fontsize = this.target.fontsize;\n\t\t\tthis.boldness = this.target.boldness;\n\t\t\tthis.font = this.target.font;\n\t\t\tthis.multiline = this.target.multiline;\n\t\t\tthis.outline = this.target.outline;\n\t\t\tthis.outline_thickness = this.target.outline_thickness;\n\t\t\tthis.outline_color = this.target.outline_color;\n\t\t\tthis.subpixel = this.target.subpixel;\n\t\t\tthis.bold = this.target.bold;\n\t\t\tthis.borderwidth = this.target.borderwidth;\n\t\t\tthis.borderradius = this.target.borderrdius;\n\t\t\tthis.bordercolor = this.target.bordercolor;\n\t\t\tthis.padding = this.target.padding;\n\t\t\tthis.margin = this.target.margin;\n\t\t\tthis.scale = this.target.scale;\n\t\t\tthis.rotate = this.target.rotate;\n\t\t\tthis.linespacing = this.target.linespacing;\n\t\t\tthis.align = this.target.align;\n\t\t};\n\n\t\tthis.onfocus = function (ev, v, o) {\n\t\t\tif (!v && this.value && this.value !== this.target.text) {\n\t\t\t\tthis.outer.setASTObjectProperty(this.target, \"text\", this.value, true);\n\t\t\t\tthis.outer.commit();\n\t\t\t}\n\t\t\tthis.target.opacity = this.target.__toolkitopacity * (!v ? 1.0 : 0.1);\n\t\t};\n\n\t\tthis.ontarget = function (ev, v, o) {\n\t\t\tif (!v) {\n\t\t\t\tthis.visible = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.visible = wire('this.outer.visible');\n\t\t\tthis.reset();\n\t\t\tthis.target.__toolkitopacity = this.target.opacity;\n\t\t\tthis.target.opacity = this.target.__toolkitopacity * 0.1;\n\t\t};\n\t});\n\n\tdefineDreem.class(this, 'panel', view, function () {\n\t\tthis.attributes = {\n\t\t\tfontsize: Config({ type: float, value: 12, meta: \"fontsize\" }),\n\t\t\tactivechild: Config({ type: int, value: 0 })\n\t\t};\n\n\t\tthis.padding = 0;\n\t\tthis.margin = 4;\n\t\tthis.borderradius = vec4(10, 10, 1, 1);\n\t\tthis.bgcolor = NaN;\n\t\tthis.flex = 1;\n\t\tthis.flexdirection = \"column\";\n\t\tthis.alignitems = \"stretch\";\n\n\t\tthis.init = function () {\n\t\t\tthis.tabs = [];\n\n\t\t\tfor (var i = 0; i < this.constructor_children.length; i++) {\n\t\t\t\tvar child = this.constructor_children[i];\n\t\t\t\tchild.visible = i === 0;\n\t\t\t\tvar name = child.name;\n\t\t\t\tname = name[0].toUpperCase() + name.substring(1);\n\n\t\t\t\tthis.tabs.push({\n\t\t\t\t\ttext: name,\n\t\t\t\t\tfontsize: this.fontsize,\n\t\t\t\t\tpadding: vec4(7, 7, 7, 5)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.render = function () {\n\n\t\t\treturn [tabbar({\n\t\t\t\ttabclass: \"folder\",\n\t\t\t\ttabcolor: \"#3e3e3e\",\n\t\t\t\tactivetabcolor: \"#4e4e4e\",\n\t\t\t\ttextcolor: vec4(0.8, 0.8, 0.8, 1),\n\t\t\t\tactivetextcolor: \"white\",\n\t\t\t\ttabs: this.tabs,\n\t\t\t\tonactivetab: function (ev, tab, bar) {\n\t\t\t\t\tfor (var i = 0; i < this.constructor_children.length; i++) {\n\t\t\t\t\t\tvar child = this.constructor_children[i];\n\t\t\t\t\t\tchild.visible = i === tab;\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t}), this.constructor_children];\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/toolkit.js\n// module id = 104\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/toolkit.js?");

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$ui/label', function (requireDreem) {\n\n\tthis.attributes = {\n\t\tcursorcol: 1,\n\t\tcursorrow: 0,\n\t\tcursorchar: 0,\n\t\ttracks: []\n\t};\n\n\tthis.bgcolor = vec4(\"#dad6c9\");\n\tthis.readonly = false;\n\tthis.fontsize = 12;\n\tthis.subpixel = true;\n\tthis.linespacing = 1.3;\n\n\tvar font = this.font = requireDreem('$resources/fonts/ubuntu_monospace_ascii.glf');\n\n\tthis.oninit = function () {\n\t\t// store the line positions from the textgenerator\n\t\t//this.linepositions = []\n\t\t// lets build our track datastructure\n\t\tthis.tracks = [];\n\t\tfor (var col = 0; col < 8; col++) {\n\t\t\tvar track = [];\n\t\t\tthis.tracks.push(track);\n\t\t\tfor (var row = 0; row < 512; row++) {\n\t\t\t\ttrack.push(col);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.textstyle = function (style, tag) {\n\t\t//if(type>7)mesh.outline = true\n\t\tif (tag.y == this.cursorrow) {\n\t\t\tstyle.fgcolor = 'white';\n\t\t} else if (mod(tag.y, 4.) < 1.) {\n\t\t\tstyle.fgcolor = '#9f9373';\n\t\t} else {\n\t\t\tstyle.fgcolor = '#303030';\n\t\t}\n\t\treturn style;\n\t};\n\n\t// extend the font shader\n\tthis.typeface = function () {\n\t\tthis.font = font;\n\n\t\tthis.paint = function (p, edge, pixelsize) {\n\t\t\treturn vec4(-1.);\n\t\t};\n\n\t\t// lets generate a memory track into a trackview\n\t\tthis.update = function () {\n\n\t\t\tvar view = this.view;\n\t\t\tview.linepositions = [];\n\t\t\tvar textbuf = this.mesh = this.newText();\n\n\t\t\ttextbuf.font = view.font;\n\n\t\t\ttextbuf.fontsize = view.fontsize;\n\t\t\ttextbuf.add_y = textbuf.line_height;\n\t\t\ttextbuf.align = 'left';\n\t\t\ttextbuf.start_y = textbuf.line_height;\n\t\t\ttextbuf.boldness = 0.2;\n\n\t\t\ttextbuf.clear();\n\n\t\t\tvar tracklen = view.tracks.length;\n\t\t\tvar rowlen = view.tracks[0].length;\n\t\t\tvar dt = Date.now();\n\t\t\tfor (var row = 0; row < rowlen; row++) {\n\t\t\t\tfor (var col = 0; col < tracklen; col++) {\n\n\t\t\t\t\tvar num = view.tracks[col][row];\n\t\t\t\t\ttextbuf.add((\"0000\" + num).slice(-4), row, col, 0);\n\n\t\t\t\t\ttextbuf.add_x += view.fontsize * 2;\n\t\t\t\t}\n\t\t\t\ttextbuf.add(\"\\n\", row, 8, 0);\n\t\t\t}\n\t\t\tconsole.log(Date.now() - dt);\n\t\t\tview.total_rows = row;\n\t\t};\n\t};\n\n\tthis.tabstop = 0;\n\n\t// background lines\n\tdefineDreem.class(this, 'bgline', this.Shader, function () {\n\t\tthis.update = function () {};\n\t});\n\n\tdefineDreem.class(this, 'cursorbar_row', this.Shader, function () {\n\t\tthis.updateorder = 8;\n\t\tthis.draworder = 2;\n\t\tthis.mesh = vec2.array();\n\n\t\tthis.atConstructor = function () {};\n\n\t\tthis.color = function () {\n\t\t\treturn '#252936';\n\t\t};\n\n\t\tthis.position = function () {\n\t\t\treturn mesh.xy * view.totalmatrix * view.viewmatrix;\n\t\t};\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = vec2.array();\n\t\t\tthis.mesh.length = 0;\n\t\t\tvar textbuf = view.shaders.typeface.mesh;\n\t\t\t// ok lets find the geometry position of the current cursor\n\t\t\t// lets get the current line and find it\n\t\t\tvar off = textbuf.offsetFromTag(0, view.cursorrow, 0);\n\t\t\tif (off !== -1) {\n\t\t\t\tvar rect = textbuf.cursorRect(off);\n\t\t\t\tthis.mesh.pushQuad(0, rect.y, view.layout.width, rect.y, 0, rect.y + rect.h, view.layout.width, rect.y + rect.h);\n\t\t\t}\n\t\t};\n\t});\n\tthis.cursorbar_row = true;\n\n\tdefineDreem.class(this, 'cursorbar_col', this.Shader, function () {\n\t\tthis.updateorder = 8;\n\t\tthis.draworder = 4;\n\t\tthis.mesh = vec2.array();\n\n\t\tthis.atConstructor = function () {};\n\n\t\tthis.color = function () {\n\t\t\treturn 'ocean' * 2.;\n\t\t};\n\n\t\tthis.position = function () {\n\t\t\treturn mesh.xy * view.totalmatrix * view.viewmatrix;\n\t\t};\n\n\t\tthis.update = function () {\n\t\t\tvar view = this.view;\n\t\t\tthis.mesh = vec2.array();\n\t\t\tthis.mesh.length = 0;\n\t\t\tvar textbuf = view.shaders.typeface.mesh;\n\t\t\t// ok lets find the geometry position of the current cursor\n\t\t\t// lets get the current line and find it\n\t\t\tvar off = textbuf.offsetFromTag(0, view.cursorrow, 0);\n\t\t\toff = textbuf.offsetFromTag(1, view.cursorcol, off);\n\t\t\toff += view.cursorchar;\n\n\t\t\t// store the final offset for editing\n\t\t\tthis.cursor_final_offset = off;\n\t\t\tif (off !== -1) {\n\t\t\t\tvar rect = textbuf.cursorRect(off);\n\t\t\t\tthis.mesh.pushQuad(rect.x, rect.y, rect.x + rect.w, rect.y, rect.x, rect.y + rect.h, rect.x + rect.w, rect.y + rect.h);\n\t\t\t}\n\t\t};\n\t});\n\tthis.cursorbar_col = true;\n\n\tthis.keydown = function (e) {\n\t\tif (e.name.indexOf('num') === 0) {\n\t\t\tvar numpressed = parseInt(e.name.charAt(3));\n\t\t\t// lets plug it into our track!\n\t\t\t//var num = this.tracks[this.cursorcol][this.cursorrow]\n\t\t\tnum = numpressed * Math.pow(10, 3 - this.cursorchar);\n\t\t\tthis.tracks[this.cursorcol][this.cursorrow] = num;\n\t\t\tthis.tracks = this.tracks;\n\t\t} else this.defaultKeyboardHandler(e);\n\t\t//console.log(e)\n\t};\n\n\tthis.keydownDownarrow = function () {\n\t\tif (this.cursorrow < this.total_rows - 1) this.cursorrow++;\n\t};\n\n\tthis.keydownUparrow = function () {\n\t\tif (this.cursorrow > 0) this.cursorrow--;\n\t};\n\n\tthis.keydownRightarrow = function () {\n\t\tif (++this.cursorchar >= 4) {\n\t\t\tthis.cursorchar = 0;\n\t\t\tthis.cursorcol++;\n\t\t}\n\t};\n\n\tthis.keydownLeftarrow = function () {\n\t\tif (--this.cursorchar < 0) {\n\t\t\tthis.cursorchar = 3;\n\t\t\tthis.cursorcol--;\n\t\t}\n\t};\n\n\t// Basic usage\n\tvar jsviewer = this.constructor;\n\n\tthis.constructor.examples = {\n\t\tUsage: function Usage() {\n\t\t\treturn [jsviewer({ bgcolor: \"#000040\", padding: vec4(14), source: \"console.log(\\\"Hello world!\\\");\" })];\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/tracker.js\n// module id = 105\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/tracker.js?");

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, $ui$, view, label, bargraphic) {\n\t// Simple video player, without controls. Frames from a html5 video are\n\t// copied into a canvas element. Each image is written to the view's texture.\n\t// The view needs to use the hardimage shader, so the view is initialized\n\t// with an empty texture. The video and canvas resources are allocated when\n\t// the video plays, and released when the video is finished.\n\n\tvar Shader = requireDreem('$system/platform/$platform/shader$platform');\n\tvar emptytexture = Shader.Texture.fromArray(new Uint8Array(4, 1), 1, 1);\n\n\tthis.attributes = {\n\t\t// The URL to an video file to play\n\t\turl: Config({ type: string, value: '' })\n\n\t\t// When true (default), start the video track automatically.\n\t\t, autoplay: Config({ type: bool, value: true })\n\n\t\t// Video volume (0-1)\n\t\t, volume: Config({ type: float, value: 0.5 })\n\n\t\t// Event generated when screen updates\n\t\t, update: Config({ type: Event })\n\n\t\t// True if the video is playing\n\t};this.playing = false;\n\n\t// True if the video is paused\n\tthis.paused = false;\n\n\t// Length of video (seconds)\n\tthis.duration = -1;\n\n\t// Dimensions of video vec2;\n\tthis.dimensions = vec2(0, 0);\n\n\t// Current location (time) of playback\n\tthis.currenttime = -1;\n\n\t// We want to use the hardimage shader, so specifying a bgimage is needed.\n\t// In our case, we specify a texture instead of an image.\n\tthis.bgimage = emptytexture;\n\n\t// Play the video\n\tthis.play = function () {\n\t\tif (!this.url) return;\n\n\t\tthis.videoinit();\n\n\t\t// play the video\n\t\tthis.videoElement.setAttribute('src', this.url);\n\t\tthis.videoElement.load();\n\n\t\tthis.videoElement.currentTime = 0;\n\t\tthis.currenttime = 0;\n\t\tthis.videoElement.play();\n\t\tthis.playing = true;\n\n\t\t// Updating in the animation loop is better than waiting for\n\t\t// the infrequent ontimeupdate events.\n\t\tthis.animFrame = function (time) {\n\t\t\tthis.updatevideo();\n\t\t\tif (this.playing) window.requestAnimationFrame(this.animFrame);\n\t\t}.bind(this);\n\n\t\twindow.requestAnimationFrame(this.animFrame);\n\t};\n\n\t// Pause or restart the video\n\tthis.pause = function () {\n\t\tif (this.playing) {\n\t\t\tif (this.paused) {\n\t\t\t\tthis.paused = false;\n\t\t\t\tthis.videoElement.play();\n\t\t\t} else {\n\t\t\t\tthis.paused = true;\n\t\t\t\tthis.videoElement.pause();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Stop the video\n\tthis.stop = function () {\n\t\tif (this.videoElement) {\n\t\t\tthis.videoElement.pause();\n\t\t\tthis.videoElement.currentTime = 0;\n\t\t\tthis.currenttime = -1;\n\t\t}\n\n\t\tthis.playing = false;\n\n\t\tthis.videocleanup();\n\t};\n\n\t// Update the texture with a current screenshot from the video.\n\tthis.updatevideo = function () {\n\t\tif (!this.videoElement) return;\n\n\t\tthis.currenttime = this.videoElement.currentTime;\n\t\tt0 = new Date();\n\n\t\t// Create the canvas once the video frame size is known\n\t\tif (this.dimensions.x === 0) return;\n\n\t\tif (!this.canvas) {\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tthis.canvas.width = this.dimensions.x;\n\t\t\tthis.canvas.height = this.dimensions.y;\n\t\t\tthis.canvasContext = this.canvas.getContext('2d');\n\t\t}\n\n\t\t// Draw the current video frame to the canvas\n\t\tthis.canvasContext.drawImage(this.videoElement, 0, 0, this.canvas.width, this.canvas.height);\n\n\t\t// Retrieve the canvas image as a rgba buffer\n\t\tvar pels = this.canvasContext.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\n\t\t// Save to a texture and use as the background image\n\t\tvar texture = Shader.Texture.fromArray(pels.data, this.canvas.width, this.canvas.height);\n\t\tthis.setBgImage(texture);\n\n\t\tpels = null;\n\t\ttexture = null;\n\n\t\tt1 = new Date();\n\t\t//console.log('update elapsed', (t1-t0));\n\n\t\tthis.emit('update');\n\t};\n\n\t// Initialize the VideoContext\n\tthis.videoinit = function () {\n\t\tif (!this.videoElement) {\n\t\t\tthis.videoElement = document.createElement('video');\n\t\t\tthis.videoElement.setAttribute('volume', this.volume);\n\t\t\tthis.videoElement.setAttribute('width', this.width);\n\t\t\tthis.videoElement.setAttribute('height', this.height);\n\n\t\t\t// Try and prevent CORS issues when loading from another domain\n\t\t\tthis.videoElement.setAttribute('crossorigin', 'anonymous');\n\n\t\t\tif (this.autoplay) this.videoElement.setAttribute('autoplay', true);\n\n\t\t\t// On chrome, preload loads a lot of content, increasing memory usage.\n\t\t\tthis.videoElement.setAttribute('preload', 'none');\n\n\t\t\tthis.videoElement.ondurationchange = function (data) {\n\t\t\t\tif (!this.videoElement) return;\n\n\t\t\t\t//console.log('ondurationchange', this.videoElement.duration)\n\t\t\t\tthis.dimensions = vec2(this.videoElement.videoWidth, this.videoElement.videoHeight);\n\t\t\t\tthis.duration = this.videoElement.duration;\n\t\t\t}.bind(this);\n\n\t\t\t// This event does not fire often enough. Use animation frame instead.\n\t\t\t//this.videoElement.ontimeupdate = function(evt) {\n\t\t\t//\tif (!this.videoElement)\n\t\t\t//\t\treturn;\n\t\t\t//\n\t\t\t//\tconsole.log('ontimeupdate', this.videoElement.currentTime);\n\t\t\t//\tthis.updatevideo();\n\t\t\t//}.bind(this);\n\n\t\t\t// When the video is done, stop the playback and delete the canvas and\n\t\t\t// video element.\n\t\t\tthis.videoElement.onended = function (evt) {\n\t\t\t\tthis.stop();\n\t\t\t\t//console.log('onended', evt);\n\t\t\t}.bind(this);\n\t\t}\n\t};\n\n\t// Cleanup the VideoContext and canvas\n\tthis.videocleanup = function () {\n\t\tif (this.canvas) {\n\t\t\tthis.canvasContext = null;\n\t\t\tthis.canvas = null;\n\t\t}\n\n\t\tif (this.videoElement) {\n\t\t\tthis.videoElement.setAttribute('src', '');\n\t\t\tthis.videoElement = null;\n\t\t}\n\n\t\tthis.currenttime = -1;\n\t};\n\n\tthis.oninit = function () {\n\t\t// console.log('oninit');\n\t\tif (this.autoplay) this.play();\n\t};\n\n\tthis.render = function () {\n\t\treturn [];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./classes/widgets/videoplayer.js\n// module id = 106\n// module chunks = 0\n\n//# sourceURL=webpack:///./classes/widgets/videoplayer.js?");

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _library = __webpack_require__(6);\n\nvar _library2 = _interopRequireDefault(_library);\n\nvar _define = __webpack_require__(7);\n\nvar _define2 = _interopRequireDefault(_define);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nconsole.log(\"welcome to dreemgl.js LOL\");\n\n//////////////////\n// WEBPACK FOOTER\n// ./dreemgl.js\n// module id = 107\n// module chunks = 0\n\n//# sourceURL=webpack:///./dreemgl.js?");

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\t// internal, instance of checkable end object\n\tthis.End = function () {};\n\n\tthis.delay = 0;\n\tthis.interrupt = false;\n\tthis.repeat = 1;\n\tthis.bounce = false;\n\tthis.type = float32;\n\tthis.motion = float.ease.linear;\n\tthis.speed = 1;\n\tthis.interpolator = mix;\n\n\tthis.atConstructor = function (config, obj, key, track, first_value, last_value) {\n\t\tthis.config = config;\n\t\tthis.obj = obj;\n\t\tthis.key = key;\n\t\t// the internal track construct\n\t\tthis.track = track;\n\t\t//else this.track = config\n\n\t\tif (config.motion) this.motion = config.motion;\n\n\t\tif (track) {\n\t\t\tif (track.bounce) this.bounce = track.bounce;\n\t\t\tif (track.repeat) this.repeat = track.repeat;\n\t\t\tif (track.speed) this.speed = track.speed;\n\t\t}\n\n\t\tif (typeof this.motion === 'string') this.motion = float.ease[this.motion] || float.ease.linear;\n\t\tif (!config) debugger;\n\t\tif (config.type) this.type = config.type;\n\t\tthis.first_value = first_value;\n\t\tthis.last_value = last_value;\n\t};\n\n\tthis.compute = function (local_time, time_skew) {\n\t\t// lazily initialize order\n\t\tif (!this.order) {\n\t\t\tthis.order = [0];\n\t\t\tthis.values = {};\n\t\t\tthis.end_time = 0;\n\t\t\tfor (var key in this.track) {\n\t\t\t\tvar time = parseFloat(key);\n\t\t\t\tif (parseFloat(key) == time) {\n\t\t\t\t\tvar desc = {};\n\t\t\t\t\tvar value = this.track[key];\n\t\t\t\t\tif (value === undefined) continue;\n\t\t\t\t\t//check if we have a descriptor object in the key\n\t\t\t\t\tif (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && value.value !== undefined) {\n\t\t\t\t\t\tdesc.value = this.type(value.value); // parse it\n\t\t\t\t\t\tif (value.motion) desc.motion = (typeof value.motion === 'string' ? float.ease[value.motion] : value.motion) || this.motion;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdesc.value = this.type(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.values[key] = desc;\n\t\t\t\t\tthis.order.push(key);\n\t\t\t\t\tif (time > this.end_time) this.end_time = time;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.track && this.config.duration !== undefined) {\n\t\t\t\tvar duration = this.config.duration;\n\t\t\t\tthis.order.push(duration);\n\t\t\t\tthis.values[duration] = { value: this.type(this.last_value) };\n\t\t\t\tif (duration > this.end_time) this.end_time = duration;\n\t\t\t}\n\t\t\tthis.order.sort();\n\t\t}\n\t\t// alright lets process the tracks.\n\t\t/*if(this.reset_time){\n  \tthis.last_time_stamp = time_stamp\n  \t\tthis.start_time_stamp = time_stamp - (time_skew || 0)\n  \t// initialize slot 0\n  \tif(this.values[0] === undefined){\n  \t\tthis.first_value = first_value !== undefined? first_value: (this.first_value || 0)\n  \t}\n  \tthis.reset_time = false\n  }\n  if(this.pause_time !== undefined){\n  \t// just skid the start_time for as long as it is stopped\n  \tthis.start_time_stamp = time_stamp - this.pause_time\n  \treturn this.value\n  }\n  //var local_time = (time_stamp - this.start_time_stamp )\n  */\n\n\t\t// alright now, we have to compute the right time.\n\n\t\tif (this.delay !== undefined) {\n\t\t\tif (local_time - this.delay <= 0) local_time = 0;else local_time -= this.delay;\n\t\t}\n\n\t\tif (this.reverse_time !== undefined) {\n\t\t\t// essentially we are going to count backwards starting this.reverse_time\n\t\t\tlocal_time = this.reverse_time - (local_time - this.reverse_time);\n\t\t}\n\n\t\t// norm time goes from 0 to 1 over the length of the track\n\t\tvar norm_time = local_time / this.end_time * this.speed;\n\t\t// lets check the looping\n\t\tvar end_gap = undefined;\n\n\t\tif (this.bounce) {\n\t\t\tif (norm_time >= this.repeat) end_gap = norm_time - this.repeat, norm_time = this.repeat;\n\t\t\tnorm_time = norm_time % 2;\n\t\t\tif (norm_time > 1) norm_time = 2 - norm_time;\n\t\t} else if (this.repeat) {\n\t\t\tif (norm_time >= this.repeat) end_gap = norm_time - this.repeat, norm_time = this.repeat - 0.000001;\n\t\t\tnorm_time = norm_time % 1;\n\t\t}\n\n\t\tif (norm_time < 0) {\n\t\t\tend_gap = -norm_time;\n\t\t}\n\n\t\tif (end_gap !== undefined) {\n\t\t\t// alright we are stopping\n\t\t\tvar end = new this.End();\n\t\t\t// fetch the last key of our track and pass it in as the new first for the next one\n\n\t\t\tend.last_value = norm_time >= 0.99 ? this.values[this.order[this.order.length - 1]].value : this.values[this.order[0]].value;\n\t\t\tend.skew = end_gap * this.end_time;\n\t\t\treturn end;\n\t\t}\n\n\t\tif (norm_time > 1) norm_time = 1;\n\t\tif (norm_time < 0) norm_time = 0;\n\t\tvar motion_time = this.motion(norm_time);\n\t\tif (motion_time < 0.001) motion_time = 0;\n\t\tif (motion_time > 0.999) motion_time = 1;\n\t\t// lets convert it back to keyspace time\n\t\tvar track_time = motion_time * this.end_time;\n\t\t// the key pair to interpolate between\n\t\tvar key1, key2;\n\t\t// find the right keys\n\t\tif (!this.clamped && (track_time <= this.order[0] || track_time >= this.order[this.order.length - 1])) {\n\t\t\tif (track_time <= this.order[0]) {\n\t\t\t\tkey1 = this.order[0];\n\t\t\t\tkey2 = this.order[1];\n\t\t\t} else {\n\t\t\t\tkey1 = this.order[this.order.length - 2] || 0;\n\t\t\t\tkey2 = this.order[this.order.length - 1];\n\t\t\t}\n\t\t} else {\n\t\t\t// scan for it\n\t\t\tfor (var i = 0, len = this.order.length; i < len; i++) {\n\t\t\t\tvar key = this.order[i];\n\t\t\t\tif (track_time <= key) {\n\t\t\t\t\tkey1 = this.order[i - 1] || 0;\n\t\t\t\t\tkey2 = key;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if has atleast 1 key, do something\n\t\tif (key1 !== undefined) {\n\t\t\t// only key1, the check is to deal with the 'computed' 0 key\n\t\t\tif (key2 === undefined) return key1 in this.values ? this.values[key1].value : this.first_value;else {\n\t\t\t\t// interpolate\n\t\t\t\tvar inter_key_time;\n\t\t\t\tif (Math.abs(key2 - key1) < 0.0001) inter_key_time = 0;else inter_key_time = (track_time - key1) / (key2 - key1);\n\n\t\t\t\tvar value1 = key1 in this.values ? this.values[key1] : { value: this.first_value };\n\t\t\t\tvar value2 = this.values[key2];\n\n\t\t\t\tif (value2.motion) inter_key_time = value2.motion(inter_key_time);\n\t\t\t\tvar out = mix(value1.value, value2.value, inter_key_time);\n\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t};\n\t/*\n // stops an animation, untill resumed\n this.pause = function(){\n \tthis.pause_time = this.last_time_stamp - this.start_time_stamp\n }\n \t// resume a paused track\n this.resume = function(){\n \tthis.pause_time = undefined\n }\n \t// this reverses the playback. it will just play the current trackbackwards starting now\n this.reverse = function(){\n \t// alright if we have reverse time, calculate the right start_time_stamp\n \tif(this.reverse_time !== undefined){\n \t\t// calculate the current time\n \t\tthis.start_time_stamp = 2*(this.last_time_stamp - this.reverse_time) - this.start_time_stamp\n \t\t//this.start_time_stamp = this.last_time_stamp-this.reverse_time\n \t\tthis.reverse_time = undefined\n \t}\n \telse{\n \t\tthis.reverse_time = this.last_time_stamp - this.start_time_stamp\n \t}\n }*/\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/animate.js\n// module id = 108\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/animate.js?");

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// teem class\n\ndefineDreem.class('$system/base/node', function (requireDreem) {\n\n\tvar RpcHub = requireDreem('$system/rpc/rpchub');\n\tvar Render = requireDreem('./render');\n\n\tthis._atConstructor = function () {};\n\n\tthis.atConstructor = function () {\n\t\tthis.composition = this;\n\t\tthis._intervals = [];\n\t};\n\n\tthis.ondestroy = function () {\n\t\tfor (var key in this.hub) {\n\t\t\tprop = this.hub[key];\n\t\t\tif ((typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) == 'object') {\n\t\t\t\tif (prop.destroy && typeof prop.destroy == 'function') {\n\t\t\t\t\tprop.destroy();\n\t\t\t\t}\n\t\t\t\trenderer.destroy(prop);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this._intervals.length; i++) {\n\t\t\tclearInterval(this._intervals[i]);\n\t\t}\n\t};\n\n\tthis.toString = function () {\n\t\t// lets dump our RPC objects\n\t\tvar out = 'Teem RPC object:\\n';\n\t\tfor (var key in this) {\n\t\t\tif (key in Node.prototype) continue;\n\t\t\tout += key + '\\n';\n\t\t}\n\t\treturn out;\n\t};\n\n\tthis.setInterval = function (cb, timeout) {\n\t\tvar id = setInterval(cb, timeout);\n\t\tthis._intervals.push(id);\n\t\treturn id;\n\t};\n\n\tthis.clearInterval = function (id) {\n\t\tvar i = teem._intervals.indexOf(id);\n\t\tif (i != -1) teem._intervals.splice(i, 1);\n\t\tclearInterval(id);\n\t};\n\n\tthis.renderComposition = function () {\n\t\t// we have to render the RPC bus\n\t\tRender.process(this, undefined, undefined, false, true);\n\n\t\t//this.children = this.render()\n\n\t\tthis.names = {};\n\t\t// now lets rpc proxify them\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\t// ok so as soon as we are stubbed, we need to proxify the object\n\t\t\tvar child = this.children[i];\n\t\t\tif (!child.createRpcProxy) continue;\n\t\t\t// add the proxy to the rpc object. Default screen name = 'default'\n\t\t\tvar name = child.name || 'default'; // || child.constructor.name\n\t\t\tthis.rpc[name] = child.createRpcProxy(this.rpc);\n\t\t\tthis.names[name] = child;\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/compositionbase.js\n// module id = 109\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/compositionbase.js?");

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('./compositionbase', function (requireDreem, baseclass) {\n\t// internal, Composition base class\n\n\tvar RpcProxy = requireDreem('$system/rpc/rpcproxy');\n\tvar RpcHub = requireDreem('$system/rpc/rpchub');\n\tvar screen = requireDreem('$ui/screen');\n\tvar Render = requireDreem('./render');\n\tvar ASTScanner = requireDreem('$system/parse/astscanner');\n\tvar OneJSParser = requireDreem('$system/parse/onejsparser');\n\n\tthis.screenForClient = function () {\n\t\treturn typeof location !== 'undefined' && location.search && location.search.slice(1);\n\t};\n\n\tthis.atConstructor = function (previous, parent, precached) {\n\t\tthis.parent = parent;\n\n\t\t// how come this one doesnt get patched up?\n\t\tbaseclass.atConstructor.call(this);\n\n\t\tthis.cached_attributes = precached;\n\t\tif (!this.cached_attributes) {\n\t\t\tthis.cached_attributes = {};\n\t\t}\n\t\t// web environment\n\t\tif (previous) {\n\t\t\tthis.session = previous.session;\n\t\t\tthis.bus = previous.bus;\n\t\t\tthis.rpc = previous.rpc;\n\t\t\tthis.rpc.disconnectAll();\n\t\t\tthis.rpc.host = this;\n\t\t\tthis.rendered = true;\n\t\t\tthis.cached_attributes = previous.cached_attributes;\n\t\t} else {\n\t\t\tthis.createBus();\n\t\t\t// create the rpc object\n\t\t\tthis.rpc = new RpcHub(this);\n\t\t}\n\t\tthis.bindBusEvents();\n\n\t\tthis.renderComposition();\n\n\t\tfor (var key in this.cached_attributes) {\n\t\t\tvar attrmsg = this.cached_attributes[key];\n\t\t\t// process it\n\t\t\tthis.bus.atMessage(attrmsg);\n\t\t}\n\n\t\tthis.screenname = this.screenForClient();\n\t\tthis.screen = this.names[this.screenname];\n\t\tif (!this.screen) {\n\t\t\t// find the first screen\n\t\t\tfor (var key in this.names) {\n\t\t\t\tif (this.names[key] instanceof screen) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!key) throw new Error('No screen found');\n\t\t\tthis.screen = this.names[key];\n\t\t\tthis.screenname = this.screen.name; // || this.screen.constructor.name\n\t\t}\n\n\t\tif (previous || parent) this.doRender(previous, parent);else this.doRender(); // SETH: without RPC, we need to trigger a render manually\n\t};\n\n\tthis.doRender = function (previous, parent) {\n\n\t\tthis.screen.screen = this.screen;\n\t\tthis.screen.device = this.device;\n\t\tthis.screen.rpc = this.rpc;\n\t\tthis.screen.composition = this.composition;\n\n\t\tif (parent) {\n\t\t\tthis.screen.device = parent.screen.device;\n\t\t\tthis.screen.parent = parent;\n\t\t}\n\t\t//this.screen.teem = this\n\n\t\tRender.process(this.screen, previous && previous.screen);\n\n\t\tif (typeof document !== 'undefined' && this.screen.title !== undefined) document.title = this.screen.title;\n\n\t\tthis.screen.device.redraw();\n\n\t\tthis.rendered = true;\n\t};\n\n\tthis.callRpcMethod = function (msg) {\n\t\tvar prom = this.rpc.allocPromise();\n\t\tmsg.uid = prom.uid;\n\t\tthis.bus.send(msg);\n\t\treturn prom;\n\t};\n\n\tthis.setRpcAttribute = function (msg) {\n\t\tthis.bus.send(msg);\n\t};\n\n\tthis.bindBusEvents = function () {\n\t\tthis.bus.atMessage = function (msg, socket) {\n\t\t\tif (msg.type == 'sessionCheck') {\n\t\t\t\tif (this.session != msg.session) {\n\t\t\t\t\tif (this.session) location.href = location.href;else {\n\t\t\t\t\t\tthis.session = msg.session;\n\t\t\t\t\t\tthis.bus.send({ type: 'connectScreen', name: this.screenname });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n   else if(msg.type == 'webrtcOffer'){\n   \tif(msg.index != this.index && this.webrtc_offer){ // we got a webrtcOffer\n   \t\tthis.webrtc_answer = WebRTC.acceptOffer(msg.offer)\n   \t\tthis.webrtc_answer.onIceCandidate = function(candidate){\n   \t\t\t//console.log('sending answer candidate')\n   \t\t\tthis.bus.send({type:'webrtcAnswerCandidate', candidate:candidate, index: this.index})\n   \t\t}\n   \t\tthis.webrtc_answer.onAnswer = function(answer){\n   \t\t\t//console.log('sending answer')\n   \t\t\tthis.bus.send({type:'webrtcAnswer', answer:answer, index: this.index})\n   \t\t}\n   \t\tthis.webrtc_answer.atMessage = this.webrtc_offer.atMessage\n   \t}\n   }\n   else if(msg.type == 'webrtcAnswer'){\n   \tif(this.webrtc_offer && msg.index != this.index){\n   \t\t//console.log('accepting answer')\n   \t\tthis.webrtc_offer.acceptAnswer(msg.answer)\n   \t}\n   }\n   else if(msg.type == 'webrtcAnswerCandidate'){\n   \tif(this.webrtc_offer && msg.index != this.index){\n   \t\t//console.log('adding answer candidate')\n   \t\tthis.webrtc_offer.addCandidate(msg.candidate)\n   \t}\n   }\n   else if(msg.type == 'webrtcOfferCandidate'){\n   \tif(this.webrtc_answer && msg.index != this.index){\n   \t\t//console.log('adding offer candidate')\n   \t\tthis.webrtc_answer.addCandidate(msg.candidate)\n   \t}\n   }*/\n\t\t\telse if (msg.type == 'connectScreenOK') {\n\t\t\t\t\t//RpcProxy.createFromDefs(msg.rpcdef, this, rpcpromise)\n\t\t\t\t\t/*\n     this.webrtc_offer = WebRTC.createOffer()\n     this.index = msg.index\n     \tthis.webrtc_offer.atIceCandidate = function(candidate){\n     \tthis.bus.send({type:'webrtcCandidate', candidate:candidate, index: this.index})\n     }.bind(this)\n     \tthis.webrtc_offer.atOffer = function(offer){\n     \tthis.bus.send({type:'webrtcOffer', offer:offer, index: this.index})\n     }.bind(this)\n     */\n\t\t\t\t\tfor (var key in msg.attributes) {\n\t\t\t\t\t\tvar attrmsg = msg.attributes[key];\n\t\t\t\t\t\t// process it\n\t\t\t\t\t\tthis.bus.atMessage(attrmsg, socket);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.rendered) this.doRender();\n\t\t\t\t} else if (msg.type == 'connectScreen') {\n\t\t\t\t\t//var obj = RpcProxy.decodeRpcID(this, msg.rpcid)\n\t\t\t\t\t//if(!obj) console.log('Cannot find '+msg.rpcid+' on join')\n\t\t\t\t\t//else obj.createIndex(msg.index, msg.rpcid, rpcpromise)\n\t\t\t\t} else if (msg.type == 'attribute') {\n\n\t\t\t\t\tthis.cached_attributes[msg.rpcid + '_' + msg.attribute] = msg;\n\n\t\t\t\t\tvar split = msg.rpcid.split('.');\n\t\t\t\t\tvar obj;\n\t\t\t\t\t// see if its a set attribute on ourself\n\t\t\t\t\tif (split[0] === this.screenname) {\n\t\t\t\t\t\tobj = this.screen;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj = this.rpc;\n\t\t\t\t\t\tfor (var i = 0; i < split.length; i++) {\n\t\t\t\t\t\t\tobj = obj[split[i]];\n\t\t\t\t\t\t\tif (!obj) return console.log(\"Invalid rpc attribute \" + msg.rpcid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!obj) return console.log(\"Invalid rpc attribute \" + msg.rpcid);\n\t\t\t\t\tvar value = defineDreem.structFromJSON(msg.value);\n\t\t\t\t\tvar attrset = obj.atAttributeSet;\n\t\t\t\t\tobj.atAttributeSet = undefined;\n\t\t\t\t\tobj[msg.attribute] = value;\n\t\t\t\t\tobj.atAttributeSet = attrset;\n\t\t\t\t} else if (msg.type == 'method') {\n\t\t\t\t\t// someone is calling a method on us.\n\t\t\t\t\tmethod = this.screen[msg.method];\n\t\t\t\t\tif (!method) {\n\t\t\t\t\t\treturn console.log(\"Invalid rpc method\" + msg.method);\n\t\t\t\t\t}\n\t\t\t\t\tvar ret = method.apply(this.screen, msg.args);\n\t\t\t\t\tvar uid = msg.uid;\n\t\t\t\t\tif (ret && (typeof ret === 'undefined' ? 'undefined' : _typeof(ret)) === 'object' && ret.then) {\n\t\t\t\t\t\t// promise\n\t\t\t\t\t\tret.then(function (result) {\n\t\t\t\t\t\t\tvar rmsg = { type: 'return', uid: uid, value: result };\n\t\t\t\t\t\t\tif (!defineDreem.isSafeJSON(result)) {\n\t\t\t\t\t\t\t\tconsole.log(\"Rpc return value not json safe\" + msg.method);\n\t\t\t\t\t\t\t\trmsg.error = 'Return value not json safe';\n\t\t\t\t\t\t\t\trmsg.value = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsocket.send(rmsg);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rmsg = { type: 'return', uid: uid, value: ret };\n\t\t\t\t\t\tif (!defineDreem.isSafeJSON(ret)) {\n\t\t\t\t\t\t\tconsole.log(\"Rpc return value not json safe\" + msg.method);\n\t\t\t\t\t\t\trmsg.error = 'Return value not json safe';\n\t\t\t\t\t\t\trmsg.value = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsocket.send(rmsg);\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.type == 'return') {\n\t\t\t\t\tthis.rpc.resolveReturn(msg);\n\t\t\t\t}\n\t\t}.bind(this);\n\t};\n\n\tthis.log = function () {\n\t\tvar args = Array.prototype.slice.apply(arguments);\n\t\tRpcProxy.isJsonSafe(args);\n\t\tthis.bus.send({\n\t\t\ttype: 'log',\n\t\t\targs: args\n\t\t});\n\t\tconsole.log.apply(console, args);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/compositionclient.js\n// module id = 110\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/compositionclient.js?");

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function () {\n\tthis.atConstructor = function () {};\n\n\t// Base class for all implementations of the device subsystem\n\n\t// a device should:\n\t// - open a drawing context for a single \"screen\" in the composition\n\t// - provide user-interface hooks (pointer/keyboard) \n\t// - provide a frame-hook for accurate tear-free display & animations\n\n\n\tthis.atRedraw = function (time) {};\n\n\tthis.atResize = function () {};\n\n\t// some list of layers\n\n\t// layer has list of draweable shader instances + ref to mesh\n\t// - calculateable z-index\n\t// - 3d mode needs to sort\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/device.js\n// module id = 111\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/device.js?");

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/parse/onejsserialize', function (requireDreem, exports, baseclass) {\n\n\tvar gltypes = requireDreem('./gltypes');\n\tvar OneJSParser = requireDreem('$system/parse/onejsparser');\n\tvar OneJSGen = requireDreem('$system/parse/onejsgen.js');\n\tvar Texture = requireDreem('$system/platform/$platform/texture$platform');\n\t//var vectorParser = requireDreem('$system/parse/vectorparser')\n\tvar onejsparser = new OneJSParser();\n\tonejsparser.parser_cache = {};\n\n\tthis.newState = function (context, varyings, uniforms) {\n\t\treturn {\n\t\t\tdepth: '',\n\t\t\tbasename: '',\n\t\t\tstack: 0,\n\t\t\tcontext: context,\n\t\t\tattributes: {},\n\t\t\treference_is_attr: {},\n\t\t\tvaryings: varyings || {},\n\t\t\tuniforms: uniforms || {},\n\t\t\tstructs: [],\n\t\t\tscope: {},\n\t\t\tscopeio: {},\n\t\t\tfnorder: [],\n\t\t\tfunctions: {},\n\t\t\tastcache: {},\n\t\t\ttextures: {},\n\t\t\tcall: { deps: {} },\n\t\t\tdebug: {},\n\t\t\tdump: {}\n\t\t};\n\t};\n\n\t// returns a gl type\n\tthis.getType = function (infer, state) {\n\t\t// OK so, mesh doesnt get typed here but in glshader\n\t\tif (infer.fn_t === 'attribute') infer = infer.array.struct;\n\t\treturn gltypes.getType(infer);\n\t};\n\n\tthis.resolveContext = function (node, context, name, basename, state) {\n\t\t// compute output name\n\t\tvar outname;\n\n\t\tif (basename) outname = basename + \"_DOT_\" + name;else outname = name;\n\n\t\t// uniform\n\t\tif (name === 'super') {\n\t\t\tnode.infer = { fn_t: 'object', object: Object.getPrototypeOf(context) };\n\t\t\treturn name;\n\t\t}\n\n\t\tvar attr_name = '_' + name;\n\t\tvar obj;\n\t\tif (attr_name in context) {\n\t\t\t// its an attribute reference\n\t\t\tobj = context[attr_name];\n\t\t\tstate.reference_is_attr[outname] = 1;\n\t\t} else {\n\t\t\tobj = context[name];\n\t\t}\n\t\tif (typeof obj === 'undefined' && context.wildcard) {\n\t\t\tobj = context.wildcard;\n\t\t}\n\n\t\tif (typeof obj === 'number') {\n\t\t\tstate.uniforms[outname] = node.infer = float32;\n\t\t\treturn outname;\n\t\t}\n\t\t// uniform\n\t\tif (typeof obj === 'boolean') {\n\t\t\tnode.infer = state.uniforms[outname] = bool;\n\t\t\treturn outname;\n\t\t}\n\t\t// we are a custom type\n\t\tif (typeof obj === 'function' && obj.struct) {\n\t\t\tstate.structs[name] = obj;\n\t\t\tnode.infer = {\n\t\t\t\tfn_t: 'constructor',\n\t\t\t\tret: obj\n\t\t\t};\n\t\t\treturn outname;\n\t\t}\n\t\t// attribute\n\t\tif (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.struct) {\n\t\t\t// if we are an array, we are an attribute\n\t\t\tif (obj.isArray) {\n\t\t\t\tif (obj.struct.id) {\n\t\t\t\t\tstate.attributes[outname] = obj.struct;\n\t\t\t\t}\n\t\t\t\tnode.infer = {\n\t\t\t\t\tfn_t: 'attribute',\n\t\t\t\t\tarray: obj\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tnode.infer = state.uniforms[outname] = obj.struct;\n\t\t\t}\n\t\t\treturn outname;\n\t\t} else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n\t\t\tif (obj instanceof Texture.Image) {\n\t\t\t\tobj = context[name] = Texture.fromImage(obj);\n\t\t\t}\n\t\t\tnode.infer = { fn_t: 'object', object: obj\n\t\t\t\t//if(state.basename) return state.basename + '_DOT_' + outname\n\t\t\t};return outname;\n\t\t}\n\t\tif (typeof obj === 'string' || typeof obj === 'function') {\n\t\t\tvar functionref = obj;\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\tif (obj.is_wired) {\n\t\t\t\t\tstate.uniforms[outname] = node.infer = float32;\n\t\t\t\t\treturn outname;\n\t\t\t\t}\n\n\t\t\t\tobj = obj.__string__ || (obj.__string__ = obj.toString());\n\t\t\t}\n\t\t\t// lets parse and figure out what we are\n\n\t\t\tvar ast = onejsparser.parse(obj).steps[0];\n\t\t\t// lets check what thing we have\n\t\t\tif (ast.type === 'Function') {\n\t\t\t\tnode.infer = { fn_t: 'ast', context: context, basename: basename, name: outname, ast: ast, functionref: functionref, source: obj };\n\t\t\t\treturn outname;\n\t\t\t}\n\t\t\t// otherwise we recur on the ast in place\n\t\t\t//!TODO add proper error reporting inside this thing\n\t\t\tvar fstate = Object.create(state);\n\t\t\tfstate.functionref = functionref;\n\t\t\tfstate.source = obj;\n\t\t\tfstate.callname = name;\n\t\t\treturn this.expand(ast, node, fstate);\n\t\t}\n\t};\n\n\tthis.This = function (node, parent, state) {\n\t\tnode.infer = { fn_t: 'object', object: state.context };\n\t\treturn state.basename;\n\t};\n\n\tthis.Id = function (node, parent, state) {\n\t\t// lets resolve ourself\n\t\tvar name = node.name;\n\n\t\tvar def_t = defineDreem.typemap.types[name];\n\t\tif (def_t) {\n\t\t\tnode.infer = { fn_t: 'constructor', ret: def_t };\n\t\t\treturn name;\n\t\t}\n\t\t// lets check if we have a function\n\t\tvar inscope = state.scope[name];\n\t\tif (inscope) {\n\t\t\tvar io = state.scopeio[name] || 0;\n\t\t\tif (state.assignvarying) {\n\t\t\t\t// we have to assign an 'out' value to it\n\t\t\t\tstate.scopeio[name] = io | 1;\n\t\t\t} else {\n\t\t\t\tstate.scopeio[name] = io | 2;\n\t\t\t}\n\t\t\tnode.infer = inscope;\n\t\t\treturn name;\n\t\t}\n\t\t// lets check gl variables\n\t\tvar glvar = gltypes.variables[name];\n\t\tif (glvar) {\n\t\t\tnode.infer = glvar;\n\t\t\treturn name;\n\t\t}\n\t\tvar glfn = gltypes.functions[name];\n\t\tif (glfn) {\n\t\t\tnode.infer = { fn_t: 'builtin', ret: glfn };\n\t\t\treturn name;\n\t\t}\n\t\t// gl functions\n\t\t// resolve on context\n\t\tvar res = this.resolveContext(node, state.context, name, state.basename, state);\n\n\t\tif (res !== undefined) return res;\n\n\t\tvar varying = state.varyings[name];\n\t\tif (varying) {\n\t\t\tnode.infer = varying;\n\t\t\treturn name;\n\t\t}\n\t\t// what if we are an id and we cant resolve ourselves,\n\t\tif (state.assignvarying) {\n\t\t\t// lets check if our name is debug\n\t\t\tif (name === 'dbg') {\n\t\t\t\tif (state.debug.type) throw new Error('Please only use one debug statement');\n\t\t\t\tstate.debug.type = node.infer = state.assignvarying;\n\t\t\t\treturn 'dbg';\n\t\t\t}\n\t\t\tif (name === 'dump') {\n\t\t\t\t//if(state.dump.type) throw new Error('Please only use one dump statement')\n\t\t\t\tstate.dump.set = true; //type = node.infer = state.assignvarying\n\t\t\t\tnode.infer = { fn_t: 'dump' };\n\t\t\t\treturn 'dump';\n\t\t\t}\n\t\t\tstate.varyings[name] = state.assignvarying;\n\t\t\treturn name;\n\t\t}\n\t\tif (name in state.context) {\n\t\t\tthrow new Error('Identifier \"' + name + '\" exists but is undefined in ' + state.callname + '(...)\\n' + state.source);\n\t\t} else {\n\t\t\t//var gen = new OneJSGen() \n\t\t\t// lets find the parent\n\t\t\t//var p = node\n\t\t\t//while(p.parent) p = p.parent\n\t\t\t//var str = gen.expand(p, null, {})\n\t\t\t//var name = gen.expand(node, null, {})\n\t\t\tconsole.error('Identifier cannot be resolved ' + name + ' in ' + state.callname + '()\\n' + state.source);\n\t\t\t// make it throw in the function so we can find it\n\t\t\t//state.functionref()\n\t\t\t//state.fn()\n\t\t\t//throw new Error('Identifier cannot be resolved '+name+' in ' +state.callname+'()\\n'+state.source)\n\t\t}\n\t};\n\n\tthis.Key = function (node, parent, state) {\n\t\t// lets expand the object\n\t\tvar obj = this.expand(node.object, node, state);\n\t\t//$$(obj, node.object.infer.id)\n\n\t\t// lets access the type property\n\t\tvar key = node.key.name;\n\t\t// lets fetch the type for our key access\n\t\tvar infer = node.infer;\n\t\t// we can also be referencing another object\n\t\tif (infer.fn_t === 'object') {\n\t\t\t// lets switch context and expand id\n\t\t\tvar ret = this.resolveContext(node, infer.object, key, obj, state);\n\t\t\t//if(key === 'bgcolor')console.log(ret)\n\t\t\t//if(ret === 'view_DOT_layoutview_DOT_width') console.log(key, obj, state.basename)\n\t\t\tif (ret === undefined) {\n\t\t\t\tconsole.log(infer.object, state);\n\t\t\t\tthrow new Error('Cannot resolve ' + obj + '.' + key + ' in ' + state.callname + '(...)\\n' + state.source);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t\tvar struct = infer;\n\t\tif (infer.fn_t === 'attribute') {\n\t\t\t// we can access uniform properties on arrays\n\t\t\tif (key in infer.array) {\n\t\t\t\treturn this.resolveContext(node, infer.array, key, obj, state);\n\t\t\t}\n\t\t\t// otherwise fall through to attribute struct access\n\t\t\tstruct = infer.array.struct;\n\t\t}\n\n\t\tnode.infer = struct.keyType(key);\n\t\tif (!node.infer) {\n\t\t\tconsole.log(infer.array.font);\n\t\t\tthrow new Error('Cannot find property ' + obj + '.' + key + ' on ' + struct.id + ' in ' + state.callname + '(...)\\n' + state.source);\n\t\t}\n\n\t\tif (!struct.id && infer.fn_t === 'attribute') {\n\t\t\tvar name = obj + '_DOT_' + key;\n\t\t\tstate.attributes[name] = node.infer;\n\t\t\treturn name;\n\t\t}\n\t\treturn (obj ? obj + '.' : '') + key;\n\t};\n\n\tthis.Index = function (node, parent, state) {\n\t\t// ok doing an index. lets look it up\n\t\tvar obj = this.expand(node.object, node, state);\n\t\tif (!node.index) {\n\t\t\t// we are an [] attribute\n\t\t\treturn obj;\n\t\t}\n\t\treturn obj + '[' + this.expand(node.index, node, state) + ']';\n\t};\n\n\tthis.texture2DSampler = {\n\t\tMIN_FILTER: 'LINEAR',\n\t\tMAG_FILTER: 'LINEAR',\n\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t};\n\n\tthis.texture2DShorten = {\n\t\tMIN_FILTER: 'I',\n\t\tMAG_FILTER: 'A',\n\t\tWRAP_S: 'S',\n\t\tWRAP_T: 'T',\n\t\tNEAREST: 'N',\n\t\tLINEAR: 'L',\n\t\tNEAREST_MIPMAP_NEAREST: 'NN',\n\t\tLINEAR_MIPMAP_NEAREST: 'LN',\n\t\tNEAREST_MIPMAP_LINEAR: 'NL',\n\t\tLINEAR_MIPMAP_LINEAR: 'LL',\n\t\tREPEAT: 'R',\n\t\tCLAMP_TO_EDGE: 'C',\n\t\tMIRRORED_REPEAT: 'M'\n\n\t\t// custom handle function\n\t};this.macro_texture2D = function (node, parent, state) {\n\t\t// lets build the args\n\t\t// the first argument is the texture object\n\t\tvar args = node.args;\n\t\tif (args.length < 2) throw new Error('texture2D needs atleast 2 arguments');\n\t\t// lets resolve the texture\n\t\tvar tex_ast = args[0];\n\t\tvar tex_obj, tex_name;\n\t\tif (tex_ast.type === 'This') {\n\t\t\t// process the this\n\t\t\ttex_obj = state.context;\n\t\t\ttex_name = state.basename;\n\t\t} else if (tex_ast.type == 'Id') {\n\t\t\t// otherwise process the Id\n\t\t\ttex_name = tex_ast.name;\n\t\t\ttex_obj = state.context[tex_name];\n\t\t} else {\n\t\t\ttex_name = this.expand(tex_ast, node, state);\n\t\t\ttex_obj = tex_ast.infer.object;\n\t\t}\n\t\t//else throw new Error('texture2D can only resolve single identifiers or this')\n\t\t//if(!(tex_obj instanceof Texture)) throw new Error('texture2D only accepts GLTexture')\n\n\t\t// lets get the sampler info\n\t\tvar sampler = {};\n\t\tif (args.length >= 3) {\n\t\t\tvar obj = args[2];\n\t\t\tif (obj.type === 'Id') sampler = state.context[obj.name];else if (obj.type === 'Object') {\n\t\t\t\tsampler = {};\n\t\t\t\tvar keys = obj.keys;\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tvar elem = keys[i];\n\t\t\t\t\tsampler[elem.key.name] = elem.value.value;\n\t\t\t\t}\n\t\t\t} else throw new Error('texture2D needs an object as argument 3');\n\t\t}\n\t\tvar dec = '';\n\t\tfor (var key in this.texture2DSampler) {\n\t\t\tif (!sampler[key]) sampler[key] = this.texture2DSampler[key];\n\t\t\tif (dec) dec += '_';\n\t\t\tdec += this.texture2DShorten[key] + this.texture2DShorten[sampler[key]];\n\t\t}\n\t\t// ok lets define the texture\n\t\tvar final_name = tex_name + '_' + dec;\n\n\t\tvar out = state.textures[final_name] = {\n\t\t\tsamplerdef: sampler,\n\t\t\tsamplerid: dec,\n\t\t\tname: tex_name\n\t\t};\n\t\tnode.infer = vec4;\n\n\t\treturn 'texture2D(' + final_name + ',' + this.expand(args[1], node, state) + ')';\n\t};\n\n\tthis.macro_typeof = function (node, parent, state) {\n\t\tvar arg0 = node.args[0];\n\t\tthis.expand(arg0, node, state);\n\t\tnode.infer = {\n\t\t\tfn_t: 'constructor',\n\t\t\tret: arg0.infer\n\t\t};\n\t\treturn node.infer.ret.id;\n\t};\n\n\tthis.Call = function (node, parent, state) {\n\t\tvar fn = this.expand(node.fn, node, state);\n\t\tvar type = node.fn.infer;\n\t\tif (!type) throw new Error('Cannot infer type for call on ' + fn);\n\t\tif (!type.fn_t) throw new Error('Call on a non function ' + fn);\n\t\t// set the return type\t\t\n\t\tif (type.fn_t === 'constructor') {\n\t\t\tnode.infer = type.ret;\n\t\t}\n\n\t\tif (type.fn_t == 'builtin') {\n\t\t\tif (node.fn.name == 'texture2D') {\n\t\t\t\treturn this.macro_texture2D(node, parent, state);\n\t\t\t}\n\n\t\t\tif (node.fn.name == 'typeof') {\n\t\t\t\treturn this.macro_typeof(node, parent, state);\n\t\t\t}\n\n\t\t\tif (node.fn.name == 'debug') {\n\t\t\t\treturn this.macro_debug(node, parent, state);\n\t\t\t}\n\t\t}\n\n\t\t// lets process the arg\n\t\tvar args = this.callArgs(node, parent, state);\n\n\t\tif (type.fn_t === 'ast') {\n\t\t\t// we have to expand the function\n\t\t\tfn = type.name;\n\n\t\t\tvar undecorated = fn;\n\t\t\t// lets annotate the function name by arg type\n\n\t\t\tif (node.args) {\n\t\t\t\tfn += '_T';\n\t\t\t\tfor (var i = 0; i < node.args.length; i++) {\n\t\t\t\t\tvar infer = node.args[i].infer;\n\t\t\t\t\tif (!infer) throw new Error('Argument type cannot be inferred ' + fn + ' ' + i);\n\t\t\t\t\tfn += '_' + this.getType(infer, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// lets \n\t\t\t// check if we already compiled it\n\t\t\tvar fnobj = state.functions[fn];\n\t\t\tif (!fnobj) {\n\t\t\t\tstate.functions[fn] = fnobj = {\n\t\t\t\t\targs: node.args,\n\t\t\t\t\tname: fn,\n\t\t\t\t\tundecorated: undecorated,\n\t\t\t\t\tdeps: {}\n\t\t\t\t};\n\t\t\t\tstate.call.deps[fn] = fnobj;\n\t\t\t\t// set argument types on scope\n\t\t\t\tvar fstate = Object.create(state);\n\t\t\t\t// mark it \n\t\t\t\tfstate.depth = '';\n\t\t\t\tfstate.functionref = type.functionref;\n\t\t\t\tfstate.source = type.source;\n\t\t\t\tfstate.callname = fn;\n\t\t\t\tfstate.scope = {};\n\t\t\t\tfstate.scopeio = {};\n\t\t\t\t// we need to switch context\n\t\t\t\tfstate.context = type.context;\n\t\t\t\tfstate.basename = type.basename || state.basename;\n\t\t\t\tfstate.call = fnobj;\n\t\t\t\t// ok well we have a function. lets expand it\n\t\t\t\tvar fnast = type.ast;\n\n\t\t\t\tfnobj.code = this.expand(type.ast, undefined, fstate), fnobj.return_t = fstate.call.return_t;\n\n\t\t\t\tif (fstate.call.dump) {\n\t\t\t\t\tconsole.log(fnobj.code);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate.call.deps[fn] = fnobj;\n\t\t\t}\n\n\t\t\tnode.infer = fnobj.return_t;\n\t\t} else if (type.fn_t === 'builtin') {\n\t\t\t// lets check if we are a texture2D\n\n\t\t\tif (typeof type.ret === 'number') {\n\t\t\t\t// use arg type\n\t\t\t\tnode.infer = node.args[type.ret - 1].infer;\n\t\t\t} else {\n\t\t\t\tnode.infer = type.ret;\n\t\t\t}\n\t\t}\n\t\treturn fn + '(' + args + ')';\n\t\t// alright so we are calling something, lets check what it is.\n\t\t// if its a function we need to start inlining it\n\t};\n\n\tthis.Var = function (node, parent, state) {\n\t\t// ok we have to define our local vars on scope\n\t\tvar defs = node.defs;\n\t\tvar ret = '';\n\t\tfor (var i = 0; i < defs.length; i++) {\n\t\t\tvar def = defs[i];\n\t\t\t// lets expand a define\n\t\t\tvar init = this.expand(def, node, state);\n\n\t\t\t// lets check the infer on defs\n\t\t\tif (i) ret += ';\\n';\n\t\t\tret += this.getType(def.infer, state) + ' ' + init;\n\t\t\tstate.scope[def.id.name] = def.infer;\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.Binary = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar right = this.expand(node.right, node, state);\n\n\t\tif (this.needsParens(node, node.left)) left = '(' + left + ')';\n\t\tif (this.needsParens(node, node.right)) right = '(' + right + ')';\n\n\t\t// ok lets propagate the types and do auto type conversion.\n\t\tvar left_t = this.getType(node.left.infer, state);\n\t\tvar right_t = this.getType(node.right.infer, state);\n\t\t//console.log(left+node.op+right,left_t,right_t)\n\t\t// automatic type conversions\n\t\tif (left_t === 'int' && right_t === 'float') {\n\t\t\tleft = 'float(' + left + ')';\n\t\t\tnode.infer = float32;\n\t\t} else if (right_t === 'int' && left_t === 'float') {\n\t\t\tright = 'float(' + right + ')';\n\t\t} else if (left_t === 'mat4') {\n\t\t\tif (right_t === 'vec2') {\n\t\t\t\tright = 'vec4(' + right + ',0.,1.)';\n\t\t\t\tnode.infer = vec4;\n\t\t\t} else if (right_t === 'vec3') {\n\t\t\t\tright = 'vec4(' + right + ',1.)';\n\t\t\t\tnode.infer = vec4;\n\t\t\t} else if (right_t === 'vec4') {\n\t\t\t\tnode.infer = vec4;\n\t\t\t}\n\t\t} else if (right_t === 'mat4') {\n\t\t\tif (left_t === 'vec2') {\n\t\t\t\tleft = 'vec4(' + left + ',0.,1.)';\n\t\t\t\tnode.infer = vec4;\n\t\t\t} else if (left_t === 'vec3') {\n\t\t\t\tleft = 'vec4(' + left + ',1.)';\n\t\t\t\tnode.infer = vec4;\n\t\t\t} else if (left_t === 'vec4') {\n\t\t\t\tnode.infer = vec4;\n\t\t\t}\n\t\t} else if (left_t === 'mat2') {\n\t\t\tif (right_t === 'vec2') {\n\t\t\t\tnode.infer = vec2;\n\t\t\t} else if (right_t === 'mat2') {\n\t\t\t\tnode.infer = mat2;\n\t\t\t}\n\t\t} else if (right_t === 'mat2') {\n\t\t\tif (left_t === 'vec2') {\n\t\t\t\tnode.infer = vec2;\n\t\t\t}\n\t\t} else if (left_t === 'float') {\n\t\t\tif (right_t === 'vec2') {\n\t\t\t\tnode.infer = vec2;\n\t\t\t}\n\t\t\tif (right_t === 'vec3') {\n\t\t\t\tnode.infer = vec3;\n\t\t\t}\n\t\t\tif (right_t === 'vec4') {\n\t\t\t\tnode.infer = vec4;\n\t\t\t}\n\t\t} else if (left_t === 'int') {\n\t\t\tif (right_t === 'vec2') {\n\t\t\t\tleft = 'float(' + left + ')';\n\t\t\t\tnode.infer = vec2;\n\t\t\t}\n\t\t\tif (right_t === 'vec3') {\n\t\t\t\tleft = 'float(' + left + ')';\n\t\t\t\tnode.infer = vec3;\n\t\t\t}\n\t\t\tif (right_t === 'vec4') {\n\t\t\t\tleft = 'float(' + left + ')';\n\t\t\t\tnode.infer = vec4;\n\t\t\t}\n\t\t} else if (right_t === 'int') {\n\t\t\tif (left_t === 'vec2') {\n\t\t\t\tright = 'float(' + right + ')';\n\t\t\t\tnode.infer = vec2;\n\t\t\t}\n\t\t\tif (left_t === 'vec3') {\n\t\t\t\tright = 'float(' + right + ')';\n\t\t\t\tnode.infer = vec3;\n\t\t\t}\n\t\t\tif (left_t === 'vec4') {\n\t\t\t\tright = 'float(' + right + ')';\n\t\t\t\tnode.infer = vec4;\n\t\t\t}\n\t\t}\n\n\t\treturn left + this.space + node.op + this.space + right;\n\t};\n\n\tthis.Condition = function (node, parent, state) {\n\n\t\tvar ret = baseclass.Condition.call(this, node, parent, state);\n\n\t\t// lets compare the types of \n\t\tvar then_t = node.then.infer;\n\t\tvar else_t = node.else.infer;\n\t\tif (then_t !== else_t) {\n\t\t\tthrow new Error('Please make sure a?b:c b and c are the same type: ' + ret);\n\t\t}\n\t\tnode.infer = then_t;\n\t\treturn ret;\n\t};\n\n\tthis.Assign = function (node, parent, state) {\n\t\t// ok we run our lhs in varying mode\n\t\tvar right = this.expand(node.right, node, state);\n\t\tvar lstate = Object.create(state);\n\t\tlstate.assignvarying = node.right.infer;\n\t\tvar left = this.expand(node.left, node, lstate);\n\n\t\tif (node.left.infer && node.left.infer.fn_t == 'dump') {\n\t\t\tvar type = gltypes.getType(node.right.infer);\n\t\t\tif (type == 'int') return 'dump = vec4(vec3(0.5) + vec3(0.5) * cos(6.28318 * (vec3(1.) * (float(' + right + ')/10.) + vec3(0.,0.33,0.67))),1.);\\n';\n\t\t\tif (type == 'float') return 'dump = vec4(vec3(0.5) + vec3(0.5) * cos(6.28318 * (vec3(1.) * (' + right + ') + vec3(0.,0.33,0.67))),1.);\\n';\n\t\t\tif (type == 'ivec2') return 'dump = vec4(vec2(' + right + ').xyx/255.,1.);\\n';\n\t\t\tif (type == 'ivec3') return 'dump = vec4(vec3(' + right + ')/255.,1.);\\n';\n\t\t\tif (type == 'vec2') return 'dump = vec4(vec2(' + right + ').xyx/255.,1.);\\n';\n\t\t\tif (type == 'vec3') return 'dump = vec4(' + right + ', 1.);\\n';\n\t\t}\n\n\t\treturn left + this.space + node.op + this.space + right;\n\t};\n\n\tthis.Logic = function (node, parent, state) {\n\t\t// return type boolean\n\n\t\tvar ret = baseclass.Logic.call(this, node, parent, state);\n\t\tnode.infer = boolean;\n\n\t\treturn ret;\n\t};\n\n\tthis.Return = function (node, parent, state) {\n\t\tvar ret = 'return';\n\n\t\tif (node.arg) {\n\t\t\tret += ' ' + this.expand(node.arg, node, state);\n\t\t\tvar type = node.arg.infer;\n\t\t\tif (state.call.return_t !== undefined && state.call.return_t !== type) {\n\t\t\t\tthrow new Error('function ' + state.call.name + 'has more than one return type');\n\t\t\t}\n\t\t\tstate.call.return_t = type;\n\t\t} else {\n\t\t\tstate.call.return_t = null;\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.Function = function (node, parent, state) {\n\t\tvar ret = state.call.name + '(';\n\t\tvar args = state.call.args;\n\t\tvar params = node.params;\n\t\tif (args.length !== params.length) throw new Error('Calling function ' + state.call.name + 'with wrong argcount ' + args.length + ' instead of ' + params.length + ' in ' + state.callname + '(...)\\n' + state.source);\n\n\t\t// lets generate function arguments\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t// lets fetch the type\n\t\t\tvar type = args[i].infer;\n\t\t\tvar name = this.expand(params[i], node, state);\n\t\t\tstate.scope[name] = type; // define scope variable\n\t\t}\n\n\t\tvar body = this.expand(node.body, node, state);\n\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tvar name = this.expand(params[i], node, state);\n\t\t\tvar type = args[i].infer;\n\t\t\tvar glname = this.getType(type, state);\n\t\t\tif (i) ret += ', ';\n\t\t\t// so how do we know if its an 'in'\n\t\t\tvar io = state.scopeio[name];\n\t\t\tif (io & 2) ret += 'in';\n\t\t\tif (io & 1) ret += 'out';\n\t\t\tif (io) ret += ' ';\n\t\t\tret += glname + ' ' + name;\n\t\t}\n\n\t\tret += ')';\n\t\tret += body;\n\n\t\t// return type\n\t\tvar return_t = state.call.return_t;\n\n\t\tif (!return_t) ret = 'void ' + ret;else {\n\t\t\tret = this.getType(return_t, state) + ' ' + ret;\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.Def = function (node, parent, state) {\n\t\t// lets not resolve our Id\n\t\tif (node.id.type !== 'Id') throw new Error('Def unsupported');\n\t\tvar ret = node.id.name;\n\t\tif (node.init) {\n\t\t\tvar init = this.expand(node.init, node, state);\n\t\t\tif (node.init.type == 'Call' && node.init.fn.infer.fn_t === 'constructor') {\n\t\t\t\tif (node.init.args && node.init.args.length) ret += ' = ' + init;\n\t\t\t} else ret += ' = ' + init;\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.Value = function (node, parent, state) {\n\t\t// check if our parent is a call\n\t\tvar floatcast;\n\t\tif (parent && parent.type === 'Call' && parent.fn.infer && parent.fn.infer.fn_t === 'constructor' && parent.infer.primary === float32) {\n\t\t\tfloatcast = true;\n\t\t}\n\t\tif (node.kind === 'num') {\n\t\t\tvar isfloat = node.raw.indexOf('.') !== -1 || node.raw.indexOf('e') !== -1;\n\t\t\tif (node.raw.indexOf('0x') === -1 && floatcast && !isfloat) {\n\t\t\t\tnode.infer = float32;\n\t\t\t\treturn node.raw + '.0';\n\t\t\t}\n\t\t\tif (isfloat) node.infer = float32;else node.infer = int32;\n\t\t\treturn node.raw;\n\t\t}\n\t\tif (node.kind === 'string') {\n\t\t\tif (node.value === 'dump') {\n\t\t\t\tstate.call.dump = 1;\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tif (node.value === 'trace') {\n\t\t\t\tstate.trace = 1;\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\t// parseColor it\n\t\t\tvar color = vec4.parse(node.value);\n\t\t\tnode.infer = vec4;\n\t\t\treturn 'vec4(' + color[0] + ',' + color[1] + ',' + color[2] + ',' + color[3] + ')';\n\t\t}\n\t\tif (node.raw === 'true' || node.raw === 'false') {\n\t\t\tnode.infer = bool;\n\t\t}\n\t\treturn node.raw;\n\t};\n\n\t// illegal tags\n\tthis.ForIn = function () {\n\t\tthrow new Error('Cannot use for in in shader');\n\t};\n\tthis.ForOf = function () {\n\t\tthrow new Error('Cannot use for of in shader');\n\t};\n\tthis.Struct = function () {\n\t\tthrow new Error('Cannot use struct in shader');\n\t};\n\tthis.Comprehension = function () {\n\t\tthrow new Error('Cannot use comprehension in shader');\n\t};\n\tthis.ThisCall = function () {\n\t\tthrow new Error('Cannot use thiscall in shader');\n\t};\n\tthis.Template = function () {\n\t\tthrow new Error('Cannot use template in shader');\n\t};\n\tthis.Throw = function () {\n\t\tthrow new Error('Cannot use throw in shader');\n\t};\n\tthis.Try = function () {\n\t\tthrow new Error('Cannot use try in shader');\n\t};\n\tthis.Enum = function () {\n\t\tthrow new Error('Cannot use enum in shader');\n\t};\n\tthis.Define = function () {\n\t\tthrow new Error('Cannot use define in shader');\n\t};\n\tthis.New = function () {\n\t\tthrow new Error('Cannot use new in shader');\n\t};\n\tthis.Nest = function () {\n\t\tthrow new Error('Cannot use nest in shader');\n\t};\n\tthis.Class = function () {\n\t\tthrow new Error('Cannot use class in shader');\n\t};\n\tthis.Quote = function () {\n\t\tthrow new Error('Cannot use quote in shader');\n\t};\n\tthis.Rest = function () {\n\t\tthrow new Error('Cannot use rest in shader');\n\t};\n\tthis.Then = function () {\n\t\tthrow new Error('Cannot use then in shader');\n\t};\n\tthis.Debugger = function () {\n\t\tthrow new Error('Cannot use debugger in shader');\n\t};\n\tthis.With = function () {\n\t\tthrow new Error('Cannot use with in shader');\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/glslgen.js\n// module id = 112\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/glslgen.js?");

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\texports.getType = function (type) {\n\t\tif (type === null) return 'void';\n\t\tvar name = this.typemap[type.id] || type.id;\n\t\treturn name;\n\t}, exports.extensions = {\n\t\tOES_texture_float: 1,\n\t\tOES_texture_half_float: 1,\n\t\tWEBGL_lose_context: 1,\n\t\tOES_standard_derivatives: 1,\n\t\tOES_vertex_array_object: 1,\n\t\tWEBGL_debug_renderer_info: 1,\n\t\tWEBGL_debug_shaders: 1,\n\t\tWEBGL_compressed_texture_s3tc: 1,\n\t\tWEBGL_depth_texture: 1,\n\t\tOES_element_index_uint: 1,\n\t\tEXT_texture_filter_anisotropic: 1,\n\t\tEXT_frag_depth: 1,\n\t\tWEBGL_draw_buffers: 1,\n\t\tANGLE_instanced_arrays: 1,\n\t\tOES_texture_float_linear: 1,\n\t\tOES_texture_half_float_linear: 1,\n\t\tEXT_blend_minmax: 1,\n\t\tEXT_shader_texture_lod: 1\n\t}, exports.variables = {\n\t\tgl_PointCoord: vec2,\n\t\tgl_FrontFacing: bool,\n\t\tgl_FragCoord: vec4,\n\t\tgl_Position: vec4,\n\t\tgl_PointSize: float32,\n\t\tgl_ClipDistance: float32,\n\t\tgl_VertexID: int32,\n\t\tgl_InstanceID: int32,\n\t\tgl_MaxVertexAttribs: int32,\n\t\tgl_MaxVertexUniformVectors: int32,\n\t\tgl_MaxVaryingVectors: int32,\n\t\tgl_MaxVertexTextureImageUnits: int32,\n\t\tgl_MaxCombinedTextureImageUnits: int32,\n\t\tgl_MaxTextureImageUnits: int32,\n\t\tgl_MaxFragmentUniformVectors: int32,\n\t\tgl_MaxDrawBuffers: int32,\n\t\tPickGuid: float,\n\t\tdiscard: int32\n\t}, exports.typemap = {\n\t\tbool: 'bool',\n\t\tfloat32: 'float',\n\t\tfloat64: 'double',\n\t\tint16: 'short',\n\t\tint32: 'int'\n\t}, exports.uniforms = {\n\t\tbool: function bool(gl, loc, v) {\n\t\t\tgl.uniform1i(loc, v);\n\t\t},\n\t\tfloat: function float(gl, loc, v) {\n\t\t\tgl.uniform1f(loc, v);\n\t\t},\n\t\tdouble: function double(gl, loc, v) {\n\t\t\tgl.uniform1f(loc, v);\n\t\t},\n\t\tshort: function short(gl, loc, v) {\n\t\t\tgl.uniform1i(loc, v);\n\t\t},\n\t\tint: function int(gl, loc, v) {\n\t\t\tgl.uniform1i(loc, v);\n\t\t},\n\t\tvec2: function vec2(gl, loc, v) {\n\t\t\tgl.uniform2f(loc, v[0], v[1]);\n\t\t},\n\t\tvec3: function vec3(gl, loc, v) {\n\t\t\tgl.uniform3f(loc, v[0], v[1], v[2]);\n\t\t},\n\t\tvec4: function vec4(gl, loc, v) {\n\t\t\tgl.uniform4f(loc, v[0], v[1], v[2], v[3]);\n\t\t},\n\t\tivec2: function ivec2(gl, loc, v) {\n\t\t\tgl.uniform2i(loc, v[0], v[1]);\n\t\t},\n\t\tivec3: function ivec3(gl, loc, v) {\n\t\t\tgl.uniform3i(loc, v[0], v[1], v[2]);\n\t\t},\n\t\tivec4: function ivec4(gl, loc, v) {\n\t\t\tgl.uniform4i(loc, v[0], v[1], v[2], v[3]);\n\t\t},\n\t\tbvec2: function bvec2(gl, loc, v) {\n\t\t\tgl.uniform2i(loc, v[0]);\n\t\t},\n\t\tbvec3: function bvec3(gl, loc, v) {\n\t\t\tgl.uniform3i(loc, v[0], v[1], v[2]);\n\t\t},\n\t\tbvec4: function bvec4(gl, loc, v) {\n\t\t\tgl.uniform4i(loc, v[0], v[1], v[2], v[3]);\n\t\t},\n\t\tmat2: function mat2(gl, loc, v) {\n\t\t\tgl.uniformMatrix2fv(loc, false, v);\n\t\t},\n\t\tmat3: function mat3(gl, loc, v) {\n\t\t\tgl.uniformMatrix3fv(loc, false, v);\n\t\t},\n\t\tmat4: function mat4(gl, loc, v) {\n\t\t\tgl.uniformMatrix4fv(loc, false, v);\n\t\t}\n\t}, exports.uniform_gen = {\n\t\tbool: { call: 'uniform1i', args: 1 },\n\t\tfloat: { call: 'uniform1f', args: 1 },\n\t\tdouble: { call: 'uniform1f', args: 1 },\n\t\tshort: { call: 'uniform1i', args: 1 },\n\t\tint: { call: 'uniform1i', args: 1 },\n\t\tvec2: { call: 'uniform2f', args: 2 },\n\t\tvec3: { call: 'uniform3f', args: 3 },\n\t\tvec4: { call: 'uniform4f', args: 4 },\n\t\tivec2: { call: 'uniform2i', args: 2 },\n\t\tivec3: { call: 'uniform3i', args: 3 },\n\t\tivec4: { call: 'uniform4i', args: 4 },\n\t\tbvec2: { call: 'uniform2i', args: 2 },\n\t\tbvec3: { call: 'uniform3i', args: 3 },\n\t\tbvec4: { call: 'uniform4i', args: 4 },\n\t\tmat2: { call: 'uniformMatrix2fv', args: 1, mat: 1 },\n\t\tmat3: { call: 'uniformMatrix3fv', args: 1, mat: 1 },\n\t\tmat4: { call: 'uniformMatrix4fv', args: 1, mat: 1\n\t\t\t/*types:{\n   \thalf, float, double, short, long, int,\n   \tbool,\n   \tmat2, mat3, mat4\n   \tvec2, vec3, vec4\n   \tivec2, ivec3, ivec4\n   \tbvec2, bvec3, bvec4\n   \thvec2, hvec3, hvec4\n   \tdvec2, dvec3, dvec4\n   \tfvec2, fvec3, fvec4\n   \tsampler2D\n   \tsamplerCube\n   },*/\n\t\t} };exports.functions = {\n\t\ttypeof: 1, sizeof: int32, debug: 1, radians: 1, degrees: 1,\n\t\tsin: 1, cos: 1, tan: 1,\n\t\tasin: 1, acos: 1, atan: 1,\n\t\tpow: 1, exp: 1, log: 1, exp2: 1, log2: 1,\n\t\tsqrt: 1, inversesqrt: 1,\n\t\tabs: 1, sign: 1, floor: 1, ceil: 1, fract: 1,\n\t\tmod: 1, min: 1, max: 1, clamp: 1,\n\t\tmix: 1, step: 2, smoothstep: 3,\n\t\tlength: float32, distance: float32,\n\t\tdot: float32, cross: 1, normalize: 1,\n\t\tfaceforward: 1, reflect: 1, refract: 1,\n\t\tmatrixCompMult: 1,\n\t\tlessThan: bool, lessThanEqual: bool,\n\t\tgreaterThan: bool, greaterThanEqual: bool,\n\t\tequal: bool, notEqual: bool,\n\t\tany: bool, all: bool, not: bool,\n\t\tdFdx: 1, dFdy: 1,\n\t\ttexture2DLod: vec4,\n\t\ttexture2DProjLod: vec4,\n\t\ttextureCubeLod: vec4,\n\t\ttexture2D: vec4,\n\t\ttexture2DProj: vec4,\n\t\ttextureCube: vec4\n\t};\n\texports.gl = {\n\t\tDEPTH_BUFFER_BIT: 0x100, STENCIL_BUFFER_BIT: 0x400, COLOR_BUFFER_BIT: 0x4000,\n\n\t\tPOINTS: 0x0, LINES: 0x1, LINE_LOOP: 0x2, LINE_STRIP: 0x3, TRIANGLES: 0x4, TRIANGLE_STRIP: 0x5, TRIANGLE_FAN: 0x6,\n\n\t\tZERO: 0x0, ONE: 0x1, SRC_COLOR: 0x300, ONE_MINUS_SRC_COLOR: 0x301, SRC_ALPHA: 0x302, ONE_MINUS_SRC_ALPHA: 0x303, DST_ALPHA: 0x304, ONE_MINUS_DST_ALPHA: 0x305,\n\t\tDST_COLOR: 0x306, ONE_MINUS_DST_COLOR: 0x307, SRC_ALPHA_SATURATE: 0x308, FUNC_ADD: 0x8006, BLEND_EQUATION: 0x8009,\n\n\t\tBLEND_EQUATION_RGB: 0x8009, BLEND_EQUATION_ALPHA: 0x883d, FUNC_SUBTRACT: 0x800a, FUNC_REVERSE_SUBTRACT: 0x800b,\n\t\tBLEND_DST_RGB: 0x80c8, BLEND_SRC_RGB: 0x80c9, BLEND_DST_ALPHA: 0x80ca, BLEND_SRC_ALPHA: 0x80cb, CONSTANT_COLOR: 0x8001,\n\t\tONE_MINUS_CONSTANT_COLOR: 0x8002, CONSTANT_ALPHA: 0x8003, ONE_MINUS_CONSTANT_ALPHA: 0x8004, BLEND_COLOR: 0x8005,\n\n\t\tARRAY_BUFFER: 0x8892, ELEMENT_ARRAY_BUFFER: 0x8893, ARRAY_BUFFER_BINDING: 0x8894, ELEMENT_ARRAY_BUFFER_BINDING: 0x8895,\n\n\t\tSTREAM_DRAW: 0x88e0, STATIC_DRAW: 0x88e4, DYNAMIC_DRAW: 0x88e8, BUFFER_SIZE: 0x8764, BUFFER_USAGE: 0x8765,\n\n\t\tCURRENT_VERTEX_ATTRIB: 0x8626, FRONT: 0x404, BACK: 0x405, FRONT_AND_BACK: 0x408,\n\n\t\tTEXTURE_2D: 0xde1, CULL_FACE: 0xb44,\n\n\t\tBLEND: 0xbe2, DITHER: 0xbd0, STENCIL_TEST: 0xb90, DEPTH_TEST: 0xb71, SCISSOR_TEST: 0xc11, POLYGON_OFFSET_FILL: 0x8037,\n\n\t\tSAMPLE_ALPHA_TO_COVERAGE: 0x809e, SAMPLE_COVERAGE: 0x80a0, NO_ERROR: 0x0,\n\n\t\tINVALID_ENUM: 0x500, INVALID_VALUE: 0x501,\n\n\t\tINVALID_OPERATION: 0x502, OUT_OF_MEMORY: 0x505,\n\n\t\tCW: 0x900, CCW: 0x901, LINE_WIDTH: 0xb21, ALIASED_POINT_SIZE_RANGE: 0x846d,\n\t\tALIASED_LINE_WIDTH_RANGE: 0x846e,\n\n\t\tCULL_FACE_MODE: 0xb45, FRONT_FACE: 0xb46,\n\n\t\tDEPTH_RANGE: 0xb70, DEPTH_WRITEMASK: 0xb72,\n\t\tDEPTH_CLEAR_VALUE: 0xb73, DEPTH_FUNC: 0xb74,\n\n\t\tSTENCIL_CLEAR_VALUE: 0xb91, STENCIL_FUNC: 0xb92, STENCIL_FAIL: 0xb94,\n\t\tSTENCIL_PASS_DEPTH_FAIL: 0xb95, STENCIL_PASS_DEPTH_PASS: 0xb96, STENCIL_REF: 0xb97, STENCIL_VALUE_MASK: 0xb93,\n\t\tSTENCIL_WRITEMASK: 0xb98, STENCIL_BACK_FUNC: 0x8800, STENCIL_BACK_FAIL: 0x8801, STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802,\n\t\tSTENCIL_BACK_PASS_DEPTH_PASS: 0x8803, STENCIL_BACK_REF: 0x8ca3, STENCIL_BACK_VALUE_MASK: 0x8ca4,\n\t\tSTENCIL_BACK_WRITEMASK: 0x8ca5,\n\n\t\tVIEWPORT: 0xba2, SCISSOR_BOX: 0xc10, COLOR_CLEAR_VALUE: 0xc22, COLOR_WRITEMASK: 0xc23,\n\n\t\tUNPACK_ALIGNMENT: 0xcf5, PACK_ALIGNMENT: 0xd05,\n\n\t\tMAX_TEXTURE_SIZE: 0xd33, MAX_VIEWPORT_DIMS: 0xd3a,\n\n\t\tSUBPIXEL_BITS: 0xd50, RED_BITS: 0xd52, GREEN_BITS: 0xd53, BLUE_BITS: 0xd54, ALPHA_BITS: 0xd55, DEPTH_BITS: 0xd56, STENCIL_BITS: 0xd57,\n\n\t\tPOLYGON_OFFSET_UNITS: 0x2a00, POLYGON_OFFSET_FACTOR: 0x8038, TEXTURE_BINDING_2D: 0x8069,\n\n\t\tSAMPLE_BUFFERS: 0x80a8, SAMPLES: 0x80a9, SAMPLE_COVERAGE_VALUE: 0x80aa, SAMPLE_COVERAGE_INVERT: 0x80ab,\n\n\t\tCOMPRESSED_TEXTURE_FORMATS: 0x86a3,\n\t\tDONT_CARE: 0x1100, FASTEST: 0x1101, NICEST: 0x1102, GENERATE_MIPMAP_HINT: 0x8192,\n\n\t\tBYTE: 0x1400, UNSIGNED_BYTE: 0x1401,\n\t\tSHORT: 0x1402, UNSIGNED_SHORT: 0x1403, INT: 0x1404, UNSIGNED_INT: 0x1405, FLOAT: 0x1406, DEPTH_COMPONENT: 0x1902,\n\t\tALPHA: 0x1906, RGB: 0x1907, RGBA: 0x1908, LUMINANCE: 0x1909, LUMINANCE_ALPHA: 0x190a, UNSIGNED_SHORT_4_4_4_4: 0x8033,\n\t\tUNSIGNED_SHORT_5_5_5_1: 0x8034, UNSIGNED_SHORT_5_6_5: 0x8363,\n\n\t\tFRAGMENT_SHADER: 0x8b30, VERTEX_SHADER: 0x8b31,\n\n\t\tMAX_VERTEX_ATTRIBS: 0x8869, MAX_VERTEX_UNIFORM_VECTORS: 0x8dfb, MAX_VARYING_VECTORS: 0x8dfc,\n\t\tMAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8b4d, MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8b4c, MAX_TEXTURE_IMAGE_UNITS: 0x8872,\n\t\tMAX_FRAGMENT_UNIFORM_VECTORS: 0x8dfd, SHADER_TYPE: 0x8b4f, DELETE_STATUS: 0x8b80, LINK_STATUS: 0x8b82,\n\t\tVALIDATE_STATUS: 0x8b83, ATTACHED_SHADERS: 0x8b85, ACTIVE_UNIFORMS: 0x8b86, ACTIVE_ATTRIBUTES: 0x8b89,\n\t\tSHADING_LANGUAGE_VERSION: 0x8b8c, CURRENT_PROGRAM: 0x8b8d, NEVER: 0x200, LESS: 0x201, EQUAL: 0x202, LEQUAL: 0x203,\n\t\tGREATER: 0x204, NOTEQUAL: 0x205, GEQUAL: 0x206, ALWAYS: 0x207, KEEP: 0x1e00, REPLACE: 0x1e01, INCR: 0x1e02, DECR: 0x1e03,\n\t\tINVERT: 0x150a, INCR_WRAP: 0x8507, DECR_WRAP: 0x8508, VENDOR: 0x1f00, RENDERER: 0x1f01, VERSION: 0x1f02, NEAREST: 0x2600,\n\n\t\tLINEAR: 0x2601, NEAREST_MIPMAP_NEAREST: 0x2700, LINEAR_MIPMAP_NEAREST: 0x2701, NEAREST_MIPMAP_LINEAR: 0x2702,\n\t\tLINEAR_MIPMAP_LINEAR: 0x2703, TEXTURE_MAG_FILTER: 0x2800, TEXTURE_MIN_FILTER: 0x2801, TEXTURE_WRAP_S: 0x2802,\n\n\t\tTEXTURE_WRAP_T: 0x2803, TEXTURE: 0x1702, TEXTURE_CUBE_MAP: 0x8513, TEXTURE_BINDING_CUBE_MAP: 0x8514,\n\t\tTEXTURE_CUBE_MAP_POSITIVE_X: 0x8515, TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516, TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\n\t\tTEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518, TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519, TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851a,\n\n\t\tMAX_CUBE_MAP_TEXTURE_SIZE: 0x851c, TEXTURE0: 0x84c0, TEXTURE1: 0x84c1, TEXTURE2: 0x84c2, TEXTURE3: 0x84c3, TEXTURE4: 0x84c4,\n\n\t\tTEXTURE5: 0x84c5, TEXTURE6: 0x84c6, TEXTURE7: 0x84c7, TEXTURE8: 0x84c8, TEXTURE9: 0x84c9, TEXTURE10: 0x84ca, TEXTURE11: 0x84cb,\n\t\tTEXTURE12: 0x84cc, TEXTURE13: 0x84cd, TEXTURE14: 0x84ce, TEXTURE15: 0x84cf, TEXTURE16: 0x84d0, TEXTURE17: 0x84d1,\n\t\tTEXTURE18: 0x84d2, TEXTURE19: 0x84d3, TEXTURE20: 0x84d4, TEXTURE21: 0x84d5, TEXTURE22: 0x84d6, TEXTURE23: 0x84d7,\n\t\tTEXTURE24: 0x84d8, TEXTURE25: 0x84d9, TEXTURE26: 0x84da, TEXTURE27: 0x84db, TEXTURE28: 0x84dc, TEXTURE29: 0x84dd,\n\t\tTEXTURE30: 0x84de, TEXTURE31: 0x84df, ACTIVE_TEXTURE: 0x84e0, REPEAT: 0x2901, CLAMP_TO_EDGE: 0x812f, MIRRORED_REPEAT: 0x8370,\n\n\t\tFLOAT_VEC2: 0x8b50, FLOAT_VEC3: 0x8b51, FLOAT_VEC4: 0x8b52, INT_VEC2: 0x8b53, INT_VEC3: 0x8b54, INT_VEC4: 0x8b55, BOOL: 0x8b56,\n\t\tBOOL_VEC2: 0x8b57, BOOL_VEC3: 0x8b58, BOOL_VEC4: 0x8b59, FLOAT_MAT2: 0x8b5a, FLOAT_MAT3: 0x8b5b, FLOAT_MAT4: 0x8b5c,\n\n\t\tSAMPLER_2D: 0x8b5e, SAMPLER_CUBE: 0x8b60, VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622, VERTEX_ATTRIB_ARRAY_SIZE: 0x8623,\n\n\t\tVERTEX_ATTRIB_ARRAY_STRIDE: 0x8624, VERTEX_ATTRIB_ARRAY_TYPE: 0x8625, VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886a,\n\t\tVERTEX_ATTRIB_ARRAY_POINTER: 0x8645, VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889f, COMPILE_STATUS: 0x8b81, LOW_FLOAT: 0x8df0,\n\n\t\tMEDIUM_FLOAT: 0x8df1, HIGH_FLOAT: 0x8df2, LOW_INT: 0x8df3, MEDIUM_INT: 0x8df4, HIGH_INT: 0x8df5, FRAMEBUFFER: 0x8d40,\n\n\t\tRENDERBUFFER: 0x8d41, RGBA4: 0x8056, RGB5_A1: 0x8057, RGB565: 0x8d62, DEPTH_COMPONENT16: 0x81a5, STENCIL_INDEX: 0x1901,\n\n\t\tSTENCIL_INDEX8: 0x8d48, DEPTH_STENCIL: 0x84f9,\n\n\t\tRENDERBUFFER_WIDTH: 0x8d42, RENDERBUFFER_HEIGHT: 0x8d43,\n\t\tRENDERBUFFER_INTERNAL_FORMAT: 0x8d44, RENDERBUFFER_RED_SIZE: 0x8d50, RENDERBUFFER_GREEN_SIZE: 0x8d51,\n\t\tRENDERBUFFER_BLUE_SIZE: 0x8d52, RENDERBUFFER_ALPHA_SIZE: 0x8d53, RENDERBUFFER_DEPTH_SIZE: 0x8d54,\n\t\tRENDERBUFFER_STENCIL_SIZE: 0x8d55,\n\n\t\tFRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8cd0, FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8cd1,\n\t\tFRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8cd2, FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8cd3,\n\t\tCOLOR_ATTACHMENT0: 0x8ce0, DEPTH_ATTACHMENT: 0x8d00, STENCIL_ATTACHMENT: 0x8d20, DEPTH_STENCIL_ATTACHMENT: 0x821a,\n\t\tNONE: 0x0, FRAMEBUFFER_COMPLETE: 0x8cd5, FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8cd6,\n\t\tFRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8cd7, FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8cd9,\n\t\tFRAMEBUFFER_UNSUPPORTED: 0x8cdd, FRAMEBUFFER_BINDING: 0x8ca6, RENDERBUFFER_BINDING: 0x8ca7,\n\n\t\tMAX_RENDERBUFFER_SIZE: 0x84e8, INVALID_FRAMEBUFFER_OPERATION: 0x506, UNPACK_FLIP_Y_WEBGL: 0x9240,\n\t\tUNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241, CONTEXT_LOST_WEBGL: 0x9242, UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243,\n\t\tBROWSER_DEFAULT_WEBGL: 0x9244\n\t};\n\n\texports.compare = {\n\t\t'<': exports.gl.LESS,\n\t\t'<=': exports.gl.LEQUAL,\n\t\t'>': exports.gl.GREATER,\n\t\t'>=': exports.gl.GEQUAL,\n\t\t'!==': exports.gl.NOTEQUAL,\n\t\t'!=': exports.gl.NOTEQUAL,\n\t\t'==': exports.gl.EQUAL,\n\t\t'===': exports.gl.EQUAL\n\t};\n\texports.complement = {\n\t\t'<': exports.gl.GEQUAL,\n\t\t'<=': exports.gl.GREATER,\n\t\t'>': exports.gl.LEQUAL,\n\t\t'>=': exports.gl.LESS,\n\t\t'!==': exports.gl.NOTEQUAL,\n\t\t'!=': exports.gl.NOTEQUAL,\n\t\t'==': exports.gl.EQUAL,\n\t\t'===': exports.gl.EQUAL\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/gltypes.js\n// module id = 113\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/gltypes.js?");

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function () {\n\tthis.atConstructor = function () {};\n\tthis.attributes = {\n\t\tup: Config({ type: Event }),\n\t\tdown: Config({ type: Event }),\n\t\tpress: Config({ type: Event }),\n\t\tpaste: Config({ type: Event })\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/keyboard.js\n// module id = 114\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/keyboard.js?");

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function () {\n\tvar _color_wikipedia;\n\n\t// provide all the apis on our math types\n\tvar color_wikipedia = (_color_wikipedia = {\n\t\tacidgreen: 0xffB0BF1A, aero: 0xff7CB9E8, aeroblue: 0xffC9FFE5, africanviolet: 0xffB284BE, airforceblueraf: 0xff5D8AA8, airforceblueusaf: 0xff00308F,\n\t\tairsuperiorityblue: 0xff72A0C1, alabamacrimson: 0xffAF002A, aliceblue: 0xffF0F8FF, alizarincrimson: 0xffE32636, alloyorange: 0xffC46210,\n\t\talmond: 0xffEFDECD, amaranth: 0xffE52B50, amaranthpink: 0xffF19CBB, amaranthpurple: 0xffAB274F, amaranthred: 0xffD3212D, amazon: 0xff3B7A57,\n\t\tamber: 0xffFFBF00, ambersaeece: 0xffFF7E00, americanrose: 0xffFF033E, amethyst: 0xff9966CC, androidgreen: 0xffA4C639, antiflashwhite: 0xffF2F3F4,\n\t\tantiquebrass: 0xffCD9575, antiquebronze: 0xff665D1E, antiquefuchsia: 0xff915C83, antiqueruby: 0xff841B2D, antiquewhite: 0xffFAEBD7, aoenglish: 0xff008000,\n\t\tapplegreen: 0xff8DB600, apricot: 0xffFBCEB1, aqua: 0xff00FFFF, aquamarine: 0xff7FFFD4, armygreen: 0xff4B5320, artichoke: 0xff8F9779, arylideyellow: 0xffE9D66B,\n\t\tashgrey: 0xffB2BEB5, asparagus: 0xff87A96B, atomictangerine: 0xffFF9966, auburn: 0xffA52A2A, aureolin: 0xffFDEE00, aurometalsaurus: 0xff6E7F80,\n\t\tavocado: 0xff568203, azure: 0xff007FFF, azurecolor: 0xffF0FFFF, azuremist: 0xffF0FFFF, azureishwhite: 0xffDBE9F4, babyblue: 0xff89CFF0, babyblueeyes: 0xffA1CAF1,\n\t\tbabypink: 0xffF4C2C2, babypowder: 0xffFEFEFA, bakermillerpink: 0xffFF91AF, ballblue: 0xff21ABCD, bananamania: 0xffFAE7B5, bananayellow: 0xffFFE135,\n\t\tbangladeshgreen: 0xff006A4E, barbiepink: 0xffE0218A, barnred: 0xff7C0A02, battleshipgrey: 0xff848482, bazaar: 0xff98777B, beaublue: 0xffBCD4E6,\n\t\tbeaver: 0xff9F8170, beige: 0xffF5F5DC, bdazzledblue: 0xff2E5894, bigdiporuby: 0xff9C2542, bisque: 0xffFFE4C4, bistre: 0xff3D2B1F, bistrebrown: 0xff967117,\n\t\tbitterlemon: 0xffCAE00D, bitterlime: 0xffBFFF00, bittersweet: 0xffFE6F5E, bittersweetshimmer: 0xffBF4F51, black: 0xff000000, blackbean: 0xff3D0C02,\n\t\tblackleatherjacket: 0xff253529, blackolive: 0xff3B3C36, blanchedalmond: 0xffFFEBCD, blastoffbronze: 0xffA57164, bleudefrance: 0xff318CE7,\n\t\tblizzardblue: 0xffACE5EE, blond: 0xffFAF0BE, blue: 0xff0000FF, bluecrayola: 0xff1F75FE, bluemunsell: 0xff0093AF, bluencs: 0xff0087BD, bluepantone: 0xff0018A8,\n\t\tbluepigment: 0xff333399, blueryb: 0xff0247FE, bluebell: 0xffA2A2D0, bluegray: 0xff6699CC, bluegreen: 0xff0D98BA, bluemagentaviolet: 0xff553592,\n\t\tbluesapphire: 0xff126180, blueviolet: 0xff8A2BE2, blueyonder: 0xff5072A7, blueberry: 0xff4F86F7, bluebonnet: 0xff1C1CF0, blush: 0xffDE5D83,\n\t\tbole: 0xff79443B, bondiblue: 0xff0095B6, bone: 0xffE3DAC9, bostonuniversityred: 0xffCC0000, bottlegreen: 0xff006A4E, boysenberry: 0xff873260,\n\t\tbrandeisblue: 0xff0070FF, brass: 0xffB5A642, brickred: 0xffCB4154, brightcerulean: 0xff1DACD6, brightgreen: 0xff66FF00, brightlavender: 0xffBF94E4,\n\t\tbrightlilac: 0xffD891EF, brightmaroon: 0xffC32148, brightnavyblue: 0xff1974D2, brightpink: 0xffFF007F, brightturquoise: 0xff08E8DE, brightube: 0xffD19FE8,\n\t\tbrilliantazure: 0xff3399FF, brilliantlavender: 0xffF4BBFF, brilliantrose: 0xffFF55A3, brinkpink: 0xffFB607F, britishracinggreen: 0xff004225,\n\t\tbronze: 0xffCD7F32, bronzeyellow: 0xff737000, browntraditional: 0xff964B00, brown: 0xffA52A2A, brownnose: 0xff6B4423, brunswickgreen: 0xff1B4D3E,\n\t\tbubblegum: 0xffFFC1CC, bubbles: 0xffE7FEFF, buff: 0xffF0DC82, budgreen: 0xff7BB661, bulgarianrose: 0xff480607, burgundy: 0xff800020, burlywood: 0xffDEB887,\n\t\tburntorange: 0xffCC5500, burntsienna: 0xffE97451, burntumber: 0xff8A3324, byzantine: 0xffBD33A4, byzantium: 0xff702963, cadet: 0xff536872,\n\t\tcadetblue: 0xff5F9EA0, cadetgrey: 0xff91A3B0, cadmiumgreen: 0xff006B3C, cadmiumorange: 0xffED872D, cadmiumred: 0xffE30022, cadmiumyellow: 0xffFFF600,\n\t\tcafeaulait: 0xffA67B5B, cafenoir: 0xff4B3621, calpolypomonagreen: 0xff1E4D2B, cambridgeblue: 0xffA3C1AD, camel: 0xffC19A6B, cameopink: 0xffEFBBCC,\n\t\tcamouflagegreen: 0xff78866B, canaryyellow: 0xffFFEF00, candyapplered: 0xffFF0800, candypink: 0xffE4717A, capri: 0xff00BFFF, caputmortuum: 0xff592720,\n\t\tcardinal: 0xffC41E3A, caribbeangreen: 0xff00CC99, carmine: 0xff960018, carminemp: 0xffD70040, carminepink: 0xffEB4C42, carminered: 0xffFF0038,\n\t\tcarnationpink: 0xffFFA6C9, carnelian: 0xffB31B1B, carolinablue: 0xff56A0D3, carrotorange: 0xffED9121, castletongreen: 0xff00563F, catalinablue: 0xff062A78,\n\t\tcatawba: 0xff703642, cedarchest: 0xffC95A49, ceil: 0xff92A1CF, celadon: 0xffACE1AF, celadonblue: 0xff007BA7, celadongreen: 0xff2F847C, celeste: 0xffB2FFFF,\n\t\tcelestialblue: 0xff4997D0, cerise: 0xffDE3163, cerisepink: 0xffEC3B83, cerulean: 0xff007BA7, ceruleanblue: 0xff2A52BE, ceruleanfrost: 0xff6D9BC3,\n\t\tcgblue: 0xff007AA5, cgred: 0xffE03C31, chamoisee: 0xffA0785A, champagne: 0xffF7E7CE, charcoal: 0xff36454F, charlestongreen: 0xff232B2B, charmpink: 0xffE68FAC,\n\t\tchartreusetraditional: 0xffDFFF00, chartreuse: 0xff7FFF00, cherry: 0xffDE3163, cherryblossompink: 0xffFFB7C5, chestnut: 0xff954535, chinapink: 0xffDE6FA1,\n\t\tchinarose: 0xffA8516E, chinesered: 0xffAA381E, chineseviolet: 0xff856088, chocolatetraditional: 0xff7B3F00, chocolate: 0xffD2691E, chromeyellow: 0xffFFA700,\n\t\tcinereous: 0xff98817B, cinnabar: 0xffE34234, cinnamon: 0xffD2691E, citrine: 0xffE4D00A, citron: 0xff9FA91F, claret: 0xff7F1734, classicrose: 0xffFBCCE7,\n\t\tcobalt: 0xff0047AB, cocoabrown: 0xffD2691E, coconut: 0xff965A3E, coffee: 0xff6F4E37, columbiablue: 0xffC4D8E2, congopink: 0xffF88379, coolblack: 0xff000000,\n\t\tcoolgrey: 0xff8C92AC, copper: 0xffB87333, coppercrayola: 0xffDA8A67, copperpenny: 0xffAD6F69, copperred: 0xffCB6D51, copperrose: 0xff996666,\n\t\tcoquelicot: 0xffFF3800, coral: 0xffFF7F50, coralpink: 0xffF88379, coralred: 0xffFF4040, cordovan: 0xff893F45, corn: 0xffFBEC5D, cornellred: 0xffB31B1B,\n\t\tcornflowerblue: 0xff6495ED, cornsilk: 0xffFFF8DC, cosmiclatte: 0xffFFF8E7, coyotebrown: 0xff81613e, cottoncandy: 0xffFFBCD9, cream: 0xffFFFDD0,\n\t\tcrimson: 0xffDC143C, crimsonglory: 0xffBE0032, crimsonred: 0xff990000, cyan: 0xff00FFFF, cyanazure: 0xff4E82b4, cyancobaltblue: 0xff28589C,\n\t\tcyancornflowerblue: 0xff188BC2, cyanprocess: 0xff00B7EB, cybergrape: 0xff58427C, cyberyellow: 0xffFFD300, daffodil: 0xffFFFF31, dandelion: 0xffF0E130,\n\t\tdarkblue: 0xff00008B, darkbluegray: 0xff666699, darkbrown: 0xff654321, darkbyzantium: 0xff5D3954, darkcandyapplered: 0xffA40000, darkcerulean: 0xff08457E,\n\t\tdarkchestnut: 0xff986960, darkcoral: 0xffCD5B45, darkcyan: 0xff008B8B, darkelectricblue: 0xff536878, darkgoldenrod: 0xffB8860B, darkgrayx11: 0xffA9A9A9,\n\t\tdarkgreen: 0xff013220, darkgreenx11: 0xff006400, darkimperialblue: 0xff00416A, darkjunglegreen: 0xff1A2421, darkkhaki: 0xffBDB76B, darklava: 0xff483C32,\n\t\tdarklavender: 0xff734F96, darkliver: 0xff534B4F, darkliverhorses: 0xff543D37, darkmagenta: 0xff8B008B, darkmediumgray: 0xffA9A9A9, darkmidnightblue: 0xff003366,\n\t\tdarkmossgreen: 0xff4A5D23, darkolivegreen: 0xff556B2F, darkorange: 0xffFF8C00, darkorchid: 0xff9932CC, darkpastelblue: 0xff779ECB, darkpastelgreen: 0xff03C03C,\n\t\tdarkpastelpurple: 0xff966FD6, darkpastelred: 0xffC23B22, darkpink: 0xffE75480, darkpowderblue: 0xff003399, darkpuce: 0xff4F3A3C, darkraspberry: 0xff872657,\n\t\tdarkred: 0xff8B0000, darksalmon: 0xffE9967A, darkscarlet: 0xff560319, darkseagreen: 0xff8FBC8F, darksienna: 0xff3C1414, darkskyblue: 0xff8CBED6,\n\t\tdarkslateblue: 0xff483D8B, darkslategray: 0xff2F4F4F, darkspringgreen: 0xff177245, darktan: 0xff918151, darktangerine: 0xffFFA812, darktaupe: 0xff483C32,\n\t\tdarkterracotta: 0xffCC4E5C, darkturquoise: 0xff00CED1, darkvanilla: 0xffD1BEA8, darkviolet: 0xff9400D3, darkyellow: 0xff9B870C, dartmouthgreen: 0xff00703C,\n\t\tdavysgrey: 0xff555555, debianred: 0xffD70A53, deepcarmine: 0xffA9203E, deepcarminepink: 0xffEF3038, deepcarrotorange: 0xffE9692C, deepcerise: 0xffDA3287,\n\t\tdeepchampagne: 0xffFAD6A5, deepchestnut: 0xffB94E48, deepcoffee: 0xff704241, deepfuchsia: 0xffC154C1, deepgreen: 0xff056608, deepgreencyanturquoise: 0xff0E7C61,\n\t\tdeepjunglegreen: 0xff004B49, deeplemon: 0xffF5C71A, deeplilac: 0xff9955BB, deepmagenta: 0xffCC00CC, deepmauve: 0xffD473D4, deepmossgreen: 0xff355E3B,\n\t\tdeeppeach: 0xffFFCBA4, deeppink: 0xffFF1493, deeppuce: 0xffA95C68, deepruby: 0xff843F5B, deepsaffron: 0xffFF9933, deepskyblue: 0xff00BFFF,\n\t\tdeepspacesparkle: 0xff4A646C, deepspringbud: 0xff556B2F, deeptaupe: 0xff7E5E60, deeptuscanred: 0xff66424D, deer: 0xffBA8759, denim: 0xff1560BD,\n\t\tdesaturatedcyan: 0xff669999, desert: 0xffC19A6B, desertsand: 0xffEDC9AF, desire: 0xffEA3C53, diamond: 0xffB9F2FF, dimgray: 0xff696969, dirt: 0xff9B7653,\n\t\tdodgerblue: 0xff1E90FF, dogwoodrose: 0xffD71868, dollarbill: 0xff85BB65, donkeybrown: 0xff664C28, drab: 0xff967117, dukeblue: 0xff00009C, duststorm: 0xffE5CCC9,\n\t\tdutchwhite: 0xffEFDFBB, earthyellow: 0xffE1A95F, ebony: 0xff555D50, ecru: 0xffC2B280, eerieblack: 0xff1B1B1B, eggplant: 0xff614051, eggshell: 0xffF0EAD6,\n\t\tegyptianblue: 0xff1034A6, electricblue: 0xff7DF9FF, electriccrimson: 0xffFF003F, electriccyan: 0xff00FFFF, electricgreen: 0xff00FF00, electricindigo: 0xff6F00FF,\n\t\telectriclavender: 0xffF4BBFF, electriclime: 0xffCCFF00, electricpurple: 0xffBF00FF, electricultramarine: 0xff3F00FF, electricviolet: 0xff8F00FF,\n\t\telectricyellow: 0xffFFFF33, emerald: 0xff50C878, eminence: 0xff6C3082, englishgreen: 0xff1B4D3E, englishlavender: 0xffB48395, englishred: 0xffAB4B52,\n\t\tenglishviolet: 0xff563C5C, etonblue: 0xff96C8A2, eucalyptus: 0xff44D7A8, fallow: 0xffC19A6B, falured: 0xff801818, fandango: 0xffB53389, fandangopink: 0xffDE5285,\n\t\tfashionfuchsia: 0xffF400A1, fawn: 0xffE5AA70, feldgrau: 0xff4D5D53, feldspar: 0xffFDD5B1, ferngreen: 0xff4F7942, ferrarired: 0xffFF2800, fielddrab: 0xff6C541E,\n\t\tfirebrick: 0xffB22222, fireenginered: 0xffCE2029, flame: 0xffE25822, flamingopink: 0xffFC8EAC, flattery: 0xff6B4423, flavescent: 0xffF7E98E,\n\t\tflax: 0xffEEDC82, flirt: 0xffA2006D, floralwhite: 0xffFFFAF0, fluorescentorange: 0xffFFBF00, fluorescentpink: 0xffFF1493, fluorescentyellow: 0xffCCFF00,\n\t\tfolly: 0xffFF004F, forestgreentraditional: 0xff014421, forestgreen: 0xff228B22, frenchbeige: 0xffA67B5B, frenchbistre: 0xff856D4D, frenchblue: 0xff0072BB,\n\t\tfrenchfuchsia: 0xffFD3F92, frenchlilac: 0xff86608E, frenchlime: 0xff9EFD38, frenchmauve: 0xffD473D4, frenchpink: 0xffFD6C9E, frenchplum: 0xff811453,\n\t\tfrenchpuce: 0xff4E1609, frenchraspberry: 0xffC72C48, frenchrose: 0xffF64A8A, frenchskyblue: 0xff77B5FE, frenchviolet: 0xff8806CE, frenchwine: 0xffAC1E44,\n\t\tfreshair: 0xffA6E7FF, fuchsia: 0xffFF00FF, fuchsiacrayola: 0xffC154C1, fuchsiapink: 0xffFF77FF, fuchsiapurple: 0xffCC397B, fuchsiarose: 0xffC74375,\n\t\tfulvous: 0xffE48400, fuzzywuzzy: 0xffCC6666, gainsboro: 0xffDCDCDC, gamboge: 0xffE49B0F, gambogeorangebrown: 0xff996600, genericviridian: 0xff007F66,\n\t\tghostwhite: 0xffF8F8FF, giantsorange: 0xffFE5A1D, ginger: 0xffB06500, glaucous: 0xff6082B6, glitter: 0xffE6E8FA, gogreen: 0xff00AB66, goldmetallic: 0xffD4AF37,\n\t\tgoldgolden: 0xffFFD700, goldfusion: 0xff85754E, goldenbrown: 0xff996515, goldenpoppy: 0xffFCC200, goldenyellow: 0xffFFDF00, goldenrod: 0xffDAA520,\n\t\tgrannysmithapple: 0xffA8E4A0, grape: 0xff6F2DA8, gray: 0xff808080, grayx11: 0xffBEBEBE, grayasparagus: 0xff465945,\n\t\tgrayblue: 0xff8C92AC, greencolorwheelx11green: 0xff00FF00, greencrayola: 0xff1CAC78, green: 0xff008000, greenmunsell: 0xff00A877,\n\t\tgreenncs: 0xff009F6B, greenpantone: 0xff00AD43, greenpigment: 0xff00A550, greenryb: 0xff66B032, greenyellow: 0xffADFF2F, grizzly: 0xff885818,\n\t\tgrullo: 0xffA99A86, guppiegreen: 0xff00FF7F, halayaube: 0xff663854, hanblue: 0xff446CCF, hanpurple: 0xff5218FA, hansayellow: 0xffE9D66B, harlequin: 0xff3FFF00,\n\t\tharlequingreen: 0xff46CB18, harvardcrimson: 0xffC90016, harvestgold: 0xffDA9100, heartgold: 0xff808000, heliotrope: 0xffDF73FF, heliotropegray: 0xffAA98A9,\n\t\theliotropemagenta: 0xffAA00BB, hollywoodcerise: 0xffF400A1, honeydew: 0xffF0FFF0, honolulublue: 0xff006DB0, hookersgreen: 0xff49796B, hotmagenta: 0xffFF1DCE,\n\t\thotpink: 0xffFF69B4, huntergreen: 0xff355E3B, iceberg: 0xff71A6D2, icterine: 0xffFCF75E, illuminatingemerald: 0xff319177, imperial: 0xff602F6B,\n\t\timperialblue: 0xff002395, imperialpurple: 0xff66023C, imperialred: 0xffED2939, inchworm: 0xffB2EC5D, independence: 0xff4C516D, indiagreen: 0xff138808,\n\t\tindianred: 0xffCD5C5C, indianyellow: 0xffE3A857, indigo: 0xff6F00FF, indigodye: 0xff091F92 }, _defineProperty(_color_wikipedia, \"indigo\", 0xff4B0082), _defineProperty(_color_wikipedia, \"internationalkleinblue\", 0xff002FA7), _defineProperty(_color_wikipedia, \"internationalorangeaerospace\", 0xffFF4F00), _defineProperty(_color_wikipedia, \"internationalorangeengineering\", 0xffBA160C), _defineProperty(_color_wikipedia, \"internationalorangegoldengatebridge\", 0xffC0362C), _defineProperty(_color_wikipedia, \"iris\", 0xff5A4FCF), _defineProperty(_color_wikipedia, \"irresistible\", 0xffB3446C), _defineProperty(_color_wikipedia, \"isabelline\", 0xffF4F0EC), _defineProperty(_color_wikipedia, \"islamicgreen\", 0xff009000), _defineProperty(_color_wikipedia, \"italianskyblue\", 0xffB2FFFF), _defineProperty(_color_wikipedia, \"ivory\", 0xffFFFFF0), _defineProperty(_color_wikipedia, \"jade\", 0xff00A86B), _defineProperty(_color_wikipedia, \"japanesecarmine\", 0xff9D2933), _defineProperty(_color_wikipedia, \"japaneseindigo\", 0xff264348), _defineProperty(_color_wikipedia, \"japaneseviolet\", 0xff5B3256), _defineProperty(_color_wikipedia, \"jasmine\", 0xffF8DE7E), _defineProperty(_color_wikipedia, \"jasper\", 0xffD73B3E), _defineProperty(_color_wikipedia, \"jazzberryjam\", 0xffA50B5E), _defineProperty(_color_wikipedia, \"jellybean\", 0xffDA614E), _defineProperty(_color_wikipedia, \"jet\", 0xff343434), _defineProperty(_color_wikipedia, \"jonquil\", 0xffF4CA16), _defineProperty(_color_wikipedia, \"jordyblue\", 0xff8AB9F1), _defineProperty(_color_wikipedia, \"junebud\", 0xffBDDA57), _defineProperty(_color_wikipedia, \"junglegreen\", 0xff29AB87), _defineProperty(_color_wikipedia, \"kellygreen\", 0xff4CBB17), _defineProperty(_color_wikipedia, \"kenyancopper\", 0xff7C1C05), _defineProperty(_color_wikipedia, \"keppel\", 0xff3AB09E), _defineProperty(_color_wikipedia, \"khaki\", 0xffC3B091), _defineProperty(_color_wikipedia, \"jawad\", 0xffC3B091), _defineProperty(_color_wikipedia, \"lightkhaki\", 0xffF0E68C), _defineProperty(_color_wikipedia, \"kobe\", 0xff882D17), _defineProperty(_color_wikipedia, \"kobi\", 0xffE79FC4), _defineProperty(_color_wikipedia, \"kombugreen\", 0xff354230), _defineProperty(_color_wikipedia, \"kucrimson\", 0xffE8000D), _defineProperty(_color_wikipedia, \"lasallegreen\", 0xff087830), _defineProperty(_color_wikipedia, \"languidlavender\", 0xffD6CADD), _defineProperty(_color_wikipedia, \"lapislazuli\", 0xff26619C), _defineProperty(_color_wikipedia, \"laserlemon\", 0xffFFFF66), _defineProperty(_color_wikipedia, \"laurelgreen\", 0xffA9BA9D), _defineProperty(_color_wikipedia, \"lava\", 0xffCF1020), _defineProperty(_color_wikipedia, \"lavenderfloral\", 0xffB57EDC), _defineProperty(_color_wikipedia, \"lavender\", 0xffE6E6FA), _defineProperty(_color_wikipedia, \"lavenderblue\", 0xffCCCCFF), _defineProperty(_color_wikipedia, \"lavenderblush\", 0xffFFF0F5), _defineProperty(_color_wikipedia, \"lavendergray\", 0xffC4C3D0), _defineProperty(_color_wikipedia, \"lavenderindigo\", 0xff9457EB), _defineProperty(_color_wikipedia, \"lavendermagenta\", 0xffEE82EE), _defineProperty(_color_wikipedia, \"lavendermist\", 0xffE6E6FA), _defineProperty(_color_wikipedia, \"lavenderpink\", 0xffFBAED2), _defineProperty(_color_wikipedia, \"lavenderpurple\", 0xff967BB6), _defineProperty(_color_wikipedia, \"lavenderrose\", 0xffFBA0E3), _defineProperty(_color_wikipedia, \"lawngreen\", 0xff7CFC00), _defineProperty(_color_wikipedia, \"lemon\", 0xffFFF700), _defineProperty(_color_wikipedia, \"lemonchiffon\", 0xffFFFACD), _defineProperty(_color_wikipedia, \"lemoncurry\", 0xffCCA01D), _defineProperty(_color_wikipedia, \"lemonglacier\", 0xffFDFF00), _defineProperty(_color_wikipedia, \"lemonlime\", 0xffE3FF00), _defineProperty(_color_wikipedia, \"lemonmeringue\", 0xffF6EABE), _defineProperty(_color_wikipedia, \"lemonyellow\", 0xffFFF44F), _defineProperty(_color_wikipedia, \"lenurple\", 0xffBA93D8), _defineProperty(_color_wikipedia, \"licorice\", 0xff1A1110), _defineProperty(_color_wikipedia, \"liberty\", 0xff545AA7), _defineProperty(_color_wikipedia, \"lightapricot\", 0xffFDD5B1), _defineProperty(_color_wikipedia, \"lightblue\", 0xffADD8E6), _defineProperty(_color_wikipedia, \"lightbrown\", 0xffB5651D), _defineProperty(_color_wikipedia, \"lightcarminepink\", 0xffE66771), _defineProperty(_color_wikipedia, \"lightcoral\", 0xffF08080), _defineProperty(_color_wikipedia, \"lightcornflowerblue\", 0xff93CCEA), _defineProperty(_color_wikipedia, \"lightcrimson\", 0xffF56991), _defineProperty(_color_wikipedia, \"lightcyan\", 0xffE0FFFF), _defineProperty(_color_wikipedia, \"lightdeeppink\", 0xffFF5CCD), _defineProperty(_color_wikipedia, \"lightfrenchbeige\", 0xffC8AD7F), _defineProperty(_color_wikipedia, \"lightfuchsiapink\", 0xffF984EF), _defineProperty(_color_wikipedia, \"lightgoldenrodyellow\", 0xffFAFAD2), _defineProperty(_color_wikipedia, \"lightgray\", 0xffD3D3D3), _defineProperty(_color_wikipedia, \"lightgrayishmagenta\", 0xffCC99CC), _defineProperty(_color_wikipedia, \"lightgreen\", 0xff90EE90), _defineProperty(_color_wikipedia, \"lighthotpink\", 0xffFFB3DE), _defineProperty(_color_wikipedia, \"lightkhaki\", 0xffF0E68C), _defineProperty(_color_wikipedia, \"lightmediumorchid\", 0xffD39BCB), _defineProperty(_color_wikipedia, \"lightmossgreen\", 0xffADDFAD), _defineProperty(_color_wikipedia, \"lightorchid\", 0xffE6A8D7), _defineProperty(_color_wikipedia, \"lightpastelpurple\", 0xffB19CD9), _defineProperty(_color_wikipedia, \"lightpink\", 0xffFFB6C1), _defineProperty(_color_wikipedia, \"lightredochre\", 0xffE97451), _defineProperty(_color_wikipedia, \"lightsalmon\", 0xffFFA07A), _defineProperty(_color_wikipedia, \"lightsalmonpink\", 0xffFF9999), _defineProperty(_color_wikipedia, \"lightseagreen\", 0xff20B2AA), _defineProperty(_color_wikipedia, \"lightskyblue\", 0xff87CEFA), _defineProperty(_color_wikipedia, \"lightslategray\", 0xff778899), _defineProperty(_color_wikipedia, \"lightsteelblue\", 0xffB0C4DE), _defineProperty(_color_wikipedia, \"lighttaupe\", 0xffB38B6D), _defineProperty(_color_wikipedia, \"lightthulianpink\", 0xffE68FAC), _defineProperty(_color_wikipedia, \"lightyellow\", 0xffFFFFE0), _defineProperty(_color_wikipedia, \"lilac\", 0xffC8A2C8), _defineProperty(_color_wikipedia, \"limecolorwheel\", 0xffBFFF00), _defineProperty(_color_wikipedia, \"limex11green\", 0xff00FF00), _defineProperty(_color_wikipedia, \"limegreen\", 0xff32CD32), _defineProperty(_color_wikipedia, \"limerick\", 0xff9DC209), _defineProperty(_color_wikipedia, \"lincolngreen\", 0xff195905), _defineProperty(_color_wikipedia, \"linen\", 0xffFAF0E6), _defineProperty(_color_wikipedia, \"lion\", 0xffC19A6B), _defineProperty(_color_wikipedia, \"liseranpurple\", 0xffDE6FA1), _defineProperty(_color_wikipedia, \"littleboyblue\", 0xff6CA0DC), _defineProperty(_color_wikipedia, \"liver\", 0xff674C47), _defineProperty(_color_wikipedia, \"liverdogs\", 0xffB86D29), _defineProperty(_color_wikipedia, \"liverorgan\", 0xff6C2E1F), _defineProperty(_color_wikipedia, \"liverchestnut\", 0xff987456), _defineProperty(_color_wikipedia, \"livid\", 0xff6699CC), _defineProperty(_color_wikipedia, \"lumber\", 0xffFFE4CD), _defineProperty(_color_wikipedia, \"lust\", 0xffE62020), _defineProperty(_color_wikipedia, \"magenta\", 0xffFF00FF), _defineProperty(_color_wikipedia, \"magentacrayola\", 0xffFF55A3), _defineProperty(_color_wikipedia, \"magentadye\", 0xffCA1F7B), _defineProperty(_color_wikipedia, \"magentapantone\", 0xffD0417E), _defineProperty(_color_wikipedia, \"magentaprocess\", 0xffFF0090), _defineProperty(_color_wikipedia, \"magentahaze\", 0xff9F4576), _defineProperty(_color_wikipedia, \"magentapink\", 0xffCC338B), _defineProperty(_color_wikipedia, \"magicmint\", 0xffAAF0D1), _defineProperty(_color_wikipedia, \"magnolia\", 0xffF8F4FF), _defineProperty(_color_wikipedia, \"mahogany\", 0xffC04000), _defineProperty(_color_wikipedia, \"maize\", 0xffFBEC5D), _defineProperty(_color_wikipedia, \"majorelleblue\", 0xff6050DC), _defineProperty(_color_wikipedia, \"malachite\", 0xff0BDA51), _defineProperty(_color_wikipedia, \"manatee\", 0xff979AAA), _defineProperty(_color_wikipedia, \"mangotango\", 0xffFF8243), _defineProperty(_color_wikipedia, \"mantis\", 0xff74C365), _defineProperty(_color_wikipedia, \"mardigras\", 0xff880085), _defineProperty(_color_wikipedia, \"marooncrayola\", 0xffC32148), _defineProperty(_color_wikipedia, \"maroon\", 0xff800000), _defineProperty(_color_wikipedia, \"maroonx11\", 0xffB03060), _defineProperty(_color_wikipedia, \"mauve\", 0xffE0B0FF), _defineProperty(_color_wikipedia, \"mauvetaupe\", 0xff915F6D), _defineProperty(_color_wikipedia, \"mauvelous\", 0xffEF98AA), _defineProperty(_color_wikipedia, \"maygreen\", 0xff4C9141), _defineProperty(_color_wikipedia, \"mayablue\", 0xff73C2FB), _defineProperty(_color_wikipedia, \"meatbrown\", 0xffE5B73B), _defineProperty(_color_wikipedia, \"mediumaquamarine\", 0xff66DDAA), _defineProperty(_color_wikipedia, \"mediumblue\", 0xff0000CD), _defineProperty(_color_wikipedia, \"mediumcandyapplered\", 0xffE2062C), _defineProperty(_color_wikipedia, \"mediumcarmine\", 0xffAF4035), _defineProperty(_color_wikipedia, \"mediumchampagne\", 0xffF3E5AB), _defineProperty(_color_wikipedia, \"mediumelectricblue\", 0xff035096), _defineProperty(_color_wikipedia, \"mediumjunglegreen\", 0xff1C352D), _defineProperty(_color_wikipedia, \"mediumlavendermagenta\", 0xffDDA0DD), _defineProperty(_color_wikipedia, \"mediumorchid\", 0xffBA55D3), _defineProperty(_color_wikipedia, \"mediumpersianblue\", 0xff0067A5), _defineProperty(_color_wikipedia, \"mediumpurple\", 0xff9370DB), _defineProperty(_color_wikipedia, \"mediumredviolet\", 0xffBB3385), _defineProperty(_color_wikipedia, \"mediumruby\", 0xffAA4069), _defineProperty(_color_wikipedia, \"mediumseagreen\", 0xff3CB371), _defineProperty(_color_wikipedia, \"mediumskyblue\", 0xff80DAEB), _defineProperty(_color_wikipedia, \"mediumslateblue\", 0xff7B68EE), _defineProperty(_color_wikipedia, \"mediumspringbud\", 0xffC9DC87), _defineProperty(_color_wikipedia, \"mediumspringgreen\", 0xff00FA9A), _defineProperty(_color_wikipedia, \"mediumtaupe\", 0xff674C47), _defineProperty(_color_wikipedia, \"mediumturquoise\", 0xff48D1CC), _defineProperty(_color_wikipedia, \"mediumtuscanred\", 0xff79443B), _defineProperty(_color_wikipedia, \"mediumvermilion\", 0xffD9603B), _defineProperty(_color_wikipedia, \"mediumvioletred\", 0xffC71585), _defineProperty(_color_wikipedia, \"mellowapricot\", 0xffF8B878), _defineProperty(_color_wikipedia, \"mellowyellow\", 0xffF8DE7E), _defineProperty(_color_wikipedia, \"melon\", 0xffFDBCB4), _defineProperty(_color_wikipedia, \"metallicseaweed\", 0xff0A7E8C), _defineProperty(_color_wikipedia, \"metallicsunburst\", 0xff9C7C38), _defineProperty(_color_wikipedia, \"mexicanpink\", 0xffE4007C), _defineProperty(_color_wikipedia, \"midnightblue\", 0xff191970), _defineProperty(_color_wikipedia, \"midnightgreeneaglegreen\", 0xff004953), _defineProperty(_color_wikipedia, \"mikadoyellow\", 0xffFFC40C), _defineProperty(_color_wikipedia, \"mindaro\", 0xffE3F988), _defineProperty(_color_wikipedia, \"mint\", 0xff3EB489), _defineProperty(_color_wikipedia, \"mintcream\", 0xffF5FFFA), _defineProperty(_color_wikipedia, \"mintgreen\", 0xff98FF98), _defineProperty(_color_wikipedia, \"mistyrose\", 0xffFFE4E1), _defineProperty(_color_wikipedia, \"moccasin\", 0xffFAEBD7), _defineProperty(_color_wikipedia, \"modebeige\", 0xff967117), _defineProperty(_color_wikipedia, \"moonstoneblue\", 0xff73A9C2), _defineProperty(_color_wikipedia, \"mordantred19\", 0xffAE0C00), _defineProperty(_color_wikipedia, \"mossgreen\", 0xff8A9A5B), _defineProperty(_color_wikipedia, \"mountainmeadow\", 0xff30BA8F), _defineProperty(_color_wikipedia, \"mountbattenpink\", 0xff997A8D), _defineProperty(_color_wikipedia, \"msugreen\", 0xff18453B), _defineProperty(_color_wikipedia, \"mughalgreen\", 0xff306030), _defineProperty(_color_wikipedia, \"mulberry\", 0xffC54B8C), _defineProperty(_color_wikipedia, \"mustard\", 0xffFFDB58), _defineProperty(_color_wikipedia, \"myrtlegreen\", 0xff317873), _defineProperty(_color_wikipedia, \"nadeshikopink\", 0xffF6ADC6), _defineProperty(_color_wikipedia, \"napiergreen\", 0xff2A8000), _defineProperty(_color_wikipedia, \"naplesyellow\", 0xffFADA5E), _defineProperty(_color_wikipedia, \"navajowhite\", 0xffFFDEAD), _defineProperty(_color_wikipedia, \"navy\", 0xff000080), _defineProperty(_color_wikipedia, \"navypurple\", 0xff9457EB), _defineProperty(_color_wikipedia, \"neoncarrot\", 0xffFFA343), _defineProperty(_color_wikipedia, \"neonfuchsia\", 0xffFE4164), _defineProperty(_color_wikipedia, \"neongreen\", 0xff39FF14), _defineProperty(_color_wikipedia, \"newcar\", 0xff214FC6), _defineProperty(_color_wikipedia, \"newyorkpink\", 0xffD7837F), _defineProperty(_color_wikipedia, \"nonphotoblue\", 0xffA4DDED), _defineProperty(_color_wikipedia, \"northtexasgreen\", 0xff059033), _defineProperty(_color_wikipedia, \"nyanza\", 0xffE9FFDB), _defineProperty(_color_wikipedia, \"oceanboatblue\", 0xff0077BE), _defineProperty(_color_wikipedia, \"ochre\", 0xffCC7722), _defineProperty(_color_wikipedia, \"officegreen\", 0xff008000), _defineProperty(_color_wikipedia, \"oldburgundy\", 0xff43302E), _defineProperty(_color_wikipedia, \"oldgold\", 0xffCFB53B), _defineProperty(_color_wikipedia, \"oldheliotrope\", 0xff563C5C), _defineProperty(_color_wikipedia, \"oldlace\", 0xffFDF5E6), _defineProperty(_color_wikipedia, \"oldlavender\", 0xff796878), _defineProperty(_color_wikipedia, \"oldmauve\", 0xff673147), _defineProperty(_color_wikipedia, \"oldmossgreen\", 0xff867E36), _defineProperty(_color_wikipedia, \"oldrose\", 0xffC08081), _defineProperty(_color_wikipedia, \"oldsilver\", 0xff848482), _defineProperty(_color_wikipedia, \"olive\", 0xff808000), _defineProperty(_color_wikipedia, \"olivedrab3\", 0xff6B8E23), _defineProperty(_color_wikipedia, \"olivedrab7\", 0xff3C341F), _defineProperty(_color_wikipedia, \"olivine\", 0xff9AB973), _defineProperty(_color_wikipedia, \"onyx\", 0xff353839), _defineProperty(_color_wikipedia, \"operamauve\", 0xffB784A7), _defineProperty(_color_wikipedia, \"orangecolorwheel\", 0xffFF7F00), _defineProperty(_color_wikipedia, \"orangecrayola\", 0xffFF7538), _defineProperty(_color_wikipedia, \"orangepantone\", 0xffFF5800), _defineProperty(_color_wikipedia, \"orangeryb\", 0xffFB9902), _defineProperty(_color_wikipedia, \"orange\", 0xffFFA500), _defineProperty(_color_wikipedia, \"orangepeel\", 0xffFF9F00), _defineProperty(_color_wikipedia, \"orangered\", 0xffFF4500), _defineProperty(_color_wikipedia, \"orchid\", 0xffDA70D6), _defineProperty(_color_wikipedia, \"orchidpink\", 0xffF2BDCD), _defineProperty(_color_wikipedia, \"oriolesorange\", 0xffFB4F14), _defineProperty(_color_wikipedia, \"otterbrown\", 0xff654321), _defineProperty(_color_wikipedia, \"outerspace\", 0xff414A4C), _defineProperty(_color_wikipedia, \"outrageousorange\", 0xffFF6E4A), _defineProperty(_color_wikipedia, \"oxfordblue\", 0xff002147), _defineProperty(_color_wikipedia, \"oucrimsonred\", 0xff990000), _defineProperty(_color_wikipedia, \"pakistangreen\", 0xff006600), _defineProperty(_color_wikipedia, \"palatinateblue\", 0xff273BE2), _defineProperty(_color_wikipedia, \"palatinatepurple\", 0xff682860), _defineProperty(_color_wikipedia, \"paleaqua\", 0xffBCD4E6), _defineProperty(_color_wikipedia, \"paleblue\", 0xffAFEEEE), _defineProperty(_color_wikipedia, \"palebrown\", 0xff987654), _defineProperty(_color_wikipedia, \"palecarmine\", 0xffAF4035), _defineProperty(_color_wikipedia, \"palecerulean\", 0xff9BC4E2), _defineProperty(_color_wikipedia, \"palechestnut\", 0xffDDADAF), _defineProperty(_color_wikipedia, \"palecopper\", 0xffDA8A67), _defineProperty(_color_wikipedia, \"palecornflowerblue\", 0xffABCDEF), _defineProperty(_color_wikipedia, \"palegold\", 0xffE6BE8A), _defineProperty(_color_wikipedia, \"palegoldenrod\", 0xffEEE8AA), _defineProperty(_color_wikipedia, \"palegreen\", 0xff98FB98), _defineProperty(_color_wikipedia, \"palelavender\", 0xffDCD0FF), _defineProperty(_color_wikipedia, \"palemagenta\", 0xffF984E5), _defineProperty(_color_wikipedia, \"palepink\", 0xffFADADD), _defineProperty(_color_wikipedia, \"paleplum\", 0xffDDA0DD), _defineProperty(_color_wikipedia, \"paleredviolet\", 0xffDB7093), _defineProperty(_color_wikipedia, \"palerobineggblue\", 0xff96DED1), _defineProperty(_color_wikipedia, \"palesilver\", 0xffC9C0BB), _defineProperty(_color_wikipedia, \"palespringbud\", 0xffECEBBD), _defineProperty(_color_wikipedia, \"paletaupe\", 0xffBC987E), _defineProperty(_color_wikipedia, \"paleturquoise\", 0xffAFEEEE), _defineProperty(_color_wikipedia, \"paleviolet\", 0xffCC99FF), _defineProperty(_color_wikipedia, \"palevioletred\", 0xffDB7093), _defineProperty(_color_wikipedia, \"pansypurple\", 0xff78184A), _defineProperty(_color_wikipedia, \"paoloveronesegreen\", 0xff009B7D), _defineProperty(_color_wikipedia, \"papayawhip\", 0xffFFEFD5), _defineProperty(_color_wikipedia, \"paradisepink\", 0xffE63E62), _defineProperty(_color_wikipedia, \"parisgreen\", 0xff50C878), _defineProperty(_color_wikipedia, \"pastelblue\", 0xffAEC6CF), _defineProperty(_color_wikipedia, \"pastelbrown\", 0xff836953), _defineProperty(_color_wikipedia, \"pastelgray\", 0xffCFCFC4), _defineProperty(_color_wikipedia, \"pastelgreen\", 0xff77DD77), _defineProperty(_color_wikipedia, \"pastelmagenta\", 0xffF49AC2), _defineProperty(_color_wikipedia, \"pastelorange\", 0xffFFB347), _defineProperty(_color_wikipedia, \"pastelpink\", 0xffDEA5A4), _defineProperty(_color_wikipedia, \"pastelpurple\", 0xffB39EB5), _defineProperty(_color_wikipedia, \"pastelred\", 0xffFF6961), _defineProperty(_color_wikipedia, \"pastelviolet\", 0xffCB99C9), _defineProperty(_color_wikipedia, \"pastelyellow\", 0xffFDFD96), _defineProperty(_color_wikipedia, \"patriarch\", 0xff800080), _defineProperty(_color_wikipedia, \"paynesgrey\", 0xff536878), _defineProperty(_color_wikipedia, \"peach\", 0xffFFE5B4), _defineProperty(_color_wikipedia, \"peach\", 0xffFFCBA4), _defineProperty(_color_wikipedia, \"peachorange\", 0xffFFCC99), _defineProperty(_color_wikipedia, \"peachpuff\", 0xffFFDAB9), _defineProperty(_color_wikipedia, \"peachyellow\", 0xffFADFAD), _defineProperty(_color_wikipedia, \"pear\", 0xffD1E231), _defineProperty(_color_wikipedia, \"pearl\", 0xffEAE0C8), _defineProperty(_color_wikipedia, \"pearlaqua\", 0xff88D8C0), _defineProperty(_color_wikipedia, \"pearlypurple\", 0xffB768A2), _defineProperty(_color_wikipedia, \"peridot\", 0xffE6E200), _defineProperty(_color_wikipedia, \"periwinkle\", 0xffCCCCFF), _defineProperty(_color_wikipedia, \"persianblue\", 0xff1C39BB), _defineProperty(_color_wikipedia, \"persiangreen\", 0xff00A693), _defineProperty(_color_wikipedia, \"persianindigo\", 0xff32127A), _defineProperty(_color_wikipedia, \"persianorange\", 0xffD99058), _defineProperty(_color_wikipedia, \"persianpink\", 0xffF77FBE), _defineProperty(_color_wikipedia, \"persianplum\", 0xff701C1C), _defineProperty(_color_wikipedia, \"persianred\", 0xffCC3333), _defineProperty(_color_wikipedia, \"persianrose\", 0xffFE28A2), _defineProperty(_color_wikipedia, \"persimmon\", 0xffEC5800), _defineProperty(_color_wikipedia, \"peru\", 0xffCD853F), _defineProperty(_color_wikipedia, \"phlox\", 0xffDF00FF), _defineProperty(_color_wikipedia, \"phthaloblue\", 0xff000F89), _defineProperty(_color_wikipedia, \"phthalogreen\", 0xff123524), _defineProperty(_color_wikipedia, \"pictonblue\", 0xff45B1E8), _defineProperty(_color_wikipedia, \"pictorialcarmine\", 0xffC30B4E), _defineProperty(_color_wikipedia, \"piggypink\", 0xffFDDDE6), _defineProperty(_color_wikipedia, \"pinegreen\", 0xff01796F), _defineProperty(_color_wikipedia, \"pineapple\", 0xff563C5C), _defineProperty(_color_wikipedia, \"pink\", 0xffFFC0CB), _defineProperty(_color_wikipedia, \"pinkpantone\", 0xffD74894), _defineProperty(_color_wikipedia, \"pinklace\", 0xffFFDDF4), _defineProperty(_color_wikipedia, \"pinklavender\", 0xffD8B2D1), _defineProperty(_color_wikipedia, \"pinkpearl\", 0xffE7ACCF), _defineProperty(_color_wikipedia, \"pinksherbet\", 0xffF78FA7), _defineProperty(_color_wikipedia, \"pistachio\", 0xff93C572), _defineProperty(_color_wikipedia, \"platinum\", 0xffE5E4E2), _defineProperty(_color_wikipedia, \"plum\", 0xff8E4585), _defineProperty(_color_wikipedia, \"plum\", 0xffDDA0DD), _defineProperty(_color_wikipedia, \"pompandpower\", 0xff86608E), _defineProperty(_color_wikipedia, \"popstar\", 0xffBE4F62), _defineProperty(_color_wikipedia, \"portlandorange\", 0xffFF5A36), _defineProperty(_color_wikipedia, \"powderblue\", 0xffB0E0E6), _defineProperty(_color_wikipedia, \"princetonorange\", 0xffF58025), _defineProperty(_color_wikipedia, \"prune\", 0xff701C1C), _defineProperty(_color_wikipedia, \"prussianblue\", 0xff003153), _defineProperty(_color_wikipedia, \"psychedelicpurple\", 0xffDF00FF), _defineProperty(_color_wikipedia, \"puce\", 0xffCC8899), _defineProperty(_color_wikipedia, \"pucered\", 0xff722F37), _defineProperty(_color_wikipedia, \"pullmanbrownupsbrown\", 0xff644117), _defineProperty(_color_wikipedia, \"pumpkin\", 0xffFF7518), _defineProperty(_color_wikipedia, \"purple\", 0xff800080), _defineProperty(_color_wikipedia, \"purplemunsell\", 0xff9F00C5), _defineProperty(_color_wikipedia, \"purplex11\", 0xffA020F0), _defineProperty(_color_wikipedia, \"purpleheart\", 0xff69359C), _defineProperty(_color_wikipedia, \"purplemountainmajesty\", 0xff9678B6), _defineProperty(_color_wikipedia, \"purplenavy\", 0xff4E5180), _defineProperty(_color_wikipedia, \"purplepizzazz\", 0xffFE4EDA), _defineProperty(_color_wikipedia, \"purpletaupe\", 0xff50404D), _defineProperty(_color_wikipedia, \"purpureus\", 0xff9A4EAE), _defineProperty(_color_wikipedia, \"quartz\", 0xff51484F), _defineProperty(_color_wikipedia, \"queenblue\", 0xff436B95), _defineProperty(_color_wikipedia, \"queenpink\", 0xffE8CCD7), _defineProperty(_color_wikipedia, \"quinacridonemagenta\", 0xff8E3A59), _defineProperty(_color_wikipedia, \"rackley\", 0xff5D8AA8), _defineProperty(_color_wikipedia, \"radicalred\", 0xffFF355E), _defineProperty(_color_wikipedia, \"rajah\", 0xffFBAB60), _defineProperty(_color_wikipedia, \"raspberry\", 0xffE30B5D), _defineProperty(_color_wikipedia, \"raspberryglace\", 0xff915F6D), _defineProperty(_color_wikipedia, \"raspberrypink\", 0xffE25098), _defineProperty(_color_wikipedia, \"raspberryrose\", 0xffB3446C), _defineProperty(_color_wikipedia, \"rawumber\", 0xff826644), _defineProperty(_color_wikipedia, \"razzledazzlerose\", 0xffFF33CC), _defineProperty(_color_wikipedia, \"razzmatazz\", 0xffE3256B), _defineProperty(_color_wikipedia, \"razzmicberry\", 0xff8D4E85), _defineProperty(_color_wikipedia, \"red\", 0xffFF0000), _defineProperty(_color_wikipedia, \"redcrayola\", 0xffEE204D), _defineProperty(_color_wikipedia, \"redmunsell\", 0xffF2003C), _defineProperty(_color_wikipedia, \"redncs\", 0xffC40233), _defineProperty(_color_wikipedia, \"redpantone\", 0xffED2939), _defineProperty(_color_wikipedia, \"redpigment\", 0xffED1C24), _defineProperty(_color_wikipedia, \"redryb\", 0xffFE2712), _defineProperty(_color_wikipedia, \"redbrown\", 0xffA52A2A), _defineProperty(_color_wikipedia, \"reddevil\", 0xff860111), _defineProperty(_color_wikipedia, \"redorange\", 0xffFF5349), _defineProperty(_color_wikipedia, \"redpurple\", 0xffE40078), _defineProperty(_color_wikipedia, \"redviolet\", 0xffC71585), _defineProperty(_color_wikipedia, \"redwood\", 0xffA45A52), _defineProperty(_color_wikipedia, \"regalia\", 0xff522D80), _defineProperty(_color_wikipedia, \"resolutionblue\", 0xff002387), _defineProperty(_color_wikipedia, \"rhythm\", 0xff777696), _defineProperty(_color_wikipedia, \"richblack\", 0xff004040), _defineProperty(_color_wikipedia, \"richbrilliantlavender\", 0xffF1A7FE), _defineProperty(_color_wikipedia, \"richcarmine\", 0xffD70040), _defineProperty(_color_wikipedia, \"richelectricblue\", 0xff0892D0), _defineProperty(_color_wikipedia, \"richlavender\", 0xffA76BCF), _defineProperty(_color_wikipedia, \"richlilac\", 0xffB666D2), _defineProperty(_color_wikipedia, \"richmaroon\", 0xffB03060), _defineProperty(_color_wikipedia, \"riflegreen\", 0xff444C38), _defineProperty(_color_wikipedia, \"roastcoffee\", 0xff704241), _defineProperty(_color_wikipedia, \"robineggblue\", 0xff00CCCC), _defineProperty(_color_wikipedia, \"rocketmetallic\", 0xff8A7F80), _defineProperty(_color_wikipedia, \"romansilver\", 0xff838996), _defineProperty(_color_wikipedia, \"rose\", 0xffFF007F), _defineProperty(_color_wikipedia, \"rosebonbon\", 0xffF9429E), _defineProperty(_color_wikipedia, \"roseebony\", 0xff674846), _defineProperty(_color_wikipedia, \"rosegold\", 0xffB76E79), _defineProperty(_color_wikipedia, \"rosemadder\", 0xffE32636), _defineProperty(_color_wikipedia, \"rosepink\", 0xffFF66CC), _defineProperty(_color_wikipedia, \"rosequartz\", 0xffAA98A9), _defineProperty(_color_wikipedia, \"rosered\", 0xffC21E56), _defineProperty(_color_wikipedia, \"rosetaupe\", 0xff905D5D), _defineProperty(_color_wikipedia, \"rosevale\", 0xffAB4E52), _defineProperty(_color_wikipedia, \"rosewood\", 0xff65000B), _defineProperty(_color_wikipedia, \"rossocorsa\", 0xffD40000), _defineProperty(_color_wikipedia, \"rosybrown\", 0xffBC8F8F), _defineProperty(_color_wikipedia, \"royalazure\", 0xff0038A8), _defineProperty(_color_wikipedia, \"royalblue1\", 0xff002366), _defineProperty(_color_wikipedia, \"royalblue2\", 0xff4169E1), _defineProperty(_color_wikipedia, \"royalfuchsia\", 0xffCA2C92), _defineProperty(_color_wikipedia, \"royalpurple\", 0xff7851A9), _defineProperty(_color_wikipedia, \"royalyellow\", 0xffFADA5E), _defineProperty(_color_wikipedia, \"ruber\", 0xffCE4676), _defineProperty(_color_wikipedia, \"rubinered\", 0xffD10056), _defineProperty(_color_wikipedia, \"ruby\", 0xffE0115F), _defineProperty(_color_wikipedia, \"rubyred\", 0xff9B111E), _defineProperty(_color_wikipedia, \"ruddy\", 0xffFF0028), _defineProperty(_color_wikipedia, \"ruddybrown\", 0xffBB6528), _defineProperty(_color_wikipedia, \"ruddypink\", 0xffE18E96), _defineProperty(_color_wikipedia, \"rufous\", 0xffA81C07), _defineProperty(_color_wikipedia, \"russet\", 0xff80461B), _defineProperty(_color_wikipedia, \"russiangreen\", 0xff679267), _defineProperty(_color_wikipedia, \"russianviolet\", 0xff32174D), _defineProperty(_color_wikipedia, \"rust\", 0xffB7410E), _defineProperty(_color_wikipedia, \"rustyred\", 0xffDA2C43), _defineProperty(_color_wikipedia, \"sacramentostategreen\", 0xff00563F), _defineProperty(_color_wikipedia, \"saddlebrown\", 0xff8B4513), _defineProperty(_color_wikipedia, \"safetyorangeblazeorange\", 0xffFF6700), _defineProperty(_color_wikipedia, \"safetyyellow\", 0xffEED202), _defineProperty(_color_wikipedia, \"saffron\", 0xffF4C430), _defineProperty(_color_wikipedia, \"sage\", 0xffBCB88A), _defineProperty(_color_wikipedia, \"stpatricksblue\", 0xff23297A), _defineProperty(_color_wikipedia, \"salmon\", 0xffFA8072), _defineProperty(_color_wikipedia, \"salmonpink\", 0xffFF91A4), _defineProperty(_color_wikipedia, \"sand\", 0xffC2B280), _defineProperty(_color_wikipedia, \"sanddune\", 0xff967117), _defineProperty(_color_wikipedia, \"sandstorm\", 0xffECD540), _defineProperty(_color_wikipedia, \"sandybrown\", 0xffF4A460), _defineProperty(_color_wikipedia, \"sandytaupe\", 0xff967117), _defineProperty(_color_wikipedia, \"sangria\", 0xff92000A), _defineProperty(_color_wikipedia, \"sapgreen\", 0xff507D2A), _defineProperty(_color_wikipedia, \"sapphire\", 0xff0F52BA), _defineProperty(_color_wikipedia, \"sapphireblue\", 0xff0067A5), _defineProperty(_color_wikipedia, \"satinsheengold\", 0xffCBA135), _defineProperty(_color_wikipedia, \"scarlet\", 0xffFF2400), _defineProperty(_color_wikipedia, \"scarlet\", 0xffFD0E35), _defineProperty(_color_wikipedia, \"schausspink\", 0xffFF91AF), _defineProperty(_color_wikipedia, \"schoolbusyellow\", 0xffFFD800), _defineProperty(_color_wikipedia, \"screamingreen\", 0xff76FF7A), _defineProperty(_color_wikipedia, \"seablue\", 0xff006994), _defineProperty(_color_wikipedia, \"seagreen\", 0xff2E8B57), _defineProperty(_color_wikipedia, \"sealbrown\", 0xff321414), _defineProperty(_color_wikipedia, \"seashell\", 0xffFFF5EE), _defineProperty(_color_wikipedia, \"selectiveyellow\", 0xffFFBA00), _defineProperty(_color_wikipedia, \"sepia\", 0xff704214), _defineProperty(_color_wikipedia, \"shadow\", 0xff8A795D), _defineProperty(_color_wikipedia, \"shadowblue\", 0xff778BA5), _defineProperty(_color_wikipedia, \"shampoo\", 0xffFFCFF1), _defineProperty(_color_wikipedia, \"shamrockgreen\", 0xff009E60), _defineProperty(_color_wikipedia, \"sheengreen\", 0xff8FD400), _defineProperty(_color_wikipedia, \"shimmeringblush\", 0xffD98695), _defineProperty(_color_wikipedia, \"shockingpink\", 0xffFC0FC0), _defineProperty(_color_wikipedia, \"shockingpinkcrayola\", 0xffFF6FFF), _defineProperty(_color_wikipedia, \"sienna\", 0xff882D17), _defineProperty(_color_wikipedia, \"silver\", 0xffC0C0C0), _defineProperty(_color_wikipedia, \"silverchalice\", 0xffACACAC), _defineProperty(_color_wikipedia, \"silverlakeblue\", 0xff5D89BA), _defineProperty(_color_wikipedia, \"silverpink\", 0xffC4AEAD), _defineProperty(_color_wikipedia, \"silversand\", 0xffBFC1C2), _defineProperty(_color_wikipedia, \"sinopia\", 0xffCB410B), _defineProperty(_color_wikipedia, \"skobeloff\", 0xff007474), _defineProperty(_color_wikipedia, \"skyblue\", 0xff87CEEB), _defineProperty(_color_wikipedia, \"skymagenta\", 0xffCF71AF), _defineProperty(_color_wikipedia, \"slateblue\", 0xff6A5ACD), _defineProperty(_color_wikipedia, \"slategray\", 0xff708090), _defineProperty(_color_wikipedia, \"smaltdarkpowderblue\", 0xff003399), _defineProperty(_color_wikipedia, \"smitten\", 0xffC84186), _defineProperty(_color_wikipedia, \"smoke\", 0xff738276), _defineProperty(_color_wikipedia, \"smokyblack\", 0xff100C08), _defineProperty(_color_wikipedia, \"smokytopaz\", 0xff933D41), _defineProperty(_color_wikipedia, \"snow\", 0xffFFFAFA), _defineProperty(_color_wikipedia, \"soap\", 0xffCEC8EF), _defineProperty(_color_wikipedia, \"solidpink\", 0xff893843), _defineProperty(_color_wikipedia, \"sonicsilver\", 0xff757575), _defineProperty(_color_wikipedia, \"spartancrimson\", 0xff9E1316), _defineProperty(_color_wikipedia, \"spacecadet\", 0xff1D2951), _defineProperty(_color_wikipedia, \"spanishbistre\", 0xff807532), _defineProperty(_color_wikipedia, \"spanishblue\", 0xff0070B8), _defineProperty(_color_wikipedia, \"spanishcarmine\", 0xffD10047), _defineProperty(_color_wikipedia, \"spanishcrimson\", 0xffE51A4C), _defineProperty(_color_wikipedia, \"spanishgray\", 0xff989898), _defineProperty(_color_wikipedia, \"spanishgreen\", 0xff009150), _defineProperty(_color_wikipedia, \"spanishorange\", 0xffE86100), _defineProperty(_color_wikipedia, \"spanishpink\", 0xffF7BFBE), _defineProperty(_color_wikipedia, \"spanishred\", 0xffE60026), _defineProperty(_color_wikipedia, \"spanishskyblue\", 0xff00FFFF), _defineProperty(_color_wikipedia, \"spanishviolet\", 0xff4C2882), _defineProperty(_color_wikipedia, \"spanishviridian\", 0xff007F5C), _defineProperty(_color_wikipedia, \"spirodiscoball\", 0xff0FC0FC), _defineProperty(_color_wikipedia, \"springbud\", 0xffA7FC00), _defineProperty(_color_wikipedia, \"springgreen\", 0xff00FF7F), _defineProperty(_color_wikipedia, \"starcommandblue\", 0xff007BB8), _defineProperty(_color_wikipedia, \"steelblue\", 0xff4682B4), _defineProperty(_color_wikipedia, \"steelpink\", 0xffCC33CC), _defineProperty(_color_wikipedia, \"stildegrainyellow\", 0xffFADA5E), _defineProperty(_color_wikipedia, \"stizza\", 0xff990000), _defineProperty(_color_wikipedia, \"stormcloud\", 0xff4F666A), _defineProperty(_color_wikipedia, \"straw\", 0xffE4D96F), _defineProperty(_color_wikipedia, \"strawberry\", 0xffFC5A8D), _defineProperty(_color_wikipedia, \"sunglow\", 0xffFFCC33), _defineProperty(_color_wikipedia, \"sunray\", 0xffE3AB57), _defineProperty(_color_wikipedia, \"sunset\", 0xffFAD6A5), _defineProperty(_color_wikipedia, \"sunsetorange\", 0xffFD5E53), _defineProperty(_color_wikipedia, \"superpink\", 0xffCF6BA9), _defineProperty(_color_wikipedia, \"tan\", 0xffD2B48C), _defineProperty(_color_wikipedia, \"tangelo\", 0xffF94D00), _defineProperty(_color_wikipedia, \"tangerine\", 0xffF28500), _defineProperty(_color_wikipedia, \"tangerineyellow\", 0xffFFCC00), _defineProperty(_color_wikipedia, \"tangopink\", 0xffE4717A), _defineProperty(_color_wikipedia, \"taupe\", 0xff483C32), _defineProperty(_color_wikipedia, \"taupegray\", 0xff8B8589), _defineProperty(_color_wikipedia, \"teagreen\", 0xffD0F0C0), _defineProperty(_color_wikipedia, \"tearose\", 0xffF88379), _defineProperty(_color_wikipedia, \"tearose\", 0xffF4C2C2), _defineProperty(_color_wikipedia, \"teal\", 0xff008080), _defineProperty(_color_wikipedia, \"tealblue\", 0xff367588), _defineProperty(_color_wikipedia, \"tealdeer\", 0xff99E6B3), _defineProperty(_color_wikipedia, \"tealgreen\", 0xff00827F), _defineProperty(_color_wikipedia, \"telemagenta\", 0xffCF3476), _defineProperty(_color_wikipedia, \"tenne\", 0xffCD5700), _defineProperty(_color_wikipedia, \"terracotta\", 0xffE2725B), _defineProperty(_color_wikipedia, \"thistle\", 0xffD8BFD8), _defineProperty(_color_wikipedia, \"thulianpink\", 0xffDE6FA1), _defineProperty(_color_wikipedia, \"ticklemepink\", 0xffFC89AC), _defineProperty(_color_wikipedia, \"tiffanyblue\", 0xff0ABAB5), _defineProperty(_color_wikipedia, \"tigerseye\", 0xffE08D3C), _defineProperty(_color_wikipedia, \"timberwolf\", 0xffDBD7D2), _defineProperty(_color_wikipedia, \"titaniumyellow\", 0xffEEE600), _defineProperty(_color_wikipedia, \"tomato\", 0xffFF6347), _defineProperty(_color_wikipedia, \"toolbox\", 0xff746CC0), _defineProperty(_color_wikipedia, \"topaz\", 0xffFFC87C), _defineProperty(_color_wikipedia, \"tractorred\", 0xffFD0E35), _defineProperty(_color_wikipedia, \"trolleygrey\", 0xff808080), _defineProperty(_color_wikipedia, \"tropicalrainforest\", 0xff00755E), _defineProperty(_color_wikipedia, \"trueblue\", 0xff0073CF), _defineProperty(_color_wikipedia, \"tuftsblue\", 0xff417DC1), _defineProperty(_color_wikipedia, \"tulip\", 0xffFF878D), _defineProperty(_color_wikipedia, \"tumbleweed\", 0xffDEAA88), _defineProperty(_color_wikipedia, \"tumblr\", 0xff2C4762), _defineProperty(_color_wikipedia, \"turkishrose\", 0xffB57281), _defineProperty(_color_wikipedia, \"turquoise\", 0xff40E0D0), _defineProperty(_color_wikipedia, \"turquoiseblue\", 0xff00FFEF), _defineProperty(_color_wikipedia, \"turquoisegreen\", 0xffA0D6B4), _defineProperty(_color_wikipedia, \"tuscan\", 0xffFAD6A5), _defineProperty(_color_wikipedia, \"tuscanbrown\", 0xff6F4E37), _defineProperty(_color_wikipedia, \"tuscanred\", 0xff7C4848), _defineProperty(_color_wikipedia, \"tuscantan\", 0xffA67B5B), _defineProperty(_color_wikipedia, \"tuscany\", 0xffC09999), _defineProperty(_color_wikipedia, \"twilightlavender\", 0xff8A496B), _defineProperty(_color_wikipedia, \"tyrianpurple\", 0xff66023C), _defineProperty(_color_wikipedia, \"uablue\", 0xff0033AA), _defineProperty(_color_wikipedia, \"uared\", 0xffD9004C), _defineProperty(_color_wikipedia, \"ube\", 0xff8878C3), _defineProperty(_color_wikipedia, \"uclablue\", 0xff536895), _defineProperty(_color_wikipedia, \"uclagold\", 0xffFFB300), _defineProperty(_color_wikipedia, \"ufogreen\", 0xff3CD070), _defineProperty(_color_wikipedia, \"ultramarine\", 0xff120A8F), _defineProperty(_color_wikipedia, \"ultramarineblue\", 0xff4166F5), _defineProperty(_color_wikipedia, \"ultrapink\", 0xffFF6FFF), _defineProperty(_color_wikipedia, \"ultrared\", 0xffFC6C85), _defineProperty(_color_wikipedia, \"umber\", 0xff635147), _defineProperty(_color_wikipedia, \"unbleachedsilk\", 0xffFFDDCA), _defineProperty(_color_wikipedia, \"unitednationsblue\", 0xff5B92E5), _defineProperty(_color_wikipedia, \"universityofcaliforniagold\", 0xffB78727), _defineProperty(_color_wikipedia, \"unmellowyellow\", 0xffFFFF66), _defineProperty(_color_wikipedia, \"upforestgreen\", 0xff014421), _defineProperty(_color_wikipedia, \"upmaroon\", 0xff7B1113), _defineProperty(_color_wikipedia, \"upsdellred\", 0xffAE2029), _defineProperty(_color_wikipedia, \"urobilin\", 0xffE1AD21), _defineProperty(_color_wikipedia, \"usafablue\", 0xff004F98), _defineProperty(_color_wikipedia, \"usccardinal\", 0xff990000), _defineProperty(_color_wikipedia, \"uscgold\", 0xffFFCC00), _defineProperty(_color_wikipedia, \"universityoftennesseeorange\", 0xffF77F00), _defineProperty(_color_wikipedia, \"utahcrimson\", 0xffD3003F), _defineProperty(_color_wikipedia, \"vanilla\", 0xffF3E5AB), _defineProperty(_color_wikipedia, \"vanillaice\", 0xffF38FA9), _defineProperty(_color_wikipedia, \"vegasgold\", 0xffC5B358), _defineProperty(_color_wikipedia, \"venetianred\", 0xffC80815), _defineProperty(_color_wikipedia, \"verdigris\", 0xff43B3AE), _defineProperty(_color_wikipedia, \"vermilion\", 0xffE34234), _defineProperty(_color_wikipedia, \"vermilion\", 0xffD9381E), _defineProperty(_color_wikipedia, \"veronica\", 0xffA020F0), _defineProperty(_color_wikipedia, \"verylightblue\", 0xff6666FF), _defineProperty(_color_wikipedia, \"verylightmalachitegreen\", 0xff64E986), _defineProperty(_color_wikipedia, \"verypaleorange\", 0xffFFDFBF), _defineProperty(_color_wikipedia, \"verypaleyellow\", 0xffFFFFBF), _defineProperty(_color_wikipedia, \"violet\", 0xff8F00FF), _defineProperty(_color_wikipedia, \"violetcolorwheel\", 0xff7F00FF), _defineProperty(_color_wikipedia, \"violetryb\", 0xff8601AF), _defineProperty(_color_wikipedia, \"violet\", 0xffEE82EE), _defineProperty(_color_wikipedia, \"violetblue\", 0xff324AB2), _defineProperty(_color_wikipedia, \"violetred\", 0xffF75394), _defineProperty(_color_wikipedia, \"viridian\", 0xff40826D), _defineProperty(_color_wikipedia, \"viridiangreen\", 0xff009698), _defineProperty(_color_wikipedia, \"vistablue\", 0xff7C9ED9), _defineProperty(_color_wikipedia, \"vividauburn\", 0xff922724), _defineProperty(_color_wikipedia, \"vividburgundy\", 0xff9F1D35), _defineProperty(_color_wikipedia, \"vividcerise\", 0xffDA1D81), _defineProperty(_color_wikipedia, \"vividgamboge\", 0xffFF9900), _defineProperty(_color_wikipedia, \"vividmulberry\", 0xffB80CE3), _defineProperty(_color_wikipedia, \"vividorange\", 0xffFF5F00), _defineProperty(_color_wikipedia, \"vividorchid\", 0xffCC00FF), _defineProperty(_color_wikipedia, \"vividraspberry\", 0xffFF006C), _defineProperty(_color_wikipedia, \"vividred\", 0xffF70D1A), _defineProperty(_color_wikipedia, \"vividredtangelo\", 0xffDF6124), _defineProperty(_color_wikipedia, \"vividskyblue\", 0xff00CCFF), _defineProperty(_color_wikipedia, \"vividtangelo\", 0xffF07427), _defineProperty(_color_wikipedia, \"vividtangerine\", 0xffFFA089), _defineProperty(_color_wikipedia, \"vividviolet\", 0xff9F00FF), _defineProperty(_color_wikipedia, \"vividyellow\", 0xffFFE302), _defineProperty(_color_wikipedia, \"warmblack\", 0xff004242), _defineProperty(_color_wikipedia, \"waterspout\", 0xffA4F4F9), _defineProperty(_color_wikipedia, \"wenge\", 0xff645452), _defineProperty(_color_wikipedia, \"wheat\", 0xffF5DEB3), _defineProperty(_color_wikipedia, \"white\", 0xffFFFFFF), _defineProperty(_color_wikipedia, \"whitesmoke\", 0xffF5F5F5), _defineProperty(_color_wikipedia, \"wildblueyonder\", 0xffA2ADD0), _defineProperty(_color_wikipedia, \"wildorchid\", 0xffD470A2), _defineProperty(_color_wikipedia, \"wildstrawberry\", 0xffFF43A4), _defineProperty(_color_wikipedia, \"wildwatermelon\", 0xffFC6C85), _defineProperty(_color_wikipedia, \"willpowerorange\", 0xffFD5800), _defineProperty(_color_wikipedia, \"windsortan\", 0xffA75502), _defineProperty(_color_wikipedia, \"wine\", 0xff722F37), _defineProperty(_color_wikipedia, \"winedregs\", 0xff673147), _defineProperty(_color_wikipedia, \"wisteria\", 0xffC9A0DC), _defineProperty(_color_wikipedia, \"woodbrown\", 0xffC19A6B), _defineProperty(_color_wikipedia, \"xanadu\", 0xff738678), _defineProperty(_color_wikipedia, \"yaleblue\", 0xff0F4D92), _defineProperty(_color_wikipedia, \"yankeesblue\", 0xff1C2841), _defineProperty(_color_wikipedia, \"yellow\", 0xffFFFF00), _defineProperty(_color_wikipedia, \"yellowcrayola\", 0xffFCE883), _defineProperty(_color_wikipedia, \"yellowmunsell\", 0xffEFCC00), _defineProperty(_color_wikipedia, \"yellowncs\", 0xffFFD300), _defineProperty(_color_wikipedia, \"yellowpantone\", 0xffFEDF00), _defineProperty(_color_wikipedia, \"yellowprocess\", 0xffFFEF00), _defineProperty(_color_wikipedia, \"yellowryb\", 0xffFEFE33), _defineProperty(_color_wikipedia, \"yellowgreen\", 0xff9ACD32), _defineProperty(_color_wikipedia, \"yelloworange\", 0xffFFAE42), _defineProperty(_color_wikipedia, \"yellowrose\", 0xffFFF000), _defineProperty(_color_wikipedia, \"zaffre\", 0xff0014A8), _defineProperty(_color_wikipedia, \"zinnwalditebrown\", 0xff2C1608), _defineProperty(_color_wikipedia, \"zomp\", 0xff39A78E), _defineProperty(_color_wikipedia, \"transparent\", 0x0), _color_wikipedia);\n\n\tvec2.parse = function (str, o) {\n\t\tvar a = o || vec4();\n\t\tvar fcol = parseFloat(str);\n\t\tif (fcol == str) {\n\t\t\treturn vec2(fcol);\n\t\t}\n\n\t\tvar vec2m = str.match(/^vec2\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\t\tif (vec2m) {\n\t\t\ta[0] = vec2m[1];\n\t\t\ta[1] = vec2m[2];\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec2m = str.match(/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/i);\n\t\tif (vec2m) {\n\t\t\ta[0] = vec2m[1];\n\t\t\ta[1] = vec2m[2];\n\t\t\treturn a;\n\t\t}\n\t};\n\n\tvec3.parse = function (str, o) {\n\t\tvar a = o || vec4();\n\t\tvar fcol = parseFloat(str);\n\t\tif (fcol == str) {\n\t\t\ta[0] = fcol;\n\t\t\ta[1] = fcol;\n\t\t\ta[2] = fcol;\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec3m = str.match(/^vec4\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\t\tif (vec3m) {\n\t\t\ta[0] = vec3m[1];\n\t\t\ta[1] = vec3m[2];\n\t\t\ta[2] = vec3m[3];\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec3m = str.match(/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/i);\n\t\tif (vec3m) {\n\t\t\ta[0] = vec3m[1];\n\t\t\ta[1] = vec3m[2];\n\t\t\ta[2] = vec3m[3];\n\t\t\treturn a;\n\t\t}\n\t};\n\n\t// color parser\n\tvec4.parse = function (col, o, noerror) {\n\n\t\tif (col && col.struct) return col; // pass through\n\n\t\tcol = col.trim().toLowerCase();\n\n\t\tvar c = color_wikipedia[col]; // color LUT\n\t\tvar a = o || vec4();\n\t\tif (c !== undefined) {\n\t\t\ta[0] = (c >> 16 & 0xff) / 255;\n\t\t\ta[1] = (c >> 8 & 0xff) / 255;\n\t\t\ta[2] = (c & 0xff) / 255;\n\n\t\t\ta[3] = (c >> 24 & 0xff) / 255; // alpha\n\n\t\t\treturn a;\n\t\t}\n\n\t\tvar fcol = parseFloat(col);\n\t\tif (fcol == col) {\n\t\t\ta[0] = fcol;\n\t\t\ta[1] = fcol;\n\t\t\ta[2] = fcol;\n\t\t\ta[3] = fcol;\n\t\t\treturn a;\n\t\t}\n\n\t\tvar hex3 = col.match(/^#([0-9a-f]{3})$/i);\n\t\tif (hex3) {\n\t\t\thex3 = hex3[1];\n\t\t\ta[0] = parseInt(hex3.charAt(0), 16) * 0x11 / 255.0;\n\t\t\ta[1] = parseInt(hex3.charAt(1), 16) * 0x11 / 255.0;\n\t\t\ta[2] = parseInt(hex3.charAt(2), 16) * 0x11 / 255.0;\n\t\t\ta[3] = 1.0;\n\t\t\treturn a;\n\t\t}\n\n\t\tvar hex6 = col.match(/^#([0-9a-f]{6})$/i);\n\t\tif (hex6) {\n\t\t\thex6 = hex6[1];\n\t\t\ta[0] = parseInt(hex6.substr(0, 2), 16) / 255.0;\n\t\t\ta[1] = parseInt(hex6.substr(2, 2), 16) / 255.0;\n\t\t\ta[2] = parseInt(hex6.substr(4, 2), 16) / 255.0;\n\t\t\ta[3] = 1.0;\n\t\t\t//\tconsole.log(\"hex6\" ,a);\n\t\t\treturn a;\n\t\t}\n\n\t\tvar rgba = col.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+.*\\d*)\\s*\\)$/i) || col.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\t\tif (rgba) {\n\t\t\ta[0] = rgba[1] / 255.0;\n\t\t\ta[1] = rgba[2] / 255.0;\n\t\t\ta[2] = rgba[3] / 255.0;\n\t\t\ta[3] = rgba[4] === undefined ? 1 : rgba[4] / 255.0;\n\t\t\t//\t\t\tconsole.log(\"rgba\" ,a);\n\n\t\t\treturn a;\n\t\t}\n\t\tvar rgb = col.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\t\tif (rgb) {\n\t\t\ta[0] = rgb[1] / 255.0;\n\t\t\ta[1] = rgb[2] / 255.0;\n\t\t\ta[2] = rgb[3] / 255.0;\n\t\t\ta[3] = 1.0;\n\t\t\t//\t\t\tconsole.log(\"rgb\" ,a);\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec4m = col.match(/^vec4\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\t\tif (vec4m) {\n\t\t\ta[0] = vec4m[1];\n\t\t\ta[1] = vec4m[2];\n\t\t\ta[2] = vec4m[3];\n\t\t\ta[3] = vec4m[4];\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec4m = col.match(/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/i);\n\t\tif (vec4m) {\n\t\t\ta[0] = vec4m[1];\n\t\t\ta[1] = vec4m[2];\n\t\t\ta[2] = vec4m[3];\n\t\t\ta[3] = vec4m[4];\n\t\t\treturn a;\n\t\t}\n\n\t\tvar vec4m = col.match(/^\\s*(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s*$/i);\n\t\tif (vec4m) {\n\t\t\ta[0] = vec4m[1];\n\t\t\ta[1] = vec4m[2];\n\t\t\ta[2] = vec4m[3];\n\t\t\ta[3] = vec4m[4];\n\t\t\treturn a;\n\t\t}\n\t\t// lets parse the color\n\t\tif (!noerror) console.error(\"Cannot parse color \" + col);\n\t\ta[0] = -1;\n\t\ta[1] = 1;\n\t\ta[2] = 0.85;\n\t\ta[3] = 1;\n\t\treturn a;\n\t\t/*\n  var len = col.length\n  var i = 0\n  if (col.charAt(0) == '#') i++;\n  c = 0\n  while(i<len) {\n  \tvar ch = col.charCodeAt(i++)\n  \tif(ch >= 48 && ch <= 57) { // hex color\n  \t\tc = c << 4\n  \t\tc += ch - 48\n  \t}\n  \telse if(ch >= 97 && ch <= 102) {\n  \t\tc = c << 4\n  \t\tc += ch - 87\n  \t}\n  \telse if(ch >= 65 && ch <= 70) {\n  \t\tc = c << 4\n  \t\tc += ch - 55\n  \t}\n  \telse { // try to find the nearest color\n  \t\tcol = col.toLowerCase()\n  \t\tc = color_wikipedia[col]\n  \t\tif(c === undefined) for(var k in color_wikipedia){\n  \t\t\tif(k.indexOf(col) != -1){\n  \t\t\t\tc = color_wikipedia[k]\n  \t\t\t\t// cache it\n  \t\t\t\tcolor_wikipedia[col] = c\n  \t\t\t\tbreak\n  \t\t\t}\n  \t\t}\n  \t\tlen = 0\n  \t}\n  }\n  \tif(len == 3){\n  \ta[0] = ((c&0xf00)>>8|(c&0xf00)>>4) /255\n  \ta[1] = ((c&0xf0)|(c&0xf0)>>4) /255\n  \ta[2] = ((c&0xf)|(c&0xf)<<4) /255\n  \tconsole.log(\"here\", col, a)\n  \treturn a\n  }\n  \ta[0] = ((c >> 16)&0xff) /255\n  a[1] = ((c >> 8)&0xff) /255\n  a[2] = (c&0xff) /255\n  a[3] = 1.0;\n  console.log(\"ho\", col, a)\n  //return [1,1,1,1]\n  //console.log(c)\n  return undefined\n  \t\t//a[3] = ((c >> 24)&0xff) /255 // alpha\n  \treturn a*/\n\t};\n\n\tfunction matApi(exports) {}\n\n\t// shared vector api\n\tfunction vecApi(exports) {\n\t\tfunction vecFn(fn) {\n\t\t\treturn function (a, o) {\n\t\t\t\tif (!o) o = exports();\n\t\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\t\to[i] = fn(a[i]);\n\t\t\t\t}return o;\n\t\t\t};\n\t\t}\n\n\t\tfunction vecFn2(fn) {\n\t\t\treturn function (a, b, o) {\n\t\t\t\tif (!o) o = exports();\n\t\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\t\to[i] = fn(a[i], b[i]);\n\t\t\t\t}return o;\n\t\t\t};\n\t\t}\n\n\t\texports.sin = vecFn(Math.sin);\n\t\texports.cos = vecFn(Math.cos);\n\t\texports.tan = vecFn(Math.tan);\n\t\texports.asin = vecFn(Math.asin);\n\t\texports.acos = vecFn(Math.acos);\n\t\texports.atan = vecFn(Math.atan);\n\t\texports.pow = vecFn(Math.pow);\n\t\texports.exp = vecFn(Math.exp);\n\t\texports.log = vecFn(Math.log);\n\t\texports.exp2 = vecFn(function (v) {\n\t\t\treturn Math.pow(2, v);\n\t\t});\n\t\texports.log2 = vecFn(Math.log2);\n\t\texports.sqrt = vecFn(Math.sqrt);\n\t\texports.inversesqrt = vecFn(function (v) {\n\t\t\treturn 1 / Math.sqrt(v);\n\t\t});\n\t\texports.abs = vecFn(Math.abs);\n\t\texports.floor = vecFn(Math.floor);\n\t\texports.ceil = vecFn(Math.ceil);\n\t\texports.min = vecFn(Math.min);\n\t\texports.max = vecFn(Math.max);\n\t\texports.mod = vecFn2(function (a, b) {\n\t\t\treturn a % b;\n\t\t});\n\n\t\texports.identity = function (o) {\n\t\t\tif (!o) o = exports();\n\t\t\tfor (var i = 0; i < o.length; i++) {\n\t\t\t\to[i] = 0;\n\t\t\t}return o;\n\t\t};\n\n\t\texports.distance = function (a, b) {\n\t\t\tvar d = 0;\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\td += Math.pow(a[i] - b[i], 2);\n\t\t\t}\n\t\t\treturn Math.sqrt(d);\n\t\t};\n\n\t\texports.len = function (a) {\n\t\t\tvar d = 0;\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\td += Math.pow(a[i], 2);\n\t\t\t}return Math.sqrt(d);\n\t\t};\n\n\t\texports.negate = function (a, o) {\n\t\t\tif (!o) o = exports();\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = -a[i];\n\t\t\t}return o;\n\t\t};\n\n\t\texports.inverse = function (a, o) {\n\t\t\tif (!o) o = exports();\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = 1 / a[i];\n\t\t\t}return o;\n\t\t};\n\n\t\texports.mix = function (a, b, f, o) {\n\t\t\tif (!o) o = exports();\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = a[i] + f * (b[i] - a[i]);\n\t\t\t}return o;\n\t\t};\n\n\t\texports.mix2 = function (a, b, f, o) {\n\t\t\tif (!o) o = exports();\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = a[i] + f[i] * (b[i] - a[i]);\n\t\t\t}return o;\n\t\t};\n\n\t\texports.greater = function (a, b) {\n\t\t\tif (a[i] < b[i]) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\texports.normalize = function (a, o) {\n\t\t\tif (!o) o = exports();\n\t\t\tvar d = 0;\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\td += Math.pow(a[i], 2);\n\t\t\t}d = Math.sqrt(d);\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\to[i] = a[i] / d;\n\t\t\t}return o;\n\t\t};\n\t}\n\n\tvecApi(vec2);\n\n\tvec2.fromString = function (color) {\n\t\tvar o = this;\n\t\tif (this === vec2) o = vec2();\n\t\treturn vec2.parse(color, o);\n\t};\n\n\tvec2.random = function (scale, o) {\n\t\tif (scale === undefined) scale = 1;\n\t\tif (!o) o = vec2();\n\t\tvar r = exports.PI2 * Math.random();\n\t\to[0] = cos(r) * scale;\n\t\to[1] = sin(r) * scale;\n\t\treturn o;\n\t};\n\n\tvec2.mul = vec2.vec2_mul_vec2 = function (a, b, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = a[0] * b[0];\n\t\to[1] = a[1] * b[1];\n\t\treturn o;\n\t};\n\n\tvec2.add = vec2.vec2_add_vec2 = function (a, b, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = a[0] + b[0];\n\t\to[1] = a[1] + b[1];\n\t\treturn o;\n\t};\n\n\tvec2.sub = vec2.vec2_sub_vec2 = function (a, b, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = a[0] - b[0];\n\t\to[1] = a[1] - b[1];\n\t\treturn o;\n\t};\n\n\tvec2.div = vec2.vec2_div_vec2 = function (a, b, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = a[0] / b[0];\n\t\to[1] = a[1] / b[1];\n\t\treturn o;\n\t};\n\n\tvec2.mul_mat2 = vec2.vec2_mul_mat2 = function (v, m, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = m[0] * v[0] + m[2] * v[1];\n\t\to[1] = m[1] * v[0] + m[3] * v[1];\n\t\treturn o;\n\t};\n\n\tvec2.mul_mat3 = vec2.vec2_mul_mat3 = function (v, m, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = m[0] * v[0] + m[2] * v[1] + m[4];\n\t\to[1] = m[1] * v[0] + m[3] * v[1] + m[5];\n\t\treturn o;\n\t};\n\n\tvec2.mul_mat4 = vec2.vec2_mul_mat4 = function (v, m, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = m[0] * v[0] + m[4] * v[1] + m[12];\n\t\to[1] = m[1] * v[0] + m[5] * v[1] + m[13];\n\t\treturn o;\n\t};\n\tvec2.mul_mat4_t = vec2.vec2_mul_mat4_t = function (v, m, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = m[0] * v[0] + m[1] * v[1] + m[3];\n\t\to[1] = m[4] * v[0] + m[5] * v[1] + m[7];\n\t\treturn o;\n\t};\n\n\tvec2.mul_float32 = vec2.vec2_mul_float32 = function (v, f, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = v[0] * f;\n\t\to[1] = v[1] * f;\n\t\treturn o;\n\t};\n\n\tvec2.lessThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] < b[0];\n\t\to[1] = a[1] < b[1];\n\t\treturn o;\n\t};\n\n\tvec2.lessThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] <= b[0];\n\t\to[1] = a[1] <= b[1];\n\t\treturn o;\n\t};\n\n\tvec2.greaterThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] > b[0];\n\t\to[1] = a[1] > b[1];\n\t\treturn o;\n\t};\n\n\tvec2.greaterThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] >= b[0];\n\t\to[1] = a[1] >= b[1];\n\t\treturn o;\n\t};\n\n\tvec2.equal = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] == b[0];\n\t\to[1] = a[1] == b[1];\n\t\treturn o;\n\t};\n\n\tvec2.equals = function (a, b) {\n\t\treturn a[0] === b[0] && a[1] === b[1];\n\t};\n\n\tvec2.notEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec2();\n\t\to[0] = a[0] != b[0];\n\t\to[1] = a[1] != b[1];\n\t\treturn o;\n\t};\n\n\tvec2.ortho = function (a, o) {\n\t\tif (!o) o = vec2();\n\t\tvar x = -a[1];\n\t\tvar y = a[0];\n\t\to[0] = x;\n\t\to[1] = y;\n\t\treturn o;\n\t};\n\n\tvec2.rotate = function (a, ang, o) {\n\t\tif (!o) o = vec2();\n\n\t\tvar sa = Math.sin(ang);\n\t\tvar ca = Math.cos(ang);\n\n\t\to = vec2(ca * a[0] - sa * a[1], sa * a[0] + ca * a[1]);\n\n\t\treturn o;\n\t};\n\n\tvecApi(vec3);\n\n\tvec3.intersectplane = function (origin, direction, normal, dist) {\n\t\tvar denom = vec3.dot(direction, normal);\n\t\tif (denom !== 0) {\n\t\t\tvar t = -(vec3.dot(origin, normal) + dist) / denom;\n\t\t\tif (t < 0) {\n\t\t\t\tconsole.log(\"t = 0?\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar diradd = vec3.vec3_mul_float(direction, t);\n\t\t\tvar res = vec3.add(origin, diradd);\n\t\t\t//\t\t\tconsole.log(origin, direction, t,diradd, res);\n\t\t\treturn res;\n\t\t} else {\n\t\t\tif (vec3.dot(normal, origin) + dist === 0) {\n\t\t\t\treturn origin;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tvec2.dot = function (a, b) {\n\t\treturn a[0] * b[0] + a[1] * b[1];\n\t};\n\tvec3.dot = function (a, b) {\n\t\t//\tconsole.log(a,b);\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t};\n\n\tvec3.fromString = function (color) {\n\t\tvar o = this;\n\t\tif (this === vec3) o = vec3();\n\t\treturn vec3.parse(color, o);\n\t};\n\n\tvec3.random = function (scale, o) {\n\t\tif (scale === undefined) scale = 1;\n\t\tif (!o) o = vec3();\n\t\tvar r = 2 * exports.PI * Math.random();\n\t\tvar zr = Math.random() * 2.0 - 1.0;\n\t\to[0] = cos(r) * zr;\n\t\to[1] = sin(r) * zr;\n\t\to[2] = sqrt(1.0 - zr * zr) * scale;\n\t\treturn o;\n\t};\n\n\tvec3.mul = vec3.vec3_mul_vec3 = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = a[0] * b[0];\n\t\to[1] = a[1] * b[1];\n\t\to[2] = a[2] * b[2];\n\t\treturn o;\n\t};\n\n\tvec3.mulfloat = vec3.vec3_mul_float = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = a[0] * b;\n\t\to[1] = a[1] * b;\n\t\to[2] = a[2] * b;\n\t\treturn o;\n\t};\n\n\tvec3.add = vec3.vec3_add_vec3 = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = a[0] + b[0];\n\t\to[1] = a[1] + b[1];\n\t\to[2] = a[2] + b[2];\n\t\treturn o;\n\t};\n\n\tvec3.sub = vec3.vec3_sub_vec3 = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = a[0] - b[0];\n\t\to[1] = a[1] - b[1];\n\t\to[2] = a[2] - b[2];\n\t\treturn o;\n\t};\n\n\tvec3.div = vec3.vec3_div_vec3 = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = a[0] / b[0];\n\t\to[1] = a[1] / b[1];\n\t\to[2] = a[2] / b[2];\n\t\treturn o;\n\t};\n\n\tvec3.mul_mat3 = vec3.vec3_mul_mat3 = function (v, m, o) {\n\t\tif (!o) o = vec3();\n\t\to[0] = v[0] * m[0] + v[1] * m[1] + v[2] * m[2];\n\t\to[1] = v[0] * m[3] + v[1] * m[4] + v[2] * m[5];\n\t\to[2] = v[0] * m[6] + v[1] * m[7] + v[2] * m[8];\n\t\treturn o;\n\t};\n\n\tvec3.mul_mat4 = vec3.vec3_mul_mat4 = function (v, m, o) {\n\t\tif (!o) o = vec3();\n\t\tvar vx = v[0],\n\t\t    vy = v[1],\n\t\t    vz = v[2],\n\t\t    vw = m[12] * vx + m[13] * vy + m[14] * vz + m[15];\n\t\tvw = vw || 1.0;\n\t\to[0] = (m[0] * vx + m[1] * vy + m[2] * vz + m[3]) / vw;\n\t\to[1] = (m[4] * vx + m[5] * vy + m[6] * vz + m[7]) / vw;\n\t\to[2] = (m[8] * vx + m[9] * vy + m[10] * vz + m[11]) / vw;\n\t\treturn o;\n\t};\n\n\tvec2.mul_mat4 = vec2.vec2_mul_mat4 = function (v, m, o) {\n\t\tif (!o) o = vec2();\n\t\to[0] = m[0] * v[0] + m[1] * v[1] + m[3];\n\t\to[1] = m[4] * v[0] + m[5] * v[1] + m[7];\n\t\treturn o;\n\t};\n\n\tvec3.mul_mat4_minor = vec3.vec3_mul_mat4_minor = function (v, m, o) {\n\t\tif (!o) o = vec3();\n\t\tvar vx = v[0],\n\t\t    vy = v[1],\n\t\t    vz = v[2];\n\t\to[0] = vx * m[0] + vy * m[1] + vz * m[2];\n\t\to[1] = vx * m[4] + vy * m[5] + vz * m[6];\n\t\to[2] = vx * m[8] + vy * m[9] + vz * m[10];\n\t\treturn o;\n\t};\n\n\tvec3.cross = vec3.vec3_cross_vec3 = function (a, b, o) {\n\t\tif (!o) o = vec3();\n\t\tvar ax = a[0],\n\t\t    ay = a[1],\n\t\t    az = a[2];\n\t\tvar bx = b[0],\n\t\t    by = b[1],\n\t\t    bz = b[2];\n\t\to[0] = ay * bz - az * by;\n\t\to[1] = az * bx - ax * bz;\n\t\to[2] = ax * by - ay * bx;\n\t\treturn o;\n\t};\n\n\tvec3.lessThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] < b[0];\n\t\to[1] = a[1] < b[1];\n\t\to[2] = a[2] < b[2];\n\t\treturn o;\n\t};\n\n\tvec3.lessThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] <= b[0];\n\t\to[1] = a[1] <= b[1];\n\t\to[2] = a[2] <= b[2];\n\t\treturn o;\n\t};\n\n\tvec3.greaterThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] > b[0];\n\t\to[1] = a[1] > b[1];\n\t\to[2] = a[2] > b[2];\n\t\treturn o;\n\t};\n\n\tvec3.greaterThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] >= b[0];\n\t\to[1] = a[1] >= b[1];\n\t\to[2] = a[2] >= b[2];\n\t\treturn o;\n\t};\n\n\tvec3.equal = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] == b[0];\n\t\to[1] = a[1] == b[1];\n\t\to[2] = a[2] == b[2];\n\t\treturn o;\n\t};\n\n\tvec3.equals = function (a, b) {\n\t\treturn a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n\t};\n\n\tvec3.notEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec3();\n\t\to[0] = a[0] != b[0];\n\t\to[1] = a[1] != b[1];\n\t\to[2] = a[2] != b[2];\n\t\treturn o;\n\t};\n\n\tvecApi(vec4);\n\n\tvec4.dot = function (a, b) {\n\t\treturn a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\n\t};\n\tvec4.desaturate = function (incolor, amt) {\n\t\tif (!amt) amt = 1.0;\n\t\tvar hsv = vec4.toHSV(incolor);\n\t\treturn vec4.fromHSV(hsv[0], hsv[1] * (1.0 - amt), hsv[2]);\n\t};\n\tvec4.contrastcolor = function (incolor) {\n\t\tvar hsl = vec4.toHSV(incolor);\n\t\tvar l = 0;\n\t\tif (hsl[2] > 0.5) {\n\t\t\tif (hsl[1] > 0.7) {\n\t\t\t\tl = 1;\n\t\t\t} else {\n\t\t\t\tl = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tl = 1;\n\t\t}\n\t\treturn vec4.fromHSV(0, 0, l, 1);\n\t};\n\n\t// converts standard vec4 color in to HSL space (not to be confused with HSV space!)\n\tvec4.toHSL = function (inp) {\n\t\tvar max = Math.max(inp[0], inp[1], inp[2]),\n\t\t    min = Math.min(inp[0], inp[1], inp[2]);\n\t\tvar h,\n\t\t    s,\n\t\t    l = (max + min) / 2;\n\t\tvar r = inp[0];\n\t\tvar g = inp[1];\n\t\tvar b = inp[2];\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\t\tif (max == inp[0]) {\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\n\t\t\t} else {\n\t\t\t\tif (max == inp[1]) {\n\n\t\t\t\t\th = (b - r) / d + 2;\n\t\t\t\t} else {\n\n\t\t\t\t\th = (r - g) / d + 4;\n\t\t\t\t}\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\t\treturn [h, s, l, inp[3]];;\n\t};\n\n\t// calculate an RGBA color from an HSLA color\n\t// h/s/l/a = [0..1] range.\n\tvec4.fromHSL = function (h, s, l, a, o) {\n\t\tif (!o) o = vec4();\n\n\t\tvar r, g, b;\n\n\t\tif (s == 0) {\n\t\t\tr = g = b = l; // achromatic\n\t\t} else {\n\t\t\tvar hue2rgb = function hue2rgb(p, q, t) {\n\t\t\t\tif (t < 0) {\n\t\t\t\t\tt += 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\t}\n\n\t\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1 / 2) return q;\n\t\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t};\n\n\t\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tvar p = 2 * l - q;\n\t\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\t\tg = hue2rgb(p, q, h);\n\t\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t\t}\n\t\to[0] = r;\n\t\to[1] = g;\n\t\to[2] = b;\n\t\to[3] = a !== undefined ? a : 1.0;\n\n\t\treturn o;\n\t};\n\n\t// converts standard vec4 color in to HSL space (not to be confused with HSV space!)\n\tvec4.toHSV = function (inp) {\n\n\t\tvar r = inp[0];\n\t\tvar g = inp[1];\n\t\tvar b = inp[2];\n\n\t\tvar max = Math.max(r, Math.max(g, b)),\n\t\t    min = Math.min(r, Math.min(g, b));\n\t\tvar h,\n\t\t    s,\n\t\t    v = max;\n\n\t\tvar d = max - min;\n\t\ts = max === 0 ? 0 : d / max;\n\n\t\tif (max == min) {\n\t\t\th = 0; // achromatic\n\t\t} else {\n\t\t\tswitch (max) {\n\t\t\t\tcase r:\n\t\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);break;\n\t\t\t\tcase g:\n\t\t\t\t\th = (b - r) / d + 2;break;\n\t\t\t\tcase b:\n\t\t\t\t\th = (r - g) / d + 4;break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\t\t//    return { h: h, s: s, v: v };\n\n\n\t\treturn [h, s, v, inp[3]];;\n\t};\n\n\t// calculate an RGBA color from an HSVA color\n\t// h/s/l/a = [0..1] range.\n\tvec4.fromHSV = function (h, s, v, a, o) {\n\t\tif (!o) o = vec4();\n\n\t\th *= 360;\n\t\tif (h < 0) h += 360;\n\n\t\tvar r = 0.0;\n\t\tvar g = 0.0;\n\t\tvar b = 0.0;\n\n\t\tif (s == 0.0) {\n\t\t\tr = g = b = v; // achromatic\n\t\t} else {\n\t\t\tvar t1 = v;\n\t\t\tvar t2 = (1. - s) * v;\n\t\t\tvar t3 = (t1 - t2) * (h % 60) / 60.;\n\t\t\tif (h == 360.) h = 0.;\n\t\t\tif (h < 60.) {\n\t\t\t\tr = t1;b = t2;g = t2 + t3;\n\t\t\t} else if (h < 120.) {\n\t\t\t\tg = t1;b = t2;r = t1 - t3;\n\t\t\t} else if (h < 180.) {\n\t\t\t\tg = t1;r = t2;b = t2 + t3;\n\t\t\t} else if (h < 240.) {\n\t\t\t\tb = t1;r = t2;g = t1 - t3;\n\t\t\t} else if (h < 300.) {\n\t\t\t\tb = t1;g = t2;r = t2 + t3;\n\t\t\t} else if (h < 360.) {\n\t\t\t\tr = t1;g = t2;b = t1 - t3;\n\t\t\t} else {\n\t\t\t\tr = 0.;g = 0.;b = 0.;\n\t\t\t}\n\t\t}\n\t\to[0] = r;\n\t\to[1] = g;\n\t\to[2] = b;\n\t\to[3] = a !== undefined ? a : 1.0;\n\t\treturn o;\n\t};\n\n\tvec4.equals = function (a, b) {\n\t\tif (a[0] != b[0]) return false;\n\t\tif (a[1] != b[1]) return false;\n\t\tif (a[2] != b[2]) return false;\n\t\tif (a[3] != b[3]) return false;\n\t\treturn true;\n\t};\n\tvec4.fromString = function (color, alpha) {\n\t\tvar o = this;\n\t\tif (this === vec4) o = vec4();\n\t\treturn vec4.parse(color, o);\n\t};\n\n\t// TODO wrong\n\tvec4.random = function (scale, o) {\n\t\tif (scale === undefined) scale = 1;\n\t\tif (!o) o = vec3();\n\t\to[0] = Math.random();\n\t\to[1] = Math.random();\n\t\to[2] = Math.random();\n\t\to[3] = Math.random();\n\t\tvec4.normalize(o, o);\n\t\treturn o;\n\t};\n\n\tvec4.mul = vec4.vec4_mul_vec4 = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] * b[0];\n\t\to[1] = a[1] * b[1];\n\t\to[2] = a[2] * b[2];\n\t\to[3] = a[3] * b[3];\n\t\treturn o;\n\t};\n\n\tvec4.mul_float32 = vec4.vec4_mul_float32 = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] * b;\n\t\to[1] = a[1] * b;\n\t\to[2] = a[2] * b;\n\t\to[3] = a[3] * b;\n\t\treturn o;\n\t};\n\n\tvec4.vec4_mul_float32_rgb = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] * b;\n\t\to[1] = a[1] * b;\n\t\to[2] = a[2] * b;\n\t\to[3] = a[3];\n\t\treturn o;\n\t};\n\n\tvec4.add = vec4.vec4_add_vec4 = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] + b[0];\n\t\to[1] = a[1] + b[1];\n\t\to[2] = a[2] + b[2];\n\t\to[3] = a[3] + b[3];\n\t\treturn o;\n\t};\n\n\tvec4.sub = vec4.vec4_sub_vec4 = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] - b[0];\n\t\to[1] = a[1] - b[1];\n\t\to[2] = a[2] - b[2];\n\t\to[3] = a[3] - b[3];\n\t\treturn o;\n\t};\n\n\tvec4.div = vec4.vec4_div_vec4 = function (a, b, o) {\n\t\tif (!o) o = vec4();\n\t\to[0] = a[0] / b[0];\n\t\to[1] = a[1] / b[1];\n\t\to[2] = a[2] / b[2];\n\t\to[3] = a[3] / b[3];\n\t\treturn o;\n\t};\n\n\tvec4.mul_mat4 = vec4.vec4_mul_mat4 = function (v, m, o) {\n\t\tif (!o) o = vec4();\n\t\tvar vx = v[0],\n\t\t    vy = v[1],\n\t\t    vz = v[2],\n\t\t    vw = v[3];\n\t\to[0] = m[0] * vx + m[1] * vy + m[2] * vz + m[3] * vw;\n\t\to[1] = m[4] * vx + m[5] * vy + m[6] * vz + m[7] * vw;\n\t\to[2] = m[8] * vx + m[9] * vy + m[10] * vz + m[11] * vw;\n\t\to[3] = m[12] * vx + m[13] * vy + m[14] * vz + m[15] * vw;\n\t\treturn o;\n\t};\n\n\tvec4.mul_quat = vec4.vec4_mul_quat = function (v, q, o) {\n\t\tif (!o) o = vec4();\n\t\tvar vx = v[0],\n\t\t    vy = v[1],\n\t\t    vz = v[2],\n\t\t    qx = q[0],\n\t\t    qy = q[1],\n\t\t    qz = q[2],\n\t\t    qw = q[3],\n\n\n\t\t// calculate quat * vec\n\t\tix = qw * vx + qy * vz - qz * vy,\n\t\t    iy = qw * vy + qz * vx - qx * vz,\n\t\t    iz = qw * vz + qx * vy - qy * vx,\n\t\t    iw = -qx * vx - qy * vy - qz * vz;\n\t\t// calculate result * inverse quat\n\t\to[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\to[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\to[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\to[3] = v[3];\n\t\treturn o;\n\t};\n\n\tvec4.lessThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] < b[0];\n\t\to[1] = a[1] < b[1];\n\t\to[2] = a[2] < b[2];\n\t\to[3] = a[3] < b[3];\n\t\treturn o;\n\t};\n\n\tvec4.lessThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] <= b[0];\n\t\to[1] = a[1] <= b[1];\n\t\to[2] = a[2] <= b[2];\n\t\to[3] = a[3] <= b[3];\n\t\treturn o;\n\t};\n\n\tvec4.greaterThan = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] > b[0];\n\t\to[1] = a[1] > b[1];\n\t\to[2] = a[2] > b[2];\n\t\to[3] = a[3] > b[3];\n\t\treturn o;\n\t};\n\n\tvec4.greaterThanEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] >= b[0];\n\t\to[1] = a[1] >= b[1];\n\t\to[2] = a[2] >= b[2];\n\t\to[3] = a[3] >= b[3];\n\t\treturn o;\n\t};\n\n\tvec4.equal = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] == b[0];\n\t\to[1] = a[1] == b[1];\n\t\to[2] = a[2] == b[2];\n\t\to[3] = a[3] == b[3];\n\t\treturn o;\n\t};\n\n\tvec4.notEqual = function (a, b, o) {\n\t\tif (!o) o = exports.bvec4();\n\t\to[0] = a[0] != b[0];\n\t\to[1] = a[1] != b[1];\n\t\to[2] = a[2] != b[2];\n\t\to[3] = a[3] != b[3];\n\t\treturn o;\n\t};\n\n\tvecApi(quat);\n\n\tquat.identity = function (o) {\n\t\tif (!o) o = quat();\n\t\to[0] = o[1] = o[2] = 0, o[3] = 1;\n\t\treturn o;\n\t};\n\n\tquat.mul = quat.quat_mul_quat = function (a, b, o) {\n\t\tif (!o) o = quat();\n\t\tvar ax = a[0],\n\t\t    ay = a[1],\n\t\t    az = a[2],\n\t\t    aw = a[3],\n\t\t    bx = b[0],\n\t\t    by = b[1],\n\t\t    bz = b[2],\n\t\t    bw = b[3];\n\t\to[0] = ax * bw + aw * bx + ay * bz - az * by;\n\t\to[1] = ay * bw + aw * by + az * bx - ax * bz;\n\t\to[2] = az * bw + aw * bz + ax * by - ay * bx;\n\t\to[3] = aw * bw - ax * bx - ay * by - az * bz;\n\t\treturn o;\n\t};\n\n\tquat.rotateX = function (q, angle, o) {\n\t\tif (!o) o = quat();\n\t\tangle *= 0.5;\n\t\tvar ax = q[0],\n\t\t    ay = q[1],\n\t\t    az = q[2],\n\t\t    aw = q[3],\n\t\t    bx = sin(angle),\n\t\t    bw = cos(angle);\n\n\t\to[0] = ax * bw + aw * bx;\n\t\to[1] = ay * bw + az * bx;\n\t\to[2] = az * bw - ay * bx;\n\t\to[3] = aw * bw - ax * bx;\n\t\treturn o;\n\t};\n\n\t// rotate quaternion Q with angle A around y axis\n\tquat.rotateY = function (q, angle, o) {\n\t\tif (!o) o = quat();\n\t\tangle *= 0.5;\n\t\tvar ax = q[0],\n\t\t    ay = q[1],\n\t\t    az = q[2],\n\t\t    aw = q[3],\n\t\t    by = sin(angle),\n\t\t    bw = cos(angle);\n\n\t\to[0] = ax * bw - az * by;\n\t\to[1] = ay * bw + aw * by;\n\t\to[2] = az * bw + ax * by;\n\t\to[3] = aw * bw - ay * by;\n\t\treturn o;\n\t};\n\n\t// rotate quaternion Q with angle A around z axis\n\tquat.rotateZ = function (q, angle, o) {\n\t\tif (!o) o = quat();\n\t\tangle *= 0.5;\n\t\tvar ax = q.x,\n\t\t    ay = q.y,\n\t\t    az = q.z,\n\t\t    aw = q.w,\n\t\t    bz = sin(angle),\n\t\t    bw = cos(angle);\n\n\t\to[0] = ax * bw + ay * bz;\n\t\to[1] = ay * bw - ax * bz;\n\t\to[2] = az * bw + aw * bz;\n\t\to[3] = aw * bw - az * bz;\n\t\treturn o;\n\t};\n\n\t// Calculate w from xyz\n\tquat.calculateW = function (q, o) {\n\t\tif (!o) o = quat();\n\t\to[0] = q[0];\n\t\to[1] = q[1];\n\t\to[2] = q[2];\n\t\to[3] = -sqrt(abs(1.0 - x * x - y * y - z * z));\n\t\treturn o;\n\t};\n\n\t// spherelical linear interpolation between quat A and B with f (0-1)\n\tquat.slerp = function (a, b, f, o) {\n\t\tif (!o) o = quat();\n\t\tvar ax = a[0],\n\t\t    ay = a[1],\n\t\t    az = a[2],\n\t\t    aw = a[3],\n\t\t    bx = b[0],\n\t\t    by = b[1],\n\t\t    bz = b[2],\n\t\t    bw = b[3];\n\n\t\tvar omega, cosom, sinom, scale0, scale1;\n\n\t\t// calc cosine\n\t\tcosom = ax * bx + ay * by + az * bz + aw * bw;\n\t\t// adjust signs (if necessary)\n\t\tif (cosom < 0.0) {\n\t\t\tcosom = -cosom;\n\t\t\tbx = -bx, by = -by, bz = -bz, bw = -bw;\n\t\t}\n\t\t// calculate coefficients\n\t\tif (1.0 - cosom > 0.000001) {\n\t\t\t// standard case (slerp)\n\t\t\tomega = acos(cosom);\n\t\t\tsinom = sin(omega);\n\t\t\tscale0 = sin((1.0 - f) * omega) / sinom;\n\t\t\tscale1 = sin(f * omega) / sinom;\n\t\t} else {\n\t\t\t// linear interpolate if very close\n\t\t\tscale0 = 1.0 - f;\n\t\t\tscale1 = f;\n\t\t}\n\t\t// calculate final values\n\t\to[0] = scale0 * ax + scale1 * bx;\n\t\to[1] = scale0 * ay + scale1 * by;\n\t\to[2] = scale0 * az + scale1 * bz;\n\t\to[3] = scale0 * aw + scale1 * bw;\n\t\treturn o;\n\t};\n\n\t// invert Q\n\tquat.invert = function (q, o) {\n\t\tif (!o) o = quat();\n\t\tvar a0 = q[0],\n\t\t    a1 = q[1],\n\t\t    a2 = q[2],\n\t\t    a3 = q[3],\n\t\t    d = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3,\n\t\t    i = d ? 1.0 / d : 0;\n\t\to[0] = -a0 * i, o[1] = -a1 * i, o[2] = -a2 * i, o[3] = a3 * i;\n\t};\n\n\t// Calculates the conjugate of quat Q\n\t// If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n\tquat.conjugate = function (q, o) {\n\t\tif (!o) o = quat();\n\t\to[0] = -q[0], o[1] = -q[1], o[2] = -q[2], o[3] = q[3];\n\t\treturn o;\n\t};\n\n\tquat.fromMat3 = function (m, o) {\n\t\tif (!o) o = quat();\n\t\t// Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t\t// article \"Quaternion Calculus and Fast Animation\".\n\t\tvar t = m[0] + m[4] + m[8],\n\t\t    r;\n\t\tif (t > 0.0) {\n\t\t\t// |w| > 1/2, may as well choose w > 1/2\n\t\t\tr = sqrt(T + 1.0); // 2w\n\t\t\tw = 0.5 * r;\n\t\t\tr = 0.5 / r; // 1/(4w)\n\t\t\tx = (m[5] - m[7]) * r, y = (m[6] - m[2]) * r, z = (m[1] - m[3]) * r;\n\t\t} else {\n\t\t\t// |w| <= 1/2\n\t\t\tvar i = 0;\n\t\t\tif (m[4] > m[0]) i = 1;\n\t\t\tif (m[8] > m[i * 3 + i]) i = 2;\n\t\t\tvar j = (i + 1) % 3;\n\t\t\tvar k = (i + 2) % 3;\n\n\t\t\tr = sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n\t\t\to[i] = 0.5 * r;\n\t\t\tr = 0.5 / r;\n\t\t\tw = (m[j * 3 + k] - m[k * 3 + j]) * r;\n\t\t\to[j] = (m[j * 3 + i] + m[i * 3 + j]) * r;\n\t\t\to[k] = (m[k * 3 + i] + m[i * 3 + k]) * r;\n\t\t}\n\t\treturn o;\n\t};\n\n\tmatApi(mat2);\n\n\tmat2.identity = function (o) {\n\t\tif (!o) o = mat2();\n\t\to[0] = 1, o[1] = 0;\n\t\to[2] = 0, o[2] = 1;\n\t};\n\n\tmat2.mul = mat2.mat2_mul_mat2 = function (a, b, o) {\n\t\tif (!o) o = mat2();\n\t\tvar a0 = a[0],\n\t\t    a1 = a[1],\n\t\t    a2 = a[2],\n\t\t    a3 = a[3];\n\t\tvar b0 = b[0],\n\t\t    b1 = b[1],\n\t\t    b2 = b[2],\n\t\t    b3 = b[3];\n\t\to[0] = a0 * b0 + a2 * b1;\n\t\to[1] = a1 * b0 + a3 * b1;\n\t\to[2] = a0 * b2 + a2 * b3;\n\t\to[3] = a1 * b2 + a3 * b3;\n\t\treturn o;\n\t};\n\n\tmat2.rotate = function (a, angle, o) {\n\t\tif (!o) o = mat2();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a10 = a[2],\n\t\t    a11 = a[3],\n\t\t    s = sin(angle),\n\t\t    c = cos(angle);\n\t\to[0] = a00 * c + a10 * s;\n\t\to[1] = a01 * c + a11 * s;\n\t\to[2] = a00 * -s + a10 * c;\n\t\to[3] = a01 * -s + a11 * c;\n\t\treturn o;\n\t};\n\n\tmat2.scale = function (a, scale, o) {\n\t\tif (!o) o = mat2();\n\t\tvar s0 = s[0],\n\t\t    s1 = s[1];\n\t\to[0] = a[0] * s0;\n\t\to[1] = a[1] * s0;\n\t\to[2] = a[2] * s1;\n\t\to[3] = a[3] * s1;\n\t\treturn o;\n\t};\n\n\tmat2.transpose = function (a, o) {\n\t\tif (!o) o = mat2();\n\t\tvar a01 = a[1];\n\t\to[1] = a[2];\n\t\to[2] = a01;\n\t\to[0] = a[0];\n\t\to[3] = a[3];\n\t\treturn o;\n\t};\n\n\tmat2.outerProduct = function (c, r) {\n\t\tif (!o) o = mat2();\n\t\to[0] = c[0] * r[0];\n\t\to[1] = c[0] * r[1];\n\t\to[2] = c[1] * r[0];\n\t\to[3] = c[1] * r[1];\n\t\treturn o;\n\t};\n\n\tmatApi(mat3);\n\n\tmat3.identity = function (o) {\n\t\tif (!o) o = mat3();\n\t\to[0] = 1, o[1] = 0, o[2] = 0;\n\t\to[3] = 0, o[4] = 1, o[5] = 0;\n\t\to[6] = 0, o[7] = 0, o[8] = 1;\n\t\treturn o;\n\t};\n\n\tmat3.transpose = function (a, o) {\n\t\tif (!o) o = mat3();\n\t\tif (o === a) {\n\t\t\tvar a01 = a[1],\n\t\t\t    a02 = a[2],\n\t\t\t    a12 = a[5];\n\t\t\to[1] = a[3], o[2] = a[6], o[3] = a01;\n\t\t\tm[5] = a[7], o[6] = a02, o[7] = a12;\n\t\t} else {\n\t\t\to[0] = a[0], o[1] = a[3], o[2] = a[6];\n\t\t\to[3] = a[1], o[4] = a[4], o[5] = a[7];\n\t\t\to[6] = a[2], o[7] = a[5], o[8] = a[8];\n\t\t}\n\t\treturn o;\n\t};\n\n\tmat3.invert = function (a, o) {\n\t\tif (!o) o = mat3();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a10 = a[3],\n\t\t    a11 = a[4],\n\t\t    a12 = a[5],\n\t\t    a20 = a[6],\n\t\t    a21 = a[7],\n\t\t    a22 = a[8],\n\t\t    b01 = a22 * a11 - a12 * a21,\n\t\t    b11 = -a22 * a10 + a12 * a20,\n\t\t    b21 = a21 * a10 - a11 * a20,\n\t\t    d = a00 * b01 + a01 * b11 + a02 * b21;\n\n\t\tif (!d) return null;\n\n\t\td = 1.0 / d;\n\n\t\to[0] = b01 * d;\n\t\to[1] = (-a22 * a01 + a02 * a21) * d;\n\t\to[2] = (a12 * a01 - a02 * a11) * d;\n\t\to[3] = b11 * d;\n\t\to[4] = (a22 * a00 - a02 * a20) * d;\n\t\to[5] = (-a12 * a00 + a02 * a10) * d;\n\t\to[6] = b21 * d;\n\t\to[7] = (-a21 * a00 + a01 * a20) * d;\n\t\to[8] = (a11 * a00 - a01 * a10) * d;\n\t\treturn o;\n\t};\n\n\tmat3.adjoint = function (a, o) {\n\t\tif (!o) o = mat3();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a10 = a[3],\n\t\t    a11 = a[4],\n\t\t    a12 = a[5],\n\t\t    a20 = a[6],\n\t\t    a21 = a[7],\n\t\t    a22 = a[8];\n\n\t\to[0] = a11 * a22 - a12 * a21;\n\t\to[1] = a02 * a21 - a01 * a22;\n\t\to[2] = a01 * a12 - a02 * a11;\n\t\to[3] = a12 * a20 - a10 * a22;\n\t\to[4] = a00 * a22 - a02 * a20;\n\t\to[5] = a02 * a10 - a00 * a12;\n\t\to[6] = a10 * a21 - a11 * a20;\n\t\to[7] = a01 * a20 - a00 * a21;\n\t\to[8] = a00 * a11 - a01 * a10;\n\t\treturn o;\n\t};\n\n\tmat3.determinant = function (a) {\n\t\treturn a[0] * (a[8] * a[4] - a[5] * a[7]) + a[1] * (-a[8] * a[3] + a[5] * a[6]) + a[2] * (a[7] * a[3] - a[4] * a[6]);\n\t};\n\n\tmat3.mul = mat3.mat3_mul_mat3 = function (a, b, o) {\n\t\tif (!o) o = mat3();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a10 = a[3],\n\t\t    a11 = a[4],\n\t\t    a12 = a[5],\n\t\t    a20 = a[6],\n\t\t    a21 = a[7],\n\t\t    a22 = a[8],\n\t\t    b00 = b[0],\n\t\t    b01 = b[1],\n\t\t    b02 = b[2],\n\t\t    b10 = b[3],\n\t\t    b11 = b[4],\n\t\t    b12 = b[5],\n\t\t    b20 = b[6],\n\t\t    b21 = b[7],\n\t\t    b22 = b[8];\n\n\t\to[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t\to[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t\to[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n\t\to[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t\to[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t\to[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n\t\to[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t\to[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t\to[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\t\treturn o;\n\t};\n\n\tmat3.translate = function (a, b, o) {\n\t\tif (!o) o = mat3();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a10 = a[3],\n\t\t    a11 = a[4],\n\t\t    a12 = a[5],\n\t\t    a20 = a[6],\n\t\t    a21 = a[7],\n\t\t    a22 = a[8],\n\t\t    x = v[0],\n\t\t    y = v[1];\n\n\t\to[0] = a00, o[1] = a01, o[2] = a02;\n\t\to[3] = a10, o[4] = a11, o[5] = a12;\n\t\to[6] = x * a00 + y * a10 + a20;\n\t\to[7] = x * a01 + y * a11 + a21;\n\t\to[8] = x * a02 + y * a12 + a22;\n\t\treturn o;\n\t};\n\n\tmat3.rotate = function (a, angle, o) {\n\t\tif (!o) o = mat3();\n\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a10 = a[3],\n\t\t    a11 = a[4],\n\t\t    a12 = a[5],\n\t\t    a20 = a[6],\n\t\t    a21 = a[7],\n\t\t    a22 = a[8],\n\t\t    s = sin(angle),\n\t\t    c = cos(angle);\n\n\t\to[0] = c * a00 + s * a10, o[1] = c * a01 + s * a11, o[2] = c * a02 + s * a12;\n\t\to[3] = c * a10 - s * a00, o[4] = c * a11 - s * a01, o[5] = c * a12 - s * a02;\n\t\to[6] = a20, o[7] = a21, o[8] = a22;\n\t\treturn o;\n\t};\n\n\tmat3.scale = function (a, v, o) {\n\t\tif (!o) o = mat3();\n\t\tvar x = v[0],\n\t\t    y = v[1];\n\t\to[0] = x * a[0], o[1] = x * a[1], o[2] = x * a[2];\n\t\to[3] = y * a[3], o[4] = y * a[4], o[5] = y * a[5];\n\t\to[6] = a[6], o[7] = a[7], o[8] = a[8];\n\t\treturn o;\n\t};\n\n\tmat3.fromQuat = function (q, o) {\n\t\tif (!o) o = mat3();\n\t\tvar x = q[0],\n\t\t    y = q[1],\n\t\t    z = q[2],\n\t\t    w = q[3],\n\t\t    x2 = x + x,\n\t\t    y2 = y + y,\n\t\t    z2 = z + z,\n\t\t    xx = x * x2,\n\t\t    yx = y * x2,\n\t\t    yy = y * y2,\n\t\t    zx = z * x2,\n\t\t    zy = z * y2,\n\t\t    zz = z * z2,\n\t\t    wx = w * x2,\n\t\t    wy = w * y2,\n\t\t    wz = w * z2;\n\n\t\to[0] = 1 - yy - zz, o[1] = yx + wz, o[2] = zx - wy, o[3] = yx - wz, o[4] = 1 - xx - zz, o[5] = zy + wx, o[6] = zx + wy, o[7] = zy - wx, o[8] = 1 - xx - yy;\n\t\treturn o;\n\t};\n\n\tmat3.normalFromMat4 = function (a, o) {\n\t\tif (!o) o = mat3();\n\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11],\n\t\t    a30 = a[12],\n\t\t    a31 = a[13],\n\t\t    a32 = a[14],\n\t\t    a33 = a[15],\n\t\t    b00 = a00 * a11 - a01 * a10,\n\t\t    b01 = a00 * a12 - a02 * a10,\n\t\t    b02 = a00 * a13 - a03 * a10,\n\t\t    b03 = a01 * a12 - a02 * a11,\n\t\t    b04 = a01 * a13 - a03 * a11,\n\t\t    b05 = a02 * a13 - a03 * a12,\n\t\t    b06 = a20 * a31 - a21 * a30,\n\t\t    b07 = a20 * a32 - a22 * a30,\n\t\t    b08 = a20 * a33 - a23 * a30,\n\t\t    b09 = a21 * a32 - a22 * a31,\n\t\t    b10 = a21 * a33 - a23 * a31,\n\t\t    b11 = a22 * a33 - a23 * a32,\n\t\t    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\t\tif (!det) return null;\n\t\tdet = 1.0 / det;\n\n\t\to[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t\to[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t\to[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n\t\to[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t\to[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t\to[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n\t\to[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t\to[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t\to[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\treturn o;\n\t};\n\n\tmat3.outerProduct = function (c, r) {\n\t\tif (!o) o = mat3();\n\t\to[0] = c[0] * r[0], m01 = c[0] * r[1], m02 = c[0] * r[2];\n\t\to[1] = c[1] * r[0], m11 = c[1] * r[1], m12 = c[1] * r[2];\n\t\to[2] = c[2] * r[0], m21 = c[2] * r[1], m22 = c[2] * r[2];\n\t\treturn o;\n\t};\n\n\tmatApi(mat4);\n\n\tmat4.debug = function (d, inline) {\n\t\tvar r = \"\";\n\t\tfor (var i = 0; i < 16; i += 4) {\n\t\t\tr += (Array(6).join(' ') + Math.round(d[i] * 1000) / 1000).slice(-6) + \", \";\n\t\t\tr += (Array(6).join(' ') + Math.round(d[i + 1] * 1000) / 1000).slice(-6) + \", \";\n\t\t\tr += (Array(6).join(' ') + Math.round(d[i + 2] * 1000) / 1000).slice(-6) + \", \";\n\t\t\tr += (Array(6).join(' ') + Math.round(d[i + 3] * 1000) / 1000).slice(-6) + \"  \";\n\t\t\tif (!inline) {\n\t\t\t\tconsole.log(r);r = \"\";\n\t\t\t}\n\t\t}\n\t\tif (inline) console.log(r);\n\t};\n\n\tmat4.identity = function (o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = 1, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = 1, o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = 1, o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.isIdentity = function (o) {\n\t\treturn o[0] == 1 && o[1] == 0 && o[2] == 0 && o[3] == 0 && o[4] == 0 && o[5] == 1 && o[6] == 0 && o[7] == 0 && o[8] == 0 && o[9] == 0 && o[10] == 1 && o[11] == 0 && o[12] == 0 && o[13] == 0 && o[14] == 0 && o[15] == 1;\n\t};\n\n\tmat4.normalFromMat4 = function (a, o) {\n\t\tif (!o) o = mat4();\n\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11],\n\t\t    a30 = a[12],\n\t\t    a31 = a[13],\n\t\t    a32 = a[14],\n\t\t    a33 = a[15],\n\t\t    b00 = a00 * a11 - a01 * a10,\n\t\t    b01 = a00 * a12 - a02 * a10,\n\t\t    b02 = a00 * a13 - a03 * a10,\n\t\t    b03 = a01 * a12 - a02 * a11,\n\t\t    b04 = a01 * a13 - a03 * a11,\n\t\t    b05 = a02 * a13 - a03 * a12,\n\t\t    b06 = a20 * a31 - a21 * a30,\n\t\t    b07 = a20 * a32 - a22 * a30,\n\t\t    b08 = a20 * a33 - a23 * a30,\n\t\t    b09 = a21 * a32 - a22 * a31,\n\t\t    b10 = a21 * a33 - a23 * a31,\n\t\t    b11 = a22 * a33 - a23 * a32,\n\t\t    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\t\tif (!det) return null;\n\t\tdet = 1.0 / det;\n\n\t\to[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t\to[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t\to[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n\t\to[4] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t\to[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t\to[6] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n\t\to[8] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t\to[9] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t\to[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\to[15] = 1.0;\n\t\treturn o;\n\t};\n\n\tmat4.T2 = function (t, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = 1, o[1] = 0, o[2] = 0, o[3] = t[0], o[4] = 0, o[5] = 1, o[6] = 0, o[7] = t[1], o[8] = 0, o[9] = 0, o[10] = 1, o[11] = t[2], o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.T = function (tx, ty, tz, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = 1, o[1] = 0, o[2] = 0, o[3] = tx, o[4] = 0, o[5] = 1, o[6] = 0, o[7] = ty, o[8] = 0, o[9] = 0, o[10] = 1, o[11] = tz, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.S2 = function (s, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = s[0], o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = s[1], o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = s[2], o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.S = function (sx, sy, sz, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = sx, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = sy, o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = sz, o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.ST2 = function (s, t, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = s[0], o[1] = 0, o[2] = 0, o[3] = t[0], o[4] = 0, o[5] = s[1], o[6] = 0, o[7] = t[1], o[8] = 0, o[9] = 0, o[10] = s[2], o[11] = t[2], o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.ST = function (sx, sy, sz, tx, ty, tz, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = sx, o[1] = 0, o[2] = 0, o[3] = tx, o[4] = 0, o[5] = sy, o[6] = 0, o[7] = ty, o[8] = 0, o[9] = 0, o[10] = sz, o[11] = tz, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.TS2 = function (t, s, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = s[0], o[1] = 0, o[2] = 0, o[3] = t[0] * s[0], o[4] = 0, o[5] = s[1], o[6] = 0, o[7] = t[1] * s[1], o[8] = 0, o[9] = 0, o[10] = s[2], o[11] = t[2] * s[2], o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.TS = function (tx, ty, tz, sx, sy, sz, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = sx, o[1] = 0, o[2] = 0, o[3] = tx * sx, o[4] = 0, o[5] = sy, o[6] = 0, o[7] = ty * sy, o[8] = 0, o[9] = 0, o[10] = sz, o[11] = tz * sz, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.R2 = function (r, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(r[0]),\n\t\t    cy = Math.cos(r[1]),\n\t\t    cz = Math.cos(r[2]);\n\t\tvar sx = Math.sin(r[0]),\n\t\t    sy = Math.sin(r[1]),\n\t\t    sz = Math.sin(r[2]);\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = 0;\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = 0;\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = 0;\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.R = function (rz, rx, ry, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = 0;\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = 0;\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = 0;\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.RT2 = function (r, t, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(r[0]),\n\t\t    cy = Math.cos(r[1]),\n\t\t    cz = Math.cos(r[2]);\n\t\tvar sx = Math.sin(r[0]),\n\t\t    sy = Math.sin(r[1]),\n\t\t    sz = Math.sin(r[2]);\n\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = t[0];\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = t[1];\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = t[2];\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.RT = function (rx, ry, rz, tx, ty, tz, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = tx;\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = ty;\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = tz;\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.RT2 = function (r, t, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(r[0]),\n\t\t    cy = Math.cos(r[1]),\n\t\t    cz = Math.cos(r[2]);\n\t\tvar sx = Math.sin(r[0]),\n\t\t    sy = Math.sin(r[1]),\n\t\t    sz = Math.sin(r[2]);\n\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = t[0];\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = t[1];\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = t[2];\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t};\n\n\tmat4.TRT = function (t1x, t1y, t1z, rx, ry, rz, t2x, t2y, t2z, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = t2x + o[0] * t1x + o[1] * t1y + o[2] * t1z;\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = t2y + o[4] * t1x + o[5] * t1y + o[6] * t1z;\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = t2z + o[8] * t1x + o[9] * t1y + o[10] * t1z;\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.TRT2 = function (t1, r, t2, o) {\n\t\tif (!o) o = mat4();\n\t\tvar rx = r[0],\n\t\t    ry = r[1],\n\t\t    rz = r[2];\n\t\tvar t1x = t1[0],\n\t\t    t1y = t1[1],\n\t\t    t1z = t[2];\n\t\tvar t2x = t2[0],\n\t\t    t2y = t2[1],\n\t\t    t2z = t[2];\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = cy * cz + sx * sy * sz, o[1] = -sz * cy + cz * sx * sy, o[2] = sy * cx, o[3] = t2x + o[0] * t1x + o[1] * t1y + o[2] * t1z;\n\t\to[4] = sz * cx, o[5] = cx * cz, o[6] = -sx, o[7] = t2y + o[4] * t1x + o[5] * t1y + o[6] * t1z;\n\t\to[8] = -sy * cz + cy * sx * sz, o[9] = sy * sz + cy * sx * cz, o[10] = cx * cy, o[11] = t2z + o[8] * t1x + o[9] * t1y + o[10] * t1z;\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.TSRT = function (t1x, t1y, t1z, mx, my, mz, rx, ry, rz, t2x, t2y, t2z, o) {\n\t\tif (!o) o = mat4();\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = mx * (cy * cz + sx * sy * sz), o[1] = my * (-sz * cy + cz * sx * sy), o[2] = mz * (sy * cx), o[3] = t2x + (o[0] * t1x + o[1] * t1y + o[2] * t1z);\n\t\to[4] = mx * (sz * cx), o[5] = my * (cx * cz), o[6] = mz * -sx, o[7] = t2y + (o[4] * t1x + o[5] * t1y + o[6] * t1z);\n\t\to[8] = mx * (-sy * cz + cy * sx * sz), o[9] = my * (sy * sz + cy * sx * cz), o[10] = mz * (cx * cy), o[11] = t2z + (o[8] * t1x + o[9] * t1y + o[10] * t1z);\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.TSRT2 = function (t1, m, r, t2, o) {\n\t\tif (!o) o = mat4();\n\t\tvar rx = r[0],\n\t\t    ry = r[1],\n\t\t    rz = r[2];\n\t\tvar mx = m[0],\n\t\t    my = m[1],\n\t\t    mz = m[2];\n\t\tvar t1x = t1[0],\n\t\t    t1y = t1[1],\n\t\t    t1z = t1[2];\n\t\tvar t2x = t2[0],\n\t\t    t2y = t2[1],\n\t\t    t2z = t2[2];\n\t\tvar cx = Math.cos(rx),\n\t\t    cy = Math.cos(ry),\n\t\t    cz = Math.cos(rz);\n\t\tvar sx = Math.sin(rx),\n\t\t    sy = Math.sin(ry),\n\t\t    sz = Math.sin(rz);\n\t\to[0] = mx * (cy * cz + sx * sy * sz), o[1] = my * (-sz * cy + cz * sx * sy), o[2] = mz * (sy * cx), o[3] = t2x + (o[0] * t1x + o[1] * t1y + o[2] * t1z);\n\t\to[4] = mx * (sz * cx), o[5] = my * (cx * cz), o[6] = mz * -sx, o[7] = t2y + (o[4] * t1x + o[5] * t1y + o[6] * t1z);\n\t\to[8] = mx * (-sy * cz + cy * sx * sz), o[9] = my * (sy * sz + cy * sx * cz), o[10] = mz * (cx * cy), o[11] = t2z + (o[8] * t1x + o[9] * t1y + o[10] * t1z);\n\t\to[13] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.transpose = function (a, o) {\n\t\tif (!o) o = mat4();\n\t\tif (a === o) {\n\t\t\tvar a01 = a[1],\n\t\t\t    a02 = a[2],\n\t\t\t    a03 = a[3],\n\t\t\t    a12 = a[6],\n\t\t\t    a13 = a[7],\n\t\t\t    a23 = a[11];\n\t\t\to[1] = a[4], o[2] = a[8], o[3] = a[12], o[4] = a01;\n\t\t\to[6] = a[9], o[7] = a[13], o[8] = a02, o[9] = a12;\n\t\t\to[11] = a[14], o[12] = a03, o[13] = a13, o[14] = a23;\n\t\t} else {\n\t\t\to[0] = a[0], o[1] = a[4], o[2] = a[8], o[3] = a[12];\n\t\t\to[4] = a[1], o[5] = a[5], o[6] = a[9], o[7] = a[13];\n\t\t\to[8] = a[2], o[9] = a[6], o[10] = a[10], o[11] = a[14];\n\t\t\to[12] = a[3], o[13] = a[7], o[14] = a[11], o[15] = a[15];\n\t\t}\n\t\treturn o;\n\t};\n\n\t// Invert matrix a\n\tmat4.invert = function (a, o) {\n\t\tif (!o) o = mat4();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11],\n\t\t    a30 = a[12],\n\t\t    a31 = a[13],\n\t\t    a32 = a[14],\n\t\t    a33 = a[15],\n\t\t    b00 = a00 * a11 - a01 * a10,\n\t\t    b01 = a00 * a12 - a02 * a10,\n\t\t    b02 = a00 * a13 - a03 * a10,\n\t\t    b03 = a01 * a12 - a02 * a11,\n\t\t    b04 = a01 * a13 - a03 * a11,\n\t\t    b05 = a02 * a13 - a03 * a12,\n\t\t    b06 = a20 * a31 - a21 * a30,\n\t\t    b07 = a20 * a32 - a22 * a30,\n\t\t    b08 = a20 * a33 - a23 * a30,\n\t\t    b09 = a21 * a32 - a22 * a31,\n\t\t    b10 = a21 * a33 - a23 * a31,\n\t\t    b11 = a22 * a33 - a23 * a32,\n\t\t    d = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\t\tif (!d) return mat4.identity();\n\t\td = 1.0 / d;\n\n\t\to[0] = (a11 * b11 - a12 * b10 + a13 * b09) * d;\n\t\to[1] = (a02 * b10 - a01 * b11 - a03 * b09) * d;\n\t\to[2] = (a31 * b05 - a32 * b04 + a33 * b03) * d;\n\t\to[3] = (a22 * b04 - a21 * b05 - a23 * b03) * d;\n\t\to[4] = (a12 * b08 - a10 * b11 - a13 * b07) * d;\n\t\to[5] = (a00 * b11 - a02 * b08 + a03 * b07) * d;\n\t\to[6] = (a32 * b02 - a30 * b05 - a33 * b01) * d;\n\t\to[7] = (a20 * b05 - a22 * b02 + a23 * b01) * d;\n\t\to[8] = (a10 * b10 - a11 * b08 + a13 * b06) * d;\n\t\to[9] = (a01 * b08 - a00 * b10 - a03 * b06) * d;\n\t\to[10] = (a30 * b04 - a31 * b02 + a33 * b00) * d;\n\t\to[11] = (a21 * b02 - a20 * b04 - a23 * b00) * d;\n\t\to[12] = (a11 * b07 - a10 * b09 - a12 * b06) * d;\n\t\to[13] = (a00 * b09 - a01 * b07 + a02 * b06) * d;\n\t\to[14] = (a31 * b01 - a30 * b03 - a32 * b00) * d;\n\t\to[15] = (a20 * b03 - a21 * b01 + a22 * b00) * d;\n\t\treturn o;\n\t};\n\n\tmat4.adjoint = function (a, o) {\n\t\tif (!o) o = mat4();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11],\n\t\t    a30 = a[12],\n\t\t    a31 = a[13],\n\t\t    a32 = a[14],\n\t\t    a33 = a[15];\n\n\t\to[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n\t\to[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\t\to[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n\t\to[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\t\to[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\t\to[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n\t\to[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\t\to[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n\t\to[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n\t\to[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\t\to[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n\t\to[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\t\to[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\t\to[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n\t\to[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\t\to[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n\t\treturn o;\n\t};\n\n\t// multiply matrix a with vector or matrix V\n\tmat4.mul = mat4.mat4_mul_mat4 = function (a, b, o) {\n\t\tif (!o) o = mat4();\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11],\n\t\t    a30 = a[12],\n\t\t    a31 = a[13],\n\t\t    a32 = a[14],\n\t\t    a33 = a[15];\n\n\t\tvar b0 = b[0],\n\t\t    b1 = b[1],\n\t\t    b2 = b[2],\n\t\t    b3 = b[3];\n\t\to[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\to[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\to[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\to[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[4], b1 = b[5], b2 = b[6], b3 = b[7];\n\t\to[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\to[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\to[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\to[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[8], b1 = b[9], b2 = b[10], b3 = b[11];\n\t\to[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\to[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\to[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\to[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[12], b1 = b[13], b2 = b[14], b3 = b[15];\n\t\to[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\to[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\to[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\to[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\treturn o;\n\t};\n\n\t// compute determinant of matrix a\n\tmat4.determinant = function (a) {\n\t\tvar b00 = a[0] * a[5] - a[1] * a[4],\n\t\t    b01 = a[0] * a[6] - a[2] * a[4],\n\t\t    b02 = a[0] * a[7] - a[3] * a[4],\n\t\t    b03 = a[1] * a[6] - a[2] * a[5],\n\t\t    b04 = a[1] * a[7] - a[3] * a[5],\n\t\t    b05 = a[2] * a[7] - a[3] * a[6],\n\t\t    b06 = a[8] * a[13] - a[9] * a[12],\n\t\t    b07 = a[8] * a[14] - a[10] * a[12],\n\t\t    b08 = a[8] * a[15] - a[11] * a[12],\n\t\t    b09 = a[9] * a[14] - a[10] * a[13],\n\t\t    b10 = a[9] * a[15] - a[11] * a[13],\n\t\t    b11 = a[10] * a[15] - a[11] * a[14];\n\n\t\t// Calculate the determinant\n\t\treturn b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t};\n\n\t// translate matrix a with vector V\n\tmat4.translate = function (a, v, o) {\n\t\tif (!o) o = mat4();\n\t\tvar x = v[0],\n\t\t    y = v[1],\n\t\t    z = v[2],\n\t\t    a00,\n\t\t    a01,\n\t\t    a02,\n\t\t    a03,\n\t\t    a10,\n\t\t    a11,\n\t\t    a12,\n\t\t    a13,\n\t\t    a20,\n\t\t    a21,\n\t\t    a22,\n\t\t    a23;\n\n\t\tif (a === o) {\n\t\t\to[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t\t\to[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t\t\to[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t\t\to[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t\t} else {\n\t\t\ta00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\t\t\ta10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\t\t\ta20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n\n\t\t\to[0] = a00, o[1] = a01, o[2] = a02, o[3] = a03;\n\t\t\to[4] = a10, o[5] = a11, o[6] = a12, o[7] = a13;\n\t\t\to[8] = a20, o[9] = a21, o[10] = a22, o[11] = a23;\n\n\t\t\to[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t\t\to[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t\t\to[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t\t\to[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t\t}\n\t\treturn o;\n\t};\n\n\tmat4.scalematrix = function (v, o) {\n\t\tif (!o) {\n\t\t\to = mat4.identity();\n\t\t} else {\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\to[i] = 0;\n\t\t\t}\n\t\t}\n\t\to[0] = v[0];\n\t\to[5] = v[1];\n\t\to[10] = v[2];\n\t\to[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.translatematrix = function (v, o) {\n\t\tif (!o) {\n\t\t\to = mat4.identity();\n\t\t} else {\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\to[i] = 0;\n\t\t\t}\n\t\t}\n\t\to[3] = v[0];\n\t\to[7] = v[1];\n\t\to[11] = v[2];\n\t\to[15] = 1;\n\t\treturn o;\n\t};\n\n\t// scale matrix a with vector V\n\tmat4.scale = function (a, v, o) {\n\t\tif (!o) o = mat4();\n\t\tvar x = v[0],\n\t\t    y = v[1],\n\t\t    z = v[2];\n\n\t\to[0] = a[0] * x, o[1] = a[1] * x, o[2] = a[2] * x, o[3] = a[3] * x;\n\t\to[4] = a[4] * y, o[5] = a[5] * y, o[6] = a[6] * y, o[7] = a[7] * y;\n\t\to[8] = a[8] * z, o[9] = a[9] * z, o[10] = a[10] * z, o[11] = a[11] * z;\n\t\to[12] = a[12], o[13] = a[13], o[14] = a[14], o[15] = a[15];\n\t\treturn o;\n\t};\n\n\t// rotate matrix a by angle A in radians around axis v\n\tmat4.rotate = function (a, angle, v, o) {\n\t\tif (!o) o = mat4();\n\t\tvar x = v[0],\n\t\t    y = v[1],\n\t\t    z = v[2],\n\t\t    len = Math.sqrt(x * x + y * y + z * z),\n\t\t    s = Math.sin(angle),\n\t\t    c = Math.cos(angle),\n\t\t    t = 1 - c,\n\t\t    len = 1 / len;\n\t\tx *= len, y *= len, z *= len;\n\n\t\tif (abs(len) < 0.000001) return null;\n\n\t\tvar a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11];\n\n\t\t// Construct the elements of the rotation matrix\n\t\tvar b00 = x * x * t + c,\n\t\t    b01 = y * x * t + z * s,\n\t\t    b02 = z * x * t - y * s,\n\t\t    b10 = x * y * t - z * s,\n\t\t    b11 = y * y * t + c,\n\t\t    b12 = z * y * t + x * s,\n\t\t    b20 = x * z * t + y * s,\n\t\t    b21 = y * z * t - x * s,\n\t\t    b22 = z * z * t + c;\n\n\t\t// Perform rotation-specific matrix multiplication\n\t\to[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t\to[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t\to[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t\to[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t\to[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t\to[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t\to[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t\to[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t\to[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t\to[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t\to[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t\to[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n\t\tif (a !== o) {\n\t\t\t// If the source and destination differ, copy the unchanged last row\n\t\t\to[12] = a[12];\n\t\t\to[13] = a[13];\n\t\t\to[14] = a[14];\n\t\t\to[15] = a[15];\n\t\t}\n\t\treturn o;\n\t};\n\n\t// Rotate matrix a by angle A around x-axis\n\tmat4.rotateX = function (a, angle, o) {\n\t\tif (!o) o = mat4();\n\t\tvar s = Math.sin(angle),\n\t\t    c = Math.cos(angle),\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11];\n\n\t\tif (a !== o) {\n\t\t\t// If the source and destination differ, copy the unchanged rows\n\t\t\to[0] = a[0], o[1] = a[1], o[2] = a[2], o[3] = a[3];\n\t\t\to[12] = a[12], o[13] = a[13], o[14] = a[14], o[15] = a[15];\n\t\t}\n\n\t\t// Perform axis-specific matrix multiplication\n\t\to[4] = a10 * c + a20 * s, o[5] = a11 * c + a21 * s;\n\t\to[6] = a12 * c + a22 * s, o[7] = a13 * c + a23 * s;\n\t\to[8] = a20 * c - a10 * s, o[9] = a21 * c - a11 * s;\n\t\to[10] = a22 * c - a12 * s, o[11] = a23 * c - a13 * s;\n\t\treturn o;\n\t};\n\n\t// rotate matrix a with angle R around y-axis\n\tmat4.rotateY = function (a, angle, o) {\n\t\tif (!o) o = mat4();\n\t\tvar s = Math.sin(angle),\n\t\t    c = Math.cos(angle),\n\t\t    a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a20 = a[8],\n\t\t    a21 = a[9],\n\t\t    a22 = a[10],\n\t\t    a23 = a[11];\n\n\t\tif (a !== o) {\n\t\t\t// If the source and destination differ, copy the unchanged rows\n\t\t\to[4] = a[4], o[5] = a[5], o[6] = a[6], o[7] = a[7];\n\t\t\to[12] = a[12], o[13] = a[13], o[14] = a[14], o[15] = a[15];\n\t\t}\n\n\t\t// Perform axis-specific matrix multiplication\n\t\to[0] = a00 * c - a20 * s, o[1] = a01 * c - a21 * s;\n\t\to[2] = a02 * c - a22 * s, o[3] = a03 * c - a23 * s;\n\t\to[8] = a00 * s + a20 * c, o[9] = a01 * s + a21 * c;\n\t\to[10] = a02 * s + a22 * c, o[11] = a03 * s + a23 * c;\n\t\treturn o;\n\t};\n\n\t// rotate matrix a with angle R around z-axis\n\tmat4.rotateZ = function (a, angle, o) {\n\t\tif (!o) o = mat4();\n\t\tvar s = Math.sin(angle),\n\t\t    c = Math.cos(angle),\n\t\t    a00 = a[0],\n\t\t    a01 = a[1],\n\t\t    a02 = a[2],\n\t\t    a03 = a[3],\n\t\t    a10 = a[4],\n\t\t    a11 = a[5],\n\t\t    a12 = a[6],\n\t\t    a13 = a[7];\n\n\t\tif (a !== o) {\n\t\t\t// If the source and destination differ, copy the unchanged last row\n\t\t\to[8] = a[8], o[9] = a[9], o[10] = a[10], o[11] = a[11];\n\t\t\to[12] = a[12], o[13] = a[13], o[14] = a[14], o[15] = a[15];\n\t\t}\n\t\t// Perform axis-specific matrix multiplication\n\t\to[0] = a00 * c + a10 * s, o[1] = a01 * c + a11 * s;\n\t\to[2] = a02 * c + a12 * s, o[3] = a03 * c + a13 * s;\n\t\to[4] = a10 * c - a00 * s, o[5] = a11 * c - a01 * s;\n\t\to[6] = a12 * c - a02 * s, o[7] = a13 * c - a03 * s;\n\t\treturn o;\n\t};\n\n\t// Create matrix from quaternion Q and translation V\n\tmat4.fromQuatTrans = function (q, v, o) {\n\t\tif (!o) o = mat4();\n\t\t// Quaternion math\n\t\tvar x = q[0],\n\t\t    y = q[1],\n\t\t    z = q[2],\n\t\t    w = q[3],\n\t\t    x2 = x + x,\n\t\t    y2 = y + y,\n\t\t    z2 = z + z,\n\t\t    xx = x * x2,\n\t\t    xy = x * y2,\n\t\t    xz = x * z2,\n\t\t    yy = y * y2,\n\t\t    yz = y * z2,\n\t\t    zz = z * z2,\n\t\t    wx = w * x2,\n\t\t    wy = w * y2,\n\t\t    wz = w * z2;\n\n\t\to[0] = 1 - (yy + zz), o[1] = xy + wz, o[2] = xz - wy, o[3] = 0;\n\t\to[4] = xy - wz, o[5] = 1 - (xx + zz), o[6] = yz + wx, o[7] = 0;\n\t\to[8] = xz + wy, o[9] = yz - wx, o[10] = 1 - (xx + yy), o[11] = 0;\n\t\to[12] = v[0], o[13] = v[1], o[14] = v[2], o[15] = 1;\n\t\treturn o;\n\t};\n\n\t// Create matrix from quaternion Q\n\tmat4.fromQuat = function (q, o) {\n\t\tif (!o) o = mat4();\n\t\tvar x = q[0],\n\t\t    y = q[1],\n\t\t    z = q[2],\n\t\t    w = q[3],\n\t\t    x2 = x + x,\n\t\t    y2 = y + y,\n\t\t    z2 = z + z,\n\t\t    xx = x * x2,\n\t\t    yx = y * x2,\n\t\t    yy = y * y2,\n\t\t    zx = z * x2,\n\t\t    zy = z * y2,\n\t\t    zz = z * z2,\n\t\t    wx = w * x2,\n\t\t    wy = w * y2,\n\t\t    wz = w * z2;\n\n\t\to[0] = 1 - yy - zz, o[1] = yx + wz, o[2] = zx - wy, o[3] = 0;\n\t\to[4] = yx - wz, o[5] = 1 - xx - zz, o[6] = zy + wx, o[7] = 0;\n\t\to[8] = zx + wy, o[9] = zy - wx, o[10] = 1 - xx - yy, o[11] = 0;\n\t\to[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1;\n\t\treturn o;\n\t};\n\n\t// Create matrix from left/right/bottom/top/near/far\n\tmat4.fustrum = function (L, R, T, B, N, F, o) {\n\t\tif (!o) o = mat4();\n\t\tvar rl = 1 / (R - L),\n\t\t    tb = 1 / (T - B),\n\t\t    nf = 1 / (N - F);\n\t\to[0] = N * 2 * rl, o[1] = 0, o[2] = 0, o[3] = 0;\n\t\to[4] = 0, o[5] = N * 2 * tb, o[6] = 0, o[7] = 0;\n\t\to[8] = (R + L) * rl, o[9] = (T + B) * tb, o[10] = (F + N) * nf, o[11] = -1;\n\t\to[12] = 0, o[13] = 0, o[14] = F * N * 2 * nf, o[15] = 0;\n\t\treturn o;\n\t};\n\n\t// Create perspective matrix FovY, Aspect, Near, Far\n\tmat4.perspective = function (FY, A, N, F, o) {\n\t\tif (!o) o = mat4();\n\t\tvar f = 1.0 / Math.tan(FY / 2),\n\t\t    nf = 1 / (N - F);\n\n\t\to[0] = f / A, o[4] = 0, o[8] = 0, o[12] = 0;\n\t\to[1] = 0, o[5] = f, o[9] = 0, o[13] = 0;\n\t\to[2] = 0, o[6] = 0, o[10] = (F + N) * nf, o[14] = -1;\n\t\to[3] = 0, o[7] = 0, o[11] = 2 * F * N * nf, o[15] = 0;\n\t\treturn o;\n\t};\n\n\t// Create orthogonal proj matrix with Left/Right/Bottom/Top/Near/Far\n\tmat4.ortho = function (L, R, T, B, N, F, o) {\n\t\tif (!o) o = mat4();\n\t\tvar lr = 1 / (L - R),\n\t\t    bt = 1 / (B - T),\n\t\t    nf = 1 / (N - F);\n\t\to[0] = -2 * lr, o[4] = 0, o[8] = 0, o[12] = 0;\n\t\to[1] = 0, o[5] = -2 * bt, o[9] = 0, o[13] = 0;\n\t\to[2] = 0, o[6] = 0, o[10] = 2 * nf, o[14] = 0;\n\t\to[3] = (L + R) * lr, o[7] = (T + B) * bt, o[11] = (F + N) * nf, o[15] = 1;\n\t\treturn o;\n\t};\n\n\t// Create look at matrix with Eye, LookAt, and Up vectors\n\tmat4.lookAt = function (eye, look, up, o) {\n\t\tif (!o) o = mat4();\n\t\tvar x0,\n\t\t    x1,\n\t\t    x2,\n\t\t    y0,\n\t\t    y1,\n\t\t    y2,\n\t\t    z0,\n\t\t    z1,\n\t\t    z2,\n\t\t    len,\n\t\t    ex = eye[0],\n\t\t    ux = up[0],\n\t\t    lx = look[0],\n\t\t    ey = eye[1],\n\t\t    uy = up[1],\n\t\t    ly = look[1],\n\t\t    ez = eye[2],\n\t\t    uz = up[2],\n\t\t    lz = look[2];\n\n\t\tif (Math.abs(ex - lx) < 0.000001 && Math.abs(ey - ly) < 0.000001 && Math.abs(ez - lz) < 0.000001) {\n\t\t\treturn mat4.identity(o);\n\t\t}\n\n\t\tz0 = ex - lx, z1 = ey - ly, z2 = ez - lz;\n\t\tlen = 1 / sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\t\tz0 *= len, z1 *= len, z2 *= len;\n\n\t\tx0 = uy * z2 - uz * z1, x1 = uz * z0 - ux * z2, x2 = ux * z1 - uy * z0;\n\t\tlen = sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n\t\tif (!len) x0 = 0, x1 = 0, x2 = 0;else len = 1 / len, x0 *= len, x1 *= len, x2 *= len;\n\n\t\ty0 = z1 * x2 - z2 * x1, y1 = z2 * x0 - z0 * x2, y2 = z0 * x1 - z1 * x0;\n\t\tlen = sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n\t\tif (!len) y0 = 0, y1 = 0, y2 = 0;else len = 1 / len, y0 *= len, y1 *= len, y2 *= len;\n\n\t\to[0] = x0, o[4] = y0, o[8] = z0, o[12] = 0;\n\t\to[1] = x1, o[5] = y1, o[9] = z1, o[13] = 0;\n\t\to[2] = x2, o[6] = y2, o[10] = z2, o[14] = 0;\n\n\t\to[3] = -(x0 * ex + x1 * ey + x2 * ez);\n\t\to[7] = -(y0 * ex + y1 * ey + y2 * ez);\n\t\to[11] = -(z0 * ex + z1 * ey + z2 * ez);\n\t\to[15] = 1;\n\t\treturn o;\n\t};\n\n\tmat4.outerProduct = function (c, r, o) {\n\t\tif (!o) o = mat4();\n\t\to[0] = c[0] * r[0], o[1] = c[0] * r[1], o[2] = c[0] * r[2], o[3] = c[0] * r[3];\n\t\to[4] = c[1] * r[0], o[5] = c[1] * r[1], o[6] = c[1] * r[2], o[7] = c[1] * r[3];\n\t\to[8] = c[2] * r[0], o[9] = c[2] * r[1], o[10] = c[2] * r[2], o[11] = c[2] * r[3];\n\t\to[12] = c[3] * r[0], o[13] = c[3] * r[1], o[14] = c[3] * r[2], o[15] = c[3] * r[3];\n\t\treturn o;\n\t};\n\n\tvar ease = {};\n\t// easing functions on float\n\tease.linear = function (t) {\n\t\treturn t;\n\t};\n\tease.inquad = function (t) {\n\t\treturn t * t;\n\t};\n\tease.outquad = function (t) {\n\t\treturn -t * (t - 2.);\n\t};\n\tease.inoutquad = function (t) {\n\t\treturn (t /= 0.5) < 1. ? 0.5 * t * t : -0.5 * (--t * (t - 2.) - 1.);\n\t};\n\tease.incubic = function (t) {\n\t\treturn t * t * t;\n\t};\n\tease.outcubic = function (t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t};\n\tease.inoutcubic = function (t) {\n\t\treturn (t /= 0.5) < 1. ? 0.5 * t * t * t : 1. / 2. * ((t -= 2.) * t * t + 2.);\n\t};\n\tease.inquart = function (t) {\n\t\treturn t * t * t * t;\n\t};\n\tease.outquart = function (t) {\n\t\treturn -((t = t - 1.) * t * t * t - 1.);\n\t};\n\tease.inoutquart = function (t) {\n\t\treturn (t /= 0.5) < 1. ? 0.5 * t * t * t * t : -0.5 * ((t -= 2.) * t * t * t - 2.);\n\t};\n\tease.inquint = function (t) {\n\t\treturn t * t * t * t * t;\n\t};\n\tease.outquint = function (t) {\n\t\treturn (t = t - 1.) * t * t * t * t + 1.;\n\t};\n\tease.inoutquint = function (t) {\n\t\treturn (t /= 0.5) < 1. ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2.) * t * t * t * t + 2.);\n\t};\n\tease.insine = function (t) {\n\t\treturn -cos(t * (PI / 2.)) + 1.;\n\t};\n\tease.outsine = function (t) {\n\t\treturn sin(t * (PI / 2.));\n\t};\n\tease.inoutsine = function (t) {\n\t\treturn -0.5 * (cos(PI * t) - 1.);\n\t};\n\tease.inexpo = function (t) {\n\t\treturn t == 0. ? 0. : pow(2., 10. * (t - 1.));\n\t};\n\tease.outexpo = function (t) {\n\t\treturn t == 1. ? 1. : -pow(2., -10. * t) + 1.;\n\t};\n\tease.incirc = function (t) {\n\t\treturn -(sqrt(1. - t * t) - 1.);\n\t};\n\tease.outcirc = function (t) {\n\t\treturn sqrt(1. - (t = t - 1.) * t);\n\t};\n\tease.inoutcirc = function (t) {\n\t\treturn (t /= 0.5) < 1. ? -0.5 * (sqrt(1. - t * t) - 1.) : 0.5 * (sqrt(1. - (t -= 2.) * t) + 1.);\n\t};\n\tease.inoutexpo = function (t) {\n\t\tif (t == 0.) return 0.;\n\t\tif (t == 1.) return 1.;\n\t\tif ((t /= 0.5) < 1.) return 0.5 * pow(2., 10. * (t - 1.));\n\t\treturn 0.5 * (-pow(2., -10. * --t) + 2.);\n\t};\n\n\tease.inelastic = function (t) {\n\t\tvar s = 1.70158,\n\t\t    p = 0.,\n\t\t    a = 1.;\n\t\tif (t == 0.) return 0.;\n\t\tif (t == 1.) return 1.;\n\t\tif (!p) p = 0.3;\n\t\tif (a < 1.) {\n\t\t\ta = 1.;var s = p / 4.;\n\t\t} else var s = p / (2. * PI) * asin(1. / a);\n\t\treturn -(a * pow(2., 10. * (t -= 1.)) * sin((t * 1. - s) * (2. * PI) / p));\n\t};\n\n\tease.outelastic = function (t) {\n\t\tvar s = 1.70158,\n\t\t    p = 0.,\n\t\t    a = 1.;\n\t\tif (t == 0.) return 0.;\n\t\tif (t == 1.) return 1.;\n\t\tif (!p) p = 1. * 0.3;\n\t\tif (a < 1.) {\n\t\t\ta = 1.;var s = p / 4.;\n\t\t} else var s = p / (2. * PI) * asin(1. / a);\n\t\treturn a * pow(2., -10. * t) * sin((t * 1. - s) * (2. * PI) / p) + 1.;\n\t};\n\n\tease.inoutelastic = function (t) {\n\t\tvar s = 1.70158,\n\t\t    p = 0.,\n\t\t    a = 1.;\n\t\tif (t == 0.) return 0.;\n\t\tif ((t /= 0.5) == 2.) return 1.;\n\t\tif (!p) p = 0.3 * 1.5;\n\t\tif (a < 1.) {\n\t\t\ta = 1.;var s = p / 4.;\n\t\t} else var s = p / (2. * PI) * asin(1. / a);\n\t\tif (t < 1.) return -.5 * (a * pow(2., 10. * (t -= 1.)) * sin((t * 1. - s) * (2. * PI) / p));\n\t\treturn a * pow(2., -10. * (t -= 1.)) * sin((t * 1. - s) * (2. * PI) / p) * 0.5 + 1.;\n\t};\n\n\tease.inback = function (t) {\n\t\tvar s = 1.70158;return (t /= 1.) * t * ((s + 1.) * t - s);\n\t};\n\tease.outback = function (t) {\n\t\tvar s = 1.70158;return (t = t / 1 - 1) * t * ((s + 1) * t + s) + 1;\n\t};\n\tease.inoutback = function (t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1.) return 0.5 * (t * t * (((s *= 1.525) + 1.) * t - s));\n\t\treturn 0.5 * ((t -= 2.) * t * (((s *= 1.525) + 1.) * t + s) + 2.);\n\t};\n\n\tease.inbounce = function (t) {\n\t\treturn 1. - ease.outbounce(1. - t);\n\t};\n\n\tease.outbounce = function (t) {\n\t\tif (t < 1. / 2.75) return 7.5625 * t * t;else if (t < 2. / 2.75) return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;else if (t < 2.5 / 2.75) return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n\t\treturn 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t};\n\n\tease.inoutbounce = function (t) {\n\t\tif (t < 0.5) return ease.inbounce(t * 2.) * 0.5;\n\t\treturn ease.outbounce(t * 2. - 1.) * 0.5 + 0.5;\n\t};\n\n\tease.quad = function (t) {\n\t\treturn ease.outquad(t);\n\t};\n\tease.cubic = function (t) {\n\t\treturn ease.inoutcubic(t);\n\t};\n\tease.quart = function (t) {\n\t\treturn ease.outquart(t);\n\t};\n\tease.quint = function (t) {\n\t\treturn ease.outquint(t);\n\t};\n\tease.sine = function (t) {\n\t\treturn ease.outsine(t);\n\t};\n\tease.expo = function (t) {\n\t\treturn ease.outexpo(t);\n\t};\n\tease.elastic = function (t) {\n\t\treturn ease.outelastic(t);\n\t};\n\tease.circ = function (t) {\n\t\treturn ease.outcirc(t);\n\t};\n\tease.back = function (t) {\n\t\treturn ease.inoutback(t);\n\t};\n\tease.bounce = function (t) {\n\t\treturn ease.outbounce(t);\n\t};\n\n\tease.bezier = function (control) {\n\t\tvar b = {};\n\t\tb.epsilon = 1.0 / (200.0 * time);\n\t\tb.points = control;\n\t\tif (control.length != 4) control = [0, 0, 1, 1];\n\t\tb.cx = 3.0 * control[0];\n\t\tb.bx = 3.0 * (control[2] - control[0]) - b.cx;\n\t\tb.ax = 1.0 - b.cx - b.bx;\n\t\tb.cy = 3.0 * control[1];\n\t\tb.by = 3.0 * (control[3] - control[1]) - b.cy;\n\t\tb.ay = 1.0 - b.cy - b.by;\n\n\t\tfunction bezierCurveX(t) {\n\t\t\treturn ((b.ax * t + b.bx) * t + b.cx) * t;\n\t\t}\n\n\t\tfunction bezierCurveY(t) {\n\t\t\treturn ((b.ay * t + b.by) * t + b.cy) * t;\n\t\t}\n\n\t\tfunction bezierCurveDX(t) {\n\t\t\treturn (3.0 * b.ax * t + 2.0 * b.bx) * t + b.cx;\n\t\t}\n\n\t\tfunction bezierSolveX(x) {\n\t\t\tvar t0, t1, t2, x2, d2, i;\n\t\t\t// First try a few iterations of Newton's method -- normally very fast.\n\t\t\tfor (t2 = x, i = 0; i < 8; i++) {\n\t\t\t\tx2 = bezierCurveX(t2) - x;\n\t\t\t\tif (Math.abs(x2) < b.epsilon) return t2;\n\t\t\t\td2 = bezierCurveDX(t2);\n\t\t\t\tif (Math.abs(d2) < 1e-6) break;\n\t\t\t\tt2 = t2 - x2 / d2;\n\t\t\t}\n\t\t\t// Fall back to the bisection method for reliability.\n\t\t\tt0 = 0.0;\n\t\t\tt1 = 1.0;\n\t\t\tt2 = x;\n\t\t\tif (t2 < t0) return t0;\n\t\t\tif (t2 > t1) return t1;\n\t\t\twhile (t0 < t1) {\n\t\t\t\tx2 = bezierCurveX(t2);\n\t\t\t\tif (Math.abs(x2 - x) < b.epsilon) return t2;\n\t\t\t\tif (x > x2) t0 = t2;else t1 = t2;\n\t\t\t\tt2 = (t1 - t0) * .5 + t0;\n\t\t\t}\n\t\t\treturn t2; // Failure.\n\t\t}\n\n\t\treturn function (t) {\n\t\t\tbezierCurveY(bezierSolveX(t));\n\t\t};\n\t};\n\n\tease.bret = function (control) {\n\t\t// get the curve\n\t\t// pick a d that seems to make sense\n\t\t//return t\n\t\tvar di = 0.01;\n\t\tvar df = 0.01;\n\t\t// use the bezier array to pass in di and df\n\t\tif (control && control.points) {\n\t\t\tif (control.points.length == 2) {\n\t\t\t\tdi = control.points[0];\n\t\t\t\tdf = control.points[1];\n\t\t\t} else {\n\t\t\t\tdi = df = control.points[0];\n\t\t\t}\n\t\t}\n\n\t\tvar Xi = 0; // we go from 0\n\t\tvar Xf = 1; // to 1 , as we are an motion function\n\t\tvar Xo = Xi - di; // as per email\n\t\tvar Xn = Xf + df; // here too\n\t\t// compute the constant\n\t\tvar K = (Xo - Xf) * (Xi - Xn) / ((Xo - Xi) * (Xf - Xn));\n\n\t\treturn function (t) {\n\t\t\t// seems to be 1.20001\n\t\t\tvar Kt = Math.pow(K, t);\n\t\t\t// so when t starts at 0 and ends at 1 K(t) is just K^t\n\t\t\treturn (Xo * (Xi - Xn) + Xn * (Xo - Xi) * Kt) / ((Xo - Xi) * Kt + (Xi - Xn));\n\t\t};\n\t};\n\n\tmat4.global_identity = mat4.identity();\n\n\tfloat.ease = ease;\n\n\tint.isPowerOfTwo = function (x) {\n\t\treturn (x & x - 1) == 0;\n\t};\n\n\tint.nextHighestPowerOfTwo = function (x) {\n\t\t--x;\n\t\tfor (var i = 1; i < 32; i <<= 1) {\n\t\t\tx = x | x >> i;\n\t\t}\n\t\treturn x + 1;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/math.js\n// module id = 115\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/math.js?");

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (node) {\n   this.atConstructor = function () {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/midi.js\n// module id = 116\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/midi.js?");

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\t// Node class provides attributes for events and values, propertybinding and constructor semantics\n\n\tvar OneJSParser = requireDreem('$system/parse/onejsparser');\n\tvar WiredWalker = requireDreem('$system/parse/wiredwalker');\n\tvar RpcProxy = requireDreem('$system/rpc/rpcproxy');\n\tvar ASTScanner = requireDreem('$system/parse/astscanner');\n\n\t// parser and walker for wired attributes\n\tvar onejsparser = new OneJSParser();\n\tonejsparser.parser_cache = {};\n\tvar wiredwalker = new WiredWalker();\n\n\t// the RPCProxy class reads these booleans to skip RPC interface creation for this prototype level\n\tthis.rpcproxy = false;\n\n\t// internal, called by the constructor\n\tthis._atConstructor = function () {\n\t\t// store the args for future reference\n\t\t//var args = this.constructor_args = Array.prototype.slice.call(arguments)\n\t\tthis.children = this.constructor_children = [];\n\t\tthis.initFromConstructorArgs(arguments);\n\t};\n\n\tthis.setInterval = function (fn, mstime) {\n\t\tif (!this.interval_ids) this.interval_ids = [];\n\n\t\tvar platform = typeof window !== 'undefined' ? window : global;\n\n\t\tvar id = platform.setInterval(function () {\n\t\t\tthis.interval_ids.splice(this.interval_ids.indexOf(id), 1);\n\t\t\tfn.call(this);\n\t\t}.bind(this), mstime);\n\t\tthis.interval_ids.push(id);\n\t\treturn id;\n\t};\n\n\tthis.clearInterval = function (id) {\n\t\tif (id === undefined) return;\n\t\tvar idx = this.interval_ids.indexOf(id);\n\t\tif (idx !== -1) {\n\t\t\tthis.interval_ids.splice(idx, 1);\n\t\t\tvar platform = typeof window !== 'undefined' ? window : global;\n\n\t\t\tplatform.clearInterval(id);\n\t\t}\n\t};\n\n\tthis.setTimeout = function (fn, mstime) {\n\t\tif (!this.timeout_ids) this.timeout_ids = [];\n\t\tvar platform = typeof window !== 'undefined' ? window : global;\n\n\t\tvar id = platform.setTimeout(function () {\n\t\t\tthis.timeout_ids.splice(this.timeout_ids.indexOf(id), 1);\n\t\t\tfn.call(this);\n\t\t}.bind(this), mstime);\n\t\tthis.timeout_ids.push(id);\n\t\treturn id;\n\t};\n\n\tthis.clearTimeout = function (id) {\n\t\tif (id === undefined) return;\n\t\tvar idx = this.timeout_ids.indexOf(id);\n\t\tif (idx !== -1) {\n\t\t\tthis.timeout_ids.splice(idx, 1);\n\t\t\tvar platform = typeof window !== 'undefined' ? window : global;\n\n\t\t\tplatform.clearInterval(id);\n\t\t}\n\t};\n\n\tthis.requestAnimationFrame = function (fn) {\n\t\tif (!this.raf_ids) this.raf_ids = [];\n\t\tif (typeof window !== 'undefined') {\n\t\t\tvar id = window.requestAnimationFrame(function () {\n\t\t\t\tthis.raf_ids.splice(this.raf_ids.indexOf(id), 1);\n\t\t\t\tfn.call(this);\n\t\t\t}.bind(this));\n\t\t\tthis.raf_ids.push(id);\n\t\t\treturn id;\n\t\t} else {\n\t\t\treturn this.setTimeout(fn, 1000 / 60);\n\t\t}\n\t};\n\n\tthis.cancelAnimationFrame = function (id) {\n\t\tif (id === undefined) return;\n\t\tvar idx = this.raf_ids.indexOf(id);\n\t\tif (idx !== -1) {\n\t\t\tthis.raf_ids.splice(idx, 1);\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\twindow.cancelAnimationFrame(id);\n\t\t\t} else {\n\t\t\t\tthis.clearTimeout(id);\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, called by the constructor\n\tthis.initFromConstructorArgs = function (args) {\n\t\t// var off = 0\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tvar arg = args[i];\n\t\t\tif ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && Object.getPrototypeOf(arg) === Object.prototype) {\n\t\t\t\tthis.attributes = arg;\n\t\t\t\t//this.initFromConstructorProps(arg)\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof arg === 'function') {\n\t\t\t\tvar prop = {};prop[arg.name] = arg;\n\t\t\t\tthis.attributes = prop;\n\t\t\t\t//this.initFromConstructorProps(prop)\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof arg === 'string' && i === 0) {\n\t\t\t\t// off = 1\n\t\t\t\tthis.name = arg;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\tthis.initFromConstructorArgs(arg);\n\t\t\t} else if (arg !== undefined && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n\t\t\t\targ.__constructorIndex = i;\n\t\t\t\tthis.constructor_children.push(arg);\n\t\t\t\t// var name = arg.name\n\t\t\t\t//if(name !== undefined && !(name in this)) this[name] = arg\n\t\t\t}\n\t\t}\n\t};\n\t/*\n \t// internal, called by the constructor\n \tthis.initFromConstructorProps = function(obj){\n \n \t\tfor(var key in obj){\n \t\t\tvar prop = obj[key]\n \t\t\tvar tgt = this\n \t\t\tvar type = 0\n \n \t\t\tif(!this.constructor_props) this.constructor_props = {}\n \t\t\tthis.constructor_props[key] = prop\n \n \t\t\tvar idx = key.indexOf('.')\n \t\t\tif(idx !== -1){\n \t\t\t\ttgt = this[key.slice(0,idx)]\n \t\t\t\tkey = key.slice(idx + 1)\n \t\t\t}\n \n \t\t\ttgt[key] = prop\n \t\t}\n \t}*/\n\n\t// Mixes in another class or object, just pass in any number of object or class references. They are copied on key by key\n\tthis.mixin = function () {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tif (typeof obj === 'function') obj = obj.prototype;\n\t\t\tfor (var key in obj) {\n\t\t\t\t// copy over getters and setters\n\t\t\t\tif (obj.__lookupGetter__(key) || obj.__lookupSetter__(key)) {\n\t\t\t\t\t// ignore it\n\t\t\t\t} else {\n\t\t\t\t\t// other\n\t\t\t\t\tthis[key] = obj[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, used by find and findChild\n\tthis._findChild = function (name, ignore) {\n\t\tif (this === ignore) return;\n\t\tif (this.name === name) {\n\t\t\treturn this;\n\t\t}\n\t\tif (this.children) {\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\t\tvar child = this.children[i];\n\t\t\t\tif (child === ignore) continue;\n\t\t\t\tvar ret = child._findChild(name, ignore);\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Finds a child node by name.\n\tthis.findChild = function (name) {\n\t\tif (!this.find_cache) this.find_cache = {};\n\t\tvar child = this.find_cache[name];\n\t\tif (child && !child.destroyed) return child;\n\t\tchild = this.find_cache[name] = this._findChild(name);\n\t\treturn child;\n\t};\n\n\t// Finds a parent node by name.\n\tthis.find = function (name) {\n\t\tvar child = this.findChild(name);\n\t\tvar node = this;\n\t\twhile (child === undefined && node.parent) {\n\t\t\tchild = node.parent._findChild(name, node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\tthis.find_cache[name] = child;\n\t\treturn child;\n\t};\n\n\t// internal, hide a property, pass in any set of strings\n\tthis.hideProperty = function () {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\tfor (var j = 0; j < arg.length; j++) {\n\t\t\t\t\tObject.defineProperty(this, arg[j], { enumerable: false, configurable: true, writeable: true });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tObject.defineProperty(this, arg, { enumerable: false, configurable: true, writeable: true });\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, check if property is an attribute\n\tthis.isAttribute = function (key) {\n\t\tvar setter = this.__lookupSetter__(key);\n\t\tif (setter !== undefined && setter.isAttribute) return true;else return false;\n\t};\n\n\t// internal, returns the attribute config object (the one passed into this.attributes={attr:{config}}\n\tthis.getAttributeConfig = function (key) {\n\t\treturn this._attributes[key];\n\t};\n\n\t// internal, check if an attribute has wires connected\n\tthis.hasWires = function (key) {\n\t\tvar wiredfn_key = '_wiredfn_' + key;\n\t\treturn wiredfn_key in this;\n\t};\n\n\t// internal, returns the wired-call for an attribute\n\tthis.wiredCall = function (key) {\n\t\tvar wiredcl_key = '_wiredcl_' + key;\n\t\treturn this[wiredcl_key];\n\t};\n\n\t// internal, emits an event recursively on all children\n\tthis.emitRecursive = function (key, event, block) {\n\n\t\tif (block && block.indexOf(child) !== -1) return;\n\t\tthis.emit(key, event);\n\t\tfor (var a in this.children) {\n\t\t\tvar child = this.children[a];\n\t\t\tchild.emitRecursive(key, event);\n\t\t}\n\t};\n\n\tthis.emit_block_set = null;\n\n\tthis.emit = function (key, ievent) {\n\n\t\t// lets do a fastpass\n\t\tvar event = ievent || {};\n\t\tvar fast_key = '_fast_' + key;\n\n\t\t// FAST OUT\n\t\tvar callfn = this[fast_key];\n\t\tif (this['on' + key] == callfn) {\n\t\t\tif (callfn === null) return;\n\t\t\tif (callfn) {\n\t\t\t\t// lets see if we have an 'on' key defined\n\t\t\t\tcallfn.call(this, event, event.value, this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar lock_key = '_lock_' + key;\n\t\tif (this[lock_key] || this.emit_block_set && this.emit_block_set.indexOf(key) !== -1) return;\n\t\tthis[lock_key] = true;\n\n\t\tvar counter = 0;\n\t\ttry {\n\n\t\t\tvar on_key = 'on' + key;\n\t\t\tvar listen_key = '_listen_' + key;\n\t\t\tif (!this.__lookupSetter__(key)) {\n\t\t\t\tvar fn = this[key];\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn.call(this, event);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar proto = this;\n\n\t\t\t// called after the onclicks, in reverse order (parent on up)\n\t\t\tvar finals;\n\t\t\twhile (on_key in proto || listen_key in proto) {\n\t\t\t\tif (proto.hasOwnProperty(on_key)) {\n\t\t\t\t\tcallfn = proto[on_key];\n\t\t\t\t\tcallfn.call(this, event, event.value, this);\n\t\t\t\t\tif (event.stop) return;\n\t\t\t\t\tif (event.final) finals = finals || [], finals.push(event.final);\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t\tif (proto.hasOwnProperty(listen_key)) {\n\t\t\t\t\tvar listeners = proto[listen_key];\n\t\t\t\t\tfor (var j = listeners.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tlisteners[j].call(this, event, event.value, this);\n\t\t\t\t\t\tif (event.stop) return;\n\t\t\t\t\t\tif (event.final) finals = finals || [], finals.push(event.final);\n\t\t\t\t\t\tcounter = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t}\n\t\t\tif (finals) for (var i = finals.length - 1; i >= 0; i--) {\n\t\t\t\tfinals[i].call(this, event, event.value, this);\n\t\t\t\tif (event.stop) return;\n\t\t\t}\n\t\t} finally {\n\t\t\tthis[lock_key] = false;\n\t\t\tif (counter === 1) {\n\t\t\t\tthis[fast_key] = callfn;\n\t\t\t} else if (counter === 0) {\n\t\t\t\tthis[fast_key] = null;\n\t\t\t}\n\t\t}\n\t};\n\n\t// add a listener to an attribute\n\tthis.addListener = function (key, cb) {\n\t\tif (!this.__lookupSetter__(key)) {\n\t\t\tthis.defineAttribute(key, this[key], true);\n\t\t}\n\t\tvar listen_key = '_listen_' + key;\n\t\tvar fast_key = '_fast_' + key;\n\t\tthis[fast_key] = undefined; // invalidate fast cache\n\t\tvar array;\n\t\tif (!this.hasOwnProperty(listen_key)) array = this[listen_key] = [];else array = this[listen_key];\n\t\tif (array.indexOf(cb) === -1) {\n\t\t\tarray.push(cb);\n\t\t}\n\t};\n\n\t// remove a listener from an attribute, uses the actual function reference to find it\n\t// if you dont pass in a function reference it removes all listeners\n\tthis.removeListener = function (key, cb) {\n\t\tvar listen_key = '_listen_' + key;\n\t\tif (!this.hasOwnProperty(listen_key)) return;\n\t\tvar cbs = this[listen_key];\n\t\tif (cbs) {\n\t\t\tif (cb) {\n\t\t\t\tvar idx = cbs.indexOf(cb);\n\t\t\t\tif (idx !== -1) cbs.splice(idx, 1);\n\t\t\t} else {\n\t\t\t\tcbs.length = 0;\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, check if an attribute has a listener with a .name property set to fnname\n\tthis.hasListenerProp = function (key, prop, value) {\n\t\tvar listen_key = '_listen_' + key;\n\t\tif (!this.hasOwnProperty(listen_key)) return false;\n\t\tvar listeners = this[listen_key];\n\t\tif (!listeners) return false;\n\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\tif (listeners[i][prop] === value) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t// internal, returns true if attribute has any listeners\n\tthis.hasListeners = function (key) {\n\t\tvar listen_key = '_listen_' + key;\n\t\tvar on_key = 'on' + key;\n\t\tif (on_key in this || listen_key in this && this[listen_key].length) return true;\n\t\treturn false;\n\t};\n\n\t// internal, remove all listeners from a node\n\tthis.removeAllListeners = function () {\n\t\tvar keys = Object.keys(this);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (key.indexOf('_listen_') === 0) {\n\t\t\t\tthis[key] = undefined;\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, set the wired function for an attribute\n\tthis.setWiredAttribute = function (key, value) {\n\t\tif (!this.hasOwnProperty('_wiredfns')) this._wiredfns = this._wiredfns ? Object.create(this._wiredfns) : {};\n\t\tthis._wiredfns[key] = value;\n\t\tthis['_wiredfn_' + key] = value;\n\t};\n\n\t// internal, mark an attribute as persistent accross live reload / renders\n\tthis.definePersist = function (arg) {\n\t\tif (!this.hasOwnProperty(\"_persists\")) {\n\n\t\t\tif (this._persists) {\n\t\t\t\tthis._persists = Object.create(this._persists);\n\t\t\t} else {\n\t\t\t\tthis._persists = {};\n\t\t\t}\n\t\t}\n\t\tthis._persists[arg] = 1;\n\t};\n\n\tObject.defineProperty(this, 'style', {\n\t\tget: function get() {\n\t\t\treturn this._style;\n\t\t},\n\t\tset: function set(v) {\n\t\t\tif (!this.hasOwnProperty('_style')) this._style = Object.create(this._style);\n\t\t\tif ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object') {\n\t\t\t\tfor (var key in v) {\n\t\t\t\t\tvar value = v[key];\n\t\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\t\t\tvar base = this._style[key];\n\t\t\t\t\t\tif (!base) this._style[key] = value;else {\n\t\t\t\t\t\t\tvar obj = this._style[key] = Object.create(base);\n\t\t\t\t\t\t\tfor (var subkey in value) {\n\t\t\t\t\t\t\t\tobj[subkey] = value[subkey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._style[key] = v[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof v === 'function') {\n\t\t\t\tv.call(this._style);\n\t\t\t}\n\t\t}\n\t});\n\n\tvar Style = defineDreem.class(function () {\n\n\t\tthis.composeStyle = function () {\n\t\t\t// lets find the highest matching level\n\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\n\t\t\t\tvar match = arguments[i];\n\t\t\t\tif (!match) continue;\n\t\t\t\tvar style = this[match];\n\t\t\t\tif (style) {\n\t\t\t\t\tif (i === 0) return style;\n\t\t\t\t\tif (style._composed) return style;\n\t\t\t\t\tstyle = {};\n\t\t\t\t\t// lets compose a style from the match stack\n\t\t\t\t\tfor (var j = 0; j <= i; j++) {\n\t\t\t\t\t\tvar level = this[arguments[j]];\n\t\t\t\t\t\tif (level) {\n\t\t\t\t\t\t\tfor (var key in level) {\n\t\t\t\t\t\t\t\tstyle[key] = level[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tObject.defineProperty(style, '_composed', { value: 1 });\n\t\t\t\t\tObject.defineProperty(style, '_match', { value: match });\n\n\t\t\t\t\t// lets store it back\n\t\t\t\t\tthis[match] = style;\n\t\t\t\t\treturn style;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.lookup = function (name, props) {\n\t\t\t// lets return a matching style\n\t\t\treturn this.composeStyle('$', '$_' + props.class, name, name + '_' + props.class, name + '_' + props.name);\n\t\t};\n\t});\n\n\tthis._style = new Style();\n\n\tthis.atStyleConstructor = function (original, props, where) {\n\t\t// lets see if we have it in _styles\n\t\tvar name = original.name;\n\n\t\tvar propobj = props && Object.getPrototypeOf(props) === Object.prototype ? props : {};\n\n\t\t// we need to flush this cache on livereload\n\t\t//var cacheid = name + '_' + propobj.class + '_' + propobj.name\n\t\t//var cache = this._style._cache || (this._style._cache = {})\n\n\t\t//var found = cache[cacheid]\n\t\t//if(found) return found\n\t\tvar style = this._style.lookup(name, propobj);\n\n\t\t// find the base class\n\t\tvar base = original;\n\t\tif (this.constructor.outer) base = this.constructor.outer.atStyleConstructor(original, propobj, 'outer');else if (this !== this.composition && this !== this.screen && this.screen) {\n\t\t\tbase = this.screen.atStyleConstructor(original, propobj, 'screen');\n\t\t} else if (this.composition !== this && this.composition) base = this.composition.atStyleConstructor(original, propobj, 'composition');\n\n\t\t// 'quick' out\n\t\tvar found = style && style._base && style._base[name] === base && style._class && style._class[name];\n\t\tif (found) {\n\t\t\treturn (/*cache[cacheid] =*/found\n\t\t\t);\n\t\t}\n\n\t\tif (!style) return (/*cache[cacheid] =*/base\n\t\t);\n\n\t\tif (!style._class) {\n\t\t\tObject.defineProperty(style, '_class', { value: {}, configurable: true });\n\t\t\tObject.defineProperty(style, '_base', { value: {}, configurable: true });\n\t\t}\n\n\t\t// (re)define the class\n\t\tif (style._base[name] !== base || !style._class[name]) {\n\t\t\tvar clsname = base.name + '_' + (where ? where + '_' : '') + (style._match || 'star');\n\t\t\tvar cls = style._class[name] = base.extend(style, original.outer, clsname);\n\t\t\tstyle._base[name] = base;\n\t\t\treturn (/*cache[cacheid] =*/cls\n\t\t\t);\n\t\t}\n\n\t\treturn (/*cache[cacheid] =*/original\n\t\t);\n\t};\n\n\t// pass an object such as {attrname:{type:vec2, value:0}, attrname:vec2(0,1)} to define attributes on an object\n\tObject.defineProperty(this, 'attributes', {\n\t\tget: function get() {\n\t\t\tthrow new Error(\"attribute can only be assigned to\");\n\t\t},\n\t\tset: function set(arg) {\n\t\t\tfor (var key in arg) {\n\t\t\t\tthis.defineAttribute(key, arg[key]);\n\t\t\t}\n\t\t}\n\t});\n\n\t// define listeners {attrname:function(){}}\n\tObject.defineProperty(this, 'listeners', {\n\t\tget: function get() {\n\t\t\tthrow new Error(\"listeners can only be assigned to\");\n\t\t},\n\t\tset: function set(arg) {\n\t\t\tfor (var key in arg) {\n\t\t\t\tthis.adListener(key, arg[key]);\n\t\t\t}\n\t\t}\n\t});\n\t/*\n // define setters {attrname:function(){}}\n Object.defineProperty(this, 'setters', {\n \tget:function(){\n \t\tthrow new Error(\"setter can only be assigned to\")\n \t},\n \tset:function(arg){\n \t\tfor(var key in arg){\n \t\t\tthis['_set_'+key] = arg[key]\n \t\t}\n \t}\n })\n \n // define getters {attrname:function(){}}\n Object.defineProperty(this, 'getters', {\n \tget:function(){\n \t\tthrow new Error(\"getter can only be assigned to\")\n \t},\n \tset:function(arg){\n \t\tfor(var key in arg){\n \t\t\tthis['_get_'+key] = arg[key]\n \t\t}\n \t}\n })\n \t// start animation by assigning keyframes to an attribute {attrname:{1:'red', 2:'green', 3:'blue'}}\n Object.defineProperty(this, 'animate', {\n \tget:function(){ return this.animateAttribute },\n \tset:function(arg){\n \t\tthis.animateAttribute(arg)\n \t}\n })*/\n\n\t// internal, animate an attribute with an animation object see animate\n\tthis.animateAttribute = function (arg) {\n\t\t// count\n\t\tvar arr = [];\n\t\tfor (var key in arg) {\n\t\t\tvar value = arg[key];\n\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\tvar resolve, reject;\n\t\t\t\tvar promise = new Promise(function (res, rej) {\n\t\t\t\t\tresolve = res, reject = rej;\n\t\t\t\t});\n\t\t\t\tpromise.resolve = resolve;\n\t\t\t\tpromise.reject = reject;\n\t\t\t\tarr.push(promise);\n\t\t\t\tthis.startAnimation(key, undefined, value, promise);\n\t\t\t} else {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\tvalue = value.toLowerCase();\n\t\t\t\t\tif (value === 'stop') {\n\t\t\t\t\t\tthis.stopAnimation(key);\n\t\t\t\t\t} else if (value === 'play') {\n\t\t\t\t\t\tthis.playAnimation(key);\n\t\t\t\t\t} else if (value === 'pause') {\n\t\t\t\t\t\tthis.pauseAnimation(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t}\n\t\t}\n\t\tif (arr.length <= 1) return arr[0];\n\t\treturn Promise.all(arr);\n\t};\n\n\t// internal, define an attribute, use the attributes =  api\n\tthis.defineAttribute = function (key, config, always_define) {\n\t\t// lets create an attribute\n\t\tvar is_config = config instanceof Config;\n\t\tvar is_attribute = !always_define && key in this;\n\t\t// use normal value assign\n\n\t\tvar islistener = false;\n\t\tif (key[0] === 'o' && key[1] === 'n') {\n\t\t\tif (this.__lookupSetter__(key.slice(2))) islistener = true;\n\t\t}\n\n\t\tif (!always_define && (is_attribute && !is_config || islistener || typeof config === 'function' && !config.is_wired)) {\n\t\t\t//|| !is_attribute && typeof config === 'function' && !config.is_wired){\n\t\t\tthis[key] = config;\n\t\t\treturn;\n\t\t}\n\n\t\t// autoprocess the config\n\t\tif (is_config) {\n\t\t\tconfig = config.config;\n\t\t} else {\n\t\t\t// its a value\n\t\t\tconfig = { value: config };\n\t\t}\n\t\t// figure out the type\n\t\tif (!is_attribute && !config.type) {\n\t\t\tvar value = config.value;\n\n\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\tif (value && typeof value.struct === 'function') config.type = value.struct;else if (Array.isArray(value)) config.type = Array;else config.type = Object;\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tconfig.type = float;\n\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\tconfig.type = boolean;\n\t\t\t} else if (typeof value === 'function') {\n\t\t\t\tif (!value.is_wired) {\n\t\t\t\t\tconfig.type = Function;\n\t\t\t\t} else {\n\t\t\t\t\t// an undefined wire is automatically a number\n\t\t\t\t\tconfig.value = 0;\n\t\t\t\t\tconfig.type = Number;\n\t\t\t\t}\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tconfig.type = String;\n\t\t\t}\n\t\t}\n\t\tif (config.persist) {\n\t\t\tif (config.alias) throw new Error('Cannot define a persist property ' + key + ' with alias, use the alias attribute ' + config.alias);\n\t\t\tthis.definePersist(key);\n\t\t}\n\n\t\tif (!this.hasOwnProperty('_attributes')) {\n\t\t\tthis._attributes = this._attributes ? Object.create(this._attributes) : {};\n\t\t}\n\t\tif (is_attribute) {\n\t\t\t// extend the config\n\t\t\t//if('type' in config) throw new Error('Cannot redefine type of attribute '+key)\n\t\t\tvar newconfig = Object.create(this._attributes[key]);\n\t\t\tfor (var prop in config) {\n\t\t\t\tnewconfig[prop] = config[prop];\n\t\t\t}\n\t\t\tthis._attributes[key] = newconfig;\n\t\t\tif ('value' in config) this[key] = config.value;\n\t\t\tif ('listeners' in config) {\n\t\t\t\tvar listeners = config.listeners;\n\t\t\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\t\t\tthis.addListener(key, listeners[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar value_key = '_' + key;\n\t\tvar on_key = 'on' + key;\n\t\tvar listen_key = '_listen_' + key;\n\t\tvar animinit_key = '_animinit_' + key;\n\n\t\t//var config_key = '_config_' + key\n\t\tvar get_key = '_get_' + key;\n\t\tvar set_key = '_set_' + key;\n\n\t\tif (!config.group) config.group = this.constructor.name;\n\t\tif (config.animinit) this[animinit_key] = 0;\n\t\tvar init_value = key in this ? this[key] : config.value;\n\n\t\tif (init_value !== undefined) {\n\t\t\tvar type = config.type;\n\t\t\tif (typeof init_value === 'function') {\n\t\t\t\tif (init_value.is_wired) this.setWiredAttribute(key, init_value);else if (type !== Function) {\n\t\t\t\t\t//this.addListener(on_key, init_value)\n\t\t\t\t\tthis[on_key] = init_value;\n\t\t\t\t} else this[value_key] = init_value;\n\t\t\t} else {\n\t\t\t\tif (type && type !== Object && type !== Array && type !== Function) {\n\t\t\t\t\tthis[value_key] = type(init_value);\n\t\t\t\t} else {\n\t\t\t\t\tthis[value_key] = init_value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._attributes[key] = config;\n\n\t\tif (config.listeners) this[listen_key] = config.listeners;\n\n\t\tvar setter;\n\t\t// define attribute gettersetters\n\n\t\t// block attribute emission on objects with an environment thats (stub it)\n\t\tif (config.alias) {\n\t\t\tvar alias_key = '_' + config.alias;\n\t\t\tvar aliasstore_key = '_alias_' + config.alias;\n\t\t\tsetter = function setter(value) {\n\t\t\t\tvar mark;\n\n\t\t\t\tvar config = this._attributes[key];\n\n\t\t\t\tif (this[set_key] !== undefined) value = this[set_key](value);\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tif (value.is_wired) return this.setWiredAttribute(key, value);\n\t\t\t\t\tif (config.type !== Function) {\n\t\t\t\t\t\t//this.addListener(on_key, value)\n\t\t\t\t\t\tthis['_fast_' + key] = undefined;\n\t\t\t\t\t\tthis[on_key] = value;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\t\tif (value instanceof Mark) {\n\t\t\t\t\t\tmark = value.mark;\n\t\t\t\t\t\tvalue = value.value;\n\t\t\t\t\t} else if (value instanceof Config) {\n\t\t\t\t\t\tthis.defineAttribute(key, value);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (value instanceof Animate) {\n\t\t\t\t\t\treturn this.startAnimation(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null && value.atAttributeAssign) {\n\t\t\t\t\tvalue.atAttributeAssign(this, key);\n\t\t\t\t}\n\n\t\t\t\tif (!mark && config.motion) {\n\t\t\t\t\t// lets copy our value in our property\n\t\t\t\t\tthis[value_key] = this[alias_key][config.index];\n\t\t\t\t\tthis.startAnimation(key, value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar store;\n\t\t\t\tif (!this.hasOwnProperty(alias_key)) {\n\t\t\t\t\tstore = this[alias_key];\n\t\t\t\t\tstore = this[alias_key] = store.struct(store);\n\t\t\t\t} else {\n\t\t\t\t\tstore = this[alias_key];\n\t\t\t\t}\n\t\t\t\tvar old = this[value_key];\n\t\t\t\tthis[value_key] = store[config.index] = value;\n\n\t\t\t\t// emit alias\n\t\t\t\tthis.emit(config.alias, { setter: true, via: key, key: config.alias, owner: this, value: this[alias_key], mark: mark });\n\n\t\t\t\tif (this.atAttributeSet !== undefined) this.atAttributeSet(key, value);\n\t\t\t\t// emit self\n\t\t\t\tif (on_key in this || listen_key in this) this.emit(key, { setter: true, key: key, owner: this, old: old, value: value, mark: mark });\n\t\t\t};\n\n\t\t\t// add a listener to the alias\n\t\t\tvar aliasarray = this[aliasstore_key];\n\t\t\tif (!aliasarray) this[aliasstore_key] = aliasarray = [];\n\n\t\t\taliasarray.push(function (value) {\n\t\t\t\tvar old = this[value_key];\n\t\t\t\tvar val = this[value_key] = value[config.index];\n\t\t\t\tif (on_key in this || listen_key in this) this.emit(key, { setter: true, key: key, owner: this, value: val, old: old });\n\t\t\t});\n\t\t\t// initialize value\n\t\t\tthis[value_key] = this[alias_key][config.index];\n\t\t} else {\n\t\t\tvar aliasstore_key = '_alias_' + key;\n\t\t\tsetter = function setter(value) {\n\t\t\t\tvar mark;\n\n\t\t\t\tvar config = this._attributes[key];\n\n\t\t\t\tif (this[set_key] !== undefined) value = this[set_key](value);\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tif (value.is_wired) return this.setWiredAttribute(key, value);\n\t\t\t\t\tif (config.type !== Function) {\n\t\t\t\t\t\t//this.addListener(on_key, value)\n\t\t\t\t\t\tthis['_fast_' + key] = undefined;\n\t\t\t\t\t\tthis[on_key] = value;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\t\tif (value instanceof Mark) {\n\t\t\t\t\t\tmark = value.mark;\n\t\t\t\t\t\tvalue = value.value;\n\t\t\t\t\t} else if (value instanceof Config) {\n\t\t\t\t\t\tthis.defineAttribute(key, value);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (value instanceof Animate) {\n\t\t\t\t\t\treturn this.startAnimation(key, undefined, value.track);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null && value.atAttributeAssign) {\n\t\t\t\t\tvalue.atAttributeAssign(this, key);\n\t\t\t\t}\n\n\t\t\t\tvar type = config.type;\n\t\t\t\tif (type) {\n\t\t\t\t\tif (type !== Object && type !== Array && type !== Function) value = type(value);\n\t\t\t\t}\n\n\t\t\t\tif (!mark && (!config.animinit || this[animinit_key]++) && config.motion && this.startAnimation(key, value)) {\n\t\t\t\t\t// store the end value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar old = this[value_key];\n\t\t\t\tthis[value_key] = value;\n\n\t\t\t\tvar aliases = this[aliasstore_key];\n\t\t\t\tif (aliases) {\n\t\t\t\t\tfor (var i = 0; i < aliases.length; i++) {\n\t\t\t\t\t\taliases[i].call(this, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.atAttributeSet !== undefined) this.atAttributeSet(key, value);\n\t\t\t\tif (on_key in this || listen_key in this) this.emit(key, { setter: true, owner: this, key: key, old: old, value: value, mark: mark });\n\t\t\t};\n\t\t}\n\n\t\tsetter.isAttribute = true;\n\t\tObject.defineProperty(this, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\tif (this.atAttributeGet !== undefined) this.atAttributeGet(key);\n\t\t\t\tvar getter = this[get_key];\n\t\t\t\tif (getter !== undefined) return getter();\n\t\t\t\t// lets check if we need to map our stored type\n\t\t\t\t// if we are in motion, we should return the end value\n\t\t\t\treturn this[value_key];\n\t\t\t},\n\t\t\tset: setter\n\t\t});\n\t};\n\n\t// internal, connect a wired attribute up to its listeners\n\tthis.connectWiredAttribute = function (key, initarray) {\n\t\tvar wiredfn_key = '_wiredfn_' + key;\n\t\tvar wiredcl_key = '_wiredcl_' + key;\n\t\tvar wiredfn = this[wiredfn_key];\n\t\tvar ast = onejsparser.parse(wiredfn.toString());\n\t\tvar state = wiredwalker.newState();\n\n\t\twiredwalker.expand(ast, null, state);\n\n\t\tvar bindcall = function () {\n\t\t\tvar deps = bindcall.deps;\n\t\t\tif (deps && !bindcall.initialized) {\n\t\t\t\tbindcall.initialized = true;\n\t\t\t\tfor (var i = 0; i < deps.length; i++) {\n\t\t\t\t\tdeps[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis[key] = this[wiredfn_key].call(this, this[wiredcl_key].find, this.rpc);\n\t\t}.bind(this);\n\n\t\tthis[wiredcl_key] = bindcall;\n\t\tbindcall.find = {};\n\n\t\tfor (var j = 0; j < state.references.length; j++) {\n\t\t\tvar ref = state.references[j];\n\t\t\tvar obj = { 'this': this, 'find': bindcall.find, 'rpc': this.rpc };\n\t\t\tfor (var k = 0; k < ref.length; k++) {\n\n\t\t\t\tvar part = ref[k];\n\t\t\t\tif (k === ref.length - 1) {\n\t\t\t\t\t// lets add a listener\n\t\t\t\t\tif (!obj || !obj.isAttribute || !obj.isAttribute(part)) {\n\t\t\t\t\t\tconsole.error(\"Attribute does not exist: \" + ref.join('.') + \" (at \" + part + \") in wiring \" + this[wiredfn_key].toString());\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tobj.addListener(part, bindcall);\n\n\t\t\t\t\tif (obj.hasWires(part) && !obj.wiredCall(part)) {\n\t\t\t\t\t\tobj.connectWiredAttribute(part);\n\t\t\t\t\t\tif (!bindcall.deps) bindcall.deps = [];\n\t\t\t\t\t\tbindcall.deps.push(obj.wiredCall(part));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar newobj = obj[part];\n\t\t\t\t\tif (!newobj) {\n\t\t\t\t\t\tif (obj === bindcall.find) {\n\t\t\t\t\t\t\t// lets make an alias on this, scan the parent chain\n\t\t\t\t\t\t\tobj = this.find(part);\n\t\t\t\t\t\t\tif (obj) bindcall.find[part] = obj;\n\t\t\t\t\t\t\t/*\n       while(obj){\n       \tif(part in obj){\n       \t\tif(part in this) console.log(\"Aliasing error with \"+part)\n       \t\t//console.log(\"ALIASING\" + part, this)\n       \t\tobj = this[part] = obj[part]\n       \t\tbreak\n       \t}\n       \tobj = obj.parent\n       }*/\n\t\t\t\t\t\t}\n\t\t\t\t\t} else obj = newobj;\n\t\t\t\t\tif (!obj) console.log('Cannot find part ' + part + ' in ' + ref.join('.') + ' in propertybind', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (initarray) initarray.push(bindcall);\n\t};\n\n\t// internal, return a function that can be assigned as a listener to any value, and then re-emit on this as attribute key\n\tthis.emitForward = function (key) {\n\t\treturn function (value) {\n\t\t\tthis.emit(key, value);\n\t\t}.bind(this);\n\t};\n\n\t// internal, connect all wires using the initarray returned by connectWiredAttribute\n\tthis.connectWires = function (initarray, depth) {\n\n\t\tvar immediate = false;\n\t\tif (!initarray) {\n\t\t\tinitarray = [];\n\t\t\timmediate = true;\n\t\t}\n\n\t\tif (this._wiredfns) {\n\t\t\tfor (var key in this._wiredfns) {\n\t\t\t\tthis.connectWiredAttribute(key, initarray);\n\t\t\t}\n\t\t}\n\t\t// lets initialize bindings on all nested classes\n\t\tvar nested = this.constructor.nested;\n\t\tif (nested) for (var name in nested) {\n\t\t\tvar nest = this[name.toLowerCase()];\n\t\t\tif (nest.connectWires) {\n\t\t\t\tnest.connectWires(initarray, depth);\n\t\t\t}\n\t\t}\n\t\tif (immediate === true) {\n\t\t\tfor (var i = 0; i < initarray.length; i++) {\n\t\t\t\tinitarray[i]();\n\t\t\t}\n\t\t}\n\t};\n\n\t// internal, does nothing sofar\n\tthis.disconnectWires = function () {};\n\n\t// internal, used by the attribute setter to start a 'motion' which is an auto-animated attribute\n\tthis.startMotion = function (key, value) {\n\t\tif (!this.screen) return false;\n\t\treturn this.screen.startMotion(this, key, value);\n\t};\n\n\t// internal, create an rpc proxy\n\tthis.createRpcProxy = function (parent) {\n\t\treturn RpcProxy.createFromObject(this, parent);\n\t};\n\n\t// mixin setter API to easily assign mixins using an is: syntax in the constructors\n\tObject.defineProperty(this, 'is', {\n\t\tset: function set(value) {\n\t\t\t// lets copy on value.\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tthis.is = value[i];\n\t\t\t\t}return;\n\t\t\t}\n\t\t\tif (typeof value === 'function') value = value.prototype;\n\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t\t\t\tfor (var key in value) {\n\t\t\t\t\tthis[key] = value[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.hideProperty(Object.keys(this));\n\n\t// internal, always define an init and destroy\n\tthis.attributes = {\n\t\t// the init event, not called when the object is constructed but specifically when it is being initialized by the render\n\t\tinit: Config({ type: Event }),\n\t\t// destroy event, called on all the objects that get dropped by the renderer on a re-render\n\t\tdestroy: Config({ type: Event })\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/node.js\n// module id = 117\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/node.js?");

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Pointer emits events that unify mouse and touch interactions.\n\ndefineDreem.class('$system/base/node', function () {\n\n\tvar TAPSPEED = 150;\n\tvar TAPDIST = 5;\n\n\tthis.atConstructor = function () {};\n\n\t// Internal: Pointer list with helper methods.\n\tvar PointerList = function PointerList() {\n\t\tArray.call(this);\n\t};\n\tPointerList.prototype = Object.create(Array.prototype);\n\tPointerList.prototype.constructor = PointerList;\n\n\t// Internal: Finds first unused id in sorted pointer list\n\tPointerList.prototype.getAvailableId = function () {\n\t\tvar id = 0;\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this[i].id === id) id += 1;\n\t\t}\n\t\treturn id;\n\t};\n\n\t// Internal: Finds closest pointer ID in the list to a specified pointer\n\tPointerList.prototype.getClosest = function (pointer) {\n\t\tvar closest,\n\t\t    dist,\n\t\t    closestdist = Infinity;\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tdist = vec2.distance(pointer.position, this[i].position);\n\t\t\tif (dist < closestdist) {\n\t\t\t\tclosest = this[i];\n\t\t\t\tclosestdist = dist;\n\t\t\t}\n\t\t}\n\t\treturn closest !== undefined ? closest : undefined;\n\t};\n\n\t// Internal: Returns a pointer with specified ID\n\tPointerList.prototype.getById = function (id) {\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this[i].id === id) {\n\t\t\t\treturn this[i];\n\t\t\t}\n\t\t}\n\t};\n\n\t// Internal: Removes specified pointer from the list\n\tPointerList.prototype.removePointer = function (pointer) {\n\t\tfor (var i = this.length; i--;) {\n\t\t\tif (this[i].id === pointer.id) {\n\t\t\t\tthis.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Internal: Adds pointer to the list or replaces it if ID match is found\n\tPointerList.prototype.setPointer = function (pointer) {\n\t\tfor (var i = this.length; i--;) {\n\t\t\tif (this[i].id === pointer.id) {\n\t\t\t\tthis.splice(i, 1, new Pointer(pointer, pointer.id, pointer.view));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.push(new Pointer(pointer, pointer.id, pointer.view));\n\t\tthis.sort(function (a, b) {\n\t\t\tif (a.id < b.id) return -1;\n\t\t\tif (a.id > b.id) return 1;\n\t\t\treturn 0;\n\t\t});\n\t};\n\n\t// Internal: Iterates over all views associated with the pointer list and\n\t// calls specified callback with the view and filtered pointers as arguments\n\tPointerList.prototype.forEachView = function (callback) {\n\t\tvar views = [];\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this[i].view && views.indexOf(this[i].view) == -1) {\n\t\t\t\tviews.push(this[i].view);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < views.length; i++) {\n\t\t\tvar pointers = [];\n\t\t\tfor (var j = 0; j < this.length; j++) {\n\t\t\t\tif (this[j].view === views[i] && pointers.indexOf(this[j]) == -1) {\n\t\t\t\t\tpointers.push(this[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(views[i], pointers);\n\t\t}\n\t};\n\n\t// Internal: Returns pointer object.\n\t// It calculats deltas, min and max is reference pointer is provided.\n\tvar Pointer = function Pointer(pointer, id, view) {\n\t\t// TODO(aki): add start value\n\t\tthis.id = id;\n\t\tthis.view = view;\n\t\tthis.value = pointer.value;\n\t\tthis.position = pointer.position;\n\t\tthis.button = pointer.button;\n\t\tthis.shift = pointer.shift;\n\t\tthis.alt = pointer.alt;\n\t\tthis.ctrl = pointer.ctrl;\n\t\tthis.meta = pointer.meta;\n\t\tthis.touch = pointer.touch;\n\t\tthis.delta = pointer.delta || vec2();\n\t\tthis.min = pointer.min || vec2();\n\t\tthis.max = pointer.max || vec2();\n\t\tthis.dt = pointer.dt || 0;\n\t\tthis.movement = pointer.movement || vec2();\n\t\tthis.isover = pointer.isover;\n\t\tthis.pick = pointer.pick;\n\t\tthis.clicker = pointer.clicker;\n\t\tthis.t = Date.now();\n\t\tif (pointer.wheel !== undefined) this.wheel = pointer.wheel;\n\t};\n\n\tPointer.prototype.addDelta = function (refpointer) {\n\t\tthis.delta = vec2(this.position[0] - refpointer.position[0], this.position[1] - refpointer.position[1]);\n\t\tthis.min = vec2(min(this.position[0], refpointer.position[0]), min(this.position[1], refpointer.position[1]));\n\t\tthis.max = vec2(max(this.position[0], refpointer.position[0]), max(this.position[1], refpointer.position[1]));\n\t\tthis.dt = this.t - refpointer.t;\n\t};\n\n\tPointer.prototype.addMovement = function (refpointer) {\n\t\tthis.movement = vec2(this.position[0] - refpointer.position[0], this.position[1] - refpointer.position[1]);\n\t};\n\n\t// Adds click count to pointer\n\tPointer.prototype.setClicker = function (list) {\n\t\tthis.clicker = 0;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tif (this.t - list[i].t < TAPSPEED * (i + 1)) this.clicker += 1;\n\t\t}\n\t};\n\n\t// TODO(aki): initialize per instance\n\tthis.attributes = {\n\t\t// List of pointers that are captured.\n\t\tfirst: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers at the moment of capture.\n\t\tstart: Config({ type: Array, value: new PointerList() }),\n\t\t// List of captured pointers while moving.\n\t\tmove: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers released from capture.\n\t\tend: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers that satisfy tap criteria at the moment of release.\n\t\ttap: Config({ type: Array, value: new PointerList() }),\n\t\t// List of uncaptured pointers in movinf state (should apply only to mouse).\n\t\thover: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers that entered a view.\n\t\tover: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers that exited a view.\n\t\tout: Config({ type: Array, value: new PointerList() }),\n\t\t// List of pointers that emitted wheel event (should apply only to mouse).\n\t\twheel: Config({ type: Array, value: new PointerList() }),\n\t\t// list of previous taps\n\t\tclickerstash: Config({ type: Array, value: [] })\n\t};\n\n\tthis.emitPointerList = function (pointerlist, eventname) {\n\t\tpointerlist.forEachView(function (view, pointers) {\n\t\t\tpointers.forEach(function (pointer) {\n\t\t\t\t// delete pointer.view\n\t\t\t\tthis.emit(eventname, { view: view, pointer: pointer });\n\t\t\t}.bind(this));\n\t\t\tthis.emit(eventname, { view: view, pointers: pointers });\n\t\t}.bind(this));\n\t};\n\n\t// Internal: emits `start` event.\n\t// TODO(aki): down with button 2 seems to trigger end and tap. Investigate.\n\tthis.setstart = function (pointerlist) {\n\n\t\t// scan for handoff hooks on in flight pointers\n\t\tfor (var i = 0; i < this._start.length; i++) {\n\t\t\tvar start = this._start[i];\n\n\t\t\tif (start.atHandOver) {\n\t\t\t\tvar id = start.atHandOver(pointerlist);\n\t\t\t\tif (id >= 0) {\n\t\t\t\t\t// we got a handoff of a particular pointer\n\t\t\t\t\tpointerlist[id].handovered = start.view;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._start.length = 0;\n\n\t\tvar pick = function (view) {\n\t\t\tvar id = this._first.getAvailableId();\n\t\t\tvar pointer = new Pointer(pointerlist[i], id, view);\n\t\t\t// Add pointer to clicker stash for counting\n\t\t\tthis._clickerstash.unshift(pointer);\n\t\t\tthis._clickerstash.length = min(this._clickerstash.length, 5);\n\t\t\tpointer.setClicker(this._clickerstash);\n\t\t\t// set pointer lists\n\t\t\tthis._start.setPointer(pointer);\n\t\t\tthis._first.setPointer(pointer);\n\t\t\tthis._move.setPointer(pointer);\n\t\t}.bind(this);\n\n\t\tfor (var i = 0; i < pointerlist.length; i++) {\n\t\t\t// if a pointer is handoffed use that view instead\n\t\t\tif (pointerlist[i].handovered) pick(pointerlist[i].handovered);else this.device.pickScreen(pointerlist[i].position, pick, true);\n\t\t}\n\t\tthis.emitPointerList(this._start, 'start');\n\t};\n\n\t// Internal: emits `move` event.\n\tthis.setmove = function (pointerlist) {\n\t\tthis._wheel.length = 0;\n\t\tfor (var i = 0; i < pointerlist.length; i++) {\n\t\t\tvar previous = this._move.getClosest(pointerlist[i]);\n\t\t\tif (!previous) {\n\t\t\t\tconsole.log('pointer lost!');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar start = this._start.getById(previous.id);\n\t\t\tvar first = this._first.getById(previous.id);\n\n\t\t\tvar pointer = new Pointer(pointerlist[i], previous.id, first.view);\n\t\t\tpointer.addDelta(first);\n\t\t\tpointer.addMovement(previous || first);\n\n\t\t\t// emit event hooks\n\t\t\tif (start) {\n\t\t\t\tif (start.pickview) {\n\t\t\t\t\tthis.device.pickScreen(pointerlist[i].position, function (view) {\n\t\t\t\t\t\tpointer.pick = view;\n\t\t\t\t\t}.bind(this), true);\n\t\t\t\t}\n\t\t\t\tif (start.atMove) start.atMove(pointerlist[i], pointerlist[i].value, start);\n\t\t\t}\n\t\t\tthis._move.setPointer(pointer);\n\t\t}\n\t\tthis.emitPointerList(this._move, 'move');\n\t};\n\n\t// Internal: emits `end` event.\n\t// Emits `tap` event if conditions are met.\n\tthis.setend = function (pointerlist) {\n\t\tthis._end.length = 0;\n\t\tthis._tap.length = 0;\n\t\tfor (var i = 0; i < pointerlist.length; i++) {\n\t\t\tvar closest = this._move.getClosest(pointerlist[i]);\n\t\t\tif (!closest) {\n\t\t\t\tconsole.log('pointer lost!');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// emit event hooks\n\t\t\tvar start = this._start.getById(closest.id);\n\t\t\tif (start) {\n\t\t\t\tif (start.atEnd) start.atEnd(pointerlist[i], pointerlist[i].value, start);\n\t\t\t}\n\n\t\t\tthis.device.pickScreen(pointerlist[i].position, function (view) {\n\t\t\t\tvar previous = this._move.getClosest(pointerlist[i]);\n\t\t\t\tvar first = this._first.getById(previous.id);\n\n\t\t\t\tvar pointer = new Pointer(pointerlist[i], previous.id, first.view);\n\t\t\t\tpointer.addDelta(first);\n\t\t\t\tpointer.setClicker(this._clickerstash);\n\t\t\t\tpointer.isover = pointer.view === view;\n\t\t\t\tthis._first.removePointer(first);\n\t\t\t\tthis._end.setPointer(pointer);\n\t\t\t\tthis._move.removePointer(pointer);\n\t\t\t\tif (pointer.dt < TAPSPEED && vec2.len(pointer.delta) < TAPDIST) {\n\t\t\t\t\tthis._tap.setPointer(pointer);\n\t\t\t\t}\n\t\t\t}.bind(this), true);\n\t\t}\n\n\t\tthis.emitPointerList(this._end, 'end');\n\t\tthis.emitPointerList(this._tap, 'tap');\n\t};\n\n\t// Internal: emits `hover` event.\n\tthis.sethover = function (pointerlist) {\n\t\tthis._over.length = 0;\n\t\tthis._out.length = 0;\n\t\tthis.device.pickScreen(pointerlist[0].position, function (view) {\n\t\t\tvar previous = this._hover.getById(0);\n\t\t\tif (previous) previous = new Pointer(previous, 0, previous.view);\n\t\t\tvar pointer = new Pointer(pointerlist[0], 0, view);\n\t\t\tthis._hover.setPointer(pointer);\n\t\t\t// TODO(aki): entering child view triggers out event. Consider adding pointer-events: 'none'\n\t\t\tif (!previous || previous.view !== pointer.view) {\n\t\t\t\tif (pointer.view) {\n\t\t\t\t\tthis._over.setPointer(pointer);\n\t\t\t\t}\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._out.setPointer(previous);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO(aki): fix hover, over, out and drag API\n\t\t\tthis.emitPointerList(this._hover, 'hover');\n\t\t\tthis.emitPointerList(this._over, 'over');\n\t\t\tthis.emitPointerList(this._out, 'out');\n\t\t}.bind(this));\n\t};\n\n\t// TODO(aki): implement over/out on touch start/end\n\t// Internal: emits `over` event.\n\tthis.setover = function () {};\n\n\t// TODO(aki): implement over/out on touch start/end\n\t// Internal: emits `out` event.\n\tthis.setout = function () {};\n\n\t// Internal: emits `wheel` event.\n\tthis.setwheel = function (pointerlist) {\n\t\tvar dist = Infinity;\n\t\t// Hack to prevent screen picking when mouse is not moving\n\t\tif (this._wheel[0]) {\n\t\t\tdist = vec2.distance(pointerlist[0].position, this._wheel[0].position);\n\t\t}\n\t\tif (dist > 0) {\n\t\t\tthis.device.pickScreen(pointerlist[0].position, function (view) {\n\t\t\t\tvar pointer = new Pointer(pointerlist[0], 0, view);\n\t\t\t\tpointer.value = pointer.wheel;\n\t\t\t\tthis._wheel.setPointer(pointer);\n\t\t\t}.bind(this), true);\n\t\t} else {\n\t\t\tvar pointer = new Pointer(pointerlist[0], 0, this._wheel[0].view);\n\t\t\tpointer.value = pointer.wheel;\n\t\t\tthis._wheel.setPointer(pointer);\n\t\t}\n\t\tthis.emitPointerList(this._wheel, 'wheel');\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/pointer.js\n// module id = 118\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/pointer.js?");

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (exports) {\n\n\t// internal, Reactive renderer\n\n\tvar initializing = false;\n\tvar log_render_cause = false;\n\tvar process_list = [];\n\tvar process_timer = undefined;\n\n\tfunction processTimeout() {\n\t\tprocess_timer = undefined;\n\t\tvar pl = process_list;\n\t\tprocess_list = [];\n\t\tfor (var i = 0; i < pl.length; i += 2) {\n\t\t\t//console.log(\"Processing\",pl[i])\n\t\t\tvar node = pl[i + 1],\n\t\t\t    iter = node;\n\n\t\t\tif (log_render_cause) {\n\t\t\t\tconsole.log(\"Re-render caused by \" + pl[i] + \" on \", node);\n\t\t\t}\n\n\t\t\twhile (iter) {\n\t\t\t\tif (iter.destroyed) break;\n\t\t\t\titer = iter.parent;\n\t\t\t}\n\t\t\tif (!iter) exports.process(node, undefined, undefined, true);\n\t\t}\n\t}\n\n\tfunction __atAttributeGet(key) {\n\t\tif (!initializing) {\n\t\t\t//exports.process(this, undefined, undefined, true)\n\t\t\tif (process_list.indexOf(this) === -1) {\n\t\t\t\tprocess_list.push(key, this);\n\t\t\t}\n\t\t\tif (!process_timer) {\n\t\t\t\tprocess_timer = setTimeout(processTimeout, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction atAttributeGet(key) {\n\t\t// lets find out if we already have a listener on it\n\t\tif (this.getAttributeConfig(key).rerender !== false && !this.hasListenerProp(key, 'name', '__atAttributeGet')) {\n\t\t\tthis.addListener(key, __atAttributeGet);\n\t\t}\n\t}\n\n\texports.process = function render(inew_version, old_version, state, rerender, nochild) {\n\n\t\tvar new_version = inew_version;\n\t\tvar is_root = false;\n\n\t\tif (!state) {\n\t\t\tstate = { render_block: [] };\n\t\t\tis_root = true;\n\t\t}\n\n\t\t// call connect wires before\n\t\tif (!rerender) {\n\t\t\tvar wires = [];\n\t\t\tnew_version.connectWires(wires);\n\t\t\tinitializing = true;\n\t\t\tfor (var i = 0; i < wires.length; i++) {\n\t\t\t\twires[i]();\n\t\t\t}\n\t\t\tinitializing = false;\n\t\t}\n\n\t\tvar old_children = old_version ? old_version.children : undefined;\n\n\t\t// lets call init only when not already called\n\t\tif (!rerender) {\n\t\t\tif (old_version && old_version._persists && new_version._persists) {\n\t\t\t\tfor (var key in old_version._persists) {\n\t\t\t\t\tif (!(key in new_version._persists)) continue;\n\t\t\t\t\t// we should set it using a special emit\n\t\t\t\t\tvar value = old_version[key];\n\t\t\t\t\tnew_version['_' + key] = old_version[key];\n\t\t\t\t\tnew_version.emit(key, { type: 'persist', owner: new_version, key: key, value: value });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (new_version.atAnimate) new_version.screen.device.animate_hooks.push(new_version);\n\t\t\tif (old_version) old_version.old_flag = true;\n\t\t\tif (new_version.atViewInit) new_version.atViewInit(old_version);\n\t\t\tnew_version.emit('init', old_version); // old_version && old_version.constructor == new_version.constructor? old_version: undefined)\n\t\t} else {\n\t\t\told_children = new_version.children;\n\t\t}\n\n\t\t// lets only do this if we have a render function\n\t\tif (new_version.render) {\n\t\t\t// then call render\n\n\t\t\t// store the attribute dependencies\n\t\t\tnew_version.atAttributeGet = atAttributeGet;\n\t\t\tnew_version.rerender = __atAttributeGet;\n\n\t\t\t// lets check if object.constructor  a module, ifso\n\t\t\tif (new_version.classroot === undefined) {\n\t\t\t\tnew_version.classroot = new_version;\n\t\t\t\t//console.log(object)\n\t\t\t}\n\n\t\t\tdefineDreem.atConstructor = new_version.atStyleConstructor.bind(new_version);\n\n\t\t\tnew_version.children = new_version.render();\n\n\t\t\tdefineDreem.atConstructor = undefined;\n\t\t\tnew_version.atAttributeGet = undefined;\n\t\t} else {\n\t\t\tnew_version.children = new_version.constructor_children;\n\t\t}\n\n\t\tif (!Array.isArray(new_version.children)) {\n\t\t\tif (new_version.children) new_version.children = [new_version.children];else new_version.children = [];\n\t\t}\n\n\t\tif (new_version.atRender) new_version.atRender();\n\n\t\tif (new_version._viewport) {\n\t\t\t// set up a new layer\n\t\t\tnew_version.parent_viewport = new_version;\n\t\t\tnew_version.child_viewport_list = [];\n\t\t\tif (!rerender && new_version.parent && new_version.parent.parent_viewport) {\n\t\t\t\tnew_version.parent.parent_viewport.child_viewport_list.push(new_version);\n\t\t\t}\n\t\t}\n\t\t// what we need to do, is\n\n\t\tvar new_children = new_version.children;\n\n\t\tif (!nochild && new_children) for (var i = 0; i < new_children.length; i++) {\n\t\t\tvar new_child = new_children[i];\n\t\t\tif (Array.isArray(new_child)) {\n\t\t\t\t// splice in the children\n\t\t\t\tvar args = Array.prototype.slice.call(new_child);\n\t\t\t\targs.unshift(1);\n\t\t\t\targs.unshift(i);\n\t\t\t\tArray.prototype.splice.apply(new_children, args);\n\t\t\t\ti--; // hop back one i so we repeat\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar old_child = undefined;\n\t\t\tif (old_children) {\n\t\t\t\told_child = old_children[i];\n\t\t\t\tif (new_children.indexOf(old_child) !== -1) old_child = undefined;\n\t\t\t}\n\t\t\tvar childreuse = false;\n\t\t\tif (new_child.parent) {\n\t\t\t\tchildreuse = true;\n\t\t\t}\n\t\t\t//var name = new_child.name\n\t\t\t//if(name !== undefined && !(name in new_version)) new_version[name] = new_child\n\n\t\t\tnew_child.parent = new_version;\n\t\t\tnew_child.screen = new_version.screen;\n\t\t\tnew_child.rpc = new_version.rpc;\n\t\t\tnew_child.parent_viewport = new_version.parent_viewport;\n\t\t\tnew_children[i] = render(new_child, old_child, state, childreuse);\n\t\t\tif (new_version.atChildRendered) new_version.atChildRendered(new_child);\n\t\t}\n\n\t\tif (new_version.atChildrenRendered) new_version.atChildrenRendered();\n\n\t\tif (old_children) for (; i < old_children.length; i++) {\n\t\t\tvar child = old_children[i];\n\t\t\tchild.destroyed = true;\n\t\t\tchild.atViewDestroy();\n\t\t\tchild.emit('destroy');\n\t\t}\n\n\t\tif (old_version && !rerender) {\n\t\t\told_version.destroyed = true;\n\t\t\t// remove draw hook\n\t\t\tif (old_version.atAnimate) {\n\t\t\t\tvar id = old_version.screen.device.animate_hooks.indexOf(old_version);\n\t\t\t\tif (id !== -1) old_version.screen.device.animate_hooks.splice(id, 1);\n\t\t\t}\n\t\t\told_version.atViewDestroy();\n\t\t\told_version.emit('destroy');\n\t\t}\n\n\t\tif (is_root) {\n\n\t\t\t// signal to our device we have a newly rendered node\n\t\t\tif (new_version.screen) {\n\t\t\t\tnew_version.screen.device.atNewlyRendered(new_version);\n\t\t\t}\n\t\t}\n\n\t\treturn new_version;\n\t};\n\n\texports.dump = function (node, depth) {\n\t\tvar ret = '';\n\t\tif (!depth) depth = '';\n\t\tret += depth + node.name + ': ' + node.constructor.name;\n\t\tvar outer = node.outer;\n\t\twhile (outer) {\n\t\t\tret += \" - \" + outer.constructor.name;\n\t\t\touter = outer.outer;\n\t\t}\n\t\tif (node.children) for (var i = 0; i < node.children.length; i++) {\n\t\t\tret += \"\\n\";\n\t\t\tret += this.dump(node.children[i], depth + '-');\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/render.js\n// module id = 119\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/render.js?");

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tvar OneJSParser = requireDreem('$system/parse/onejsparser');\n\tvar GLSLGen = requireDreem('./glslgen');\n\tvar gltypes = requireDreem('./gltypes');\n\tvar dump = requireDreem('$system/parse/astdumper');\n\tvar astdef = requireDreem('$system/parse/onejsdef');\n\n\t//this.default_texture = GLTexture.fromArray(new Float32Array(4*4*4), 4,4)\n\n\tthis.noise = requireDreem('$system/shaderlib/noiselib');\n\tthis.pal = requireDreem('$system/shaderlib/palettelib');\n\tthis.shape = requireDreem('$system/shaderlib/shapelib');\n\tthis.math = requireDreem('$system/shaderlib/mathlib');\n\tthis.demo = requireDreem('$system/shaderlib/demolib');\n\tthis.material = requireDreem('$system/shaderlib/materiallib');\n\tthis.colorlib = requireDreem('$system/shaderlib/colorlib');\n\n\tthis.RAD = '1';\n\tthis.DEG = '0.017453292519943295';\n\tthis.PI = '3.141592653589793';\n\tthis.PI2 = '6.283185307179586';\n\tthis.E = '2.718281828459045';\n\tthis.LN2 = '0.6931471805599453';\n\tthis.LN10 = '2.302585092994046';\n\tthis.LOG2E = '1.4426950408889634';\n\tthis.LOG10E = '0.4342944819032518';\n\tthis.SQRT_1_2 = '0.70710678118654757';\n\tthis.SQRT2 = '1.4142135623730951';\n\n\tthis.visible = true;\n\n\tthis.pickalpha = 0.01;\n\n\t// we can use singletons of these stateless classes\n\tvar onejsparser = new OneJSParser();\n\tonejsparser.parser_cache = {};\n\tvar glslgen = new GLSLGen();\n\n\tthis._atConstructor = function () {\n\t\tthis.view = this.outer;\n\t};\n\n\tthis.set_precision = 'precision highp float;\\n';\n\tthis.set_extensions = '#extension GL_OES_standard_derivatives : enable\\n';\n\n\tthis.compileHeader = function () {\n\t\tvar ret = '';\n\t\tif (this.set_extensions) ret += this.set_extensions;\n\t\tif (this.set_precision) ret += this.set_precision;\n\t\treturn ret + '\\n';\n\t};\n\n\tthis.compileAttributes = function (vtxattr, pixattr) {\n\t\tvar ret = '';\n\t\tvar attr = {};\n\t\tif (vtxattr) for (var key in vtxattr) {\n\t\t\tvar gltype = gltypes.getType(vtxattr[key]);\n\t\t\tret += 'attribute ' + gltype + ' _' + key + ';\\n';\n\t\t\tattr[key] = gltype;\n\t\t}\n\t\tif (pixattr) for (var key in pixattr) {\n\t\t\tif (!(key in vtxattr)) {\n\t\t\t\tvar gltype = gltypes.getType(pixattr[key]);\n\t\t\t\tret += 'attribute ' + gltype + ' _' + key + ';\\n';\n\t\t\t\tattr[key] = gltype;\n\t\t\t}\n\t\t}for (var key in attr) {\n\t\t\tvar gltype = attr[key];\n\t\t\t// ok so if key is not in pixattr, its a normal one\n\t\t\tif (!pixattr || !(key in pixattr)) {\n\t\t\t\tret += gltype + ' ' + key + ';\\n';\n\t\t\t} else {\n\t\t\t\tret += 'varying ' + gltype + ' ' + key + ';\\n';\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.compileAttribRename = function (vtxattr, pixattr) {\n\t\tvar ret = '';\n\t\tif (vtxattr) for (var key in vtxattr) {\n\t\t\tret += '\\t' + key + ' =  _' + key + ';\\n';\n\t\t}\n\t\tif (pixattr) for (var key in pixattr) {\n\t\t\tif (!(key in vtxattr)) {\n\t\t\t\tret += '\\t' + key + ' =  _' + key + ';\\n';\n\t\t\t}\n\t\t}return ret;\n\t};\n\n\tthis.compileVaryings = function (varyings, name) {\n\t\tvar ret = '';\n\t\tfor (var key in varyings) {\n\t\t\tvar gltype = gltypes.getType(varyings[key]);\n\t\t\tret += 'varying ' + gltype + ' ' + key + ';\\n';\n\t\t}\n\t\tif (ret) ret = '//------------------- ' + name + ' -------------------\\n' + ret + '\\n';\n\t\treturn ret;\n\t};\n\n\tthis.compileUniforms = function (uniforms) {\n\t\tvar ret = '';\n\t\tfor (var key in uniforms) {\n\t\t\tvar gltype = gltypes.getType(uniforms[key]);\n\t\t\tret += 'uniform ' + gltype + ' _' + key + ';\\n';\n\t\t\tret += gltype + ' ' + key + ';\\n';\n\t\t}\n\t\tif (ret) ret = '//------------------- Uniforms -------------------\\n' + ret + '\\n';\n\t\treturn ret;\n\t};\n\n\tthis.compileUniformRename = function (uniforms) {\n\t\tvar ret = '';\n\t\tfor (var key in uniforms) {\n\t\t\tret += '\\t' + key + ' = _' + key + ';\\n';\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.compileFunctions = function (call, mask) {\n\t\tvar ret = '';\n\t\tvar init;\n\t\tif (!mask) mask = {}, init = true;\n\t\tif (call.name in mask) return '';\n\t\tmask[call.name] = 1;\n\t\t// output dependencies first\n\t\tfor (var key in call.deps) {\n\t\t\tvar dep = call.deps[key];\n\t\t\tret += this.compileFunctions(dep, mask);\n\t\t}\n\t\tif (call.code) ret += '\\n' + call.code + '\\n';\n\t\tif (init) ret = '//------------------- Functions -------------------' + ret + '\\n';\n\t\treturn ret;\n\t};\n\n\tthis.compileTextures = function (textures) {\n\t\tvar ret = '';\n\t\tfor (var key in textures) {\n\t\t\tret += 'uniform sampler2D ' + key + ';\\n';\n\t\t}\n\t\tif (ret) ret = '//------------------- Textures -------------------\\n' + ret + '\\n';\n\t\treturn ret;\n\t};\n\n\tthis.compileStructs = function (structs) {\n\t\tvar ret = '';\n\t\tfor (var key in structs) {\n\t\t\tvar struct = structs[key];\n\t\t\t// ok so.. we need to write the struct\n\t\t\tret += 'struct ' + key + '{\\n';\n\t\t\tvar defs = struct.def;\n\t\t\tfor (var slotname in defs) {\n\t\t\t\tvar slot = defs[slotname];\n\t\t\t\tif (typeof slot === 'function') {\n\t\t\t\t\tret += '\\t' + gltypes.getType(slot) + ' ' + slotname + ';\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\tret += '};\\n';\n\t\t}\n\t\tif (ret) ret = '\\n//------------------- Structs -------------------\\n' + ret + '\\n';\n\t\treturn ret;\n\t};\n\n\tthis.mapUniforms = function (gl, shader, uniforms, uniset, unilocs) {\n\t\tfor (var key in uniforms) {\n\t\t\tif (!uniset[key]) {\n\t\t\t\tvar type = gltypes.getType(uniforms[key]);\n\t\t\t\tuniset[key] = gltypes.uniforms[type];\n\t\t\t\tvar loc = unilocs[key] = {\n\t\t\t\t\ttype: type,\n\t\t\t\t\tloc: gl.getUniformLocation(shader, '_' + key)\n\t\t\t\t};\n\t\t\t\tif (key.indexOf('_DOT_') !== -1) loc.split = key.split(/_DOT_/);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.mapTextures = function (gl, shader, textures, texlocs) {\n\t\tfor (var key in textures) {\n\t\t\tvar tex = textures[key];\n\t\t\tvar loc = texlocs[key] = {\n\t\t\t\tloc: gl.getUniformLocation(shader, key),\n\t\t\t\tsamplerdef: tex.samplerdef,\n\t\t\t\tsamplerid: tex.samplerid,\n\t\t\t\tname: tex.name\n\t\t\t};\n\t\t\tif (tex.name.indexOf('_DOT_') !== -1) loc.split = tex.name.split(/_DOT_/);\n\t\t}\n\t};\n\n\tthis.mapAttributes = function (gl, shader, attributes, attrlocs, context) {\n\t\tfor (var key in attributes) {\n\t\t\tvar loc = attrlocs[key] = {\n\t\t\t\tloc: gl.getAttribLocation(shader, '_' + key)\n\t\t\t};\n\t\t\tif (key.indexOf('_DOT_') !== -1) {\n\t\t\t\t// okay lets look up the type\n\t\t\t\tvar split = key.split(/_DOT_/);\n\t\t\t\t// ok so we need to look up split[0] on context\n\t\t\t\tvar name = loc.name = split[0];\n\t\t\t\tvar geom = context[name];\n\t\t\t\tvar last = geom.struct;\n\t\t\t\tvar offset = 0;\n\t\t\t\tfor (var i = 1; i < split.length; i++) {\n\t\t\t\t\t// lets find split on our struct\n\t\t\t\t\tvar info = last.keyInfo(split[i]);\n\t\t\t\t\toffset += info.offset;\n\t\t\t\t\tlast = info.type;\n\t\t\t\t}\n\t\t\t\tif (!last) throw new Error('Cannot find attribute ' + key);\n\t\t\t\tloc.slots = last.slots;\n\t\t\t\tloc.offset = offset;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.annotateLines = function (text) {\n\t\tvar lines = text.split(/\\n/);\n\t\tvar ret = '';\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tret += i + 1 + ':  ' + lines[i] + '\\n';\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.toVec4 = function (str, ast, str2, ast2) {\n\t\tif (ast.infer === vec4) {\n\t\t\tif (ast2 && ast2.infer === float32) {\n\t\t\t\treturn '(' + str + ')*vec4(1.,1.,1.,' + str2 + ')';\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\tif (ast.infer === vec3) {\n\t\t\tif (ast2 && ast2.infer === float32) {\n\t\t\t\treturn 'vec4(' + str + ',' + str2 + ')';\n\t\t\t}\n\t\t\treturn 'vec4(' + str + ',1.)';\n\t\t}\n\t\tif (ast.infer === vec2) return 'vec4(' + str + ',0.,1.)';\n\t\tif (ast.infer === float32) return '(' + str + ').xxxx';\n\t\treturn str;\n\t};\n\n\tthis.decodeBlendFactor = function (node, key) {\n\t\tvar gl = gltypes.gl;\n\t\tif (node.type == 'Id') return gl.ONE;\n\t\tif (node.type == 'Binary') {\n\t\t\tvar factor = node.left;\n\t\t\tif (node.right.name != key) throw new Error('Blend equation needs to have either pixel or frame on the right side of the *');\n\t\t\tif (factor.type == 'Binary') {\n\t\t\t\t// its a one minus situation\n\t\t\t\tif (factor.op != '-' || factor.left.type != 'Value' || factor.left.value != 1) throw new Error('Invalid blending (only 1- supported)');\n\t\t\t\tvar name = factor.right.name;\n\t\t\t\tif (name === 'src_alpha') return gl.ONE_MINUS_SRC_ALPHA;\n\t\t\t\tif (name === 'src_color') return gl.ONE_MINUS_SRC_COLOR;\n\t\t\t\tif (name === 'dst_color') return gl.ONE_MINUS_DST_COLOR;\n\t\t\t\tif (name === 'dst_alpha') return gl.ONE_MINUS_DST_ALPHA;\n\t\t\t\tif (name === 'constant_color') return GL.ONE_MINUS_CONSTANT_COLOR;\n\t\t\t\tif (name === 'constant_alpha') return GL.ONE_MINUS_CONSTANT_ALPHA;\n\t\t\t\tthrow new Error('implement one minus mode');\n\t\t\t}\n\t\t\tif (factor.type != 'Id') throw new Error('Invalid blending (factor not an Id)');\n\t\t\tvar name = factor.name;\n\t\t\tif (name === 'src_alpha') return gl.SRC_ALPHA;\n\t\t\tif (name === 'src_color') return gl.SRC_COLOR;\n\t\t\tif (name === 'dst_color') return gl.DST_COLOR;\n\t\t\tif (name === 'dst_alpha') return gl.DST_ALPHA;\n\t\t\tif (name === 'constant_color') return GL.CONSTANT_COLOR;\n\t\t\tif (name === 'constant_alpha') return GL.CONSTANT_ALPHA;\n\t\t\t// todo constant color and constant alpha\n\t\t}\n\t\tthrow new Error('Invalid blending factor (node type invalid)');\n\t};\n\n\tthis.decodeBlendEquation = function (eq, value) {\n\t\tvar gl = gltypes.gl;\n\t\tvar out = { original: value };\n\t\tif (!eq) return out;\n\t\tif (eq.type == 'Binary' && (eq.op == '+' || eq.op == '-')) {\n\t\t\t// its the main equation\n\t\t\tvar left = eq.left;\n\t\t\tvar right = eq.right;\n\n\t\t\tif (eq.op == '+') out.op = gl.FUNC_ADD;else if (eq.op == '-') out.op = gl.FUNC_SUBTRACT;\n\n\t\t\tif (left.type == 'Id' && left.name == 'src_color' || left.type == 'Binary' && left.right.name == 'src_color') {\n\t\t\t\tleft = eq.right, right = eq.left;\n\t\t\t\tif (eq.op == '-') out.op = gl.FUNC_REVERSE_SUBTRACT;\n\t\t\t}\n\t\t\t// left should be frame, right should be pixel\n\t\t\tout.dst = this.decodeBlendFactor(left, 'dst_color');\n\t\t\tout.src = this.decodeBlendFactor(right, 'src_color');\n\t\t} else if (eq.type == 'Binary' && eq.op == '*') {\n\t\t\t// its a single mul\n\t\t\tout.op = gl.FUNC_ADD;\n\t\t\t// the right side needs to be either frame or pixel\n\t\t\tif (eq.right.name == 'dst_color') {\n\t\t\t\tout.src = gl.ZERO;\n\t\t\t\tout.dst = this.decodeBlendFactor(eq, 'dst_color');\n\t\t\t} else if (eq.right.name == 'src_color') {\n\t\t\t\tout.dst = gl.ZERO;\n\t\t\t\tout.src = this.decodeBlendFactor(eq, 'src_color');\n\t\t\t} else throw new Error('Blend equation needs to have either pixel or frame on the right side of the *');\n\t\t} else if (eq.type == 'Id') {\n\t\t\tout.op = gl.FUNC_ADD;\n\t\t\tif (eq.name == 'dst_color') {\n\t\t\t\tout.src = gl.ZERO;\n\t\t\t\tout.dst = gl.ONE;\n\t\t\t} else if (eq.name == 'src_color') {\n\t\t\t\tout.src = gl.ONE;\n\t\t\t\tout.dst = gl.ZERO;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Blend equation invalid (not frame or pixel)');\n\t\t\t}\n\t\t} else throw new Error('Blend equation invalid (main type) ' + eq.type + ' ' + eq.op);\n\t\treturn out;\n\t};\n\n\tthis.decodeDepthEquation = function (eq, value) {\n\t\tvar out = { original: value, func: 0 };\n\t\tif (!eq) return out;\n\t\tif (eq.type === 'Id' && eq.name === 'disabled') {\n\t\t\tout.func = 1;\n\t\t\treturn out;\n\t\t}\n\t\tif (eq.type == 'Logic') {\n\t\t\tif (eq.left.name == 'src_depth' && eq.right.name == 'dst_depth') {\n\t\t\t\tout.func = gltypes.compare[eq.op];\n\t\t\t\treturn out;\n\t\t\t} else if (eq.left.name == 'src_depth' && eq.right.name == 'dst_depth') {\n\t\t\t\tout.func = gltypes.complement[eq.op];\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('depth eqation not in \"src_depth < dst_depth\" format');\n\t};\n\n\tthis.decodeStencilEquation = function (gl, eq, value) {\n\t\tif (!eq) return {};else if (eq.type == 'Value') {}\n\t};\n\tvar blend_eq_cache = {};\n\t// lets define the blending equation setters\n\tObject.defineProperty(this, 'color_blend', {\n\t\tget: function get() {\n\t\t\treturn this.color_blend_eq && this.color_blend_eq.original;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis.color_blend_eq = blend_eq_cache[value] || (blend_eq_cache[value] = this.decodeBlendEquation(onejsparser.parse(value).steps[0], value));\n\t\t}\n\t});\n\n\tObject.defineProperty(this, 'alpha_blend', {\n\t\tget: function get() {\n\t\t\treturn this.alpha_blend_eq && this.alpha_blend_eq.original;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis.alpha_blend_eq = blend_eq_cache[value] || (blend_eq_cache[value] = this.decodeBlendEquation(onejsparser.parse(value).steps[0], value));\n\t\t}\n\t});\n\n\tvar depth_eq_cache = {};\n\tObject.defineProperty(this, 'depth_test', {\n\t\tget: function get() {\n\t\t\treturn this.depth_test_eq && this.depth_test_eq.original;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis.depth_test_eq = depth_eq_cache[value] || (depth_eq_cache[value] = this.decodeDepthEquation(onejsparser.parse(value).steps[0], value));\n\t\t}\n\t});\n\n\tthis.alpha_blend = '';\n\t//this.depth_test = 'src_depth > dst_depth'\n\tthis.depth_test = '';\n\tthis.depth_mask = true;\n\tthis.color_blend = '(1 - src_alpha) * dst_color + src_alpha * src_color';\n\n\tthis.alpha = '';\n\tthis.color = vec4(0, 1, 0, 1);\n\n\tthis.position = function () {\n\t\treturn vec4(0, 0, 0, 0);\n\t};\n\n\tthis.has_pick = true;\n\tthis.update_dirty = true;\n\n\tthis.reupdate = function () {\n\t\tif (!this.update_dirty) {\n\t\t\tthis.update_dirty = true;\n\t\t\tif (this.view && !this.view.update_dirty) {\n\t\t\t\tthis.view.update_dirty = true;\n\t\t\t\tthis.view.redraw();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar ignore_compare = {\n\t\touter: 1,\n\t\tview: 1,\n\t\tshadername: 1,\n\t\torder: 1,\n\t\tshader: 1,\n\t\tupdate_dirty: 1,\n\t\tdirty_props: 1,\n\t\tpix_state: 1,\n\t\tvtx_state: 1,\n\t\t_view_listeners: 1,\n\t\tpickguid: 1\n\t};\n\n\tthis.isShaderEqual = function (prevshader, view, prev) {\n\t\t// lets compare the prevshader.view vs my view\n\t\tvar array = prevshader.view_functions;\n\t\tif (array) for (var i = 0; i < array.length; i++) {\n\t\t\tvar key = array[i];\n\t\t\tvar vfn = view[key],\n\t\t\t    pfn = prev[key];\n\t\t\tif (!vfn || !pfn || vfn.toString() !== pfn.toString()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (var key in this) {\n\t\t\tif (key in ignore_compare) continue;\n\t\t\tif (this.__lookupSetter__(key)) continue;\n\t\t\t// we also have to ignore geometry..\n\n\t\t\tvar value = this[key];\n\t\t\tvar other = prevshader[key];\n\t\t\t// check type\n\t\t\tif (!(value && value.struct && !value.struct.equals || // geometry object\n\t\t\tvalue && value.struct && other && other.struct && value.struct.equals && value.struct.equals(value, other) || // vector type\n\t\t\ttypeof value === 'function' && typeof other === 'function' && value.toString() === other.toString() || value === other)) {\n\t\t\t\t// function\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.monitorCompiledProperty = function (name) {\n\t\tif (this.__lookupSetter__(name)) return;\n\t\tvar _get = '_' + name;\n\t\tthis[_get] = this[name];\n\t\tObject.defineProperty(this, name, {\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t\tget: function get() {\n\t\t\t\treturn this[_get];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[_get] === value) return;\n\t\t\t\tthis.dirty = true;\n\t\t\t\tif (!this.hasOwnProperty('dirty_props')) this.dirty_props = [];\n\t\t\t\tthis.dirty_props.push(name);\n\t\t\t\t// trigger a recompile\n\t\t\t\tif (this.hasOwnProperty('shader')) this.shader = undefined;\n\t\t\t\tthis[_get] = value;\n\t\t\t}\n\t\t});\n\t};\n\n\tthis.getLocations = function (gl, shader, vtx_state, pix_state) {\n\t\t// get uniform locations\n\t\tvar uniset = shader.uniset = {};\n\t\tvar unilocs = shader.unilocs = {};\n\t\tvar refattr = shader.refattr = {};\n\t\tfor (var key in vtx_state.reference_is_attr) {\n\t\t\trefattr[key] = 1;\n\t\t}for (var key in pix_state.reference_is_attr) {\n\t\t\trefattr[key] = 1;\n\t\t}this.mapUniforms(gl, shader, vtx_state.uniforms, uniset, unilocs);\n\t\tthis.mapUniforms(gl, shader, pix_state.uniforms, uniset, unilocs);\n\n\t\t// lets get sampler2D uniforms\n\t\tvar texlocs = shader.texlocs = {};\n\t\tthis.mapTextures(gl, shader, vtx_state.textures, texlocs);\n\t\tthis.mapTextures(gl, shader, pix_state.textures, texlocs);\n\n\t\t// get attribute locations\n\t\tvar attrlocs = shader.attrlocs = {};\n\t\tthis.mapAttributes(gl, shader, vtx_state.attributes, attrlocs, this);\n\t\tthis.mapAttributes(gl, shader, pix_state.attributes, attrlocs, this);\n\t};\n\n\t// compile the shader\n\tthis.compile = function (gldevice) {\n\n\t\tif (gldevice && this.dirty === false) {\n\t\t\t// lets walk up the prototype chain till we hit dirty === false\n\n\t\t\tvar proto = this;\n\t\t\twhile (!proto.hasOwnProperty('dirty')) {\n\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t}\n\t\t\tif (!proto.hasOwnProperty('shader')) {\n\t\t\t\tthis.shader = proto.shader = this.compileShader(gldevice);\n\t\t\t} else {\n\t\t\t\tthis.shader = proto.shader;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// lets run the type inferencer on the pixel shader\n\n\t\tvar vtx_ast = onejsparser.parse(this.position).steps[0];\n\t\tif (vtx_ast.type == 'Function') vtx_ast = onejsparser.parse('position()').steps[0];\n\t\t// ok lets run the vertex codegen.\n\t\tvar vtx_state = glslgen.newState(this);\n\n\t\tvar vtx_code = glslgen.expand(vtx_ast, undefined, vtx_state);\n\t\t// pixel\n\t\tvar pix_state = glslgen.newState(this, vtx_state.varyings);\n\n\t\t// support both immediate and expression color\n\t\tif (this.color === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (_typeof(this.color) === 'object') {\n\t\t\tif (this.color.length == 3) var pix_ast = { infer: vec3 };else var pix_ast = { infer: vec4 };\n\t\t\tvar pix_code = '_color';\n\t\t\tpix_state.uniforms.color = pix_ast.infer;\n\t\t} else {\n\t\t\tvar pix_ast = onejsparser.parse(this.color).steps[0];\n\t\t\tif (pix_ast.type == 'Function') pix_ast = onejsparser.parse('color()').steps[0];\n\t\t\tvar pix_code = glslgen.expand(pix_ast, undefined, pix_state);\n\t\t}\n\n\t\t// support imediate alpha value and alpha expressions\n\t\tif (typeof this.alpha === 'number') {\n\t\t\tpix_state.uniforms.alpha = float32;\n\t\t\tvar alpha_ast = { infer: float32 };\n\t\t\tvar alpha_code = '_alpha';\n\t\t} else {\n\t\t\tvar alpha_ast = onejsparser.parse(this.alpha).steps[0];\n\t\t\tvar alpha_code = '';\n\t\t\tif (alpha_ast && alpha_ast.type == 'Function') alpha_ast = onejsparser.parse('alpha()').steps[0];\n\t\t\tif (alpha_ast) {\n\t\t\t\talpha_code = glslgen.expand(alpha_ast, undefined, pix_state);\n\t\t\t}\n\t\t}\n\t\tvar vtx = '';\n\n\t\t// if we have attributes in the pixelshader, we have to forward em\n\t\t// what we can do is if we have pix_attr we make them varying\n\n\t\t// lets generate the vertex shader\n\t\tvtx += this.compileHeader();\n\t\tvtx += this.compileStructs(vtx_state.structs);\n\t\tvtx += this.compileAttributes(vtx_state.attributes, pix_state.attributes);\n\t\tvtx += this.compileVaryings(vtx_state.varyings, 'Varyings');\n\t\tvtx += this.compileUniforms(vtx_state.uniforms);\n\t\tvtx += this.compileTextures(vtx_state.textures);\n\t\tvtx += this.compileFunctions(vtx_state.call);\n\t\tvtx += '//------------------- Vertex shader main -------------------\\nvoid main(){\\n';\n\t\tvtx += this.compileUniformRename(vtx_state.uniforms);\n\t\tvtx += this.compileAttribRename(vtx_state.attributes, pix_state.attributes);\n\t\tvtx += '\\tgl_Position = ' + this.toVec4(vtx_code, vtx_ast) + ';\\n';\n\t\tvtx += '}\\n';\n\n\t\tvar pix_base = '',\n\t\t    pix_color = '',\n\t\t    pix_pick = '',\n\t\t    pix_debug = '';\n\n\t\tpix_base += this.compileHeader();\n\t\tif (pix_state.debug.type) {\n\t\t\tthis.debug_type = gltypes.getType(pix_state.debug.type);\n\t\t\tpix_base += this.debug_type + ' dbg;\\n';\n\t\t}\n\t\tif (pix_state.dump.set) {\n\t\t\tpix_base += 'vec4 dump;\\n';\n\t\t}\n\n\t\tpix_base += 'float PickGuid = 0.;\\n';\n\t\tpix_base += this.compileStructs(pix_state.structs);\n\t\tpix_base += this.compileVaryings(pix_state.attributes, 'Attribute varyings');\n\t\tpix_base += this.compileVaryings(pix_state.varyings, 'Varyings');\n\t\tpix_base += this.compileUniforms(pix_state.uniforms);\n\t\tpix_base += this.compileTextures(pix_state.textures);\n\t\tpix_base += this.compileFunctions(pix_state.call);\n\n\t\tif (this.debug_type) {\n\t\t\tpix_debug += pix_base;\n\t\t\tpix_debug += '//------------------- Debug Pixel shader main -------------------\\nvoid main(){\\n';\n\t\t\tpix_debug += this.compileUniformRename(pix_state.uniforms);\n\n\t\t\tif (this.debug_type == 'int') pix_debug += '\\tdbg = 20;\\n';\n\t\t\tif (this.debug_type == 'float') pix_debug += '\\tdbg = 20.;\\n';\n\t\t\tif (this.debug_type == 'vec2') pix_debug += '\\tdbg = vec2(.2,.2);\\n';\n\t\t\tif (this.debug_type == 'ivec2') pix_debug += '\\tdbg = ivec2(20,20);\\n';\n\t\t\tif (this.debug_type == 'vec3') pix_debug += '\\tdbg = vec3(.2,.2,.2);\\n';\n\t\t\tif (this.debug_type == 'ivec3') pix_debug += '\\tdbg = ivec3(20,20);\\n';\n\n\t\t\tpix_debug += '\\t' + this.toVec4(pix_code, pix_ast, alpha_code, alpha_ast) + ';\\n';\n\t\t\tif (this.debug_type == 'int') pix_debug += '\\tgl_FragColor = vec4(mod(abs(float(dbg)),256.)/255.,abs(float(dbg/256))/256.,dbg >= 0? 1.: 0.,1.);\\n';\n\t\t\tif (this.debug_type == 'float') pix_debug += '\\tgl_FragColor = vec4(mod(abs(dbg),1.),float(floor(abs(dbg))/256.),dbg >= 0.? 1.: 0.,1.);\\n';\n\t\t\tif (this.debug_type == 'vec2') pix_debug += '\\tgl_FragColor = vec4(clamp(dbg.x,0.,1.),clamp(dbg.y,0.,1.),0,1.);\\n';\n\t\t\tif (this.debug_type == 'ivec2') pix_debug += '\\tgl_FragColor = vec4(float(dbg.x)/255.,float(dbg.y)/255.,0,1.);\\n';\n\t\t\tif (this.debug_type == 'vec3') pix_debug += '\\tgl_FragColor = vec4(clamp(dbg.x,0.,1.),clamp(dbg.y,0.,1.),clamp(dbg.z,0.,1.),1.);\\n';\n\t\t\tif (this.debug_type == 'ivec3') pix_debug += '\\tgl_FragColor = vec4(float(dbg.x)/255.,float(dbg.y)/255.,float(dbg.z)/255.,1.);\\n';\n\t\t\tpix_debug += '}\\n';\n\t\t}\n\n\t\tpix_color += pix_base;\n\t\tpix_color += '//------------------- Color Pixel shader main -------------------\\nvoid main(){\\n';\n\t\tpix_color += this.compileUniformRename(pix_state.uniforms);\n\t\tif (pix_state.dump.set) {\n\t\t\tpix_color += '\\tdump = vec4(.5,.5,.5,1.);\\n';\n\t\t}\n\t\tpix_color += '\\tgl_FragColor = ' + this.toVec4(pix_code, pix_ast, alpha_code, alpha_ast) + ';\\n';\n\t\tif (pix_state.dump.set) {\n\t\t\tpix_color += '\\tgl_FragColor = dump;\\n';\n\t\t}\n\t\tpix_color += '}\\n';\n\n\t\tpix_pick += pix_base;\n\t\tpix_pick += 'uniform vec3 _pickguid;\\n';\n\t\tpix_pick += 'uniform float _pickalpha;\\n';\n\t\tpix_pick += '//------------------- Pick Pixel shader main -------------------\\nvoid main(){\\n';\n\t\tpix_pick += this.compileUniformRename(pix_state.uniforms);\n\t\tpix_pick += '\\tvec4 col = ' + this.toVec4(pix_code, pix_ast, alpha_code, alpha_ast) + ';\\n';\n\t\tpix_pick += '\\tfloat _pickguid2 = (_pickguid.y * 255. + _pickguid.z * 255.*256.) - PickGuid;\\n';\n\t\tpix_pick += '\\tgl_FragColor = vec4(_pickguid.x, mod(_pickguid2,256.)/255., floor(_pickguid2/256.)/255., col.a>_pickalpha?1.:0.);\\n';\n\t\tpix_pick += '}\\n';\n\n\t\tif (this.dump) {\n\t\t\tconsole.log(vtx);\n\t\t\tconsole.log(pix_color);\n\t\t\tconsole.log(pix_pick);\n\t\t\tconsole.log(pix_debug);\n\t\t}\n\t\tvtx_state.code = vtx;\n\t\tpix_state.code_color = pix_color;\n\t\tpix_state.code_pick = pix_pick;\n\t\tpix_state.code_debug = pix_debug;\n\n\t\tthis.pix_state = pix_state;\n\t\tthis.vtx_state = vtx_state;\n\n\t\t//if(!this.device){\n\t\t// turn shader into dirty observed thing\n\t\t// lets look at our local funciton refs\n\t\tfor (var key in vtx_state.functions) {\n\t\t\tvar name = vtx_state.functions[key].undecorated;\n\t\t\tif (name.indexOf('_DOT_') === -1) this.monitorCompiledProperty(name);\n\t\t}\n\n\t\tfor (var key in pix_state.functions) {\n\t\t\tvar name = pix_state.functions[key].undecorated;\n\t\t\tif (name.indexOf('_DOT_') === -1) this.monitorCompiledProperty(name);\n\t\t}\n\n\t\tthis.dirty = false;\n\n\t\tif (!gldevice) {\n\t\t\treturn;\n\t\t}\n\t\tthis.shader = this.compileShader(gldevice);\n\t\tthis.connectWires();\n\t};\n\n\tthis.atExtend = function () {\n\n\t\tvar shader = this;\n\t\tif (defineDreem.$platform === 'nodejs') return;\n\t\t// forwar\td the view reference\n\t\tif (this.constructor.outer) {\n\t\t\tvar recompile_shader = function recompile_shader() {\n\t\t\t\tvar oldcls = this[name];\n\t\t\t\tthis[name] = { dirty: true };\n\t\t\t\tvar newcls = this[name];\n\t\t\t\tfor (var key in this.shader_enable) {\n\t\t\t\t\tif (key !== name && this[key] === oldcls) {\n\t\t\t\t\t\t// overwrite references\n\t\t\t\t\t\tthis[key] = newcls;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.view = this.constructor.outer;\n\t\t\tthis.compile();\n\t\t\t// lets put listeners on our view so when a view uniform modifies it redraws the node\n\t\t\tfor (var key in this.pix_state.uniforms) {\n\t\t\t\tvar parts = key.split('_DOT_');\n\t\t\t\tif (parts.length === 2 && parts[0] === 'view') {\n\t\t\t\t\tif ('_' + parts[1] in this.view) {\n\n\t\t\t\t\t\tthis.view.addListener(parts[1], function () {\n\t\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in this.vtx_state.uniforms) {\n\t\t\t\tvar parts = key.split('_DOT_');\n\t\t\t\tif (parts.length === 2 && parts[0] === 'view') {\n\t\t\t\t\tif ('_' + parts[1] in this.view) {\n\n\t\t\t\t\t\tthis.view.addListener(parts[1], function () {\n\t\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar name = shader.constructor.name;\n\n\t\t\trecompile_shader.shader = name;\n\n\t\t\tthis.view_functions = [];\n\t\t\tfor (var key in this.vtx_state.functions) {\n\t\t\t\tvar parts = key.split('_DOT_');\n\t\t\t\tif (parts.length === 2 && parts[0] === 'view') {\n\t\t\t\t\tvar left = parts[1].split('_T_')[0];\n\t\t\t\t\t// ok lets hook this thing to invalidate our shader\n\t\t\t\t\tif (!this.view.hasListenerProp(left, 'shader', name)) {\n\t\t\t\t\t\tthis.view_functions.push(left);\n\t\t\t\t\t\tthis.view.addListener(left, recompile_shader);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var key in this.pix_state.functions) {\n\t\t\t\tvar parts = key.split('_DOT_');\n\t\t\t\tif (parts.length === 2 && parts[0] === 'view') {\n\t\t\t\t\tvar left = parts[1].split('_T_')[0];\n\t\t\t\t\t// ok lets hook this thing to invalidate our shader\n\t\t\t\t\tif (!this.view.hasListenerProp(left, 'shader', name)) {\n\t\t\t\t\t\tthis.view_functions.push(left);\n\t\t\t\t\t\tthis.view.addListener(left, recompile_shader);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// lets put other listeners on our referenced function of view\n\t\t\t// and if they fire, we need to inherit in place and set dirty=true\n\t\t\t//console.log(this.pix_state.code_color)\n\t\t} else if (this !== exports.prototype) this.compile();\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/shader.js\n// module id = 120\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/shader.js?");

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function () {\n   this.atConstructor = function () {};\n   // Texture API\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/texture.js\n// module id = 121\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/texture.js?");

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/node', function () {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/base/worker.js\n// module id = 122\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/base/worker.js?");

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Ansi colorization function, us ~rb~ to set color in string\n\n// r - red, g - green, b - blue\n// y - yellow, m - magenta, c - cyan, w - white\n// br - bold red, bg - bold green,  bb - bold blue\n// by - bold yellow, bm - bold magenta, bc - bold cyan, bw - bold white\n\ndefineDreem(function () {\n\treturn function (output) {\n\t\tvar colors = {\n\t\t\tbl: \"30\", bo: \"1\", r: \"0;31\", g: \"0;32\", y: \"0;33\", b: \"0;34\", m: \"0;35\", c: \"0;36\",\n\t\t\tw: \"0;37\", br: \"1;31\", bg: \"1;32\", by: \"1;33\", bb: \"1;34\", bm: \"1;35\", bc: \"1;36\", bw: \"1;37\"\n\t\t};\n\t\treturn function () {\n\t\t\tfor (var v = Array.prototype.slice.call(arguments), i = 0; i < v.length; i++) {\n\t\t\t\tv[i] = String(v[i]).replace(/~(\\w*)~/g, function (m, a) {\n\t\t\t\t\treturn \"\\x1B[\" + (colors[a] || 0) + \"m\";\n\t\t\t\t}) + \"\\x1B[0m\";\n\t\t\t\toutput(v[i]);\n\t\t\t}\n\t\t};\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/debug/ansicolor.js\n// module id = 123\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/debug/ansicolor.js?");

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// dump js\n\ndefineDreem(function () {\n\n\tfunction dump(arg, space, colors, arraynames) {\n\t\tif (!colors) colors = dump_plain;\n\t\tif (space === undefined) space = 100000;\n\t\tif (space <= 0) return '';\n\t\t// ok how shall we go about logging it.\n\t\tif (arg === undefined) return colors.undefined;\n\t\tif (arg === null) return colors.null;\n\t\tif (typeof arg === 'boolean') {\n\t\t\tif (arg === true) return colors.true;\n\t\t\tif (arg === false) return colors.false;\n\t\t}\n\t\tif (typeof arg === 'number') {\n\t\t\tif (isNaN(arg)) return colors.NaN;\n\t\t\treturn colors.numstart + arg + colors.numend;\n\t\t}\n\t\tif (typeof arg === 'string') {\n\t\t\tvar str = arg;\n\t\t\tif (arg.length > space) str = arg.slice(0, space) + colors.elip;\n\t\t\tstr = str.replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/\\t/g, '\\\\t');\n\t\t\treturn colors.strstart + str + colors.strend;\n\t\t}\n\t\tif (typeof arg === 'function') {\n\t\t\tif (arg.module) return colors.class + defineDreem.fileName(arg.module.filename);\n\t\t\treturn colors.function;\n\t\t}\n\t\tif (Array.isArray(arg)) {\n\t\t\t// lets run over all our items\n\t\t\tvar out = arraynames ? '' : colors.arrstart;\n\t\t\tfor (var i = 0; i < arg.length; i++) {\n\t\t\t\tif (i) out += colors.arrsep;\n\t\t\t\tif (arraynames) {\n\t\t\t\t\tif (i < arraynames.length) out += colors.argstart + arraynames[i] + colors.argend + colors.argis;else out += colors.argstart + 'arguments[' + String(i) + ']' + colors.argend + colors.argis;\n\t\t\t\t}\n\t\t\t\tout += dump(arg[i], (space - out.length) / 2, colors);\n\t\t\t\tif (space - out.length <= 0) {\n\t\t\t\t\tout += colors.elip;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout += arraynames ? '' : colors.arrend;\n\t\t\treturn out;\n\t\t}\n\t\tif ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n\t\t\t// lets check what kind of object we are. if we are a prototype=object\n\t\t\tif (Object.getPrototypeOf(arg) === Object.prototype) {\n\t\t\t\t// plain objects\n\t\t\t\tvar out = colors.objstart;\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (arg.__lookupGetter__(key)) continue;\n\t\t\t\t\tif (out !== colors.objstart) out += ',';\n\t\t\t\t\tout += colors.keystart + key + colors.keyend + colors.keysep + dump(arg[key], (space - out.length) / 2, colors);\n\t\t\t\t\tif (space - out.length < 0) {\n\t\t\t\t\t\tout += colors.elip;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tout += colors.objend;\n\t\t\t\treturn out;\n\t\t\t} else {\n\t\t\t\tvar constructor = Object.getPrototypeOf(arg).constructor;\n\t\t\t\tvar module = constructor && constructor.module;\n\t\t\t\tif (module) return colors.instance + colors.insstart + defineDreem.fileName(module.filename) + colors.insend;\n\t\t\t\tif (constructor) {\n\t\t\t\t\tvar name = constructor.toString().match(/function\\s+([^\\()]*?)\\(/);\n\t\t\t\t\tif (name) return colors.instance + colors.insstart + name[1] + colors.insend;\n\t\t\t\t}\n\t\t\t\treturn colors.instance + colors.insstart + 'unknown' + colors.insend;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\treturn typeof arg === 'undefined' ? 'undefined' : _typeof(arg);\n\t}\n\n\tdump.plain = {\n\t\t'undefined': 'undefined',\n\t\t'null': 'null',\n\t\t'true': 'true',\n\t\t'false': 'false',\n\t\t'NaN': 'NaN',\n\t\t'strstart': \"'\",\n\t\t'strend': \"'\",\n\t\t'function': 'function',\n\t\t'class': 'class:',\n\t\t'arrstart': '[',\n\t\t'arrend': ']',\n\t\t'arrsep': ',',\n\t\t'argstart': '',\n\t\t'argend': '',\n\t\t'argis': '=',\n\t\t'objstart': '{',\n\t\t'objend': '}',\n\t\t'keystart': '',\n\t\t'keyend': '',\n\t\t'keysep': ':',\n\t\t'instance': 'instance:',\n\t\t'insstart': '',\n\t\t'insend': '',\n\t\t'numstart': '',\n\t\t'numend': '',\n\t\t'elip': '..'\n\t};\n\n\tdump.colors = {\n\t\t'undefined': '~m~undefined~~',\n\t\t'null': '~m~null~~',\n\t\t'true': '~m~true~~',\n\t\t'false': '~m~false~~',\n\t\t'NaN': '~m~NaN~~',\n\t\t'strstart': \"~g~'\",\n\t\t'strend': \"~g~'~~\",\n\t\t'function': '~m~function~~',\n\t\t'class': '~by~class:~~',\n\t\t'arrstart': '~bw~[~~',\n\t\t'arrend': '~bw~]~~',\n\t\t'arrsep': '~bw~,~~',\n\t\t'argstart': '~w~',\n\t\t'argend': '~~',\n\t\t'argis': '~y~=~~',\n\t\t'objstart': '~bw~{~~',\n\t\t'objend': '~bw~}~~',\n\t\t'keystart': '',\n\t\t'keyend': '',\n\t\t'keysep': ':',\n\t\t'instance': 'instance:',\n\t\t'insstart': '',\n\t\t'insend': '',\n\t\t'numstart': '~c~',\n\t\t'numend': '~~',\n\t\t'elip': '~br~..~~'\n\t};\n\n\treturn dump;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/debug/dump.js\n// module id = 124\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/debug/dump.js?");

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// trace JS\n\ndefineDreem(function (requireDreem, exports) {\n\n\tvar dump = requireDreem('$system/debug/dump');\n\tvar file_color = {};\n\tvar file_colorid = 1;\n\tvar file_colors = ['r', 'g', 'b', 'y', 'm', 'c'];\n\tvar from_file_len = 25;\n\tvar trace_arg_clip = 150;\n\tvar trace_depth = 0;\n\n\tfunction trace(fn, filename, tracelevel, fnname) {\n\t\tif (!fnname) fnname = '';\n\t\tvar fc = file_color[filename];\n\t\tif (!fc) fc = file_color[filename] = file_colorid++;\n\t\t//eturn fn\n\t\t// lets check if we need to process our prototype\n\t\tvar shortname = defineDreem.fileName(filename);\n\t\tif (typeof fn == 'function') {\n\t\t\tif (fn.__tracewrapped__) {\n\t\t\t\tthrow new Error('dbltrace!');\n\t\t\t\treturn fn;\n\t\t\t}\n\t\t\t// lets set trace levels for objects.\n\t\t\tvar obj = fn.prototype;\n\n\t\t\tvar mytrace = obj.__trace__ !== undefined ? obj.__trace__ : fn.__trace__;\n\t\t\tvar bail = false;\n\t\t\tif (parseInt(tracelevel) != tracelevel) {\n\t\t\t\t// its a targetted string\n\t\t\t\tif (tracelevel !== mytrace) bail = true;else tracelevel = 0; // turn it off for nested items\n\t\t\t} else if (mytrace > tracelevel) {\n\t\t\t\treturn fn;\n\t\t\t}\n\n\t\t\t// Dont wrap constructor functions, but enumerate the prototypes\n\t\t\tif (Object.getPrototypeOf(obj) !== Object.prototype || Object.keys(obj).length !== 0) {\n\t\t\t\tvar keys = Object.keys(fn);\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tif (!fn.__lookupSetter__(key)) {\n\t\t\t\t\t\tfn[key] = trace(fn[key], filename, tracelevel, fnname + '::' + key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tif (!obj.__lookupSetter__(key)) {\n\t\t\t\t\t\tobj[key] = trace(obj[key], filename, tracelevel, fnname + ' ' + key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// wrapper function\n\t\t\t\tvar wrapper = function wrapper() {\n\t\t\t\t\tvar out = '~w~' + Array(trace_depth + 2).join('-') + ' ~' + file_colors[fc % file_colors.length] + '~' + shortname + '~~' + fnname;\n\t\t\t\t\t// dump the arguments\n\t\t\t\t\tout += '(' + dump(Array.prototype.slice.call(arguments), trace_arg_clip, dump.colors, argnames) + ')';\n\n\t\t\t\t\tvar stack = new Error().stack.split('\\n');\n\t\t\t\t\tvar from = stack[2];\n\t\t\t\t\tif (from.indexOf('defineDreem.js') !== -1) from = stack[3];\n\t\t\t\t\tvar fromfile = from.match(/\\/[A-Za-z0-9\\.]+\\:\\d+/);\n\t\t\t\t\tif (fromfile) {\n\t\t\t\t\t\tvar ff = fromfile[0].slice(1);\n\t\t\t\t\t\tif (ff.length >= from_file_len) ff = ff.slice(-from_file_len + 1);else ff += Array(from_file_len - ff.length).join(' ');\n\t\t\t\t\t\tout = '~w~' + ff + '~~ ' + out;\n\t\t\t\t\t} else out = 'system' + Array(from_file_len - 5).join(' ') + out;\n\n\t\t\t\t\tconsole.color(out + '\\n');\n\n\t\t\t\t\ttrace_depth++;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar ret = fn.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t\t/*catch(e){\n     \tif(e instanceof Error){\n     \t\tif(!e.__traced__){\n     \t\t\tvar msg =  e.stack.split(/\\n/)\n     \t\t\tvar fromfile = msg[1].match(/\\/([A-Za-z0-9\\.]+)\\:(\\d+)/)\n     \t\t\tconsole.color(Array(trace_depth+2).join('-') + \"~br~Exception ~y~\" + fromfile[1] + '~bg~:'+fromfile[2]+'~~ ' + msg[0]+'\\n')\n     \t\t}\n     \t\te.__traced__ = 1\n     \t}\n     \tthrow(e)\n     }*/\n\t\t\t\t\tfinally {\n\t\t\t\t\t\ttrace_depth--;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\n\t\t\t\tif (bail) return fn;\n\t\t\t\t// parse out argument names\n\t\t\t\tvar argnames = fn.toString().match(/\\(([^\\)]*)\\)/)[1].replace(/\\/\\*[\\s\\S]*?\\*\\//g, '').replace(/\\/\\/[^\\n]*/g, '').replace(/[\\r\\n\\s]*/g, '').split(/\\s*,\\s*/);\n\t\t\t\tif (argnames[0] === '') argnames.shift();\n\t\t\t\twrapper.__tracewrapped__ = 1;\n\t\t\t\t// some people might put extra things on our function, but dont recur\n\t\t\t\tif (fnname.indexOf('::') == - -1 && Object.keys(fn).length !== 0) {\n\t\t\t\t\tvar keys = Object.keys(fn);\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\t\tif (!fn.__lookupSetter__(key)) {\n\t\t\t\t\t\t\twrapper[key] = trace(fn[key], filename, tracelevel, fnname + '::' + key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wrapper;\n\t\t\t}\n\t\t}\n\t\treturn fn;\n\t}\n\n\treturn trace;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/debug/trace.js\n// module id = 125\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/debug/trace.js?");

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\tvar v1 = vec3(0, 0, 0);\n\tvar v2 = vec3(0, 0, 0);\n\tvar v3 = vec3(0, 0, 0);\n\tvar n1 = vec3(0, 0, 0);\n\tvar n2 = vec3(0, 0, 0);\n\tvar n3 = vec3(0, 0, 0);\n\tvar t1 = vec2(0, 0);\n\tvar t2 = vec2(0, 0);\n\tvar t3 = vec2(0, 0);\n\n\tvar v1n1t1 = function v1n1t1(x, y, z, nx, ny, nz, tx, ty) {\n\t\tv1[0] = x;\n\t\tv1[1] = y;\n\t\tv1[2] = z;\n\t\tn1[0] = nx;\n\t\tn1[1] = ny;\n\t\tn1[2] = nz;\n\t\tt1[0] = tx;\n\t\tt1[1] = ty;\n\t};\n\n\tvar v2n2t2 = function v2n2t2(x, y, z, nx, ny, nz, tx, ty) {\n\t\tv2[0] = x;\n\t\tv2[1] = y;\n\t\tv2[2] = z;\n\t\tn2[0] = nx;\n\t\tn2[1] = ny;\n\t\tn2[2] = nz;\n\t\tt2[0] = tx;\n\t\tt2[1] = ty;\n\t};\n\n\tvar v3n3t3 = function v3n3t3(x, y, z, nx, ny, nz, tx, ty) {\n\t\tv3[0] = x;\n\t\tv3[1] = y;\n\t\tv3[2] = z;\n\t\tn3[0] = nx;\n\t\tn3[1] = ny;\n\t\tn3[2] = nz;\n\t\tt3[0] = tx;\n\t\tt3[1] = ty;\n\t};\n\n\texports.createModel = function (data, cb) {\n\t\tvar lines = data.split('\\n');\n\t\tvar vertices = [vec3(0, 0, 0)];\n\t\tvar normals = [vec3(0, 0, 0)];\n\t\tvar texcoords = [vec3(0, 0, 0)];\n\t\tvar multicoords = [vec3(0, 0, 0)];\n\t\tvar faceidx = 0;\n\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar line = lines[i].trim();\n\t\t\tif (line.length > 0) {\n\t\t\t\tline = line.replace(\"  \", \" \");\n\t\t\t\tvar parts = line.split(' ');\n\t\t\t\tvar linetype = parts[0];\n\t\t\t\tif (linetype == 'f') {\n\n\t\t\t\t\tif (parts[1].indexOf('/') > -1) {\n\t\t\t\t\t\tsplitter = '/';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsplitter = '\\\\';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar triangles = [[1, 2, 3]];\n\n\t\t\t\t\tif (parts.length > 4) {\n\t\t\t\t\t\t// dirty triangle fan implementation for Ngons..\n\t\t\t\t\t\tfor (var j = 1; j < parts.length - 3; j++) {\n\t\t\t\t\t\t\ttriangles.push([1, j + 2, j + 3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = 0; j < triangles.length; j++) {\n\t\t\t\t\t\tvar t = triangles[j];\n\n\t\t\t\t\t\tvar ia = t[0];\n\t\t\t\t\t\tvar ib = t[1];\n\t\t\t\t\t\tvar ic = t[2];\n\n\t\t\t\t\t\tvar i1 = parts[ia].split(splitter).map(function (a) {\n\t\t\t\t\t\t\treturn Math.floor(a);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar i2 = parts[ib].split(splitter).map(function (a) {\n\t\t\t\t\t\t\treturn Math.floor(a);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar i3 = parts[ic].split(splitter).map(function (a) {\n\t\t\t\t\t\t\treturn Math.floor(a);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar n1, n2, n3, t1, t2, t3;\n\t\t\t\t\t\tvar v1 = vertices[i1[0]];\n\t\t\t\t\t\tvar v2 = vertices[i2[0]];\n\t\t\t\t\t\tvar v3 = vertices[i3[0]];\n\n\t\t\t\t\t\tif (i1.length == 1 || i1[1].length == 0) {\n\t\t\t\t\t\t\tt1 = vec3(0, 0, 0);\n\t\t\t\t\t\t\tt2 = vec3(1, 0, 0);\n\t\t\t\t\t\t\tt3 = vec3(1, 1, 0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = texcoords[i1[1]];\n\t\t\t\t\t\t\tt2 = texcoords[i2[1]];\n\t\t\t\t\t\t\tt3 = texcoords[i3[1]];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i1.length < 3) {\n\t\t\t\t\t\t\t// generate normals\n\t\t\t\t\t\t\tvar ab = vec3.sub(v2, v1);\n\t\t\t\t\t\t\tvar bc = vec3.sub(v3, v1);\n\t\t\t\t\t\t\tn3 = n2 = n1 = vec3.normalize(vec3.cross(ab, bc));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tn1 = normals[i1[2]];\n\t\t\t\t\t\t\tn2 = normals[i2[2]];\n\t\t\t\t\t\t\tn3 = normals[i3[2]];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcb(faceidx, v1, v2, v3, n1, n2, n3, t1, t2, t3, faceidx);\n\t\t\t\t\t\tfaceidx++;\n\t\t\t\t\t}\n\t\t\t\t} else if (linetype == 'v') {\n\t\t\t\t\tvertices.push(vec3(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));\n\t\t\t\t} else if (linetype == 'vt') {\n\t\t\t\t\ttexcoords.push(vec3(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));\n\t\t\t\t} else if (linetype == 'vn') {\n\t\t\t\t\tnormals.push(vec3(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));\n\t\t\t\t} else if (linetype == 'vp') {\n\t\t\t\t\tmulticoords.push(vec3(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//console.log(\"loaded \" + (vertices.length -1) + \" vertices and \" + faceidx + \" triangles\")\n\t};\n\n\texports.createCube = function (width, height, depth, cb) {\n\n\t\tif (arguments.length === 2) cb = height, height = depth = width;\n\t\tif (arguments.length === 3) cb = depth, depth = height, height = width;\n\n\t\tvar hw = width / 2;\n\t\tvar hh = height / 2;\n\t\tvar hd = depth / 2;\n\n\t\t// vertices:\n\t\t//\n\t\t//   d --- c\n\t\t//  /|    /|\n\t\t// a --- b |\n\t\t// | h - |-g\n\t\t// |/    |/\n\t\t// e --- f\n\t\t//\n\t\t// faces:\n\t\t//\n\t\t// abcd -> abc, acd ->  0, 0,-1\n\t\t// aefb -> aef, afb ->  0,-1, 0\n\t\t// adhe -> adh, ahe -> -1, 0, 0\n\t\t// bfgc -> bfg, bgc ->  1, 0, 0\n\t\t// cghd -> cgh, chd ->  0, 1, 0\n\t\t// ehgf -> ehg, egf ->  0, 0, 1\n\n\t\tvar ax = -hw,\n\t\t    ay = -hh,\n\t\t    az = -hd;\n\t\tvar bx = hw,\n\t\t    by = -hh,\n\t\t    bz = -hd;\n\t\tvar cx = hw,\n\t\t    cy = hh,\n\t\t    cz = -hd;\n\t\tvar dx = -hw,\n\t\t    dy = hh,\n\t\t    dz = -hd;\n\t\tvar ex = -hw,\n\t\t    ey = -hh,\n\t\t    ez = hd;\n\t\tvar fx = hw,\n\t\t    fy = -hh,\n\t\t    fz = hd;\n\t\tvar gx = hw,\n\t\t    gy = hh,\n\t\t    gz = hd;\n\t\tvar hx = -hw,\n\t\t    hy = hh,\n\t\t    hz = hd;\n\n\t\tv1n1t1(ax, ay, az, 0, 0, -1, 0, 0);v2n2t2(bx, by, bz, 0, 0, -1, 1, 0);v3n3t3(cx, cy, cz, 0, 0, -1, 1, 1);\n\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\tv1n1t1(ax, ay, az, 0, 0, -1, 0, 0);v2n2t2(cx, cy, cz, 0, 0, -1, 1, 1);v3n3t3(dx, dy, dz, 0, 0, -1, 0, 1);\n\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\tv1n1t1(ax, ay, az, 0, -1, 0, 0, 0);v2n2t2(ex, ey, ez, 0, -1, 0, 1, 0);v3n3t3(fx, fy, fz, 0, -1, 0, 1, 1);\n\t\tcb(2, v1, v2, v3, n1, n2, n3, t1, t2, t3, 1);\n\t\tv1n1t1(ax, ay, az, 0, -1, 0, 0, 0);v2n2t2(fx, fy, fz, 0, -1, 0, 1, 1);v3n3t3(bx, by, bz, 0, -1, 0, 0, 1);\n\t\tcb(3, v1, v2, v3, n1, n2, n3, t1, t2, t3, 1);\n\n\t\tv1n1t1(ax, ay, az, -1, 0, 0, 0, 0);v2n2t2(dx, dy, dz, -1, 0, 0, 1, 0);v3n3t3(hx, hy, hz, -1, 0, 0, 1, 1);\n\t\tcb(4, v1, v2, v3, n1, n2, n3, t1, t2, t3, 2);\n\t\tv1n1t1(ax, ay, az, -1, 0, 0, 0, 0);v2n2t2(hx, hy, hz, -1, 0, 0, 1, 1);v3n3t3(ex, ey, ez, -1, 0, 0, 0, 1);\n\t\tcb(5, v1, v2, v3, n1, n2, n3, t1, t2, t3, 2);\n\n\t\tv1n1t1(bx, by, bz, 1, 0, 0, 0, 0);v2n2t2(fx, fy, fz, 1, 0, 0, 1, 0);v3n3t3(gx, gy, gz, 1, 0, 0, 1, 1);\n\t\tcb(6, v1, v2, v3, n1, n2, n3, t1, t2, t3, 3);\n\t\tv1n1t1(bx, by, bz, 1, 0, 0, 0, 0);v2n2t2(gx, gy, gz, 1, 0, 0, 1, 1);v3n3t3(cx, cy, cz, 1, 0, 0, 0, 1);\n\t\tcb(7, v1, v2, v3, n1, n2, n3, t1, t2, t3, 3);\n\n\t\tv1n1t1(cx, cy, cz, 0, 1, 0, 0, 0);v2n2t2(gx, gy, gz, 0, 1, 0, 1, 0);v3n3t3(hx, hy, hz, 0, 1, 0, 1, 1);\n\t\tcb(8, v1, v2, v3, n1, n2, n3, t1, t2, t3, 4);\n\t\tv1n1t1(cx, cy, cz, 0, 1, 0, 0, 0);v2n2t2(hx, hy, hz, 0, 1, 0, 1, 1);v3n3t3(dx, dy, dz, 0, 1, 0, 0, 1);\n\t\tcb(9, v1, v2, v3, n1, n2, n3, t1, t2, t3, 4);\n\n\t\tv1n1t1(ex, ey, ez, 0, 0, 1, 0, 0);v2n2t2(hx, hy, hz, 0, 0, 1, 1, 0);v3n3t3(gx, gy, gz, 0, 0, 1, 1, 1);\n\t\tcb(10, v1, v2, v3, n1, n2, n3, t1, t2, t3, 5);\n\t\tv1n1t1(ex, ey, ez, 0, 0, 1, 0, 0);v2n2t2(gx, gy, gz, 0, 0, 1, 1, 1);v3n3t3(fx, fy, fz, 0, 0, 1, 0, 1);\n\t\tcb(11, v1, v2, v3, n1, n2, n3, t1, t2, t3, 5);\n\t};\n\n\texports.createCylinder = function (R, h, xdetail, cap, cb) {\n\t\tfor (var p = 0; p < xdetail; p += 1) {\n\t\t\tvar angle1 = p * (3.14159265359 * 2) / xdetail;\n\t\t\tvar angle2 = (p + 1) * (3.14159265359 * 2) / xdetail;\n\t\t\tvar ax = Math.sin(angle1);\n\t\t\tvar bx = Math.sin(angle2);\n\t\t\tvar ay = Math.cos(angle1);\n\t\t\tvar by = Math.cos(angle2);\n\n\t\t\tvar nx = Math.sin((angle1 + angle2) / 2);\n\t\t\tvar ny = Math.cos((angle1 + angle2) / 2);\n\n\t\t\tvar tx1 = p / xdetail;\n\t\t\tvar tx2 = (p + 1) / xdetail;\n\n\t\t\tvar az = 0;\n\t\t\tvar az2 = h;\n\t\t\tif (h < 0) {\n\t\t\t\taz = h;\n\t\t\t\taz2 = 0;\n\t\t\t}\n\t\t\tif (cap) {\n\t\t\t\tv1n1t1(ax * R, az, ay * R, 0, -1, 0, tx1, 0);\n\t\t\t\tv2n2t2(bx * R, az, by * R, 0, -1, 0, tx2, 0);\n\t\t\t\tv3n3t3(0, az, 0, 0, -1, 0, tx2, 0);\n\n\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\t\tv1n1t1(ax * R, az2, ay * R, 0, 1, 0, tx1, 0);\n\t\t\t\tv2n2t2(bx * R, az2, by * R, 0, 1, 0, tx2, 0);\n\t\t\t\tv3n3t3(0, az2, 0, 0, 1, 0, tx2, 0);\n\n\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t}\n\t\t\tv1n1t1(ax * R, az, ay * R, nx, 0, ny, tx1, 0);\n\t\t\tv2n2t2(bx * R, az, by * R, nx, 0, ny, tx2, 0);\n\t\t\tv3n3t3(ax * R, az2, ay * R, nx, 0, ny, tx2, 0);\n\n\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\tv1n1t1(bx * R, az, by * R, nx, 0, ny, tx2, 0);\n\t\t\tv2n2t2(ax * R, az2, ay * R, nx, 0, ny, tx2, 0);\n\t\t\tv3n3t3(bx * R, az2, by * R, nx, 0, ny, tx2, 0);\n\n\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t}\n\t};\n\n\texports.createCone = function (R1, R2, h, xdetail, cap, cb) {\n\t\tfor (var p = 0; p < xdetail; p += 1) {\n\t\t\tvar angle1 = p * (3.14159265359 * 2) / xdetail;\n\t\t\tvar angle2 = (p + 1) * (3.14159265359 * 2) / xdetail;\n\n\t\t\tvar ax = Math.sin(angle1);\n\t\t\tvar bx = Math.sin(angle2);\n\t\t\tvar ay = Math.cos(angle1);\n\t\t\tvar by = Math.cos(angle2);\n\n\t\t\tvar nx = Math.sin((angle1 + angle2) / 2);\n\t\t\tvar ny = Math.cos((angle1 + angle2) / 2);\n\n\t\t\tvar tx1 = p / xdetail;\n\t\t\tvar tx2 = (p + 1) / xdetail;\n\n\t\t\tvar az = 0;\n\t\t\tvar az2 = h;\n\t\t\tif (h < 0) {\n\t\t\t\taz = h;\n\t\t\t\taz2 = 0;\n\t\t\t}\n\t\t\tif (cap) {\n\t\t\t\tv1n1t1(ax * R1, az, ay * R1, 0, -1, 0, tx1, 0);\n\t\t\t\tv2n2t2(bx * R1, az, by * R1, 0, -1, 0, tx2, 0);\n\t\t\t\tv3n3t3(0, az, 0, 0, -1, 0, tx2, 0);\n\n\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t}\n\t\t\tv1n1t1(ax * R1, az, ay * R1, nx, 0, ny, tx1, 0);\n\t\t\tv2n2t2(bx * R1, az, by * R1, nx, 0, ny, tx2, 0);\n\t\t\tv3n3t3(ax * R2, az2, ay * R2, nx, 0, ny, tx2, 0);\n\n\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\tv1n1t1(bx * R1, az, by * R1, nx, 0, ny, tx2, 0);\n\t\t\tv2n2t2(ax * R2, az2, ay * R2, nx, 0, ny, tx2, 0);\n\t\t\tv3n3t3(bx * R2, az2, by * R2, nx, 0, ny, tx2, 0);\n\n\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\tv1n1t1(ax * R2, az2, ay * R2, 0, 1, 0, tx1, 0);\n\t\t\tv2n2t2(bx * R2, az2, by * R2, 0, 1, 0, tx2, 0);\n\t\t\tv3n3t3(0, az2, 0, 0, 1, 0, tx2, 0);\n\n\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t}\n\t};\n\n\texports.createSphere = function (R, xdetail, ydetail, cb) {\n\t\tfor (var p = 0; p < xdetail; p += 1) {\n\t\t\tvar angle1 = p * (3.14159265359 * 2) / xdetail;\n\t\t\tvar angle2 = (p + 1) * (3.14159265359 * 2) / xdetail;\n\t\t\tvar ax1 = Math.sin(angle1);\n\t\t\tvar ax2 = Math.sin(angle2);\n\t\t\tvar ay1 = Math.cos(angle1);\n\t\t\tvar ay2 = Math.cos(angle2);\n\t\t\tvar tx1 = p / xdetail;\n\t\t\tvar tx2 = (p + 1) / xdetail;\n\n\t\t\tfor (var q = 0; q < ydetail; q += 1) {\n\t\t\t\tvar ty1 = q / ydetail;\n\t\t\t\tvar ty2 = (q + 1) / ydetail;\n\n\t\t\t\tvar angle3 = q * 3.14159265359 / ydetail;\n\t\t\t\tvar angle4 = (q + 1) * 3.14159265359 / ydetail;\n\t\t\t\tvar r1 = Math.sin(angle3);\n\t\t\t\tvar r2 = Math.sin(angle4);\n\t\t\t\tvar h1 = Math.cos(angle3);\n\t\t\t\tvar h2 = Math.cos(angle4);\n\n\t\t\t\t// a   b  -> ax1 * r1, ay1 * r1, h1   -> ax2 * r1, ay2 * r1, h1\n\t\t\t\t// d   c  -> ax1 * r2, ay1 * r2, h2   -> ax2 * r2, ay2 * r2, h2\n\t\t\t\tvar ax = ax1 * r1,\n\t\t\t\t    ay = ay1 * r1,\n\t\t\t\t    az = h1;\n\t\t\t\tvar bx = ax2 * r1,\n\t\t\t\t    by = ay2 * r1,\n\t\t\t\t    bz = h1;\n\t\t\t\tvar dx = ax1 * r2,\n\t\t\t\t    dy = ay1 * r2,\n\t\t\t\t    dz = h2;\n\t\t\t\tvar cx = ax2 * r2,\n\t\t\t\t    cy = ay2 * r2,\n\t\t\t\t    cz = h2;\n\n\t\t\t\tv1n1t1(ax * R, ay * R, az * R, ax, ay, az, tx1, ty1);v2n2t2(bx * R, by * R, bz * R, bx, by, bz, tx2, ty1);v3n3t3(cx * R, cy * R, cz * R, cx, cy, cz, tx2, ty2);\n\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\t\tv1n1t1(ax * R, ay * R, az * R, ax, ay, az, tx1, ty1);v2n2t2(cx * R, cy * R, cz * R, cx, cy, cz, tx2, ty2);v3n3t3(dx * R, dy * R, dz * R, dx, dy, dz, tx1, ty2);\n\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction B1(t) {\n\t\treturn t * t * t;\n\t}\n\tfunction B2(t) {\n\t\treturn 3 * t * t * (1 - t);\n\t}\n\tfunction B3(t) {\n\t\treturn 3 * t * (1 - t) * (1 - t);\n\t}\n\tfunction B4(t) {\n\t\treturn (1 - t) * (1 - t) * (1 - t);\n\t}\n\n\tfunction getBezier(percent, C1, C2, C3, C4) {\n\t\tvar pos = vec3();\n\n\t\tvar b1 = B1(percent);\n\t\tvar b2 = B2(percent);\n\t\tvar b3 = B3(percent);\n\t\tvar b4 = B4(percent);\n\n\t\tpos[0] = C1[0] * b1 + C2[0] * b2 + C3[0] * b3 + C4[0] * b4;\n\t\tpos[1] = C1[1] * b1 + C2[1] * b2 + C3[1] * b3 + C4[1] * b4;\n\t\tpos[2] = C1[2] * b1 + C2[2] * b2 + C3[2] * b3 + C4[2] * b4;\n\n\t\treturn pos;\n\t}\n\n\texports.createPlane = function (width, height, xdiv, ydiv, cb) {\n\n\t\tvar ox = -width / 2;\n\t\tvar oy = -height / 2;\n\t\tvar ix = width / xdiv;\n\t\tvar iy = height / ydiv;\n\t\tvar tx = 1 / xdiv;\n\t\tvar ty = 1 / ydiv;\n\t\tfor (var x = 0; x < xdiv; x++) {\n\t\t\tfor (var y = 0; y < ydiv; y++) {\n\n\t\t\t\tvar ax = ox + (x + 0) * ix;var ay = oy + (y + 0) * iy;\n\t\t\t\tvar bx = ox + (x + 1) * ix;var by = oy + (y + 0) * iy;\n\t\t\t\tvar cx = ox + (x + 1) * ix;var cy = oy + (y + 1) * iy;\n\t\t\t\tvar dx = ox + (x + 0) * ix;var dy = oy + (y + 1) * iy;\n\n\t\t\t\tvar atx = tx * x;var aty = ty * y;\n\t\t\t\tvar btx = tx * (x + 1);var bty = ty * y;\n\t\t\t\tvar ctx = tx * (x + 1);var cty = ty * (y + 1);\n\t\t\t\tvar dtx = tx * x;var dty = ty * (y + 1);\n\n\t\t\t\tv1n1t1(ax, ay, 0, 0, 0, -1, atx, aty);v2n2t2(bx, by, 0, 0, 0, -1, btx, bty);v3n3t3(cx, cy, 0, 0, 0, -1, ctx, cty);\n\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\tv1n1t1(ax, ay, 0, 0, 0, -1, atx, aty);v2n2t2(cx, cy, 0, 0, 0, -1, ctx, cty);v3n3t3(dx, dy, 0, 0, 0, -1, dtx, dty);\n\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t}\n\t\t}\n\t};\n\n\texports.createCircle = function (radius, detail, cb) {\n\t\tfor (var i = 0; i < detail; i++) {\n\t\t\tvar s0 = (i + 0) / detail * PI * 2;\n\t\t\tvar s1 = (i + 1) / detail * PI * 2;\n\n\t\t\tvar ax = 0;\n\t\t\tvar ay = 0;\n\t\t\tvar bx = cos(s0);\n\t\t\tvar by = sin(s0);\n\t\t\tvar cx = cos(s1);\n\t\t\tvar cy = sin(s1);\n\n\t\t\tvar atx = 0.5;\n\t\t\tvar aty = 0.5;\n\t\t\tvar btx = bx / 2 + 0.5;\n\t\t\tvar bty = by / 2 + 0.5;\n\t\t\tvar ctx = cx / 2 + 0.5;\n\t\t\tvar cty = cy / 2 + 0.5;\n\n\t\t\tv1n1t1(ax * radius, ay * radius, 0, 0, 0, -1, atx, aty);\n\t\t\tv2n2t2(bx * radius, by * radius, 0, 0, 0, -1, btx, bty);\n\t\t\tv3n3t3(cx * radius, cy * radius, 0, 0, 0, -1, ctx, cty);\n\t\t\tcb(i, v1, v2, v3, n1, n2, n3, t1, t2, t3, i);\n\t\t}\n\t};\n\n\texports.createRect = function (width, height, detail, cb) {\n\t\tvar l = pow(0.5, 0.5);\n\t\tfor (var i = 0; i < detail; i++) {\n\t\t\tvar s0 = (i + 0) / detail * PI * 2;\n\t\t\tvar s1 = (i + 1) / detail * PI * 2;\n\n\t\t\tvar ax = 0;\n\t\t\tvar ay = 0;\n\t\t\tvar bx = cos(s0);\n\t\t\tvar by = sin(s0);\n\t\t\tvar cx = cos(s1);\n\t\t\tvar cy = sin(s1);\n\n\t\t\tif (abs(bx) > abs(by)) {\n\t\t\t\tbx = min(bx, l);bx = max(bx, -l);\n\t\t\t} else {\n\t\t\t\tby = min(by, l);by = max(by, -l);\n\t\t\t}\n\t\t\tbx /= l;by /= l;\n\n\t\t\tif (abs(cx) > abs(cy)) {\n\t\t\t\tcx = min(cx, l);cx = max(cx, -l);\n\t\t\t} else {\n\t\t\t\tcy = min(cy, l);cy = max(cy, -l);\n\t\t\t}\n\t\t\tcx /= l;cy /= l;\n\n\t\t\tvar atx = 0.5;\n\t\t\tvar aty = 0.5;\n\t\t\tvar btx = bx / 2 + 0.5;\n\t\t\tvar bty = by / 2 + 0.5;\n\t\t\tvar ctx = cx / 2 + 0.5;\n\t\t\tvar cty = cy / 2 + 0.5;\n\n\t\t\tv1n1t1(ax * width, ay * height, 0, 0, 0, -1, atx, aty);\n\t\t\tv2n2t2(bx * width, by * height, 0, 0, 0, -1, btx, bty);\n\t\t\tv3n3t3(cx * width, cy * height, 0, 0, 0, -1, ctx, cty);\n\t\t\tcb(i, v1, v2, v3, n1, n2, n3, t1, t2, t3, i);\n\t\t}\n\t};\n\n\texports.createRoundedRect = function (width, height, radius, detail, cb) {\n\t\tfor (var i = 0; i < detail; i++) {\n\t\t\tvar s0 = (i + 0) / detail * PI * 2;\n\t\t\tvar s1 = (i + 1) / detail * PI * 2;\n\n\t\t\tvar ax = 0;\n\t\t\tvar ay = 0;\n\t\t\tvar bx = cos(s0);\n\t\t\tvar by = sin(s0);\n\t\t\tvar cx = cos(s1);\n\t\t\tvar cy = sin(s1);\n\n\t\t\tradius = min(radius, min(width / 2, height / 2));\n\n\t\t\tbx *= radius;\n\t\t\tby *= radius;\n\t\t\tif (bx > 0) {\n\t\t\t\tbx += width - radius;\n\t\t\t} else {\n\t\t\t\tbx -= width - radius;\n\t\t\t}\n\t\t\tif (by > 0) {\n\t\t\t\tby += height - radius;\n\t\t\t} else {\n\t\t\t\tby -= height - radius;\n\t\t\t}\n\t\t\tbx /= width;\n\t\t\tby /= height;\n\n\t\t\tcx *= radius;\n\t\t\tcy *= radius;\n\t\t\tif (cx > 0) {\n\t\t\t\tcx += width - radius;\n\t\t\t} else {\n\t\t\t\tcx -= width - radius;\n\t\t\t}\n\t\t\tif (cy > 0) {\n\t\t\t\tcy += height - radius;\n\t\t\t} else {\n\t\t\t\tcy -= height - radius;\n\t\t\t}\n\t\t\tcx /= width;\n\t\t\tcy /= height;\n\n\t\t\tvar atx = 0.5;\n\t\t\tvar aty = 0.5;\n\t\t\tvar btx = bx / 2 + 0.5;\n\t\t\tvar bty = by / 2 + 0.5;\n\t\t\tvar ctx = cx / 2 + 0.5;\n\t\t\tvar cty = cy / 2 + 0.5;\n\n\t\t\tv1n1t1(ax * width, ay * height, 0, 0, 0, -1, atx, aty);\n\t\t\tv2n2t2(bx * width, by * height, 0, 0, 0, -1, btx, bty);\n\t\t\tv3n3t3(cx * width, cy * height, 0, 0, 0, -1, ctx, cty);\n\t\t\tcb(i, v1, v2, v3, n1, n2, n3, t1, t2, t3, i);\n\t\t}\n\t};\n\n\texports.createTeapot = function (radius, detail, cb) {\n\t\tvar patchdata = [\n\t\t/* rim */[102, 103, 104, 105, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n\t\t/* body */[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40],\n\t\t/* lid */[96, 96, 96, 96, 97, 98, 99, 100, 101, 101, 101, 101, 0, 1, 2, 3], [0, 1, 2, 3, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117],\n\t\t/* bottom */[118, 118, 118, 118, 124, 122, 119, 121, 123, 126, 125, 120, 40, 39, 38, 37],\n\t\t/* handle */[41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 28, 65, 66, 67],\n\t\t/* spout */[68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95]];\n\n\t\tvar controlpoints = [[0.2, 0, 2.7], [0.2, -0.112, 2.7], [0.112, -0.2, 2.7], [0, -0.2, 2.7], [1.3375, 0, 2.53125], [1.3375, -0.749, 2.53125], [0.749, -1.3375, 2.53125], [0, -1.3375, 2.53125], [1.4375, 0, 2.53125], [1.4375, -0.805, 2.53125], [0.805, -1.4375, 2.53125], [0, -1.4375, 2.53125], [1.5, 0, 2.4], [1.5, -0.84, 2.4], [0.84, -1.5, 2.4], [0, -1.5, 2.4], [1.75, 0, 1.875], [1.75, -0.98, 1.875], [0.98, -1.75, 1.875], [0, -1.75, 1.875], [2, 0, 1.35], [2, -1.12, 1.35], [1.12, -2, 1.35], [0, -2, 1.35], [2, 0, 0.9], [2, -1.12, 0.9], [1.12, -2, 0.9], [0, -2, 0.9], [-2, 0, 0.9], [2, 0, 0.45], [2, -1.12, 0.45], [1.12, -2, 0.45], [0, -2, 0.45], [1.5, 0, 0.225], [1.5, -0.84, 0.225], [0.84, -1.5, 0.225], [0, -1.5, 0.225], [1.5, 0, 0.15], [1.5, -0.84, 0.15], [0.84, -1.5, 0.15], [0, -1.5, 0.15], [-1.6, 0, 2.025], [-1.6, -0.3, 2.025], [-1.5, -0.3, 2.25], [-1.5, 0, 2.25], [-2.3, 0, 2.025], [-2.3, -0.3, 2.025], [-2.5, -0.3, 2.25], [-2.5, 0, 2.25], [-2.7, 0, 2.025], [-2.7, -0.3, 2.025], [-3, -0.3, 2.25], [-3, 0, 2.25], [-2.7, 0, 1.8], [-2.7, -0.3, 1.8], [-3, -0.3, 1.8], [-3, 0, 1.8], [-2.7, 0, 1.575], [-2.7, -0.3, 1.575], [-3, -0.3, 1.35], [-3, 0, 1.35], [-2.5, 0, 1.125], [-2.5, -0.3, 1.125], [-2.65, -0.3, 0.9375], [-2.65, 0, 0.9375], [-2, -0.3, 0.9], [-1.9, -0.3, 0.6], [-1.9, 0, 0.6], [1.7, 0, 1.425], [1.7, -0.66, 1.425], [1.7, -0.66, 0.6], [1.7, 0, 0.6], [2.6, 0, 1.425], [2.6, -0.66, 1.425], [3.1, -0.66, 0.825], [3.1, 0, 0.825], [2.3, 0, 2.1], [2.3, -0.25, 2.1], [2.4, -0.25, 2.025], [2.4, 0, 2.025], [2.7, 0, 2.4], [2.7, -0.25, 2.4], [3.3, -0.25, 2.4], [3.3, 0, 2.4], [2.8, 0, 2.475], [2.8, -0.25, 2.475], [3.525, -0.25, 2.49375], [3.525, 0, 2.49375], [2.9, 0, 2.475], [2.9, -0.15, 2.475], [3.45, -0.15, 2.5125], [3.45, 0, 2.5125], [2.8, 0, 2.4], [2.8, -0.15, 2.4], [3.2, -0.15, 2.4], [3.2, 0, 2.4], [0, 0, 3.15], [0.8, 0, 3.15], [0.8, -0.45, 3.15], [0.45, -0.8, 3.15], [0, -0.8, 3.15], [0, 0, 2.85], [1.4, 0, 2.4], [1.4, -0.784, 2.4], [0.784, -1.4, 2.4], [0, -1.4, 2.4], [0.4, 0, 2.55], [0.4, -0.224, 2.55], [0.224, -0.4, 2.55], [0, -0.4, 2.55], [1.3, 0, 2.55], [1.3, -0.728, 2.55], [0.728, -1.3, 2.55], [0, -1.3, 2.55], [1.3, 0, 2.4], [1.3, -0.728, 2.4], [0.728, -1.3, 2.4], [0, -1.3, 2.4], [0, 0, 0], [1.425, -0.798, 0], [1.5, 0, 0.075], [1.425, 0, 0], [0.798, -1.425, 0], [0, -1.5, 0.075], [0, -1.425, 0], [1.5, -0.84, 0.075], [0.84, -1.5, 0.075]];\n\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\tvar patch = patchdata[i];\n\t\t\tvar pcontrol = [];\n\t\t\tfor (var j = 0; j < 16; j++) {\n\t\t\t\tvar cp = controlpoints[patch[j]];\n\t\t\t\tpcontrol.push(vec3.mulfloat(vec3(cp[0], cp[1], cp[2]), radius));\n\t\t\t}\n\n\t\t\t//var detail = 10\n\t\t\tvar ndetail = -0.01 / detail;\n\n\t\t\tfor (var j = 0; j < detail; j++) {\n\t\t\t\tvar p1 = j / detail;\n\t\t\t\tvar p2 = (j + 1) / detail;\n\t\t\t\tvar p1n = p1 + ndetail;\n\t\t\t\tvar p2n = p2 + ndetail;\n\n\t\t\t\tvar P1a = getBezier(p1, pcontrol[0], pcontrol[1], pcontrol[2], pcontrol[3]);\n\t\t\t\tvar P2a = getBezier(p1, pcontrol[4], pcontrol[5], pcontrol[6], pcontrol[7]);\n\t\t\t\tvar P3a = getBezier(p1, pcontrol[8], pcontrol[9], pcontrol[10], pcontrol[11]);\n\t\t\t\tvar P4a = getBezier(p1, pcontrol[12], pcontrol[13], pcontrol[14], pcontrol[15]);\n\n\t\t\t\tvar P1an = getBezier(p1n, pcontrol[0], pcontrol[1], pcontrol[2], pcontrol[3]);\n\t\t\t\tvar P2an = getBezier(p1n, pcontrol[4], pcontrol[5], pcontrol[6], pcontrol[7]);\n\t\t\t\tvar P3an = getBezier(p1n, pcontrol[8], pcontrol[9], pcontrol[10], pcontrol[11]);\n\t\t\t\tvar P4an = getBezier(p1n, pcontrol[12], pcontrol[13], pcontrol[14], pcontrol[15]);\n\n\t\t\t\tvar P1b = getBezier(p2, pcontrol[0], pcontrol[1], pcontrol[2], pcontrol[3]);\n\t\t\t\tvar P2b = getBezier(p2, pcontrol[4], pcontrol[5], pcontrol[6], pcontrol[7]);\n\t\t\t\tvar P3b = getBezier(p2, pcontrol[8], pcontrol[9], pcontrol[10], pcontrol[11]);\n\t\t\t\tvar P4b = getBezier(p2, pcontrol[12], pcontrol[13], pcontrol[14], pcontrol[15]);\n\n\t\t\t\tvar P1bn = getBezier(p2n, pcontrol[0], pcontrol[1], pcontrol[2], pcontrol[3]);\n\t\t\t\tvar P2bn = getBezier(p2n, pcontrol[4], pcontrol[5], pcontrol[6], pcontrol[7]);\n\t\t\t\tvar P3bn = getBezier(p2n, pcontrol[8], pcontrol[9], pcontrol[10], pcontrol[11]);\n\t\t\t\tvar P4bn = getBezier(p2n, pcontrol[12], pcontrol[13], pcontrol[14], pcontrol[15]);\n\n\t\t\t\tfor (var k = 0; k < detail; k++) {\n\t\t\t\t\tvar calcnormal = function calcnormal(a, b, c) {\n\t\t\t\t\t\tvar _ab = vec3.sub(a, b);\n\t\t\t\t\t\tvar _cb = vec3.sub(c, b);\n\t\t\t\t\t\treturn vec3.normalize(vec3.cross(_ab, _cb));\n\t\t\t\t\t};\n\n\t\t\t\t\tvar q1 = k / detail;\n\t\t\t\t\tvar q2 = (k + 1) / detail;\n\t\t\t\t\tvar q1n = q1 + ndetail;\n\t\t\t\t\tvar q2n = q2 + ndetail;\n\n\t\t\t\t\tvar AA = getBezier(q1, P1a, P2a, P3a, P4a);\n\t\t\t\t\tvar AAn1 = getBezier(q1n, P1a, P2a, P3a, P4a);\n\t\t\t\t\tvar AAn2 = getBezier(q1, P1an, P2an, P3an, P4an);\n\n\t\t\t\t\tvar BB = getBezier(q2, P1a, P2a, P3a, P4a);\n\t\t\t\t\tvar BBn1 = getBezier(q2n, P1a, P2a, P3a, P4a);\n\t\t\t\t\tvar BBn2 = getBezier(q2, P1an, P2an, P3an, P4an);\n\n\t\t\t\t\tvar CC = getBezier(q2, P1b, P2b, P3b, P4b);\n\t\t\t\t\tvar CCn1 = getBezier(q2n, P1b, P2b, P3b, P4b);\n\t\t\t\t\tvar CCn2 = getBezier(q2, P1bn, P2bn, P3bn, P4bn);\n\n\t\t\t\t\tvar DD = getBezier(q1, P1b, P2b, P3b, P4b);\n\t\t\t\t\tvar DDn1 = getBezier(q1n, P1b, P2b, P3b, P4b);\n\t\t\t\t\tvar DDn2 = getBezier(q1, P1bn, P2bn, P3bn, P4bn);\n\n\t\t\t\t\tvar normA = calcnormal(AA, AAn1, AAn2);\n\t\t\t\t\tvar normB = calcnormal(BB, BBn1, BBn2);\n\t\t\t\t\tvar normC = calcnormal(CC, CCn1, CCn2);\n\t\t\t\t\tvar normD = calcnormal(DD, DDn1, DDn2);\n\n\t\t\t\t\tv1n1t1(AA[0], AA[1], AA[2], normA[0], normA[1], normA[2], q1, p1);v2n2t2(BB[0], BB[1], BB[2], normB[0], normB[1], normB[2], q2, p1);v3n3t3(CC[0], CC[1], CC[2], normC[0], normC[1], normC[2], q2, p2);\n\t\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\t\tv1n1t1(AA[0], AA[1], AA[2], normA[0], normA[1], normA[2], q1, p1);v2n2t2(CC[0], CC[1], CC[2], normC[0], normC[1], normC[2], q2, p2);v3n3t3(DD[0], DD[1], DD[2], normD[0], normD[1], normD[2], q1, p2);\n\t\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\t\t\tv1n1t1(AA[0], -AA[1], AA[2], normA[0], -normA[1], normA[2], q1, p1);v2n2t2(BB[0], -BB[1], BB[2], normB[0], -normB[1], normB[2], q2, p1);v3n3t3(CC[0], -CC[1], CC[2], normC[0], -normC[1], normC[2], q2, p2);\n\t\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\t\tv1n1t1(AA[0], -AA[1], AA[2], normA[0], -normA[1], normA[2], q1, p1);v2n2t2(CC[0], -CC[1], CC[2], normC[0], -normC[1], normC[2], q2, p2);v3n3t3(DD[0], -DD[1], DD[2], normD[0], -normD[1], normD[2], q1, p2);\n\t\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\t\t\tif (i < 6) {\n\t\t\t\t\t\tv1n1t1(-AA[0], AA[1], AA[2], -normA[0], normA[1], normA[2], q1, p1);v2n2t2(-BB[0], BB[1], BB[2], -normB[0], normB[1], normB[2], q2, p1);v3n3t3(-CC[0], CC[1], CC[2], -normC[0], normC[1], normC[2], q2, p2);\n\t\t\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\t\t\tv1n1t1(-AA[0], AA[1], AA[2], -normA[0], normA[1], normA[2], q1, p1);v2n2t2(-CC[0], CC[1], CC[2], -normC[0], normC[1], normC[2], q2, p2);v3n3t3(-DD[0], DD[1], DD[2], -normD[0], normD[1], normD[2], q1, p2);\n\t\t\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\n\t\t\t\t\t\tv1n1t1(-AA[0], -AA[1], AA[2], -normA[0], -normA[1], normA[2], q1, p1);v2n2t2(-BB[0], -BB[1], BB[2], -normB[0], -normB[1], normB[2], q2, p1);v3n3t3(-CC[0], -CC[1], CC[2], -normC[0], -normC[1], normC[2], q2, p2);\n\t\t\t\t\t\tcb(0, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\t\t\tv1n1t1(-AA[0], -AA[1], AA[2], -normA[0], -normA[1], normA[2], q1, p1);v2n2t2(-CC[0], -CC[1], CC[2], -normC[0], -normC[1], normC[2], q2, p2);v3n3t3(-DD[0], -DD[1], DD[2], -normD[0], -normD[1], normD[2], q1, p2);\n\t\t\t\t\t\tcb(1, v1, v2, v3, n1, n2, n3, t1, t2, t3, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/geometry/basicgeometry.js\n// module id = 126\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/geometry/basicgeometry.js?");

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\n\tvar VTX_COUNT = 512;\n\n\tvar vertexstruct = defineDreem.struct({\n\t\tpos: vec3,\n\t\tnorm: vec3,\n\t\tuv: vec2\n\t});\n\n\tvar morphvertexstruct = defineDreem.struct({\n\t\tpos: vec3,\n\t\tnorm: vec3,\n\t\tuv: vec2,\n\t\tpos1: vec3,\n\t\tnorm1: vec3,\n\t\tuv1: vec2\n\t});\n\n\texports.createMorph = function (geom0, geom1) {\n\t\tvar geom = morphvertexstruct.array();\n\t\tif (geom0 && geom1) {\n\t\t\tif (geom0.length !== geom1.length) {\n\t\t\t\tthrow new Error(\"Morph geometries mismatch buffer length.\");\n\t\t\t} else {\n\t\t\t\tfor (var i = geom0.length - 1; i >= 0; i--) {\n\t\t\t\t\tgeom.push(geom0.array[i * 8 + 0], geom0.array[i * 8 + 1], geom0.array[i * 8 + 2], geom0.array[i * 8 + 3], geom0.array[i * 8 + 4], geom0.array[i * 8 + 5], geom0.array[i * 8 + 6], geom0.array[i * 8 + 7], geom1.array[i * 8 + 0], geom1.array[i * 8 + 1], geom1.array[i * 8 + 2], geom1.array[i * 8 + 3], geom1.array[i * 8 + 4], geom1.array[i * 8 + 5], geom1.array[i * 8 + 6], geom1.array[i * 8 + 7]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn geom;\n\t};\n\n\texports.createCircle = function (radius) {\n\t\tvar geom = vertexstruct.array();\n\t\tgeom.push(0, 0, 0, 0, 0, 1, 0.5, 0.5);\n\t\tfor (var i = 0; i < VTX_COUNT; i++) {\n\t\t\tvar segment = i / VTX_COUNT * PI * 2;\n\t\t\tvar pos = vec2(cos(segment), sin(segment));\n\t\t\tgeom.push(pos[0] * radius, pos[1] * radius, 0, 0, 0, 1, pos[0] / 2 + 0.5, pos[1] / 2 + 0.5);\n\t\t}\n\t\treturn geom;\n\t};\n\n\texports.createCircle = function (radius) {\n\t\tvar geom = vertexstruct.array();\n\t\tgeom.push(0, 0, 0, 0, 0, 1, 0.5, 0.5);\n\t\tfor (var i = 0; i < VTX_COUNT; i++) {\n\t\t\tvar segment = i / VTX_COUNT * PI * 2;\n\t\t\tvar pos = vec2(cos(segment), sin(segment));\n\t\t\tgeom.push(pos[0] * radius, pos[1] * radius, 0, 0, 0, 1, pos[0] / 2 + 0.5, pos[1] / 2 + 0.5);\n\t\t}\n\t\treturn geom;\n\t};\n\n\texports.createRect = function (width, height) {\n\t\tvar geom = vertexstruct.array();\n\t\tgeom.push(0, 0, 0, 0, 0, 1, 0.5, 0.5);\n\t\tfor (var i = 0; i < VTX_COUNT; i++) {\n\t\t\tvar segment = i / VTX_COUNT * PI * 2;\n\t\t\tvar pos = vec2(cos(segment), sin(segment));\n\t\t\tif (abs(pos[0]) > abs(pos[1])) {\n\t\t\t\tpos[0] = min(pos[0], pow(0.5, 0.5));\n\t\t\t\tpos[0] = max(pos[0], -pow(0.5, 0.5));\n\t\t\t} else {\n\t\t\t\tpos[1] = min(pos[1], pow(0.5, 0.5));\n\t\t\t\tpos[1] = max(pos[1], -pow(0.5, 0.5));\n\t\t\t}\n\t\t\tpos[0] /= pow(0.5, 0.5);\n\t\t\tpos[1] /= pow(0.5, 0.5);\n\t\t\tgeom.push(pos[0] * width, pos[1] * height, 0, 0, 0, 1, pos[0] / 2 + 0.5, pos[1] / 2 + 0.5);\n\t\t}\n\t\treturn geom;\n\t};\n\n\texports.createRoundedRect = function (width, height, radius) {\n\t\tvar geom = vertexstruct.array();\n\t\tgeom.push(0, 0, 0, 0, 0, 1, 0.5, 0.5);\n\t\tfor (var i = 0; i < VTX_COUNT; i++) {\n\t\t\tvar segment = i / VTX_COUNT * PI * 2;\n\t\t\tvar pos = vec2(cos(segment), sin(segment));\n\t\t\tpos[0] *= radius;\n\t\t\tpos[1] *= radius;\n\t\t\tif (pos[0] > 0) {\n\t\t\t\tpos[0] += width - radius;\n\t\t\t} else {\n\t\t\t\tpos[0] -= width - radius;\n\t\t\t}\n\t\t\tif (pos[1] > 0) {\n\t\t\t\tpos[1] += height - radius;\n\t\t\t} else {\n\t\t\t\tpos[1] -= height - radius;\n\t\t\t}\n\t\t\tpos[0] /= width;\n\t\t\tpos[1] /= height;\n\t\t\tgeom.push(pos[0] * width, pos[1] * height, 0, 0, 0, 1, pos[0] / 2 + 0.5, pos[1] / 2 + 0.5);\n\t\t}\n\t\treturn geom;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/geometry/morphgeometry.js\n// module id = 127\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/geometry/morphgeometry.js?");

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _defineDreem;\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Acorn AST structure definition\n\ndefineDreem((_defineDreem = {\n\tProgram: { body: 2 },\n\tBinaryExpression: { left: 1, right: 1, operator: 0 },\n\tExpressionStatement: { expression: 1 },\n\tMemberExpression: { object: 1, property: 1, computed: 0 },\n\tCallExpression: { callee: 1, arguments: 2 },\n\tLogicalExpression: { left: 1, right: 1, operator: 0 }\n}, _defineProperty(_defineDreem, \"BinaryExpression\", { left: 1, right: 1, operator: 0 }), _defineProperty(_defineDreem, \"Identifier\", { name: 0 }), _defineProperty(_defineDreem, \"Literal\", { raw: 0, value: 0 }), _defineProperty(_defineDreem, \"ThisExpression\", {}), _defineProperty(_defineDreem, \"AssignmentExpression\", { left: 1, right: 1 }), _defineProperty(_defineDreem, \"FunctionDeclaration\", { id: 1, params: 2, body: 1 }), _defineProperty(_defineDreem, \"BlockStatement\", { body: 2 }), _defineProperty(_defineDreem, \"VariableDeclaration\", { declarations: 2, kind: 0 }), _defineProperty(_defineDreem, \"VariableDeclarator\", { id: 1, init: 1 }), _defineProperty(_defineDreem, \"FunctionExpression\", { id: 1, params: 2 }), _defineProperty(_defineDreem, \"ObjectExpression\", { properties: 3 }), _defineProperty(_defineDreem, \"ArrayExpression\", { elements: 2 }), _defineProperty(_defineDreem, \"NewExpression\", { callee: 1, arguments: 2 }), _defineProperty(_defineDreem, \"ConditionalExpression\", { test: 1, consequent: 1, alternate: 1 }), _defineProperty(_defineDreem, \"UpdateExpression\", { operator: 0, prefix: 0, argument: 1 }), _defineProperty(_defineDreem, \"SwitchStatement\", { discriminant: 1, cases: 2 }), _defineProperty(_defineDreem, \"SwitchCase\", { test: 1, consequent: 1 }), _defineProperty(_defineDreem, \"ReturnStatement\", { argument: 1 }), _defineProperty(_defineDreem, \"ThrowStatement\", { argument: 1 }), _defineProperty(_defineDreem, \"TryStatement\", { block: 1, handlers: 2, finalizer: 1 }), _defineProperty(_defineDreem, \"CatchClause\", { param: 1, guard: 1, body: 1 }), _defineProperty(_defineDreem, \"AwaitExpression\", { argument: 1 }), _defineProperty(_defineDreem, \"UnaryExpression\", { operator: 0, prefix: 0, argument: 1 }), _defineProperty(_defineDreem, \"IfStatement\", { test: 1, consequent: 1 }), _defineProperty(_defineDreem, \"ForStatement\", { init: 1, test: 1, update: 1, body: 1 }), _defineProperty(_defineDreem, \"EmptyStatement\", {}), _defineDreem));\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/acorndef.js\n// module id = 128\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/acorndef.js?");

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Acorn Serializer\n\ndefineDreem.class(function (requireDreem, exports, self) {\n\n\t// entrypoint for the serializer\n\tself.walk = function (node, parent, state) {\n\t\tif (!(node.type in this)) throw new Error('Dont have ' + node.type + ' in AST serialize');\n\t\treturn this[node.type](node, parent, state);\n\t};\n\n\tself.statements = function (array, parent, state) {\n\t\tvar out = '';\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tvar node = array[i];\n\t\t\tout += this[node.type](node, parent, state);\n\t\t}\n\t\treturn out;\n\t};\n\n\tself.list = function (array, parent, state) {\n\t\tvar out = '';\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tvar node = array[i];\n\t\t\tif (out) out += ', ';\n\t\t\tout += this[node.type](node, parent, state);\n\t\t}\n\t\treturn out;\n\t};\n\n\tself.Program = function (node, parent, state) {\n\t\treturn this.statements(node.body, node, state);\n\t};\n\n\tself.BinaryExpression = function (node, parent, state) {\n\t\treturn this.walk(node.left, node, state) + node.operator + this.walk(node.right, node, state);\n\t};\n\n\tself.AssignmentExpression = function (node, parent, state) {\n\t\treturn this.walk(node.left, node, state) + \"=\" + this.walk(node.right, node, state);\n\t};\n\n\tself.ExpressionStatement = function (node, parent, state) {\n\t\treturn this.walk(node.expression, node, state);\n\t};\n\n\tself.ThisExpression = function () {\n\t\treturn 'this';\n\t};\n\n\tself.MemberExpression = function (node, parent, state) {\n\t\tif (node.computed) return this.walk(node.object, node, state) + '[' + this.walk(node.property, node, state) + ']';\n\t\treturn this.walk(node.object, node, state) + '.' + node.property.name;\n\t};\n\n\tself.CallExpression = function (node, parent, state) {\n\t\treturn this.walk(node.callee, node, state) + '(' + this.list(node.arguments, node, state) + ')';\n\t};\n\n\tself.Identifier = function (node, parent, state) {\n\t\treturn node.name;\n\t};\n\n\tself.Literal = function (node, parent, state) {\n\t\treturn node.raw;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/acornserializer.js\n// module id = 129\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/acornserializer.js?");

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports, module) {\n\tmodule.exports = function dump(ast, defs, depth) {\n\t\tif (!ast) return '';\n\t\tif (depth === undefined) depth = \"\";\n\t\tvar out = ast.type + '\\n';\n\t\t//for(var key in ast) out += depth + ' - ' + key\n\t\tvar lut = defs[ast.type];\n\t\tif (!lut) console.log('Cannot find', ast.type, ast);\n\t\tfor (var item in lut) {\n\t\t\tvar type = lut[item];\n\t\t\tif (type === 3) {\n\t\t\t\t// object\n\t\t\t\tvar array = ast[item];\n\t\t\t\tif (array) for (var i = 0; i < array.length; i++) {\n\t\t\t\t\tvar item = array[i];\n\t\t\t\t\tout += depth + item.key.name + ':' + dump(item.value, defs, '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 2) {\n\t\t\t\t//array\n\t\t\t\tvar array = ast[item];\n\t\t\t\tif (array) for (var i = 0; i < array.length; i++) {\n\t\t\t\t\tout += depth + item + ':' + dump(array[i], defs, depth + ' ');\n\t\t\t\t}\n\t\t\t} else if (type === 1) {\n\t\t\t\t// object\n\t\t\t\tvar obj = ast[item];\n\t\t\t\tif (obj !== undefined) out += depth + item + ':' + dump(obj, defs, depth + ' ');\n\t\t\t} else if (type === 0) {\n\t\t\t\tvar value = ast[item];\n\t\t\t\tif (value !== undefined) out += depth + item + ':' + ast[item];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/astdumper.js\n// module id = 130\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/astdumper.js?");

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\ndefineDreem.class(\"$system/parse/onejswalk\", function (baseclass, require) {\n\n\tvar jsformatter = requireDreem('$system/parse/jsformatter');\n\n\tthis.toSource = function (ast) {\n\t\tif (!ast) {\n\t\t\tast = this.at;\n\t\t}\n\n\t\tvar buf = {\n\t\t\tout: '',\n\t\t\tcharCodeAt: function charCodeAt(i) {\n\t\t\t\treturn this.out.charCodeAt(i);\n\t\t\t},\n\t\t\tchar_count: 0\n\t\t};\n\n\t\tjsformatter.walk(ast, buf, {}, function (str) {\n\n\t\t\tif (str === '\\n') {\n\t\t\t\tthis.last_is_newline = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (str === '\\t' && this.last_is_newline) {\n\t\t\t\tstr = '\\n';\n\t\t\t\tfor (var i = 0; i < this.actual_indent; i++) {\n\t\t\t\t\tstr += '  ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.last_is_newline = false;\n\n\t\t\tbuf.char_count += str.length;\n\t\t\tbuf.out += str;\n\t\t});\n\n\t\treturn buf.out;\n\t};\n\n\tthis.atConstructor = function (rootnode, astpath) {\n\t\tthis._root = rootnode;\n\t\tif (astpath && !Array.isArray(astpath)) {\n\t\t\tastpath = [astpath];\n\t\t}\n\t\tthis._stages = astpath;\n\t\tthis.reset();\n\t\tif (this._stages) {\n\t\t\tthis.scan();\n\t\t}\n\t};\n\n\tthis.reset = function () {\n\t\tthis._unstage();\n\t\tthis.atparent = undefined;\n\t\tthis.atindex = undefined;\n\t\tthis.atstate = undefined;\n\t\tthis.at = this._root;\n\t\treturn this;\n\t};\n\n\tthis.scan = function (newstages) {\n\t\tif (newstages) {\n\t\t\tthis._unstage();\n\t\t\tthis._stages = newstages;\n\t\t}\n\n\t\twhile (this._prepare()) {\n\t\t\tthis.walk(this.at);\n\t\t}\n\t\treturn this;\n\t};\n\n\tthis._unstage = function () {\n\t\tif (this._stage) {\n\t\t\tvar type = this._stage.type;\n\t\t\tthis._stage = undefined;\n\t\t\tif (type) {\n\t\t\t\t//\t\t\t\tdelete this[type];\n\t\t\t\tthis[type] = baseclass[type];\n\t\t\t}\n\t\t}\n\t};\n\n\tthis._match = function (stage, node, parent) {\n\t\tvar match = !!node;\n\n\t\tif (match) {\n\t\t\tfor (var prop in stage) {\n\t\t\t\tif (stage.hasOwnProperty(prop) && prop[0] != '_') {\n\t\t\t\t\tvar val = stage[prop];\n\t\t\t\t\tvar nodeval = node[prop];\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === \"object\") {\n\t\t\t\t\t\t\tmatch = match && this._match(val, nodeval);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmatch = match && nodeval === val;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// we just ignore empty keys in search term for now since onejsgen will create them regardless\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!match) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn match;\n\t};\n\n\tthis._prepare = function () {\n\t\tthis._unstage();\n\t\tif (this._stages) {\n\t\t\tthis._stage = this._stages.shift();\n\t\t\tif (this._stage) {\n\t\t\t\tthis[this._stage.type] = function (node, parent, state, index) {\n\t\t\t\t\tvar stageindex = this._stage._index;\n\t\t\t\t\tif (stageindex >= 0 && stageindex !== index || !this._match(this._stage, node, parent)) {\n\t\t\t\t\t\tbaseclass[node.type].call(this, node, parent, state, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.atparent = parent;\n\t\t\t\t\t\tthis.atindex = index;\n\t\t\t\t\t\tthis.atstate = state;\n\t\t\t\t\t\tthis.at = node;\n\t\t\t\t\t\tthis.scan();\n\t\t\t\t\t}\n\t\t\t\t}.bind(this);\n\t\t\t}\n\t\t}\n\n\t\treturn !!this._stage;\n\t};\n\n\t//for (var prop in this) {\n\t//\tif (/^[A-Z]/.test(prop)) {\n\t//\t\tconsole.log('pp', prop)\n\t//\t\tthis[prop] = function(node, parent, state) {\n\t//          console.log('Found', node.type)\n\t//\t\t\tbaseclass[node.type].call(this, node, parent, state)\n\t//\t\t}.bind(this)\n\t//\t}\n\t//}\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/astscanner.js\n// module id = 131\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/astscanner.js?");

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports, self) {\n\n\tself.atConstructor = function (defs) {\n\t\tthis.defs = defs;\n\t};\n\n\tself.walk = function (node, parent, defs) {\n\t\tif (this[node.type] && this[node.type](node, parent)) return true;\n\t\tvar lut = this.defs[node.type];\n\t\tif (!lut) console.log('Cannot find', node.type, node);\n\t\tfor (var item in lut) {\n\t\t\tvar type = lut[item];\n\t\t\tif (type == 3) {\n\t\t\t\t// object\n\t\t\t\tvar array = node[item];\n\t\t\t\tif (array) for (var i = 0; i < array.length; i++) {\n\t\t\t\t\tvar item = array[i];\n\t\t\t\t\tif (this.walk(item.key, node)) return true;\n\t\t\t\t\tif (this.walk(item.value, node)) return true;\n\t\t\t\t}\n\t\t\t} else if (type == 2) {\n\t\t\t\t//array\n\t\t\t\tvar array = node[item];\n\t\t\t\tif (array) for (var i = 0; i < array.length; i++) {\n\t\t\t\t\tif (this.walk(array[i], node)) return true;\n\t\t\t\t}\n\t\t\t} else if (type == 1) {\n\t\t\t\t// object\n\t\t\t\tif (node[item] && this.walk(node[item], node)) return true;\n\t\t\t}\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/astwalker.js\n// module id = 132\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/astwalker.js?");

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\t// internal, Reserialize tries to turn the JS datastructure the parser outputs back into valid XML\n\texports.reserialize = function (node, spacing, indent) {\n\t\tif (spacing === undefined) spacing = '\\t';\n\t\tvar ret = '';\n\t\tvar child = '';\n\t\tvar nontextchild = false;\n\t\tif (node.child) {\n\t\t\tfor (var i = 0, l = node.child.length; i < l; i++) {\n\t\t\t\tvar sub = node.child[i];\n\t\t\t\tif (sub.tag !== '$text') nontextchild = true;\n\t\t\t\tchild += this.reserialize(sub, spacing, indent === undefined ? '' : indent + spacing);\n\t\t\t}\n\t\t}\n\t\tif (!node.tag) return child;\n\t\tif (node.tag.charAt(0) !== '$') {\n\t\t\tret += indent + '<' + node.tag;\n\t\t\tvar attr = node.attr;\n\t\t\tif (attr) {\n\t\t\t\tfor (var k in attr) {\n\t\t\t\t\tvar val = attr[k];\n\t\t\t\t\tif (ret[ret.length - 1] != ' ') ret += ' ';\n\t\t\t\t\tret += k;\n\t\t\t\t\tvar delim = \"'\";\n\t\t\t\t\tif (val !== 1) {\n\t\t\t\t\t\tif (typeof val === 'string' && val.indexOf(delim) !== -1) delim = '\"';\n\t\t\t\t\t\tret += '=' + delim + val + delim;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (child) {\n\t\t\t\tif (!nontextchild) {\n\t\t\t\t\tret += '>' + child + '</' + node.tag + '>\\n';\n\t\t\t\t} else {\n\t\t\t\t\tret += '>\\n' + child + indent + '</' + node.tag + '>\\n';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tret += '/>\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tif (node.tag == '$text') ret += node.value;else if (node.tag == '$cdata') ret += indent + '<![CDATA[' + node.value + ']]>\\n';else if (node.tag == '$comment') ret += indent + '<!--' + node.value + '-->\\n';else if (node.tag == '$root') ret += child;else if (node.tag == '$empty') ret += Array(node.value - 1).join('\\n');\n\t\t}\n\t\treturn ret;\n\t};\n\n\texports.childrenByTagName = function (node, name, res) {\n\t\tif (!res) res = [];\n\t\tif (!node) return res;\n\t\tif (node.child) {\n\t\t\tvar idx = name.indexOf('/');\n\t\t\tvar rest;\n\t\t\tif (idx !== -1) {\n\t\t\t\trest = name.slice(idx + 1);\n\t\t\t\tname = name.slice(0, idx);\n\t\t\t}\n\t\t\tfor (var i = 0, l = node.child.length; i < l; i++) {\n\t\t\t\tvar sub = node.child[i];\n\t\t\t\tif (sub.tag === name) {\n\t\t\t\t\tif (rest !== undefined) {\n\t\t\t\t\t\texports.childrenByTagName(sub, rest, res);\n\t\t\t\t\t} else res.push(sub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\texports.childByTagName = function (node, name) {\n\t\tif (node.child) {\n\t\t\tvar idx = name.indexOf('/');\n\t\t\tvar rest;\n\t\t\tif (idx !== -1) {\n\t\t\t\trest = name.slice(idx + 1);\n\t\t\t\tname = name.slice(0, idx);\n\t\t\t}\n\t\t\tfor (var i = 0, l = node.child.length; i < l; i++) {\n\t\t\t\tvar sub = node.child[i];\n\t\t\t\tif (sub.tag === name) {\n\t\t\t\t\tif (rest !== undefined) {\n\t\t\t\t\t\treturn exports.childByTagName(sub, rest);\n\t\t\t\t\t}\n\t\t\t\t\treturn sub;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\texports.childByAttribute = function (node, name, value, tag) {\n\t\tfor (var i = 0, l = node.child.length; i < l; i++) {\n\t\t\tvar sub = node.child[i];\n\t\t\tif ((tag === undefined || sub.tag == tag) && sub.attr && name in sub.attr) {\n\t\t\t\tif (value === undefined) return sub;else if (sub.attr[name] == value) return sub;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.__trace__ = 3;\n\n\texports.createChildNode = function (tag, parent) {\n\t\tvar node = this.createNode(tag, 0);\n\t\tthis.appendChild(parent, node);\n\t\treturn node;\n\t};\n\n\texports.appendChild = this.appendChild = function (node, value) {\n\t\tvar i = 0;\n\t\tif (!node.child) node.child = [value];else node.child.push(value);\n\t};\n\n\texports.createNode = this.createNode = function (tag, charpos) {\n\t\treturn { tag: tag, pos: charpos };\n\t};\n\n\tthis.atError = function (message, where) {\n\t\tthis.errors.push({ message: message, where: where });\n\t};\n\n\tvar isempty = /^[\\r\\n\\s]+$/; // discard empty textnodes\n\n\t/* Internal Called when encountering a textnode*/\n\tthis.atText = function (value, start) {\n\t\tif (!value.match(isempty)) {\n\t\t\tvar node = this.createNode('$text', start);\n\t\t\tnode.value = this.processEntities(value, start);\n\t\t\tthis.appendChild(this.node, node);\n\t\t} else {\n\t\t\tvar node = this.createNode('$empty', start);\n\t\t\tnode.value = value.split(/\\n/).length;\n\t\t\tthis.appendChild(this.node, node);\n\t\t}\n\t};\n\n\t/* Internal Called when encountering a comment <!-- --> node*/\n\tthis.atComment = function (value, start, end) {\n\t\tvar node = this.createNode('$comment', start);\n\t\tnode.value = value;\n\t\tthis.appendChild(this.node, node);\n\t};\n\n\t/* Internal Called when encountering a CDATA <![CDATA[ ]]> node*/\n\tthis.atCDATA = function (value, start, end) {\n\t\tvar node = this.createNode('$cdata', start);\n\t\tnode.value = value;\n\t\tthis.appendChild(this.node, node);\n\t};\n\n\t/* Internal Called when encountering a <? ?> process node*/\n\tthis.atProcess = function (value, start, end) {\n\t\tvar node = this.createNode('$process', start);\n\t\tnode.value = value;\n\t\tthis.appendChild(this.node, node);\n\t};\n\n\t/* Internal Called when encountering a tag beginning <tag */\n\tthis.atTagBegin = function (name, start, end) {\n\t\tvar newnode = this.createNode(name, start);\n\n\t\tthis.appendChild(this.node, newnode);\n\n\t\t// push the state and set it\n\t\tthis.parents.push(this.node, this.tagname, this.tagstart);\n\t\tthis.tagstart = start;\n\t\tthis.tagname = name;\n\t\tthis.node = newnode;\n\t};\n\n\t/* Internal Called when encountering a tag ending > */\n\tthis.atTagEnd = function (start, end) {\n\t\tthis.last_attr = undefined;\n\t\tif (this.self_closing_tags && this.tagname in this.self_closing_tags || this.tagname.charCodeAt(0) == 33) {\n\t\t\tthis.tagstart = this.parents.pop();\n\t\t\tthis.tagname = this.parents.pop();\n\t\t\tthis.node = this.parents.pop();\n\t\t}\n\t};\n\n\t/* Internal Called when encountering a closing tag </tag> */\n\tthis.atClosingTag = function (name, start, end) {\n\t\tthis.last_attr = undefined;\n\t\t// attempt to match closing tag\n\t\tif (this.tagname !== name) {\n\t\t\tthis.atError('Tag mismatch </' + name + '> with <' + this.tagname + '>', start, this.tagstart);\n\t\t}\n\t\t// attempt to fix broken html\n\t\t//while(this.node && name !== undefined && this.tagname !== name && this.parents.length){\n\t\t// this.tagname = this.parents.pop()\n\t\t// this.node = this.parents.pop()\n\t\t//}\n\t\tif (this.parents.length) {\n\t\t\tthis.tagstart = this.parents.pop();\n\t\t\tthis.tagname = this.parents.pop();\n\t\t\tthis.node = this.parents.pop();\n\t\t} else {\n\t\t\tthis.atError('Dangling closing tag </' + name + '>', start);\n\t\t}\n\t};\n\n\t/* Internal Called when encountering a closing tag </close> */\n\tthis.atImmediateClosingTag = function (start, end) {\n\t\tthis.atClosingTag(this.tagname, start);\n\t};\n\n\t/* Internal Called when encountering an attribute name name= */\n\tthis.atAttrName = function (name, start, end) {\n\t\tif (name == 'tag' || name == 'child') {\n\t\t\tthis.atError('Attribute name collision with JSON structure' + name, start);\n\t\t\tname = '_' + name;\n\t\t}\n\t\tthis.last_attr = name;\n\t\tif (this.node.attr && name in this.node.attr) {\n\t\t\tthis.atError('Duplicate attribute ' + name + ' in tag ' + this.tagname, start);\n\t\t}\n\t\tif (!this.node.attr) this.node.attr = {};\n\t\tthis.node.attr[this.last_attr] = null;\n\t};\n\n\t/* Internal Called when encountering an attribute value \"value\" */\n\tthis.atAttrValue = function (val, start, end) {\n\t\tif (this.last_attr === undefined) {\n\t\t\tthis.atError('Unexpected attribute value ' + val, start);\n\t\t} else {\n\t\t\tthis.node.attr[this.last_attr] = this.processEntities(val, start);\n\t\t}\n\t};\n\n\t// all magic HTML this closing tags. set this to undefined if you want XML behavior\n\tthis.self_closing_tags = {\n\t\t'area': 1, 'base': 1, 'br': 1, 'col': 1, 'embed': 1, 'hr': 1, 'img': 1,\n\t\t'input': 1, 'keygen': 1, 'link': 1, 'menuitem': 1, 'meta': 1, 'param': 1, 'source': 1, 'track': 1, 'wbr': 1\n\n\t\t// todo use these\n\t};var entities = {\n\t\t\"amp\": 38, \"gt\": 62, \"lt\": 60, \"quot\": 34, \"apos\": 39, \"AElig\": 198, \"Aacute\": 193, \"Acirc\": 194,\n\t\t\"Agrave\": 192, \"Aring\": 197, \"Atilde\": 195, \"Auml\": 196, \"Ccedil\": 199, \"ETH\": 208, \"Eacute\": 201, \"Ecirc\": 202,\n\t\t\"Egrave\": 200, \"Euml\": 203, \"Iacute\": 205, \"Icirc\": 206, \"Igrave\": 204, \"Iuml\": 207, \"Ntilde\": 209, \"Oacute\": 211,\n\t\t\"Ocirc\": 212, \"Ograve\": 210, \"Oslash\": 216, \"Otilde\": 213, \"Ouml\": 214, \"THORN\": 222, \"Uacute\": 218, \"Ucirc\": 219,\n\t\t\"Ugrave\": 217, \"Uuml\": 220, \"Yacute\": 221, \"aacute\": 225, \"acirc\": 226, \"aelig\": 230, \"agrave\": 224, \"aring\": 229,\n\t\t\"atilde\": 227, \"auml\": 228, \"ccedil\": 231, \"eacute\": 233, \"ecirc\": 234, \"egrave\": 232, \"eth\": 240, \"euml\": 235,\n\t\t\"iacute\": 237, \"icirc\": 238, \"igrave\": 236, \"iuml\": 239, \"ntilde\": 241, \"oacute\": 243, \"ocirc\": 244, \"ograve\": 242,\n\t\t\"oslash\": 248, \"otilde\": 245, \"ouml\": 246, \"szlig\": 223, \"thorn\": 254, \"uacute\": 250, \"ucirc\": 251, \"ugrave\": 249,\n\t\t\"uuml\": 252, \"yacute\": 253, \"yuml\": 255, \"copy\": 169, \"reg\": 174, \"nbsp\": 160, \"iexcl\": 161, \"cent\": 162, \"pound\": 163,\n\t\t\"curren\": 164, \"yen\": 165, \"brvbar\": 166, \"sect\": 167, \"uml\": 168, \"ordf\": 170, \"laquo\": 171, \"not\": 172, \"shy\": 173,\n\t\t\"macr\": 175, \"deg\": 176, \"plusmn\": 177, \"sup1\": 185, \"sup2\": 178, \"sup3\": 179, \"acute\": 180, \"micro\": 181, \"para\": 182,\n\t\t\"middot\": 183, \"cedil\": 184, \"ordm\": 186, \"raquo\": 187, \"frac14\": 188, \"frac12\": 189, \"frac34\": 190, \"iquest\": 191,\n\t\t\"times\": 215, \"divide\": 247, \"OElig\": 338, \"oelig\": 339, \"Scaron\": 352, \"scaron\": 353, \"Yuml\": 376, \"fnof\": 402,\n\t\t\"circ\": 710, \"tilde\": 732, \"Alpha\": 913, \"Beta\": 914, \"Gamma\": 915, \"Delta\": 916, \"Epsilon\": 917, \"Zeta\": 918,\n\t\t\"Eta\": 919, \"Theta\": 920, \"Iota\": 921, \"Kappa\": 922, \"Lambda\": 923, \"Mu\": 924, \"Nu\": 925, \"Xi\": 926, \"Omicron\": 927,\n\t\t\"Pi\": 928, \"Rho\": 929, \"Sigma\": 931, \"Tau\": 932, \"Upsilon\": 933, \"Phi\": 934, \"Chi\": 935, \"Psi\": 936, \"Omega\": 937,\n\t\t\"alpha\": 945, \"beta\": 946, \"gamma\": 947, \"delta\": 948, \"epsilon\": 949, \"zeta\": 950, \"eta\": 951, \"theta\": 952,\n\t\t\"iota\": 953, \"kappa\": 954, \"lambda\": 955, \"mu\": 956, \"nu\": 957, \"xi\": 958, \"omicron\": 959, \"pi\": 960, \"rho\": 961,\n\t\t\"sigmaf\": 962, \"sigma\": 963, \"tau\": 964, \"upsilon\": 965, \"phi\": 966, \"chi\": 967, \"psi\": 968, \"omega\": 969,\n\t\t\"thetasym\": 977, \"upsih\": 978, \"piv\": 982, \"ensp\": 8194, \"emsp\": 8195, \"thinsp\": 8201, \"zwnj\": 8204, \"zwj\": 8205,\n\t\t\"lrm\": 8206, \"rlm\": 8207, \"ndash\": 8211, \"mdash\": 8212, \"lsquo\": 8216, \"rsquo\": 8217, \"sbquo\": 8218, \"ldquo\": 8220,\n\t\t\"rdquo\": 8221, \"bdquo\": 8222, \"dagger\": 8224, \"Dagger\": 8225, \"bull\": 8226, \"hellip\": 8230, \"permil\": 8240,\n\t\t\"prime\": 8242, \"Prime\": 8243, \"lsaquo\": 8249, \"rsaquo\": 8250, \"oline\": 8254, \"frasl\": 8260, \"euro\": 8364,\n\t\t\"image\": 8465, \"weierp\": 8472, \"real\": 8476, \"trade\": 8482, \"alefsym\": 8501, \"larr\": 8592, \"uarr\": 8593,\n\t\t\"rarr\": 8594, \"darr\": 8595, \"harr\": 8596, \"crarr\": 8629, \"lArr\": 8656, \"uArr\": 8657, \"rArr\": 8658, \"dArr\": 8659,\n\t\t\"hArr\": 8660, \"forall\": 8704, \"part\": 8706, \"exist\": 8707, \"empty\": 8709, \"nabla\": 8711, \"isin\": 8712,\n\t\t\"notin\": 8713, \"ni\": 8715, \"prod\": 8719, \"sum\": 8721, \"minus\": 8722, \"lowast\": 8727, \"radic\": 8730, \"prop\": 8733,\n\t\t\"infin\": 8734, \"ang\": 8736, \"and\": 8743, \"or\": 8744, \"cap\": 8745, \"cup\": 8746, \"int\": 8747, \"there4\": 8756, \"sim\": 8764,\n\t\t\"cong\": 8773, \"asymp\": 8776, \"ne\": 8800, \"equiv\": 8801, \"le\": 8804, \"ge\": 8805, \"sub\": 8834, \"sup\": 8835, \"nsub\": 8836,\n\t\t\"sube\": 8838, \"supe\": 8839, \"oplus\": 8853, \"otimes\": 8855, \"perp\": 8869, \"sdot\": 8901, \"lceil\": 8968, \"rceil\": 8969,\n\t\t\"lfloor\": 8970, \"rfloor\": 8971, \"lang\": 9001, \"rang\": 9002, \"loz\": 9674, \"spades\": 9824, \"clubs\": 9827, \"hearts\": 9829,\n\t\t\"diams\": 9830\n\t};\n\n\tvar entity_rx = new RegExp(\"&(\" + Object.keys(entities).join('|') + \");|&#([0-9]+);|&x([0-9a-fA-F]+);\", \"g\");\n\n\t/* Internal Called when processing entities */\n\tthis.processEntities = function (value, start) {\n\t\tif (typeof value != 'string') value = new String(value);\n\n\t\treturn value.replace(entity_rx, function (m, name, num, hex, off) {\n\t\t\tif (name !== undefined) {\n\t\t\t\tif (!(name in entities)) {\n\t\t\t\t\tthis.error('Entity not found &' + m, start + off);\n\t\t\t\t\treturn m;\n\t\t\t\t}\n\t\t\t\tString.fromCharCode(entities[name]);\n\t\t\t} else if (num !== undefined) {\n\t\t\t\treturn String.fromCharCode(parseInt(num));\n\t\t\t} else if (hex !== undefined) {\n\t\t\t\treturn String.fromCharCode(parseInt(hex, 16));\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * @method parse\n  * Parse an XML/HTML document, returns JS object structure that looks like this\n  * The implemented object serialization has one limitation: dont use attributes named\n  * 'tag' and 'child' and dont use tags starting with $sign: <$tag>\n  * You cant use the attribute name 'tag' and 'child'\n  * each node is a JSON-stringifyable object\n  * the following XML\n  *\n  * <tag attr='hi'>mytext</tag>\n  *\n  * becomes this JS object:\n  * {\n  *   tag:'$root'\n  *   child:[{\n  *     tag:'mytag'\n  *     attr:'hi'\n  *     child:[{\n  *       tag:'$text'\n  *       value:'mytext'\n  *     }]\n  *   }]\n  * }\n  *\n  * @param {String} input XML/HTML\n  * @return {Object} JS output structure\n  * this.errors[] is array of [errormsg,erroroffset,errormsg,erroroffset]\n  * You will always get the JS object as far as it managed to parse\n  * So check parserobj.errors.length after for errorhandling\n  *\n  */\n\n\tthis.atConstructor = function (data) {\n\t\tif (arguments.length) return this.parse(data);\n\t};\n\n\tthis.parse = function (source) {\n\t\t// lets create some state\n\t\tvar root = this.node = this.createNode('$root', 0);\n\n\t\tthis.errors = [];\n\t\tthis.parents = [];\n\t\tthis.last_attr = undefined;\n\t\tthis.tagname = '';\n\n\t\tif (typeof source != 'string') source = source.toString();\n\t\tvar len = source.length;\n\t\tvar pos = 0;\n\t\tvar start = pos;\n\t\twhile (pos < len) {\n\t\t\tvar ch = source.charCodeAt(pos++);\n\t\t\tif (ch == 60) {\n\t\t\t\t// <\n\t\t\t\tvar next = source.charCodeAt(pos);\n\t\t\t\tif (next == 32 || next == 9 || next == 10 || next == 12 || next == 37 || next == 40 || next == 41 || next == 45 || next == 35 || next == 36 || next == 92 || next == 94 || next >= 48 && next <= 57) continue;\n\t\t\t\t// lets emit textnode since last\n\t\t\t\tif (start != pos - 1) {\n\t\t\t\t\tthis.atText(source.slice(start, pos - 1), start, pos - 1);\n\t\t\t\t}\n\t\t\t\tif (next == 33) {\n\t\t\t\t\t// <!\n\t\t\t\t\tafter = source.charCodeAt(pos + 1);\n\t\t\t\t\tif (after == 45) {\n\t\t\t\t\t\t// <!- comment\n\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t\t\tif (ch == 45 && source.charCodeAt(pos) == 45 && source.charCodeAt(pos + 1) == 62) {\n\t\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\t\tthis.atComment(source.slice(start + 1, pos - 3), start, pos);\n\t\t\t\t\t\t\t\t//console.log(source.slice(start + 1, pos - 3))\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (pos == len) this.atError(\"Unexpected end of files while reading <!--\", start);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (after == 91) {\n\t\t\t\t\t\t// <![ probably followed by CDATA[ just parse to ]]>\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\tpos += 8;\n\t\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t\t\tif (ch == 93 && source.charCodeAt(pos) == 93 && source.charCodeAt(pos + 1) == 62) {\n\t\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\t\tthis.atCDATA(source.slice(start + 8, pos - 3), start, pos);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (pos == len) this.atError(\"Unexpected end of file while reading <![\", start);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (next == 63) {\n\t\t\t\t\t// <? command\n\t\t\t\t\tpos++;\n\t\t\t\t\tstart = pos;\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t\tif (ch == 63 && source.charCodeAt(pos) == 62) {\n\t\t\t\t\t\t\tpos++;\n\t\t\t\t\t\t\tthis.atProcess(source.slice(start, pos - 2), start - 1, pos);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (pos == len) this.atError(\"Unexpected end of file while reading <?\", start);\n\t\t\t\t\t}\n\t\t\t\t\tstart = pos;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (next == 47) {\n\t\t\t\t\t// </ closing tag\n\t\t\t\t\tstart = pos + 1;\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t\tif (ch == 62) {\n\t\t\t\t\t\t\tthis.atClosingTag(source.slice(start, pos - 1), start, pos);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (pos == len) this.atError(\"Unexpected end of file at </\" + source.slice(start, pos), start);\n\t\t\t\t\t}\n\t\t\t\t\tstart = pos;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tstart = pos; // try to parse a tag\n\t\t\t\tvar tag = true; // first name encountered is tagname\n\t\t\t\twhile (pos < len) {\n\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t// whitespace, end of tag or assign\n\t\t\t\t\t// if we hit a s\n\t\t\t\t\tif (ch == 9 || ch == 10 || ch == 12 || ch == 13 || ch == 32 || ch == 47 || ch == 61 || ch == 62) {\n\t\t\t\t\t\tif (start != pos - 1) {\n\t\t\t\t\t\t\tif (tag) {\n\t\t\t\t\t\t\t\t// lets emit the tagname\n\t\t\t\t\t\t\t\tthis.atTagBegin(source.slice(start, pos - 1), start - 1, pos);\n\t\t\t\t\t\t\t\ttag = false;\n\t\t\t\t\t\t\t} // emit attribute name\n\t\t\t\t\t\t\telse this.atAttrName(source.slice(start, pos - 1), start, pos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\tif (ch == 62) {\n\t\t\t\t\t\t\t// >\n\t\t\t\t\t\t\tthis.atTagEnd(pos);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (ch == 47 && source.charCodeAt(pos) == 62) {\n\t\t\t\t\t\t\t// />\n\t\t\t\t\t\t\tpos++;\n\t\t\t\t\t\t\tthis.atImmediateClosingTag(pos);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (ch == 34 || ch == 39) {\n\t\t\t\t\t\t// \" or '\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t\tvar end = ch;\n\t\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\t\tch = source.charCodeAt(pos++);\n\t\t\t\t\t\t\tif (ch == end) {\n\t\t\t\t\t\t\t\tthis.atAttrValue(source.slice(start, pos - 1), start, pos);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (pos == len) this.atError(\"Unexpected end of file while reading attribute\", start);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = pos;\n\t\t\t\t\t} else if (ch == 60) this.atError(\"Unexpected < while parsing a tag\", start);\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t}\n\t\t}\n\t\tif (this.parents.length) this.atError(\"Missign closing tags at end\", pos);\n\t\treturn root;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/htmlparser.js\n// module id = 133\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/htmlparser.js?");

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem) {\n\treturn function (img) {\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tcanvas.width = img.width;\n\t\tcanvas.height = img.height;\n\t\tvar ctx = canvas.getContext('2d');\n\t\tctx.drawImage(img, 0, 0);\n\t\tvar data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t\treturn data;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/imageparser.js\n// module id = 134\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/imageparser.js?");

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\texports.parseDoc = function parseDoc(constructor) {\n\t\tif (!constructor) return;\n\n\t\tif (!this.BlankDoc) {\n\t\t\t// Build a minimal correct version of the ClassDoc structure\n\t\t\tthis.BlankDoc = function BlankDoc() {\n\t\t\t\treturn {\n\t\t\t\t\tclass_name: \"\",\n\t\t\t\t\tbody_text: [], // array with strings. each string = paragraph\n\t\t\t\t\texamples: [],\n\t\t\t\t\tevents: [],\n\t\t\t\t\tattributes: [],\n\t\t\t\t\tstate_attributes: [],\n\t\t\t\t\tmethods: [],\n\t\t\t\t\tinner_classes: [],\n\t\t\t\t\tbase_class_chain: []\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\tvar class_doc = this.BlankDoc();\n\n\t\tvar proto = constructor.prototype;\n\n\t\tif (!proto) {\n\t\t\t//xxx console.log('this has do constructor, what do?', constructor)\n\t\t\treturn class_doc;\n\t\t}\n\n\t\tvar p = constructor;\n\n\t\t// build parent chain\n\t\twhile (p) {\n\t\t\tif (p.prototype) {\n\t\t\t\tvar prot = Object.getPrototypeOf(p.prototype);\n\t\t\t\tif (prot) {\n\t\t\t\t\tp = prot.constructor;\n\t\t\t\t\tclass_doc.base_class_chain.push({ name: p.name, path: p.module ? p.module.id ? p.module.id : \"\" : \"\", p: p });\n\t\t\t\t} else {\n\t\t\t\t\tp = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tp = null;\n\t\t\t}\n\t\t}\n\n\t\tclass_doc.class_name = proto.constructor.name;\n\n\t\tif (!this.Parser) {\n\t\t\tthis.Parser = requireDreem('$system/parse/onejsparser');\n\t\t}\n\n\t\tif (!proto.constructor.body) {\n\t\t\treturn;\n\t\t}\n\t\t// ok lets add the comments at the top of the class\n\t\tvar ast = this.Parser.parse(proto.constructor.body.toString());\n\n\t\t// lets process the inner classes\n\t\t// lets do an ast match what we want is\n\t\tvar class_body = ast.steps[0];\n\n\t\tfunction grabFirstCommentBelow(commentarray) {\n\t\t\tvar res = [];\n\t\t\tif (!commentarray) return res;\n\t\t\tvar last1 = false;\n\t\t\tfor (var i = 0; i < commentarray.length; i++) {\n\t\t\t\tvar com = commentarray[i];\n\t\t\t\tif (com === 1) {\n\t\t\t\t\tif (last1 === true) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast1 = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlast1 = false;\n\t\t\t\t\tres.push(com);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tfunction grabFirstCommentAbove(commentarray) {\n\t\t\tvar res = [];\n\t\t\tif (!commentarray) return res;\n\t\t\tvar last1 = false;\n\t\t\tfor (var i = commentarray.length - 1; i >= 0; i--) {\n\t\t\t\tvar com = commentarray[i];\n\t\t\t\tif (com === 1) {\n\t\t\t\t\tif (last1 === true) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast1 = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlast1 = false;\n\t\t\t\t\tres.unshift(com.trim());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tvar body_steps = class_body.body.steps;\n\n\t\tif (!body_steps[0]) return class_doc;\n\n\t\tvar classcomment = grabFirstCommentBelow(body_steps[0].cmu);\n\t\tif (classcomment) {\n\t\t\tif (!class_doc.body_text) {\n\t\t\t\tclass_doc.body_text = [];\n\t\t\t}\n\t\t\tfor (i = 0; i < classcomment.length; i++) {\n\t\t\t\tclass_doc.body_text.push(classcomment[i]);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < body_steps.length; i++) {\n\t\t\tvar step = body_steps[i];\n\n\t\t\tif (step.type === 'Assign') {\n\t\t\t\tif (step.left.type === 'Key' && step.left.object.type === 'This' && step.left.key.name === 'attributes' && step.right.type === 'Object') {\n\t\t\t\t\tfor (var j = 0; j < step.right.keys.length; j++) {\n\t\t\t\t\t\tvar key = step.right.keys[j];\n\t\t\t\t\t\tvar attrname = key.key.name;\n\t\t\t\t\t\tvar attr = proto._attributes[attrname];\n\t\t\t\t\t\tif (!attr) {\n\t\t\t\t\t\t\t//TODO not sure why this one has no name sometimes, plx fix\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar cmt = grabFirstCommentAbove(key.cmu);\n\t\t\t\t\t\tvar defvaluename = attr.value;\n\n\t\t\t\t\t\tvar typename = \"typeless\";\n\t\t\t\t\t\tif (attr.type && attr.type.name) typename = attr.type.name.toString();\n\n\t\t\t\t\t\tif (typename === 'Event') {\n\t\t\t\t\t\t\tclass_doc.events.push({ name: attrname, body_text: grabFirstCommentAbove(step.cmu) });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclass_doc.attributes.push({ name: attrname, type: typename, defvalue: defvaluename, body_text: grabFirstCommentAbove(key.cmu) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (step.left.type === 'Key' && step.left.object.type === 'Key' && step.left.object.object.type === 'This' && step.left.object.key.name === 'constructor' && step.left.key.name === 'examples' && step.right.type === 'Object') {\n\t\t\t\t\tfor (var j = 0; j < step.right.keys.length; j++) {\n\t\t\t\t\t\tvar key = step.right.keys[j];\n\n\t\t\t\t\t\tvar example = {};\n\t\t\t\t\t\texample.body_text = grabFirstCommentAbove(key.cmu);\n\n\t\t\t\t\t\tvar examplename = key.key.name;\n\t\t\t\t\t\texample.name = examplename;\n\t\t\t\t\t\texample.examplefunc = proto.constructor.examples[examplename];\n\t\t\t\t\t\tclass_doc.examples.push(example);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (step.left.type === 'Key' && step.left.object.type === 'This' && step.right.type === 'Function') {\n\t\t\t\t\tvar stepleft = step.left;\n\t\t\t\t\tvar method = { name: stepleft.key.name, params: [] };\n\t\t\t\t\tvar stepright = step.right;\n\n\t\t\t\t\tmethod.body_text = grabFirstCommentAbove(step.cmu);\n\n\t\t\t\t\tfor (var p in stepright.params) {\n\t\t\t\t\t\tvar param = stepright.params[p];\n\t\t\t\t\t\tvar paramname = param.id.name;\n\t\t\t\t\t\tvar paramtag = '<' + paramname + '>';\n\n\t\t\t\t\t\tvar pbody_text = [];\n\n\t\t\t\t\t\tif (param.cm1) {\n\t\t\t\t\t\t\tfor (var k = 0; k < param.cm1.length; k++) {\n\t\t\t\t\t\t\t\tif (param.cm1[k] != 1) {\n\t\t\t\t\t\t\t\t\tpbody_text.push(param.cm1[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparam = { name: paramname, body_text: pbody_text };\n\n\t\t\t\t\t\tvar remaining = [];\n\t\t\t\t\t\tfor (var a in method.body_text) {\n\t\t\t\t\t\t\tvar L = method.body_text[a];\n\t\t\t\t\t\t\tif (L.indexOf(paramtag) === 0) {\n\t\t\t\t\t\t\t\tparam.body_text.push(L.substr(paramtag.length).trim());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tremaining.push(L);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmethod.params.push(param);\n\t\t\t\t\t\tmethod.body_text = remaining;\n\t\t\t\t\t}\n\t\t\t\t\tclass_doc.methods.push(method);\n\t\t\t\t}\n\t\t\t} else if (step.type === \"Call\") {\n\t\t\t\tif (step.fn.object.type === \"Id\") {\n\t\t\t\t\tif (step.fn.object.name === \"define\") {\n\t\t\t\t\t\tif (step.fn.key.name === \"class\") {\n\t\t\t\t\t\t\tvar innerclassname = step.args[1].value;\n\t\t\t\t\t\t\tvar newclass = parseDoc(proto[innerclassname]);\n\t\t\t\t\t\t\tnewclass.class_name = innerclassname;\n\t\t\t\t\t\t\tnewclass.body_text = grabFirstCommentAbove(step.cmu);\n\t\t\t\t\t\t\tclass_doc.inner_classes.push(newclass);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn class_doc;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/jsdocgen.js\n// module id = 135\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/jsdocgen.js?");

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\tvar _exports$types;\n\n\tvar Parser = requireDreem('$system/parse/onejsparser');\n\n\texports.walk = function (ast, textbuf, opts, add) {\n\t\tvar glwalker = new this();\n\t\tif (opts) for (var key in opts) {\n\t\t\tglwalker[key] = opts[key];\n\t\t}\n\t\tglwalker.line = 0;\n\t\tglwalker.textbuf = textbuf;\n\t\tglwalker.add = add;\n\t\tglwalker.expand(ast);\n\t};\n\n\tthis.post_comma = 1;\n\tthis.post_colon = 1;\n\tthis.around_operator = 1;\n\tthis.actual_indent = 0;\n\tthis.actual_line = 0;\n\tthis.force_newlines_array = false;\n\tthis.force_newlines_object = false;\n\n\tthis.atConstructor = function () {\n\t\tthis.indent = 0;\n\t};\n\n\t// helper functions\n\tthis.dColon = function (type, padding) {\n\t\tthis.add('::', padding, type, exports._DColon);\n\t};\n\n\tthis.dot = function (type, padding) {\n\t\tthis.add('.', padding, type, exports._Dot);\n\t};\n\n\tthis.colon = function (type, padding) {\n\t\tthis.add(':', padding, type, exports._Colon);\n\t};\n\n\tthis.semiColon = function (type, padding) {\n\t\tthis.add(';', padding, type, exports._SemiColon);\n\t};\n\n\tthis.comma = function (type, padding) {\n\t\tthis.add(',', padding, type, exports._Comma);\n\t};\n\n\tthis.parenL = function (type, padding) {\n\t\tthis.add('(', padding, type, exports._Paren, exports._ParenL);\n\t};\n\n\tthis.parenR = function (type, padding) {\n\t\tthis.add(')', padding, type, exports._Paren, exports._ParenL);\n\t};\n\n\tthis.braceL = function (type, padding) {\n\t\tthis.add('{', padding, type, exports._Brace, exports._BraceL);\n\t};\n\n\tthis.braceR = function (type, padding) {\n\t\tthis.add('}', padding, type, exports._Brace, exports._BraceR);\n\t};\n\n\tthis.bracketL = function (type, padding) {\n\t\tthis.add('[', padding, type, exports._Bracket, exports._BracketL);\n\t};\n\n\tthis.bracketR = function (type, padding) {\n\t\tthis.add(']', padding, type, exports._Bracket, exports._BracketR);\n\t};\n\n\tthis.operator = function (op, type, padding) {\n\t\tthis.add(op, padding, type, exports._Operator, exports.ops[op]);\n\t};\n\n\tthis.keyword = function (value, type, padding) {\n\t\tthis.add(value, padding || 0, type, exports._Keyword);\n\t};\n\n\tthis.tab = function (indent) {\n\t\t// lets add a tab\n\t\tthis.actual_indent = indent;\n\t\t// alright lets write it on the previous newline.\n\t\tthis.add('\\t', 4 * 256 + indent);\n\t\t//this.add(Array(indent+1).join('\\t') )\n\t};\n\n\tthis.space = function () {\n\t\tthis.add(' ');\n\t};\n\n\tthis.newline = function () {\n\t\tthis.actual_line++;\n\t\tthis.add('\\n');\n\t};\n\n\tthis.comment = function (text, pre) {\n\t\tif (this.lastIsNewline()) this.tab(this.indent), pre = '';\n\t\tthis.add((pre || '') + '//' + text, 0, exports._Comment);\n\t};\n\n\tthis.comments = function (comments, prefix) {\n\t\tvar has_newline = false;\n\t\tif (!comments) return false;\n\t\tfor (var i = 0; i < comments.length; i++) {\n\t\t\tvar comment = comments[i];\n\t\t\tif (comment === 1) {\n\t\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\t\t\t\tthis.newline();\n\t\t\t\thas_newline = true;\n\t\t\t} else this.comment(comment, prefix);\n\t\t}\n\t\treturn has_newline;\n\t};\n\n\tthis.commentHasNewline = function (comments, prefix) {\n\t\tvar has_newline = false;\n\t\tif (!comments) return false;\n\t\tfor (var i = 0; i < comments.length; i++) {\n\t\t\tvar comment = comments[i];\n\t\t\tif (comment === 1) {\n\t\t\t\thas_newline = true;\n\t\t\t}\n\t\t}\n\t\treturn has_newline;\n\t};\n\n\tthis.lastIsNewline = function () {\n\t\treturn this.last_is_newline;\n\t\t//return this.textbuf.charCodeAt(this.textbuf.char_count - 1) === 10\n\t};\n\n\tthis.lastCharCode = function () {\n\t\treturn this.textbuf.charCodeAt(this.textbuf.char_count - 1);\n\t};\n\n\t// expand ast node\n\tthis.expand = function (n, arg) {\n\t\tif (n) {\n\t\t\tif (!this[n.type]) throw new Error('type ' + n.type + ' not in codeview');else return this[n.type](n, arg);\n\t\t}\n\t};\n\n\t// AST nodes\n\tthis.Program = function (n) {\n\t\tthis.Block(n, true);\n\t};\n\n\tthis.Empty = function (n) {};\n\n\tthis.Id = function (n) {\n\t\tthis.add(n.name, 0, exports._Id);\n\t};\n\n\tthis.Property = function (n, secondary) {\n\t\tthis.add(n.name, 0, exports._Property, secondary || 0);\n\t};\n\n\tvar tempcolor = vec4();\n\tthis.Value = function (n) {\n\t\t//: { value:0, raw:0, kind:0, multi:0 },\n\n\t\tif (n.kind === undefined) {\n\t\t\tvar str;\n\t\t\tif (typeof n.value === 'string') {\n\t\t\t\tif (n.value.indexOf('\"') !== -1) str = \"'\" + n.value + \"'\";else str = '\"' + n.value + '\"';\n\t\t\t} else str = '' + n.value;\n\t\t\tthis.add(str, 0, exports._Value, exports._Number);\n\t\t} else if (n.kind == 'num') this.add(n.raw !== undefined ? n.raw : '' + n.value, 0, exports._Value, exports._Number);else if (n.kind == 'string') {\n\t\t\tvar subtype = exports._String;\n\t\t\tvar col = 0;\n\n\t\t\tvec4.parse(n.value, tempcolor, true);\n\t\t\tif (tempcolor[0] !== -1) {\n\t\t\t\tsubtype = exports._Color;\n\t\t\t\tcol = -(parseInt(tempcolor[0] * 255) * 65536 + parseInt(tempcolor[1] * 255) * 256 + parseInt(tempcolor[2] * 255));\n\n\t\t\t\tthis.add(\"'\", 0, exports._Value, exports._String);\n\t\t\t\tthis.add(n.value, 0, col);\n\t\t\t\tthis.add(\"'\", 0, exports._Value, exports._String);\n\t\t\t} else {\n\t\t\t\tthis.add(n.raw !== undefined ? n.raw : '\"' + n.value + '\"', 0, exports._Value, subtype);\n\t\t\t}\n\t\t} else if (n.kind === 'boolean') {\n\t\t\tthis.add(n.raw !== undefined ? n.raw : '' + n.value, 0, exports._Value, exports._Boolean, n.value ? 1 : 0);\n\t\t} else {\n\n\t\t\tthis.add(n.raw !== undefined ? n.raw : '' + n.value, 0, exports._Value);\n\t\t}\n\t};\n\n\tthis.This = function (n) {\n\t\t//: { },\n\t\tthis.add('this', 0, exports._This, exports._Keyword);\n\t};\n\n\tthis.Array = function (n) {\n\t\t//: { elems:2 },\n\t\tthis.bracketL(exports._Array, 0);\n\n\t\tvar has_newlines = this.force_newlines_array;\n\t\tif (this.comments(n.cm1)) has_newlines = true;else if (this.force_newlines_array) this.newline();\n\n\t\tvar old_indent = this.indent;\n\t\tif (has_newlines) this.indent++;\n\n\t\tfor (var i = 0; i < n.elems.length; i++) {\n\t\t\tvar elem = n.elems[i];\n\t\t\tif (!elem) continue;\n\t\t\t//if(!has_newlines && i) this.comma(exports._Array, 0)\n\t\t\tthis.comments(elem.cmu);\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\n\t\t\tthis.expand(elem);\n\n\t\t\t//var do_newline = has_newlines || this.commentHasNewline(elem.cmr)\n\n\t\t\tif (i < n.elems.length - 1) this.comma(exports._Array, has_newlines ? 0 : 2 * 256 + this.post_comma);\n\n\t\t\tif (has_newlines && !this.comments(elem.cmr)) this.newline();\n\t\t}\n\t\tif (has_newlines && this.comments(n.cm2)) this.tab(this.indent - 1);\n\n\t\tif (this.lastIsNewline()) this.tab(old_indent);\n\n\t\tthis.indent = old_indent;\n\t\tthis.bracketR(exports._Array, 0);\n\t\treturn has_newlines;\n\t};\n\n\tthis.Object = function (n, indent) {\n\t\t//: { keys:3 },\n\t\tthis.braceL(exports._Object, 0);\n\t\t// allright so\n\t\tvar has_newlines = this.force_newlines_object;\n\n\t\tif (this.comments(n.cm1)) has_newlines = true;else if (this.force_newlines_object) this.newline();\n\n\t\t//console.log(has_newlines, n)\n\n\t\tvar old_indent = this.indent;\n\t\tif (has_newlines) this.indent++;\n\n\t\tvar maxlen = 0;\n\t\tfor (var i = 0; i < n.keys.length; i++) {\n\t\t\tvar prop = n.keys[i];\n\t\t\tvar name = prop.key.name;\n\t\t\tif (!name) {\n\t\t\t\tname = prop.key.value;\n\t\t\t}\n\n\t\t\tvar len = name.length;\n\t\t\tif (len > maxlen) maxlen = len;\n\t\t}\n\n\t\tfor (var i = 0; i < n.keys.length; i++) {\n\t\t\tvar prop = n.keys[i];\n\t\t\t//if(!has_newlines && i){\n\t\t\t//\tthis.comma(exports._Object, 0)\n\t\t\t//\tthis.space()\n\t\t\t//}\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\t\t\tif (has_newlines) this.comments(prop.cmu);\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\n\t\t\t//var do_newline = has_newlines //|| this.commentHasNewline(prop.cmr)\n\n\t\t\tthis.expand(prop.key, exports._Object);\n\n\t\t\tif (prop.value) {\n\t\t\t\tvar name = prop.key.name;\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = prop.key.value;\n\t\t\t\t}\n\t\t\t\tvar diff = maxlen + 1 - name.length;\n\t\t\t\tthis.colon(exports._Object, has_newlines ? 1 * 256 + diff : 0);\n\t\t\t\tthis.expand(prop.value);\n\t\t\t}\n\n\t\t\tif (i < n.keys.length - 1) {\n\t\t\t\tthis.comma(exports._Object, has_newlines ? 0 : 2 * 256 + this.post_comma);\n\t\t\t\t//this.space()\n\t\t\t}\n\t\t\tif (has_newlines && !this.comments(prop.cmr)) {\n\t\t\t\tthis.newline();\n\t\t\t}\n\t\t}\n\t\tif (has_newlines) {\n\t\t\t//this.comments(n.cm2)\n\t\t\t// check if we are in an argument list\n\t\t\tif (this.lastIsNewline()) this.tab(indent ? old_indent + 1 : old_indent);\n\t\t}\n\t\tthis.indent = old_indent;\n\t\tthis.braceR(exports._Object, 0);\n\n\t\treturn has_newlines;\n\t};\n\n\tthis.Index = function (n) {\n\t\t//: { object:1, index:1 },\n\t\tthis.expand(n.object);\n\t\tthis.bracketL(exports._Index, 0);\n\t\tif (n.index) this.expand(n.index);\n\t\tthis.bracketR(exports._Index, 0);\n\t};\n\n\tthis.Key = function (n) {\n\t\t//: { object:1, key:1, exist:0 },\n\t\tthis.expand(n.object);\n\t\tif (n.cm1 && this.comments(n.cm1, ' ')) {\n\t\t\tthis.tab(this.indent + 1);\n\t\t}\n\t\tthis.dot(exports._Key);\n\t\tif (n.cm2 && this.comments(n.cm2, ' ')) {\n\t\t\tthis.tab(this.indent + 1);\n\t\t}\n\t\tthis.expand(n.key);\n\t};\n\n\tthis.Block = function (n, skipbrace) {\n\t\t//:{ steps:2 },\n\t\tvar old_indent = 0;\n\n\t\tif (!skipbrace) {\n\t\t\tthis.braceL(exports._Block, 0);\n\t\t\told_indent = this.indent;\n\t\t\tthis.indent++;\n\t\t\t// lets output our immediate follow comments\n\t\t}\n\n\t\tthis.comments(n.cm1, ' ');\n\t\tif (!skipbrace) {\n\t\t\tif (!this.lastIsNewline()) this.newline();\n\t\t}\n\n\t\tfor (var i = 0; i < n.steps.length; i++) {\n\t\t\tvar step = n.steps[i];\n\t\t\t// if we have comments above, insert them\n\t\t\tthis.comments(step.cmu);\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\n\t\t\tthis.expand(step);\n\t\t\tthis.comments(step.cmr, ' ');\n\t\t\tif (!this.lastIsNewline()) this.newline();\n\t\t}\n\t\tthis.comments(n.cm2);\n\t\tif (!skipbrace) {\n\t\t\t// lets add our tail comments\n\t\t\tthis.indent = old_indent;\n\t\t\tif (!this.lastIsNewline()) {\n\t\t\t\tthis.newline();\n\t\t\t}\n\t\t\tthis.tab(old_indent);\n\t\t\tthis.braceR(exports._Block, 0);\n\t\t}\n\t};\n\n\tthis.List = function (n) {\n\t\t//: { items:2 },\n\t\tfor (var i = 0; i < n.items.length; i++) {\n\t\t\tvar item = n.items[i];\n\t\t\tif (i) this.comma(exports._List);\n\t\t\tthis.expand(item);\n\t\t}\n\t};\n\n\tthis.Break = function (n) {\n\t\t//: { label:1 },\n\t\tthis.keyword('break', exports._Break);\n\t};\n\n\tthis.Continue = function (n) {\n\t\t//: { label:1 },\n\t\tthis.keyword('continue', exports._Continue);\n\t};\n\n\tthis.Label = function (n) {\n\t\t//: { label:1, body:1 },\n\t\tthis.expand(n.label);\n\t\tthis.expand(n.body);\n\t};\n\n\tthis.If = function (n) {\n\t\t//: { test:1, then:1, else:1, postfix:0, compr:0 },\n\t\tthis.keyword('if', exports._If);\n\t\t//this.space()\n\t\tthis.parenL(exports._If, 1 * 256 + 1);\n\t\tthis.indent++;\n\t\tthis.expand(n.test);\n\t\tthis.indent--;\n\t\tthis.parenR(exports._If, 2 * 256 + 1);\n\t\t//this.space()\n\t\t// if our n.then has wsu, lets do it\n\t\tif (n.then.cmu) {\n\t\t\tif (this.comments(n.then.cmu)) this.tab(this.indent + 1);\n\t\t}\n\t\tthis.expand(n.then);\n\t\tif (n.else) {\n\t\t\t// we have to end the if expression properly\n\t\t\tif (!this.comments(n.cm1, ' ')) this.newline();\n\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\n\t\t\tthis.keyword('else', exports._If);\n\t\t\t//this.space()\n\t\t\tif (n.else.cmu) {\n\t\t\t\tif (this.comments(n.else.cmu)) this.tab(this.indent + 1);\n\t\t\t}\n\t\t\tthis.expand(n.else);\n\t\t\t//debug()\n\t\t}\n\t};\n\n\tthis.Switch = function (n) {\n\t\t//: { on:1, cases:2 },\n\t\tthis.keyword('switch', _Switch);\n\t\t//this.space()\n\t\tthis.parenL(_Switch, 0);\n\t\tthis.expand(n.on);\n\t\tthis.parenR(_Switch, 0);\n\t\t//this.space()\n\t\tthis.braceL(_Switch, 0);\n\n\t\t//var old_indent = indent\n\t\t//indent++\n\n\t\tif (!this.comments(n.cm1)) {\n\t\t\tthis.newline();\n\t\t\tthis.tab(indent);\n\t\t}\n\n\t\tfor (var i = 0; i < n.cases.length; i++) {\n\t\t\tthis.expand(n.cases[i]);\n\t\t}\n\t\tthis.comments(n.cm2);\n\t\t//indent = old_indent\n\t\tif (this.lastIsNewline()) this.tab(indent);\n\t\tthis.braceR(exports._Switch, 0);\n\t};\n\n\tthis.Case = function (n) {\n\t\t//: { test:1, then:2 },\n\t\tthis.comments(n.cmu);\n\t\tif (!this.lastIsNewline()) this.newline();\n\t\tthis.tab(indent);\n\t\tthis.keyword('case', exports._Case);\n\t\t//this.space()\n\t\tthis.expand(n.test);\n\t\tthis.colon(exports._Case);\n\t\tthis.comments(n.cmr);\n\n\t\tif (n.steps && n.steps.length) {\n\t\t\tif (!this.lastIsNewline()) this.newline();\n\t\t\tvar old_indent = this.indent;\n\t\t\tthis.indent++;\n\t\t\tthis.tab(this.indent);\n\t\t\tthis.Block(n, true);\n\t\t\tthis.indent = old_indent;\n\t\t}\n\t\t//expand(n.then)\n\t};\n\n\tthis.Throw = function (n) {\n\t\t//: { arg:1 },\n\t\tthis.keyword('throw', exports._Throw);\n\t\t//this.space()\n\t\tthis.expand(n.arg);\n\t};\n\n\tthis.Try = function (n) {\n\t\t//: { try:1, arg:1, catch:1, finally:1 },\n\t\tthis.Keyword('try', exports._Try);\n\t\tthis.expand(n.try);\n\t\tthis.Keyword('catch', exports._Try);\n\t\tthis.parenL(exports._Try, 0);\n\t\tthis.expand(n.arg);\n\t\tthis.parenR(exports._Try, 0);\n\t\tthis.expand(n.catch);\n\t\tif (n.finally) {\n\t\t\tthis.keyword('finally', exports._Try);\n\t\t\tthis.expand(n.finally);\n\t\t}\n\t};\n\n\tthis.While = function (n) {\n\t\t//: { test:1, loop:1 },\n\t\tthis.keyword('while', exports._While);\n\t\tthis.parenL(exports._While, 0);\n\t\tthis.expand(n.test);\n\t\tthis.parenR(exports._While, 0);\n\t\tthis.expand(n.loop);\n\t};\n\n\tthis.DoWhile = function (n) {\n\t\t//: { loop:1, test:1 },\n\t\tthis.keyword('do', exports._Do);\n\t\tthis.expand(n.loop);\n\t\tthis.keyword('while', exports._Do);\n\t\tthis.parenL(exports._Do, 0);\n\t\tthis.expand(n.test);\n\t\tthis.parenR(exports._Do, 0);\n\t};\n\n\tthis.For = function (n) {\n\t\t//: { init:1, test:1, update:1, loop:1, compr:0 },\n\t\tthis.keyword('for', exports._For);\n\t\t//this.space()\n\t\tthis.parenL(exports._For, 0);\n\t\tthis.expand(n.init);\n\t\tthis.semiColon(exports._For);\n\t\t//this.space()\n\t\tthis.expand(n.test);\n\t\tthis.semiColon(exports._For);\n\t\t//this.space()\n\t\tthis.expand(n.update);\n\t\tthis.parenR(exports._For, 0);\n\t\tif (n.loop.cmu) {\n\t\t\tif (this.comments(n.loop.cmu)) this.tab(this.indent + 1);\n\t\t}\n\t\t//else if(n.loop.type != 'Block') this.space()\n\t\tthis.expand(n.loop);\n\t};\n\n\tthis.ForIn = function (n) {\n\t\t//: { left:1, right:1, loop:1, compr:0 },\n\t\tthis.keyword('for', exports._For);\n\t\t//this.space()\n\t\tthis.parenL(exports._For, 0);\n\t\tthis.expand(n.left);\n\t\t//this.space()\n\t\tthis.keyword('in', exports._For);\n\t\t//this.space()\n\t\tthis.expand(n.right);\n\t\tthis.parenR(exports._For, 0);\n\t\tif (n.loop.cmu) {\n\t\t\tif (this.comments(n.loop.cmu)) this.tab(this.indent + 1);\n\t\t}\n\t\t//else if(n.loop.type != 'Block') this.space()\n\n\t\tthis.expand(n.loop);\n\t};\n\n\tthis.ForOf = function (n) {\n\t\t//: { left:1, right:1, loop:1, compr:0 },\n\t\tthis.keyword('for', exports._For);\n\t\t//this.space()\n\t\tthis.parenL(exports._For, 0);\n\t\tthis.expand(n.left);\n\t\t//this.space()\n\t\tthis.keyword('of', exports._For);\n\t\t//this.space()\n\t\tthis.expand(n.right);\n\t\tthis.parenR(exports._For, 0);\n\t\tif (n.loop.cmu) {\n\t\t\tif (this.comments(n.loop.cmu)) this.tab(this.indent + 1);\n\t\t}\n\t\t//else if(n.loop.type != 'Block') this.space()\n\n\t\tthis.expand(n.loop);\n\t};\n\n\tthis.Var = function (n) {\n\t\t//: { defs:2, const:0 },\n\t\tthis.keyword('var', exports._Var);\n\t\tif (n.defs && n.defs.length) {\n\t\t\tthis.space();\n\t\t\tfor (var i = 0; i < n.defs.length; i++) {\n\t\t\t\tif (i) this.comma(exports._Var, 2 * 256 + this.after_comma);\n\t\t\t\tthis.expand(n.defs[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.Def = function (n) {\n\t\t//: { id:1, init:1, dim:1 },\n\t\tthis.expand(n.id);\n\t\tif (n.init) {\n\t\t\t//this.space()\n\t\t\tthis.operator('=', exports._Def, 3 * 256 + 1);\n\t\t\t//this.space()\n\t\t\tthis.expand(n.init);\n\t\t}\n\t};\n\n\tthis.Function = function (n) {\n\t\t//: { id:1, name:1, params:2, rest:1, body:1, arrow:0, gen:0, def:0 },\n\t\tif (!n.arrow) {\n\t\t\tif (n.name) this.expand(n.name);else if (n.id) {\n\t\t\t\tthis.keyword('function', exports._Function);\n\t\t\t\tthis.space();\n\t\t\t\tthis.expand(n.id);\n\t\t\t} else this.keyword('function', exports._Function);\n\t\t}\n\n\t\t//else Keyword('function', _Function)\n\t\tthis.parenL(exports._Function, 0);\n\n\t\tif (n.params) for (var i = 0; i < n.params.length; i++) {\n\t\t\tif (i) {\n\t\t\t\tthis.comma(exports._Function, 2 * 256 + 1); //, this.space()\n\t\t\t}\n\n\t\t\tthis.expand(n.params[i]);\n\t\t}\n\n\t\tif (n.rest) {\n\t\t\tif (i) this.comma(exports._Function); //, this.space()\n\t\t\tthis.expand(n.rest);\n\t\t}\n\n\t\tthis.parenR(exports._Function, 0);\n\t\tif (n.arrow == '=>') this.operator('=>', exports._Function);\n\t\t//else this.space()\n\t\tthis.expand(n.body);\n\t};\n\n\tthis.Return = function (n) {\n\t\t//: { arg:1 },\n\t\tthis.keyword('return', exports._Return);\n\t\tif (n.arg) this.space(), this.expand(n.arg);\n\t};\n\n\tthis.Yield = function (n) {\n\t\t//: { arg:1 },\n\t\tthis.keyword('yield', exports._Yield);\n\t\tif (n.arg) this.space(), this.expand(n.arg);\n\t};\n\n\tthis.Await = function (n) {\n\t\t//: { arg:1 },\n\t\tthis.keyword('await', exports._Await);\n\t\tif (n.arg) this.space(), this.expand(n.arg);\n\t};\n\n\tthis.Unary = function (n) {\n\t\t//: { op:0, prefix:0, arg:1 },\n\t\tif (n.prefix) {\n\t\t\tif (n.op.length != 1) this.keyword(n.op, exports._Unary), this.space();else this.operator(n.op, exports._Unary);\n\t\t\tthis.expand(n.arg);\n\t\t} else {\n\t\t\tthis.expand(n.arg);\n\t\t\tthis.operator(n.op, exports._Unary);\n\t\t}\n\t};\n\n\tthis.Binary = function (n) {\n\t\t//: { op:0, prio:0, left:1, right:1 },\n\t\tvar paren_l = Parser.needsParens(n, n.left, true);\n\t\tvar paren_r = Parser.needsParens(n, n.right);\n\t\tif (paren_l) this.parenL(exports._Binary, 0);\n\t\tthis.expand(n.left);\n\t\tif (paren_l) this.parenR(exports._Binary, 0);\n\t\tvar old_indent = this.indent;\n\t\tthis.indent++;\n\t\tif (n.cm1 && this.comments(n.cm1, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\tthis.operator(n.op, exports._Binary, 3 * 256 + this.around_operator);\n\n\t\tif (n.cm2 && this.comments(n.cm2, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\tif (paren_r) this.parenL(exports._Binary, 0);\n\t\tthis.expand(n.right);\n\t\tif (paren_r) this.parenR(exports._Binary, 0);\n\t\tthis.indent = old_indent;\n\t};\n\n\tthis.Logic = function (n) {\n\t\t//: { op:0, prio:0, left:1, right:1 },\n\t\tvar paren_l = Parser.needsParens(n, n.left, true);\n\t\tvar paren_r = Parser.needsParens(n, n.right);\n\t\tif (paren_l) this.parenL(exports._Logic, 0);\n\t\tthis.expand(n.left);\n\t\tif (paren_l) this.parenR(exports._Logic, 0);\n\t\tvar old_indent = this.indent;\n\t\tthis.indent++;\n\t\tif (n.cm1 && this.comments(n.cm1, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\tif (n.op.length > 1) {\n\t\t\tif (n.op.length == 2) {\n\t\t\t\tthis.operator(n.op[0], exports._Logic, 1 * 256 + this.around_operator);\n\t\t\t\tthis.operator(n.op[1], exports._Logic, 2 * 256 + this.around_operator);\n\t\t\t} else {\n\t\t\t\tthis.operator(n.op, exports._Logic, 0);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.operator(n.op, exports._Logic, 3 * 256 + this.around_operator);\n\t\t}\n\n\t\tif (n.cm2 && this.comments(n.cm2, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\tif (paren_r) this.parenL(exports._Logic, 0);\n\t\tthis.expand(n.right);\n\t\tif (paren_r) this.parenR(exports._Logic, 0);\n\t\tthis.indent = old_indent;\n\t};\n\n\tthis.Assign = function (n) {\n\t\t//: { op:0, prio:0, left:1, right:1 },\n\t\tthis.expand(n.left);\n\t\tvar old_indent = this.indent;\n\t\tthis.indent++;\n\t\tif (n.cm1 && this.comments(n.cm1, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\t//this.operator(n.op, exports._Assign, 0)\n\t\tif (n.op.length > 1) {\n\t\t\tif (n.op.length == 2) {\n\t\t\t\tthis.operator(n.op[0], exports._Assign, 1 * 256 + this.around_operator);\n\t\t\t\tthis.operator(n.op[1], exports._Assign, 2 * 256 + this.around_operator);\n\t\t\t} else {\n\t\t\t\tthis.operator(n.op, exports._Assign, 0);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.operator(n.op, exports._Assign, 3 * 256 + this.around_operator);\n\t\t}\n\n\t\tif (n.cm2 && this.comments(n.cm2, ' ')) {\n\t\t\tthis.tab(this.indent);\n\t\t}\n\t\t//else this.space()\n\t\tif (n.right.type === 'Function' || n.right.type === 'Object') {\n\t\t\tthis.indent--;\n\t\t}\n\n\t\tthis.expand(n.right);\n\t\tthis.indent = old_indent;\n\t};\n\n\tthis.Update = function (n) {\n\t\t//: { op:0, prio:0, arg:1, prefix:0 },\n\t\tif (n.prefix) {\n\t\t\tthis.operator(n.op, exports._Update), this.expand(n.arg);\n\t\t} else {\n\t\t\tthis.expand(n.arg);\n\t\t\tthis.operator(n.op, exports._Update);\n\t\t}\n\t};\n\n\tthis.Condition = function (n) {\n\t\t//: { test:1, then:1, else:1 },\n\t\tthis.expand(n.test);\n\t\tthis.operator('?', exports._Condition);\n\t\tthis.expand(n.then);\n\t\tthis.operator(':', exports._Condition);\n\t\tthis.expand(n.else);\n\t};\n\n\tthis.New = function (n) {\n\t\t//: { fn:1, args:2 },\n\t\tthis.keyword('new', exports._New);\n\t\tthis.space();\n\t\tthis.expand(n.fn);\n\t\tthis.parenL(exports._New);\n\t\tfor (var i = 0; i < n.args.length; i++) {\n\t\t\tif (i) this.comma(exports._New); //, this.space()\n\t\t\tthis.expand(n.args[i]);\n\t\t}\n\t\tthis.parenR(exports._New);\n\t};\n\n\tthis.Call = function (n) {\n\t\t//: { fn:1, args:2 },\n\t\tvar fn_t = n.fn.type;\n\t\tif (fn_t == 'Function' || fn_t == 'List' || fn_t == 'Logic' || fn_t == 'Condition') {\n\t\t\tthis.parenL(exports._Call, 0);\n\t\t\tthis.expand(n.fn);\n\t\t\tthis.parenR(exports._Call, 0);\n\t\t} else this.expand(n.fn);\n\n\t\tthis.parenL(exports._Call, 0);\n\n\t\tvar has_newlines = false;\n\t\tif (this.comments(n.cm1)) has_newlines = true;\n\t\tvar old_indent = this.indent;\n\t\t//if(has_newlines)\n\t\tthis.indent++;\n\n\t\t// cleanup hack\n\n\t\t// lets check if it has a newline\n\t\t//var first_is_obj\n\t\tif (!has_newlines && n.args.length > 0 && (n.args[0].type === 'Object' || n.args[0].type === 'Array' || n.args[0].type === 'Function')) {\n\t\t\tfirst_is_obj = true;\n\t\t\tif (n.args.length === 1) this.indent--;\n\t\t}\n\n\t\tfor (var i = 0; i < n.args.length; i++) {\n\t\t\tvar arg = n.args[i];\n\t\t\tif (!arg) continue;\n\t\t\tthis.comments(arg.cmu);\n\t\t\tif (this.lastIsNewline()) this.tab(this.indent);\n\n\t\t\tvar has_nl = this.expand(arg);\n\n\t\t\t// check wether to switch to has_newlines\n\t\t\tif (i === 0 && !has_newlines) {\n\t\t\t\thas_newlines = has_nl;\n\t\t\t}\n\t\t\tvar do_newline = has_newlines || this.commentHasNewline(arg.cmr);\n\n\t\t\tif (i < n.args.length - 1) this.comma(exports._Call, do_newline ? 0 : 2 * 256 + this.post_comma);\n\n\t\t\tif (n.args.length > 1 && has_newlines && !this.comments(arg.cmr)) this.newline();\n\t\t\t//else this.space()\n\t\t}\n\n\t\tif (has_newlines && this.comments(n.cm2)) this.tab(this.indent - 1);\n\t\tif (this.lastIsNewline()) this.tab(old_indent);\n\t\tthis.indent = old_indent;\n\n\t\tthis.parenR(exports._Call, 0);\n\n\t\treturn has_newlines;\n\t};\n\n\texports.types = (_exports$types = {\n\t\t// Base node markers\n\t\t_Id: 1,\n\t\t_Property: 2,\n\t\t_Value: 3,\n\t\t_This: 4,\n\t\t_Array: 5,\n\t\t_Object: 6,\n\t\t_Index: 7,\n\t\t_Key: 8,\n\t\t_ThisCall: 9,\n\n\t\t_Block: 10,\n\t\t_List: 11,\n\t\t_Comprehension: 12,\n\t\t_Template: 13,\n\t\t_Break: 14,\n\t\t_Continue: 15,\n\t\t_Label: 16,\n\n\t\t_If: 17,\n\t\t_Switch: 18,\n\t\t_Case: 19,\n\n\t\t_Throw: 20,\n\t\t_Try: 21,\n\n\t\t_While: 22,\n\t\t_DoWhile: 23,\n\t\t_For: 24,\n\t\t_ForIn: 25,\n\t\t_ForOf: 26,\n\n\t\t_Var: 27,\n\n\t\t_Def: 28,\n\n\t\t_Function: 29,\n\t\t_Return: 30,\n\t\t_Yield: 31,\n\t\t_Await: 32,\n\n\t\t_Unary: 33,\n\t\t_Binary: 34,\n\t\t_Logic: 35,\n\t\t_Assign: 36,\n\t\t_Update: 37,\n\t\t_Condition: 38,\n\n\t\t_New: 39,\n\t\t_Call: 40,\n\t\t_Nest: 41,\n\n\t\t_Class: 42,\n\t\t_Rest: 43,\n\t\t_Comment: 44\n\n\t}, _defineProperty(_exports$types, '_Id', 1), _defineProperty(_exports$types, '_Paren', 2), _defineProperty(_exports$types, '_ParenL', 1), _defineProperty(_exports$types, '_ParenR', 2), _defineProperty(_exports$types, '_Brace', 3), _defineProperty(_exports$types, '_BraceL', 1), _defineProperty(_exports$types, '_BraceR', 2), _defineProperty(_exports$types, '_Bracket', 4), _defineProperty(_exports$types, '_BracketL', 1), _defineProperty(_exports$types, '_BracketR', 2), _defineProperty(_exports$types, '_Comma', 5), _defineProperty(_exports$types, '_Colon', 6), _defineProperty(_exports$types, '_DColon', 7), _defineProperty(_exports$types, '_Dot', 8), _defineProperty(_exports$types, '_SemiColon', 9), _defineProperty(_exports$types, '_Operator', 10), _defineProperty(_exports$types, '_Plus', 1), _defineProperty(_exports$types, '_Min', 2), _defineProperty(_exports$types, '_Div', 3), _defineProperty(_exports$types, '_Mul', 4), _defineProperty(_exports$types, '_Pow', 5), _defineProperty(_exports$types, '_Shl', 6), _defineProperty(_exports$types, '_Shr', 7), _defineProperty(_exports$types, '_EQ', 8), _defineProperty(_exports$types, '_NEQ', 9), _defineProperty(_exports$types, '_GT', 10), _defineProperty(_exports$types, '_LT', 11), _defineProperty(_exports$types, '_GTE', 12), _defineProperty(_exports$types, '_LTE', 13), _defineProperty(_exports$types, '_Plusplus', 14), _defineProperty(_exports$types, '_Minmin', 15), _defineProperty(_exports$types, '_Assign', 16), _defineProperty(_exports$types, '_PlusAssign', 17), _defineProperty(_exports$types, '_MinAssign', 18), _defineProperty(_exports$types, '_MulAssign', 19), _defineProperty(_exports$types, '_DivAssign', 20), _defineProperty(_exports$types, '_ShlAssign', 21), _defineProperty(_exports$types, '_ShrAssign', 22), _defineProperty(_exports$types, '_TerniaryQ', 23), _defineProperty(_exports$types, '_TerniaryC', 24), _defineProperty(_exports$types, '_Signal', 25), _defineProperty(_exports$types, '_String', 11), _defineProperty(_exports$types, '_Number', 12), _defineProperty(_exports$types, '_Boolean', 13), _defineProperty(_exports$types, '_Tab', 14), _defineProperty(_exports$types, '_Keyword', 15), _defineProperty(_exports$types, '_Color', 16), _exports$types);\n\n\tfor (var key in exports.types) {\n\t\texports[key] = exports.types[key];\n\t}exports.ops = {\n\t\t'++': exports._Plusplus,\n\t\t'--': exports._Minmin,\n\t\t'+': exports._Plus,\n\t\t'-': exports._Min,\n\t\t'/': exports._Div,\n\t\t'*': exports._Mul,\n\t\t'**': exports._Pow,\n\t\t'==': exports._EQ,\n\t\t'!=': exports._NEQ,\n\t\t'>': exports._GT,\n\t\t'<': exports._LT,\n\t\t'=>': exports._GTE,\n\t\t'<=': exports._LTE,\n\t\t'<<': exports._Shl,\n\t\t'>>': exports._Shr,\n\t\t'=': exports._Assign,\n\t\t':=': exports._Signal,\n\t\t'+=': exports._PlusAssign,\n\t\t'-=': exports._MinAssign,\n\t\t'/=': exports._DivAssign,\n\t\t'*=': exports._MulAssign,\n\t\t'<<=': exports._ShlAssign,\n\t\t'>>=': exports._ShrAssign,\n\t\t'?': exports._TerniaryQ,\n\t\t':': exports._TerniaryC\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/jsformatter.js\n// module id = 136\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/jsformatter.js?");

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// 0 means value\n// 1 means node\n// 2 means array of nodes\n// 3 is the slightly off object declaration\n\ndefineDreem(function (requireDreem, exports, module) {\n\tmodule.exports = {\n\t\tProgram: { steps: 2 },\n\t\tEmpty: {},\n\n\t\tId: { name: 0, flag: 0 },\n\t\tProperty: { name: 0, flag: 0 },\n\t\tValue: { value: 0, raw: 0, kind: 0, multi: 0 },\n\t\tThis: {},\n\n\t\tArray: { elems: 2 },\n\t\tObject: { keys: 3 },\n\t\tIndex: { object: 1, index: 1 },\n\t\tKey: { object: 1, key: 1, exist: 0 },\n\t\tThisCall: { object: 1, key: 1 },\n\n\t\tBlock: { steps: 2 },\n\t\tList: { items: 2 },\n\t\tComprehension: { for: 1, expr: 1 },\n\t\tTemplate: { chain: 2 },\n\t\tBreak: { label: 1 },\n\t\tContinue: { label: 1 },\n\t\tLabel: { label: 1, body: 1 },\n\n\t\tIf: { test: 1, then: 1, else: 1, postfix: 0, compr: 0 },\n\t\tSwitch: { on: 1, cases: 2 },\n\t\tCase: { test: 1, steps: 2 },\n\n\t\tThrow: { arg: 1 },\n\t\tTry: { try: 1, arg: 1, catch: 1, finally: 1 },\n\n\t\tWhile: { test: 1, loop: 1 },\n\t\tDoWhile: { loop: 1, test: 1 },\n\t\tFor: { init: 1, test: 1, update: 1, loop: 1, compr: 0 },\n\t\tForIn: { left: 1, right: 1, loop: 1, compr: 0 },\n\t\tForOf: { left: 1, right: 1, loop: 1, compr: 0 },\n\t\tForFrom: { right: 1, left: 1, loop: 1, compr: 0 }, // right comes first for type inference\n\t\tForTo: { left: 1, right: 1, loop: 1, in: 1, compr: 0 },\n\n\t\tVar: { defs: 2, const: 0 },\n\t\tTypeVar: { typing: 1, defs: 2, dim: 1 },\n\t\tStruct: { id: 1, struct: 1, base: 1 }, //, defs:2, dim:1 },\n\t\tDefine: { id: 1, value: 1 },\n\t\tEnum: { id: 1, enums: 2 },\n\n\t\tDef: { id: 1, init: 1, dim: 1 },\n\n\t\tFunction: { id: 1, name: 1, params: 2, rest: 1, body: 1, arrow: 0, gen: 0, def: 0 },\n\t\tReturn: { arg: 1 },\n\t\tYield: { arg: 1 },\n\t\tAwait: { arg: 1 },\n\n\t\tUnary: { op: 0, prefix: 0, arg: 1 },\n\t\tBinary: { op: 0, prio: 0, left: 1, right: 1 },\n\t\tLogic: { op: 0, prio: 0, left: 1, right: 1 },\n\t\tAssign: { op: 0, prio: 0, left: 1, right: 1 },\n\t\tUpdate: { op: 0, prio: 0, arg: 1, prefix: 0 },\n\t\tCondition: { test: 1, then: 1, else: 1 },\n\n\t\tNew: { fn: 1, args: 2 },\n\t\tCall: { fn: 1, args: 2, extarg: 0 },\n\t\tNest: { fn: 1, body: 1, arrow: 0 },\n\n\t\tClass: { id: 1, base: 1, body: 1 },\n\n\t\tSignal: { left: 1, right: 1 },\n\t\tQuote: { quote: 1 },\n\t\tAssignQuote: { left: 1, quote: 1 },\n\t\tRest: { id: 1, dots: 0 },\n\t\tThen: { name: 1, do: 1 },\n\n\t\tDebugger: {},\n\t\tWith: { object: 1, body: 1 }\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/onejsdef.js\n// module id = 137\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/onejsdef.js?");

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, module) {\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// self generating onejs walker utility class, run with nodejs to regenerate\n\nif (typeof process !== 'undefined' && requireDreem.main === module) {\n\tvar _require = requireDreem('../base/define');\n\tvar defs = requireDreem('./onejsdef.js');\n\tvar fs = requireDreem('fs');\n\t// read self\n\tvar head = fs.readFileSync(module.filename).toString().match(/^[\\S\\s]*\\/\\/ generated/)[0];\n\t// the template for the generated bottom part\n\tvar template = function () {\n\t\tdefineDreem.class(function (exports) {\n\t\t\tBODY;\n\t\t\tthis.Object = function (obj) {\n\t\t\t\tif (arguments.length > 1) return this._Object.apply(this, arguments);\n\t\t\t\tvar ret = { type: 'Object', keys: [] };\n\t\t\t\tfor (var key in obj) {\n\t\t\t\t\tret.keys.push({ key: this.Id(key), value: this.Value(obj[key]) });\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t};\n\n\t\t\tthis.Value = function (v) {\n\t\t\t\tif (arguments.length > 1) return this._Object.apply(this, arguments);\n\t\t\t\tif (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n\t\t\t\t\treturn { type: 'Value', value: v, kind: typeof v === 'undefined' ? 'undefined' : _typeof(v) };\n\t\t\t\t} else throw new Error('Dont support value');\n\t\t\t};\n\t\t});\n\t}.toString().match(/function\\s*\\(\\)\\{\\n([\\S\\s]*)\\}/)[1].replace(/(^|\\n)\\t\\t/g, '\\n');\n\n\tvar rename = { for: '_for', else: '_else', try: '_try', catch: '_catch', finally: '_finally', in: '_in', do: '_do', const: '_const' };\n\tvar out = '\\n';\n\tfor (var key in defs) {\n\t\tout += '\tthis._' + key + ' = this.' + key + ' = function(';\n\t\tvar def = defs[key];\n\t\tvar args = '';\n\t\tvar body = '\t\treturn {\\n\t\t\ttype:\"' + key + '\"';\n\t\tfor (var sub in def) {\n\t\t\tvar ren = rename[sub] || sub;\n\t\t\tif (args) args += ', ';\n\t\t\targs += ren;\n\t\t\tbody += ',\\n\t\t\t' + sub + ':' + ren;\n\n\t\t\t//var type = def[sub]\n\t\t}\n\t\tbody += '\\n\t\t}\\n';\n\t\tout += args + '){\\n' + body + '\t}\\n\\n';\n\t}\n\tfs.writeFileSync(module.filename, head + template.replace(/BODY/, out));\n\tconsole.log(\"Written \" + module.filename);\n}\n\n// generated\ndefineDreem.class(function (exports) {\n\n\tthis._Program = this.Program = function (steps) {\n\t\treturn {\n\t\t\ttype: \"Program\",\n\t\t\tsteps: steps\n\t\t};\n\t};\n\n\tthis._Empty = this.Empty = function () {\n\t\treturn {\n\t\t\ttype: \"Empty\"\n\t\t};\n\t};\n\n\tthis._Id = this.Id = function (name, flag) {\n\t\treturn {\n\t\t\ttype: \"Id\",\n\t\t\tname: name,\n\t\t\tflag: flag\n\t\t};\n\t};\n\n\tthis._Property = this.Property = function (name, flag) {\n\t\treturn {\n\t\t\ttype: \"Property\",\n\t\t\tname: name,\n\t\t\tflag: flag\n\t\t};\n\t};\n\n\tthis._Value = this.Value = function (value, raw, kind, multi) {\n\t\treturn {\n\t\t\ttype: \"Value\",\n\t\t\tvalue: value,\n\t\t\traw: raw,\n\t\t\tkind: kind,\n\t\t\tmulti: multi\n\t\t};\n\t};\n\n\tthis._This = this.This = function () {\n\t\treturn {\n\t\t\ttype: \"This\"\n\t\t};\n\t};\n\n\tthis._Array = this.Array = function (elems) {\n\t\treturn {\n\t\t\ttype: \"Array\",\n\t\t\telems: elems\n\t\t};\n\t};\n\n\tthis._Object = this.Object = function (keys) {\n\t\treturn {\n\t\t\ttype: \"Object\",\n\t\t\tkeys: keys\n\t\t};\n\t};\n\n\tthis._Index = this.Index = function (object, index) {\n\t\treturn {\n\t\t\ttype: \"Index\",\n\t\t\tobject: object,\n\t\t\tindex: index\n\t\t};\n\t};\n\n\tthis._Key = this.Key = function (object, key, exist) {\n\t\treturn {\n\t\t\ttype: \"Key\",\n\t\t\tobject: object,\n\t\t\tkey: key,\n\t\t\texist: exist\n\t\t};\n\t};\n\n\tthis._ThisCall = this.ThisCall = function (object, key) {\n\t\treturn {\n\t\t\ttype: \"ThisCall\",\n\t\t\tobject: object,\n\t\t\tkey: key\n\t\t};\n\t};\n\n\tthis._Block = this.Block = function (steps) {\n\t\treturn {\n\t\t\ttype: \"Block\",\n\t\t\tsteps: steps\n\t\t};\n\t};\n\n\tthis._List = this.List = function (items) {\n\t\treturn {\n\t\t\ttype: \"List\",\n\t\t\titems: items\n\t\t};\n\t};\n\n\tthis._Comprehension = this.Comprehension = function (_for, expr) {\n\t\treturn {\n\t\t\ttype: \"Comprehension\",\n\t\t\tfor: _for,\n\t\t\texpr: expr\n\t\t};\n\t};\n\n\tthis._Template = this.Template = function (chain) {\n\t\treturn {\n\t\t\ttype: \"Template\",\n\t\t\tchain: chain\n\t\t};\n\t};\n\n\tthis._Break = this.Break = function (label) {\n\t\treturn {\n\t\t\ttype: \"Break\",\n\t\t\tlabel: label\n\t\t};\n\t};\n\n\tthis._Continue = this.Continue = function (label) {\n\t\treturn {\n\t\t\ttype: \"Continue\",\n\t\t\tlabel: label\n\t\t};\n\t};\n\n\tthis._Label = this.Label = function (label, body) {\n\t\treturn {\n\t\t\ttype: \"Label\",\n\t\t\tlabel: label,\n\t\t\tbody: body\n\t\t};\n\t};\n\n\tthis._If = this.If = function (test, then, _else, postfix, compr) {\n\t\treturn {\n\t\t\ttype: \"If\",\n\t\t\ttest: test,\n\t\t\tthen: then,\n\t\t\telse: _else,\n\t\t\tpostfix: postfix,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._Switch = this.Switch = function (on, cases) {\n\t\treturn {\n\t\t\ttype: \"Switch\",\n\t\t\ton: on,\n\t\t\tcases: cases\n\t\t};\n\t};\n\n\tthis._Case = this.Case = function (test, steps) {\n\t\treturn {\n\t\t\ttype: \"Case\",\n\t\t\ttest: test,\n\t\t\tsteps: steps\n\t\t};\n\t};\n\n\tthis._Throw = this.Throw = function (arg) {\n\t\treturn {\n\t\t\ttype: \"Throw\",\n\t\t\targ: arg\n\t\t};\n\t};\n\n\tthis._Try = this.Try = function (_try, arg, _catch, _finally) {\n\t\treturn {\n\t\t\ttype: \"Try\",\n\t\t\ttry: _try,\n\t\t\targ: arg,\n\t\t\tcatch: _catch,\n\t\t\tfinally: _finally\n\t\t};\n\t};\n\n\tthis._While = this.While = function (test, loop) {\n\t\treturn {\n\t\t\ttype: \"While\",\n\t\t\ttest: test,\n\t\t\tloop: loop\n\t\t};\n\t};\n\n\tthis._DoWhile = this.DoWhile = function (loop, test) {\n\t\treturn {\n\t\t\ttype: \"DoWhile\",\n\t\t\tloop: loop,\n\t\t\ttest: test\n\t\t};\n\t};\n\n\tthis._For = this.For = function (init, test, update, loop, compr) {\n\t\treturn {\n\t\t\ttype: \"For\",\n\t\t\tinit: init,\n\t\t\ttest: test,\n\t\t\tupdate: update,\n\t\t\tloop: loop,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._ForIn = this.ForIn = function (left, right, loop, compr) {\n\t\treturn {\n\t\t\ttype: \"ForIn\",\n\t\t\tleft: left,\n\t\t\tright: right,\n\t\t\tloop: loop,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._ForOf = this.ForOf = function (left, right, loop, compr) {\n\t\treturn {\n\t\t\ttype: \"ForOf\",\n\t\t\tleft: left,\n\t\t\tright: right,\n\t\t\tloop: loop,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._ForFrom = this.ForFrom = function (right, left, loop, compr) {\n\t\treturn {\n\t\t\ttype: \"ForFrom\",\n\t\t\tright: right,\n\t\t\tleft: left,\n\t\t\tloop: loop,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._ForTo = this.ForTo = function (left, right, loop, _in, compr) {\n\t\treturn {\n\t\t\ttype: \"ForTo\",\n\t\t\tleft: left,\n\t\t\tright: right,\n\t\t\tloop: loop,\n\t\t\tin: _in,\n\t\t\tcompr: compr\n\t\t};\n\t};\n\n\tthis._Var = this.Var = function (defs, _const) {\n\t\treturn {\n\t\t\ttype: \"Var\",\n\t\t\tdefs: defs,\n\t\t\tconst: _const\n\t\t};\n\t};\n\n\tthis._TypeVar = this.TypeVar = function (typing, defs, dim) {\n\t\treturn {\n\t\t\ttype: \"TypeVar\",\n\t\t\ttyping: typing,\n\t\t\tdefs: defs,\n\t\t\tdim: dim\n\t\t};\n\t};\n\n\tthis._Struct = this.Struct = function (id, struct, base) {\n\t\treturn {\n\t\t\ttype: \"Struct\",\n\t\t\tid: id,\n\t\t\tstruct: struct,\n\t\t\tbase: base\n\t\t};\n\t};\n\n\tthis._Define = this.Define = function (id, value) {\n\t\treturn {\n\t\t\ttype: \"Define\",\n\t\t\tid: id,\n\t\t\tvalue: value\n\t\t};\n\t};\n\n\tthis._Enum = this.Enum = function (id, enums) {\n\t\treturn {\n\t\t\ttype: \"Enum\",\n\t\t\tid: id,\n\t\t\tenums: enums\n\t\t};\n\t};\n\n\tthis._Def = this.Def = function (id, init, dim) {\n\t\treturn {\n\t\t\ttype: \"Def\",\n\t\t\tid: id,\n\t\t\tinit: init,\n\t\t\tdim: dim\n\t\t};\n\t};\n\n\tthis._Function = this.Function = function (id, name, params, rest, body, arrow, gen, def) {\n\t\treturn {\n\t\t\ttype: \"Function\",\n\t\t\tid: id,\n\t\t\tname: name,\n\t\t\tparams: params,\n\t\t\trest: rest,\n\t\t\tbody: body,\n\t\t\tarrow: arrow,\n\t\t\tgen: gen,\n\t\t\tdef: def\n\t\t};\n\t};\n\n\tthis._Return = this.Return = function (arg) {\n\t\treturn {\n\t\t\ttype: \"Return\",\n\t\t\targ: arg\n\t\t};\n\t};\n\n\tthis._Yield = this.Yield = function (arg) {\n\t\treturn {\n\t\t\ttype: \"Yield\",\n\t\t\targ: arg\n\t\t};\n\t};\n\n\tthis._Await = this.Await = function (arg) {\n\t\treturn {\n\t\t\ttype: \"Await\",\n\t\t\targ: arg\n\t\t};\n\t};\n\n\tthis._Unary = this.Unary = function (op, prefix, arg) {\n\t\treturn {\n\t\t\ttype: \"Unary\",\n\t\t\top: op,\n\t\t\tprefix: prefix,\n\t\t\targ: arg\n\t\t};\n\t};\n\n\tthis._Binary = this.Binary = function (op, prio, left, right) {\n\t\treturn {\n\t\t\ttype: \"Binary\",\n\t\t\top: op,\n\t\t\tprio: prio,\n\t\t\tleft: left,\n\t\t\tright: right\n\t\t};\n\t};\n\n\tthis._Logic = this.Logic = function (op, prio, left, right) {\n\t\treturn {\n\t\t\ttype: \"Logic\",\n\t\t\top: op,\n\t\t\tprio: prio,\n\t\t\tleft: left,\n\t\t\tright: right\n\t\t};\n\t};\n\n\tthis._Assign = this.Assign = function (op, prio, left, right) {\n\t\treturn {\n\t\t\ttype: \"Assign\",\n\t\t\top: op,\n\t\t\tprio: prio,\n\t\t\tleft: left,\n\t\t\tright: right\n\t\t};\n\t};\n\n\tthis._Update = this.Update = function (op, prio, arg, prefix) {\n\t\treturn {\n\t\t\ttype: \"Update\",\n\t\t\top: op,\n\t\t\tprio: prio,\n\t\t\targ: arg,\n\t\t\tprefix: prefix\n\t\t};\n\t};\n\n\tthis._Condition = this.Condition = function (test, then, _else) {\n\t\treturn {\n\t\t\ttype: \"Condition\",\n\t\t\ttest: test,\n\t\t\tthen: then,\n\t\t\telse: _else\n\t\t};\n\t};\n\n\tthis._New = this.New = function (fn, args) {\n\t\treturn {\n\t\t\ttype: \"New\",\n\t\t\tfn: fn,\n\t\t\targs: args\n\t\t};\n\t};\n\n\tthis._Call = this.Call = function (fn, args, extarg) {\n\t\treturn {\n\t\t\ttype: \"Call\",\n\t\t\tfn: fn,\n\t\t\targs: args,\n\t\t\textarg: extarg\n\t\t};\n\t};\n\n\tthis._Nest = this.Nest = function (fn, body, arrow) {\n\t\treturn {\n\t\t\ttype: \"Nest\",\n\t\t\tfn: fn,\n\t\t\tbody: body,\n\t\t\tarrow: arrow\n\t\t};\n\t};\n\n\tthis._Class = this.Class = function (id, base, body) {\n\t\treturn {\n\t\t\ttype: \"Class\",\n\t\t\tid: id,\n\t\t\tbase: base,\n\t\t\tbody: body\n\t\t};\n\t};\n\n\tthis._Signal = this.Signal = function (left, right) {\n\t\treturn {\n\t\t\ttype: \"Signal\",\n\t\t\tleft: left,\n\t\t\tright: right\n\t\t};\n\t};\n\n\tthis._Quote = this.Quote = function (quote) {\n\t\treturn {\n\t\t\ttype: \"Quote\",\n\t\t\tquote: quote\n\t\t};\n\t};\n\n\tthis._AssignQuote = this.AssignQuote = function (left, quote) {\n\t\treturn {\n\t\t\ttype: \"AssignQuote\",\n\t\t\tleft: left,\n\t\t\tquote: quote\n\t\t};\n\t};\n\n\tthis._Rest = this.Rest = function (id, dots) {\n\t\treturn {\n\t\t\ttype: \"Rest\",\n\t\t\tid: id,\n\t\t\tdots: dots\n\t\t};\n\t};\n\n\tthis._Then = this.Then = function (name, _do) {\n\t\treturn {\n\t\t\ttype: \"Then\",\n\t\t\tname: name,\n\t\t\tdo: _do\n\t\t};\n\t};\n\n\tthis._Debugger = this.Debugger = function () {\n\t\treturn {\n\t\t\ttype: \"Debugger\"\n\t\t};\n\t};\n\n\tthis._With = this.With = function (object, body) {\n\t\treturn {\n\t\t\ttype: \"With\",\n\t\t\tobject: object,\n\t\t\tbody: body\n\t\t};\n\t};\n\n\tthis.Object = function (obj) {\n\t\tif (arguments.length > 1) return this._Object.apply(this, arguments);\n\t\tvar ret = { type: 'Object', keys: [] };\n\t\tfor (var key in obj) {\n\t\t\tret.keys.push({ key: this.Id(key), value: this.Value(obj[key]) });\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.Value = function (v) {\n\t\tif (arguments.length > 1) return this._Object.apply(this, arguments);\n\t\tif (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n\t\t\treturn { type: 'Value', value: v, kind: typeof v === 'undefined' ? 'undefined' : _typeof(v) };\n\t\t} else throw new Error('Dont support value');\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(8)(module)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/onejsgen.js\n// module id = 138\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/onejsgen.js?");

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Parts Copyright (C) Marijn Haverbeke (Apache 2.0 license)\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\t// This parser is a modified version of Acorn\n\t// It parses the ONEJS superset of JavaScript\n\t// which is JS + ES6, Julia, Coffeescript, CSS, Dart and C++ / GLSL constructs\n\t// Its designed to target JS, Asm.js and GLSL with codegeneration\n\t// It tries to be entirely backwards compatible with JS\n\t// and follows the current ES6 proposals as closely as practical\n\t//\n\t// The Parser AST has been designed to be human friendly,\n\t// and with the quote operator makes ASTs a first class citizen of the language\n\t// check one_ast.js for structural definition of the AST\n\t// \n\t// Think JavaScript, plus (inspiration language on the left)\n\n\t// ES6   member defs can drop the function keyword 'x(param){}''\n\t// ES6   arrow function '=>x', 'x=>x', '()=>x', '(x)=>x' and all =>{} forms\n\t// ES6   full destructuring assignment of arrays and objects in var, arguments and expressions\n\t// ES6   default arguments for functions '(x=10)->x'\n\t// ES6   rest prefix '...name' '(x, ...y) -> {}''\n\t// ES6   for of 'for(x of y){}' for iterators, arrays and objects\n\t// ES6   enum type\n\t// ES6   await async: var x = await async(y)\n\t// ES6   getter setter syntax:  'get x()->10' 'set y(v)->out(v)'\n\t// ES6   const\n\t// ES6   array comprehensions\n\t// ES6   String templates `hello ${i} test` ($ is optional)\n\t// ES6   Binary and Octal numbers according to new 0b and 0o spec\n\t// ES6   Shorthand object intialization {x,y} == {x:x,y:y} \n\t// ES6\t class x extends y{} notation\n\n\t// Microsoft research use of the @ 'probe' operator anywhere\n\t// ONE   use of : to signify symbolic assignment\n\t// ONE   Create instance object with block args x{}\n\t// ONE   function defs can drop the identifier 'x = (param){}'\n\t// ONE   for To 'for(x = 0 to 10 in 3){}'\n\t// ONE   ! is postfixable,  % * & are prefixable \n\t// ONE   do catch for promise-then: 'v(x) do y catch z' -> 'v(x,y,z)' 'v do x' -> 'v(x)'\n\t// ONE   then chaining on do catch: v(x).then do y catch z then do x catch z (for promises)\n\t// ONE \t This replacement call 'x::y()' x.y.call(this,...)\n\n\t// Julia callback to a function after closing paren with do 'x() do ->{code}' \n\t// Julia AST Quote operator 'var x = :y = 10' quotes entire expression rhs, priority below = \n\t// GLSL  typed var 'float x' 'float x[10]' \n\t// GLSL  struct support 'struct x{float y}'\n\t// Dart  tempvar/cascade operator (..)  'selectElement()..prop1=1 \\n..prop2 = 10, ..prop3 = 20'\n\t// Coco  multiline regex / /\\n\\n\\n/ /g\n\t// CSS   # is a prefix flag that the compiler uses for colors\n\t// CSS   automatic * insertion in '2px' -> '2*px' for units or math\n\n\t// CS    commas are optional when you have newlines '[1\\n2] {x:1\\x:2}'\n\t// CS    existential object traverse  'x?.y?.z for no exception-traverse\n\t// CS    existential assignments '?=' if(lhs===undefined)lhs = rhs\n\t// CS    existential prefix operator ?x -> (x===undefined)\n\t// CS    existential or '?|' lhs!==undefined?lhs:rhs\n\n\t// CS    pow '**'\n\t// CS    Mathematical modulus '%%'\n\t// CS    Integer divide '%/' ( cant parse // since thats a comment)\n\n\t// The following JS parser bugs/features have been fixed/changed:\n\n\t// Doing 'x\\n()' or 'x\\n[]' subscripts is now 2 statements, not an accidental call/index\n\t// This makes coding without semicolons completely predictable and safe.\n\t// MIGHT REVERT: Loose blocks in program scope like '{x:1}' are now interpreted as objects\n\t// Only 'new identifier' is treated as a the JS new keyword calling new() and new{} is usable syntax\n\t// Dont parse 0131 as octal, its almost always a  typo\n\t// label: syntax has been depricated and is used as lazy-eval and signal assigns\n\n\t// Code generation features depend on the target language\n\n\t// Todo\n\t// Support C like pointer access using -> and * and &\n\t// For from and for to have a step / in argument\n\t// ES6 let block scoped variables\n\t// Parse inline markup mixed with code\n\t//\n\t// items not done\n\t// Ranges '[0 to 1]' '[0 to 3]' maybe.\n\t// add catch to await\n\t// ES6 generator comprehensions\n\t// \n\t// Acorn was written by Marijn Haverbeke and released under an MIT\n\t// license. The Unicode regexps (for identifiers and whitespace) were\n\t// taken from [Esprima](http:*esprima.org) by Ariya Hidayat.\n\t//\n\t// Git repositories for Acorn are available at\n\t//\n\t//     http:*marijnhaverbeke.nl/git/acorn\n\t//     https:*github.com/marijnh/acorn.git\n\t//\n\t// A second optional argument can be given to further configure\n\t// the parser process. These options are recognized:\n\n\tthis.input = '';\n\tthis.inputLen = 0;\n\n\t// `ecmaVersion` indicates the ECMAScript version to parse. Must\n\t// be either 3 or 5. This\n\t// influences support for this.strict mode, the set of reserved words, and\n\t// support for getters and setter.\n\tthis.ecmaVersion = 5;\n\n\t// Turn on `strictSemicolons` to prevent the parser from doing\n\t// automatic this.semicolon insertion.\n\tthis.strictSemicolons = false;\n\t// When `allowTrailingCommas` is false, the parser will not allow\n\t// trailing commas in array and object literals.\n\tthis.allowTrailingCommas = true;\n\t// By default, reserved words are not enforced. Enable\n\t// `forbidReserved` to enforce them. When this option has the\n\t// value \"everywhere\", reserved words and keywords can also not be\n\t// used as property names.\n\tthis.forbidReserved = false;\n\t// Parses { } in top level scope as JS objects, not blocks.\n\t// Fixes use for throwing in plain JSON without switching\n\t// to expression mode\n\tthis.objectInTopLevel = true;\n\t// When enabled, commas are injected where possible\n\tthis.injectCommas = true;\n\t// When enabled, a return at the top level is not considered an\n\t// error.\n\tthis.allowReturnOutsideFunction = true;\n\n\t// stores comments and newline info on the AST as best as we can\n\tthis.storeComments = true;\n\n\t// allows multiline strings\n\tthis.multilineStrings = true;\n\n\t// allow string templating\n\tthis.stringTemplating = true;\n\n\tthis.sourceFile = '';\n\n\t// The current position of the tokenizer in the this.input.\n\tthis.tokPos = 0;\n\n\t// The start and end offsets of the current token.\n\n\tthis.tokStart = 0;\n\tthis.tokEnd = 0;\n\n\t// The type and value of the current token. Token types are objects,\n\t// named by variables against which they can be compared, and\n\t// holding properties that describe them (indicating, for example,\n\t// the precedence of an infix operator, and the original name of a\n\t// keyword token). The kind of value that's held in `this.tokVal` depends\n\t// on the type of the token. For literals, it is the literal value,\n\t// for operators, the operator name, and so on.\n\n\tthis.tokType;\n\tthis.tokVal;\n\n\t// Interal state for the tokenizer. To distinguish between division\n\t// operators and regular expressions, it remembers whether the last\n\t// token was one that is allowed to be followed by an expression.\n\t// (If it is, a slash is probably a regexp, if it isn't it's a\n\t// division operator. See the `this.parseStatement` function for a\n\t// caveat.)\n\n\tthis.tokRegexpAllowed;\n\n\t// These store the position of the previous token, which is useful\n\t// when finishing a node and assigning its `end` position.\n\tthis.lastTok;\n\tthis.lastStart;\n\tthis.lastEnd;\n\n\t// used by comma insertion and subscripts\n\tthis.skippedNewlines;\n\tthis.lastSkippedNewlines;\n\n\t// This is the parser's state. `this.inFunction` is used to reject\n\t// `return` statements outside of functions, `this.labels` to verify that\n\t// `break` and `continue` have somewhere to jump to, and `this.strict`\n\t// indicates whether this.strict mode is on.\n\n\tthis.inFunction;\n\tthis.labels;\n\tthis.strict;\n\n\t// This function is used to this.raise exceptions on parse errors. It\n\t// takes an offset integer (into the current `this.input`) to indicate\n\t// the location of the error, attaches the position to the end\n\t// of the error message, and then raises a `SyntaxError` with that\n\t// message.\n\tthis.lastComments = [];\n\tthis.lastNodes = [];\n\n\t// alright parsing templating/interpolations.\n\tthis.parenStack;\n\n\texports.parse = function (inpt, debug) {\n\t\tvar parser = new this();\n\t\treturn parser.parse(inpt, debug);\n\t};\n\n\tthis.parse = function (inpt, debug) {\n\t\tthis.debug = debug;\n\t\tif (this.parser_cache) {\n\t\t\tvar cache = this.parser_cache[inpt];\n\t\t\tif (cache) return cache;\n\t\t}\n\t\tthis.input = String(inpt);\n\t\tthis.inputLen = this.input.length;\n\t\tthis.initTokenState();\n\t\tvar ret = this.parseTopLevel();\n\t\tif (this.parser_cache) {\n\t\t\tthis.parser_cache[inpt] = ret;\n\t\t}\n\t\treturn ret;\n\t};\n\n\t// The `this.getLineInfo` function is mostly useful when the\n\t// `locations` option is off (for performance reasons) and you\n\t// want to find the line/column position for a given character\n\t// offset. `this.input` should be the code string that the offset refers\n\t// into.\n\n\tthis.getLineInfo = function (input, offset) {\n\t\tfor (var line = 1, cur = 0;;) {\n\t\t\tthis.lineBreak.lastIndex = cur;\n\t\t\tvar match = this.lineBreak.exec(this.input);\n\t\t\tif (match && match.index < offset) {\n\t\t\t\t++line;\n\t\t\t\tcur = match.index + match[0].length;\n\t\t\t} else break;\n\t\t}\n\t\treturn { line: line, column: offset - cur };\n\t};\n\n\tthis.raise = function (pos, message) {\n\t\tvar loc = this.getLineInfo(this.input, pos);\n\t\tmessage += \" in \" + this.sourceFile + \" line \" + loc.line + \" column \" + loc.column;\n\t\tvar err = new SyntaxError(message);\n\t\terr.pos = pos;err.loc = loc;err.raisedAt = this.tokPos;\n\t\t//console.log(message, this.input.split(\"\\n\")[loc.line-1])\n\n\t\tthrow err;\n\t};\n\n\t// Reused this.empty array added for node fields that are always this.empty.\n\n\tthis.empty = [];\n\n\t// ## Token types\n\n\t// The assignment of fine-grained, information-carrying type objects\n\t// allows the tokenizer to store the information it has about a\n\t// token in a way that is very cheap for the parser to look up.\n\n\t// All token type variables start with an underscore, to make them\n\t// easy to recognize.\n\n\t// These are the general types. \n\n\tthis._num = { type: \"num\", canInj: 1 };\n\tthis._regexp = { type: \"regexp\", canInj: 1 };\n\tthis._string = { type: \"string\", canInj: 1 };\n\tthis._name = { type: \"name\", canInj: 1 };\n\tthis._eof = { type: \"eof\"\n\t\t// templated string type\n\t};this._template = {};\n\n\t// Keyword tokens. The `keyword` property (also used in keyword-like\n\t// operators) indicates that the token originated from an\n\t// identifier-like word, which is used when parsing property names.\n\t//\n\t// The `beforeExpr` property is used to disambiguate between regular\n\t// expressions and divisions. It is set on all token types that can\n\t// be followed by an expression (thus, a slash after them would be a\n\t// regular expression).\n\t//\n\t// `isLoop` marks a keyword as starting a loop, which is important\n\t// to know when parsing a label, in order to allow or disallow\n\t// continue jumps to that label.\n\n\tthis._break = { keyword: \"break\" };\n\tthis._case = { keyword: \"case\", beforeExpr: true };\n\tthis._catch = { keyword: \"catch\" };\n\tthis._continue = { keyword: \"continue\" };\n\tthis._debugger = { keyword: \"debugger\" };\n\tthis._default = { keyword: \"default\" };\n\tthis._do = { keyword: \"do\", isLoop: true };\n\tthis._on = { keyword: \"on\", isLoop: true };\n\tthis._else = { keyword: \"else\", beforeExpr: true };\n\tthis._finally = { keyword: \"finally\" };\n\tthis._for = { keyword: \"for\", isLoop: true };\n\tthis._function = { keyword: \"function\" };\n\tthis._if = { keyword: \"if\" };\n\tthis._return = { keyword: \"return\", beforeExpr: true };\n\tthis._yield = { keyword: \"yield\", beforeExpr: true };\n\tthis._await = { keyword: \"await\", beforeExpr: true };\n\n\tthis._switch = { keyword: \"switch\" };\n\tthis._throw = { keyword: \"throw\", beforeExpr: true };\n\tthis._try = { keyword: \"try\" };\n\tthis._var = { keyword: \"var\"\n\t\t//this._const = {keyword: \"const\"}\n\t};this._while = { keyword: \"while\", isLoop: true };\n\tthis._with = { keyword: \"with\", preIdent: this._name };\n\tthis._new = { keyword: \"new\", preIdent: this._name, beforeExpr: true };\n\tthis._this = { keyword: \"this\"\n\n\t\t// class extends \n\t};this._extends = { keyword: \"extends\", preIdent: this._name };\n\tthis._class = { keyword: \"class\", preIdent: this._name };\n\tthis._struct = { keyword: \"struct\", preIdent: this._name };\n\tthis._enum = { keyword: \"enum\", preIdent: this._name\n\n\t\t// The keywords that denote values.\n\t};this._null = { keyword: \"null\", isValue: 1, atomValue: null };\n\tthis._true = { keyword: \"true\", isValue: 1, atomValue: true };\n\tthis._false = { keyword: \"false\", isValue: 1, atomValue: false\n\n\t\t// Some keywords are treated as regular operators. `in` sometimes\n\t\t// (when parsing `for`) needs to be tested against specifically, so\n\t\t// we assign a variable name to it for quick comparing.\n\t};this._in = { keyword: \"in\", preIdent: this._name, binop: 7, beforeExpr: true };\n\tthis._of = { keyword: \"of\", preIdent: this._name, binop: 7, beforeExpr: true };\n\n\tthis._instanceof = { keyword: \"instanceof\", preIdent: this._name, binop: 7, beforeExpr: true }, this._typeof = { keyword: \"typeof\", preIdent: this._name, prefix: true, beforeExpr: true };\n\tthis._void = { keyword: \"void\", preIdent: this._name, prefix: true, beforeExpr: true };\n\tthis._delete = { keyword: \"delete\", preIdent: this._name, prefix: true, beforeExpr: true\n\n\t\t// Punctuation token types.\n\t};this._bracketL = { type: \"[\", beforeExpr: true, canInj: 1 };\n\tthis._bracketR = { type: \"]\" };\n\tthis._braceL = { type: \"{\", beforeExpr: true, canInj: 1 };\n\tthis._braceR = { type: \"}\" };\n\tthis._parenL = { type: \"(\", beforeExpr: true, canInj: 1 };\n\tthis._parenR = { type: \")\" };\n\tthis._comma = { type: \",\", beforeExpr: true };\n\tthis._semi = { type: \";\", beforeExpr: true };\n\tthis._colon = { type: \":\", prefix: 1, beforeExpr: true };\n\tthis._doublecolon = { type: \"::\" };\n\tthis._dot = { type: \".\", canInj: 1 };\n\tthis._dotdot = { type: \"..\" };\n\tthis._tripledot = { type: \"...\" };\n\n\tthis._existkey = { type: \"?.\" };\n\tthis._existor = { type: \"?|\", binop: 1, beforeExpr: true, logic: 1 };\n\tthis._existeq = { type: \"?=\", isAssign: true, binop: 0, beforeExpr: true };\n\tthis._wtfeq = { type: \"??=\", isAssign: true, binop: 0, beforeExpr: true };\n\tthis._wtf = { type: \"??\", binop: 1, beforeExpr: true };\n\n\tthis._question = { type: \"?\", prefix: true, beforeExpr: true };\n\tthis._fatArrow = { type: \"=>\" };\n\tthis._thinArrow = { type: \"->\"\n\n\t\t// Operators. These carry several kinds of properties to help the\n\t\t// parser use them properly (the presence of these properties is\n\t\t// what categorizes them as operators).\n\t\t//\n\t\t// `binop`, when present, specifies that this operator is a binary\n\t\t// operator, and will refer to its precedence.\n\t\t//\n\t\t// `prefix` and `postfix` mark the operator as a prefix or postfix\n\t\t// unary operator. `isUpdate` specifies that the node produced by\n\t\t// the operator should be of type UpdateExpression rather than\n\t\t// simply UnaryExpression (`++` and `--`).\n\t\t//\n\t\t// `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n\t\t// binary operators with a very low precedence, that should result\n\t\t// in AssignmentExpression nodes.\n\n\t};this._slash = { binop: 10, beforeExpr: true };\n\tthis._eq = { isAssign: true, beforeExpr: true };\n\tthis._assign = { isAssign: true, binop: 0, beforeExpr: true };\n\tthis._incDec = { postfix: true, prefix: true, isUpdate: true };\n\tthis._notxor = { prefix: true, beforeExpr: true };\n\tthis._exists = { prefix: true, beforeExpr: true };\n\n\tthis._logicalOR = { binop: 1, beforeExpr: true, logic: 1 };\n\tthis._logicalAND = { binop: 2, beforeExpr: true, logic: 1 };\n\tthis._bitwiseOR = { binop: 3, beforeExpr: true };\n\tthis._bitwiseXOR = { binop: 4, beforeExpr: true };\n\tthis._bitwiseAND = { binop: 5, prefix: true, beforeExpr: true };\n\tthis._equality = { binop: 6, beforeExpr: true, logic: 1 };\n\tthis._relational = { binop: 7, beforeExpr: true, logic: 1 };\n\tthis._bitShift = { binop: 8, beforeExpr: true };\n\tthis._plusMin = { binop: 9, prefix: true, beforeExpr: true };\n\tthis._multiplyModulo = { binop: 10, prefix: true, beforeExpr: true };\n\tthis._pow = { binop: 10, beforeExpr: true };\n\tthis._intmod = { binop: 10, beforeExpr: true };\n\tthis._intdiv = { binop: 10, beforeExpr: true\n\n\t\t//this._or = {keyword: \"or\", replace:'||', replaceOp:this._logicalOR, binop: 1, beforeExpr: true}\n\t\t//this._and = {keyword: \"and\", replace:'&&', replaceOp:this._logicalAND, binop: 2, beforeExpr: true}\n\t\t//this._not = {keyword: \"not\", replace:'!', prefix: 1, beforeExpr: true}\n\n\t\t// This is a trick taken from Esprima. It turns out that, on\n\t\t// non-Chrome browsers, to check whether a string is in a set, a\n\t\t// predicate containing a big ugly `switch` statement is faster than\n\t\t// a regular expression, and on Chrome the two are about on par.\n\t\t// This function uses `eval` (non-lexical) to produce such a\n\t\t// predicate from a space-separated string of words.\n\t\t//\n\t\t// It starts by sorting the words by length.\n\n\t};this.makePredicate = function (words) {\n\t\twords = words.split(\" \");\n\t\tvar f = \"\",\n\t\t    cats = [];\n\t\tout: for (var i = 0; i < words.length; ++i) {\n\t\t\tfor (var j = 0; j < cats.length; ++j) {\n\t\t\t\tif (cats[j][0].length == words[i].length) {\n\t\t\t\t\tcats[j].push(words[i]);\n\t\t\t\t\tcontinue out;\n\t\t\t\t}\n\t\t\t}cats.push([words[i]]);\n\t\t}\n\t\tthis.compareTo = function (arr) {\n\t\t\tif (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n\t\t\tf += \"switch(str){\";\n\t\t\tfor (var i = 0; i < arr.length; ++i) {\n\t\t\t\tf += \"case \" + JSON.stringify(arr[i]) + \":\";\n\t\t\t}f += \"return true}return false;\";\n\t\t};\n\n\t\t// When there are more than three length categories, an outer\n\t\t// switch first dispatches on the lengths, to save on comparisons.\n\n\t\tif (cats.length > 3) {\n\t\t\tcats.sort(function (a, b) {\n\t\t\t\treturn b.length - a.length;\n\t\t\t});\n\t\t\tf += \"switch(str.length){\";\n\t\t\tfor (var i = 0; i < cats.length; ++i) {\n\t\t\t\tvar cat = cats[i];\n\t\t\t\tf += \"case \" + cat[0].length + \":\";\n\t\t\t\tthis.compareTo(cat);\n\t\t\t}\n\t\t\tf += \"}\";\n\t\t\t// Otherwise, simply generate a flat `switch` statement.\n\t\t} else {\n\t\t\tthis.compareTo(words);\n\t\t}\n\t\treturn new Function(\"str\", f);\n\t};\n\n\tthis._isReservedWord3 = \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\";\n\tthis._isReservedWord5 = \"class enum extends super const export import\";\n\tthis._isStrictReservedWord = \"implements interface let package private protected public static yield\";\n\tthis._isStrictBadIdWord = \"eval arguments\";\n\n\tthis.initKeywords = function () {\n\t\tvar isKeyword = '';\n\t\tthis.keywordTypes = {};\n\t\tthis.tokTypes = {};\n\t\tfor (var k in this) {\n\t\t\tvar v = this[k];\n\n\t\t\tif (k[0] == '_') {\n\t\t\t\tif ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object') {\n\t\t\t\t\tv.toString = function (k) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\treturn 'Token:' + k;\n\t\t\t\t\t\t};\n\t\t\t\t\t}(k);\n\t\t\t\t}\n\t\t\t\tif (v.binop || v.type || v.keyword) {\n\t\t\t\t\t// its a token\n\t\t\t\t\tthis.tokTypes[k.slice(1)] = v;\n\t\t\t\t\tif (v.keyword) {\n\t\t\t\t\t\tthis.keywordTypes[v.keyword] = v;\n\t\t\t\t\t\tisKeyword += (isKeyword.length ? ' ' : '') + v.keyword;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.isKeyword = this.makePredicate(isKeyword);\n\t\tthis.isReservedWord3 = this.makePredicate(this._isReservedWord3);\n\t\tthis.isReservedWord5 = this.makePredicate(this._isReservedWord5);\n\t\tthis.isStrictReservedWord = this.makePredicate(this._isStrictReservedWord);\n\t\tthis.isStrictBadIdWord = this.makePredicate(this._isStrictBadIdWord);\n\t};\n\n\t// If you externally modify things, call this again\n\tthis.initKeywords();\n\n\t// ## Character categories\n\n\t// Big ugly regular expressions that match characters in the\n\t// whitespace, identifier, and identifier-start categories. These\n\t// are only applied when a character is found to actually have a\n\t// code point above 128.\n\n\tthis.nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\tthis.nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\n\tthis.nonASCIIidentifierChars = \"\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u0620-\\u0649\\u0672-\\u06D3\\u06E7-\\u06E8\\u06FB-\\u06FC\\u0730-\\u074A\\u0800-\\u0814\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0840-\\u0857\\u08E4-\\u08FE\\u0900-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09D7\\u09DF-\\u09E0\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5F-\\u0B60\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2-\\u0CE3\\u0CE6-\\u0CEF\\u0D02\\u0D03\\u0D46-\\u0D48\\u0D57\\u0D62-\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E34-\\u0E3A\\u0E40-\\u0E45\\u0E50-\\u0E59\\u0EB4-\\u0EB9\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F41-\\u0F47\\u0F71-\\u0F84\\u0F86-\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u170E-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17B2\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1920-\\u192B\\u1930-\\u193B\\u1951-\\u196D\\u19B0-\\u19C0\\u19C8-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A15\\u1A20-\\u1A53\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1B46-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C00-\\u1C22\\u1C40-\\u1C49\\u1C5B-\\u1C7D\\u1CD0-\\u1CD2\\u1D00-\\u1DBE\\u1E01-\\u1F15\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2D81-\\u2D96\\u2DE0-\\u2DFF\\u3021-\\u3028\\u3099\\u309A\\uA640-\\uA66D\\uA674-\\uA67D\\uA69F\\uA6F0-\\uA6F1\\uA7F8-\\uA800\\uA806\\uA80B\\uA823-\\uA827\\uA880-\\uA881\\uA8B4-\\uA8C4\\uA8D0-\\uA8D9\\uA8F3-\\uA8F7\\uA900-\\uA909\\uA926-\\uA92D\\uA930-\\uA945\\uA980-\\uA983\\uA9B3-\\uA9C0\\uAA00-\\uAA27\\uAA40-\\uAA41\\uAA4C-\\uAA4D\\uAA50-\\uAA59\\uAA7B\\uAAE0-\\uAAE9\\uAAF2-\\uAAF3\\uABC0-\\uABE1\\uABEC\\uABED\\uABF0-\\uABF9\\uFB20-\\uFB28\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\n\tthis.nonASCIIidentifierStart = new RegExp(\"[\" + this.nonASCIIidentifierStartChars + \"]\");\n\tthis.nonASCIIidentifier = new RegExp(\"[\" + this.nonASCIIidentifierStartChars + this.nonASCIIidentifierChars + \"]\");\n\n\t// Whether a single character denotes a this.newline.\n\n\tthis.newline = /[\\n\\r\\u2028\\u2029]/;\n\n\t// Matches a whole line break (where CRLF is considered a single\n\t// line break). Used to count lines.\n\n\tthis.lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n\t// Test whether a given character code starts an identifier.\n\texports.needsParens = function (node, other, isleft) {\n\t\tvar other_t = other.type;\n\n\t\tif (other_t == 'Assign' || other_t == 'List' || other_t == 'Condition' || (other_t == 'Binary' || other_t == 'Logic') && other.prio <= node.prio) {\n\t\t\tif (other.prio == node.prio && isleft) return false;\n\t\t\treturn true;\n\t\t}\n\t};\n\n\texports.isIdentifierStart = this.isIdentifierStart = function (code) {\n\t\tif (code < 65) return code === 36 || code === 35;\n\t\tif (code < 91) return true;\n\t\tif (code < 97) return code === 95;\n\t\tif (code < 123) return true;\n\t\treturn code >= 0xaa && this.nonASCIIidentifierStart.test(String.fromCharCode(code));\n\t};\n\n\t// Test whether a given character is part of an identifier.\n\texports.isIdentifierChar = this.isIdentifierChar = function (code) {\n\t\tif (code < 48) return code === 36 || code === 35;\n\t\tif (code < 58) return true;\n\t\tif (code < 65) return false;\n\t\tif (code < 91) return true;\n\t\tif (code < 97) return code === 95;\n\t\tif (code < 123) return true;\n\n\t\treturn code >= 0xaa && this.nonASCIIidentifier.test(String.fromCharCode(code));\n\t};\n\n\texports.isNewLine = this.isNewLine = function (code) {\n\t\treturn this.newline.test(String.fromCharCode(code));\n\t};\n\n\texports.isNonNewlineWhiteSpace = this.isNonNewlineWhiteSpace = function (code) {\n\t\tif (code == 32) return true;\n\t\tif (code == 9) return true;\n\t\treturn code >= 0xaa && this.nonASCIIwhitespace.test(String.fromCharCode(code));\n\t};\n\n\texports.isWhiteSpace = this.isWhiteSpace = function (code) {\n\t\tif (code == 32) return true;\n\t\tif (code == 9) return true;\n\t\tif (code == 10) return true;\n\t\treturn code >= 0xaa && this.nonASCIIwhitespace.test(String.fromCharCode(code));\n\t};\n\n\t// ## Tokenizer\n\n\t// Reset the token state. Used at the start of a parse.\n\n\tthis.initTokenState = function () {\n\t\tthis.parenStack = [];\n\t\tthis.lastTok = undefined;\n\t\tthis.skippedNewlines = false;\n\t\tthis.lastSkippedNewlines = false;\n\t\tthis.lastComments.length = 0;\n\t\tthis.lastNodes.length = 0;\n\t\tthis.tokPos = 0;\n\t\tthis.tokRegexpAllowed = true;\n\t\tthis.templateNext = false;\n\t\tthis.skipSpace();\n\t};\n\n\t// Called at the end of every token. Sets `this.tokEnd`, `this.tokVal`, and\n\t// `this.tokRegexpAllowed`, and skips the space after the token, so that\n\t// the next one's `this.tokStart` will point at the right position.\n\n\tthis.finishToken = function (type, val) {\n\t\t//console.log('FINISH TOKEN',type)\n\t\tif (this.storeComments) this.lastComments.push(type);\n\t\tthis.tokEnd = this.tokPos;\n\t\tthis.tokType = type;\n\t\t//this.tokIsType = this.typeKeywords[val]\n\t\tthis.skipSpace();\n\t\tif (type.preIdent) {\n\t\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\t\tif (!this.isIdentifierStart(next) && (next < 48 || next > 57)) {\n\t\t\t\tthis.tokType = type.preIdent;\n\t\t\t}\n\t\t}\n\t\tthis.tokVal = val;\n\t\tthis.tokRegexpAllowed = type.beforeExpr;\n\t};\n\n\tthis.skipBlockComment = function () {\n\t\tvar start = this.tokPos,\n\t\t    end = this.input.indexOf(\"*/\", this.tokPos += 2);\n\t\tif (end === -1) this.raise(this.tokPos - 2, \"Unterminated comment\");\n\t\tif (this.input.indexOf(\"\\n\", this.tokPos) < end) this.skippedNewlines = 1;\n\t\tthis.tokPos = end + 2;\n\n\t\tif (this.storeComments) {\n\n\t\t\tvar block = this.input.slice(start + 2, end).split(\"\\n\");\n\t\t\tfor (var i = 0; i < block.length; i++) {\n\t\t\t\tthis.lastComments.push( /*start,*/block[i]);\n\t\t\t\tif (i < block.length - 1) this.lastComments.push( /*start,*/1);\n\t\t\t}\n\t\t\tthis.lastComments.push( /*start,*/1);\n\t\t}\n\t};\n\n\tthis.skipLineComment = function () {\n\n\t\tvar start = this.tokPos;\n\t\tvar ch = this.input.charCodeAt(this.tokPos += 2);\n\t\twhile (this.tokPos < this.inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n\t\t\t++this.tokPos;\n\t\t\tch = this.input.charCodeAt(this.tokPos);\n\t\t}\n\t\t// store the comment\n\t\tif (this.storeComments) {\n\t\t\tvar strip = start + 2;\n\t\t\tvar ch = this.input.charCodeAt(strip);\n\t\t\twhile (strip < this.tokPos && (ch > 8 && ch < 14 || ch == 32)) {\n\t\t\t\tch = this.input.charCodeAt(++strip);\n\t\t\t}\n\t\t\tvar cmt = this.input.slice(strip, this.tokPos);\n\t\t\tthis.lastComments.push( /*start,*/cmt);\n\t\t\t//console.log('COMMENT',cmt)\n\t\t}\n\t};\n\n\t// Called at the start of the parse and after every token. Skips\n\t// whitespace and comments, and.\n\n\tthis.skipSpace = function () {\n\n\t\tthis.lastSkippedNewlines = this.skippedNewlines;\n\t\tthis.skippedNewlines = 0;\n\t\tif (this.templateNext) return;\n\t\twhile (this.tokPos < this.inputLen) {\n\t\t\tvar ch = this.input.charCodeAt(this.tokPos);\n\t\t\tif (ch === 32) {\n\t\t\t\t// ' '\n\t\t\t\t++this.tokPos;\n\t\t\t} else if (ch === 13) {\n\t\t\t\t++this.tokPos;\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\t\t\tif (next === 10) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t}\n\t\t\t\tthis.skippedNewlines++;\n\t\t\t\tif (this.storeComments) this.lastComments.push( /*this.tokPos-2,*/1);\n\t\t\t} else if (ch === 10 || ch === 8232 || ch === 8233) {\n\t\t\t\t++this.tokPos;\n\t\t\t\tthis.skippedNewlines++;\n\t\t\t\tif (this.storeComments) this.lastComments.push( /*this.tokPos-1,*/1);\n\t\t\t} else if (ch > 8 && ch < 14) {\n\t\t\t\t++this.tokPos;\n\t\t\t} else if (ch === 47) {\n\t\t\t\t// '/'\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\tif (next === 42) {\n\t\t\t\t\t// '*'\n\t\t\t\t\tthis.skipBlockComment();\n\t\t\t\t} else if (next === 47) {\n\t\t\t\t\t// '/'\n\t\t\t\t\tthis.skipLineComment();\n\t\t\t\t} else break;\n\t\t\t} else if (ch === 160) {\n\t\t\t\t// '\\xa0'\n\t\t\t\t++this.tokPos;\n\t\t\t} else if (ch >= 5760 && this.nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n\t\t\t\t++this.tokPos;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// ### Token reading\n\n\t// This is the function that is called to fetch the next token. It\n\t// is somewhat obscure, because it works in character codes rather\n\t// than characters, and because operator parsing has been inlined\n\t// into it.\n\t//\n\t// All in the name of speed.\n\t//\n\t// The `forceRegexp` parameter is used in the one case where the\n\t// `this.tokRegexpAllowed` trick does not work. See `this.parseStatement`.\n\n\tthis.readToken_dot = function () {\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (next >= 48 && next <= 57) return this.readNumber(true);\n\t\tif (next == 46) {\n\t\t\tnext = this.input.charCodeAt(this.tokPos + 2);\n\t\t\tvar after = this.input.charCodeAt(this.tokPos + 3);\n\t\t\tif (next == 46 && after != 46) {\n\t\t\t\tthis.tokPos += 3;\n\t\t\t\treturn this.finishToken(this._tripledot);\n\t\t\t}\n\t\t\tthis.tokPos += 2;\n\t\t\treturn this.finishToken(this._dotdot);\n\t\t} // double dot\n\t\t++this.tokPos;\n\t\treturn this.finishToken(this._dot);\n\t};\n\n\tthis.readToken_slash = function () {\n\t\t// '/'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (this.tokRegexpAllowed) {\n\t\t\tif (next == 32 && this.input.charCodeAt(this.tokPos + 2) == 47) {\n\t\t\t\tthis.tokPos += 3;\n\t\t\t\treturn this.readRegexp(true);\n\t\t\t}\n\t\t\t++this.tokPos;\n\t\t\treturn this.readRegexp();\n\t\t}\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\t\treturn this.finishOp(this._slash, 1);\n\t};\n\n\tthis.readToken_multiply = function () {\n\t\t// '*'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\n\t\tif (next === 42) return this.finishOp(this._pow, 2);\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\n\t\treturn this.finishOp(this._multiplyModulo, 1);\n\t};\n\n\tthis.readToken_modulo = function () {\n\t\t// '%'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\n\t\tif (next === 47) return this.finishOp(this._intdiv, 2);\n\t\tif (next === 37) return this.finishOp(this._intmod, 2);\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\n\t\treturn this.finishOp(this._multiplyModulo, 1);\n\t};\n\n\tthis.readToken_pipe_amp = function (code) {\n\t\t// '|&'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (next === code) return this.finishOp(code === 124 ? this._logicalOR : this._logicalAND, 2);\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\t\treturn this.finishOp(code === 124 ? this._bitwiseOR : this._bitwiseAND, 1);\n\t};\n\n\tthis.readToken_caret = function () {\n\t\t// '^'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\t\treturn this.finishOp(this._bitwiseXOR, 1);\n\t};\n\n\tthis.readToken_plus_min = function (code) {\n\t\t// '+-'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (next === code) {\n\t\t\tif (next == 45 && this.input.charCodeAt(this.tokPos + 2) == 62 && this.newline.test(this.input.slice(this.lastEnd, this.tokPos))) {\n\t\t\t\t// A `-->` line comment\n\t\t\t\tthis.tokPos += 3;\n\t\t\t\tthis.skipLineComment();\n\t\t\t\tthis.skipSpace();\n\t\t\t\treturn this.readToken();\n\t\t\t}\n\t\t\treturn this.finishOp(this._incDec, 2);\n\t\t}\n\t\tif (next === 61) return this.finishOp(this._assign, 2);\n\t\treturn this.finishOp(this._plusMin, 1);\n\t};\n\n\tthis.readToken_lt_gt = function (code) {\n\t\t// '<>'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tvar size = 1;\n\t\tif (next === code) {\n\t\t\tsize = code === 62 && this.input.charCodeAt(this.tokPos + 2) === 62 ? 3 : 2;\n\t\t\tif (this.input.charCodeAt(this.tokPos + size) === 61) return this.finishOp(this._assign, size + 1);\n\t\t\treturn this.finishOp(this._bitShift, size);\n\t\t}\n\t\tif (next == 33 && code == 60 && this.input.charCodeAt(this.tokPos + 2) == 45 && this.input.charCodeAt(this.tokPos + 3) == 45) {\n\t\t\t// `<!--`, an XML-style comment that should be interpreted as a line comment\n\t\t\tthis.tokPos += 4;\n\t\t\tthis.skipLineComment();\n\t\t\tthis.skipSpace();\n\t\t\treturn this.readToken();\n\t\t}\n\t\tif (next === 61) size = this.input.charCodeAt(this.tokPos + 2) === 61 ? 3 : 2;\n\t\treturn this.finishOp(this._relational, size);\n\t};\n\n\tthis.readToken_eq_excl = function (code) {\n\t\t// '=!'\n\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\tif (next === 61) return this.finishOp(this._equality, this.input.charCodeAt(this.tokPos + 2) === 61 ? 3 : 2);\n\t\treturn this.finishOp(code === 61 ? this._eq : this._notxor, 1);\n\t};\n\n\tthis.getTokenFromCode = function (code) {\n\t\tswitch (code) {\n\t\t\t// The interpretation of a dot depends on whether it is followed\n\t\t\t// by a digit.\n\t\t\tcase 46:\n\t\t\t\t// '.'\n\t\t\t\treturn this.readToken_dot();\n\n\t\t\t// Punctuation tokens.\n\t\t\tcase 40:\n\t\t\t\t++this.tokPos;\n\t\t\t\tthis.parenStack.push(40);\n\t\t\t\treturn this.finishToken(this._parenL);\n\t\t\tcase 41:\n\t\t\t\t++this.tokPos;\n\t\t\t\tif (this.parenStack.pop() !== 40) this.raise(this.tokPos, \"Unexpected )\");\n\t\t\t\treturn this.finishToken(this._parenR);\n\t\t\tcase 59:\n\t\t\t\t++this.tokPos;\n\t\t\t\treturn this.finishToken(this._semi);\n\t\t\tcase 44:\n\t\t\t\t++this.tokPos;\n\t\t\t\treturn this.finishToken(this._comma);\n\t\t\tcase 91:\n\t\t\t\t++this.tokPos;\n\t\t\t\tthis.parenStack.push(91);\n\t\t\t\treturn this.finishToken(this._bracketL);\n\t\t\tcase 93:\n\t\t\t\t++this.tokPos;\n\t\t\t\tif (this.parenStack.pop() !== 91) this.raise(this.tokPos, \"Unexpected ]\");\n\t\t\t\treturn this.finishToken(this._bracketR);\n\t\t\tcase 123:\n\t\t\t\t++this.tokPos;\n\t\t\t\tthis.parenStack.push(123);\n\t\t\t\treturn this.finishToken(this._braceL);\n\t\t\tcase 125:\n\t\t\t\tvar ps = this.parenStack;\n\t\t\t\tif (ps.pop() !== 123) this.raise(this.tokPos, \"Unexpected }\");\n\t\t\t\tif (ps.length && ps[ps.length - 1] == 96) {\n\t\t\t\t\tthis.templateNext = true;\n\t\t\t\t\tps.pop();\n\t\t\t\t} else ++this.tokPos;\n\t\t\t\treturn this.finishToken(this._braceR);\n\t\t\tcase 58:\n\t\t\t\t++this.tokPos;\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\t\t\tif (next == 58) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t\treturn this.finishToken(this._doublecolon);\n\t\t\t\t}\n\t\t\t\treturn this.finishToken(this._colon);\n\t\t\tcase 63:\n\t\t\t\t++this.tokPos;\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\t\t\tif (next == 46) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t\tif (this.input.charCodeAt(this.tokPos) == 46) {\n\t\t\t\t\t\t++this.tokPos;\n\t\t\t\t\t\tthis.isExistStore = true;\n\t\t\t\t\t} else this.isExistStore = false;\n\t\t\t\t\treturn this.finishToken(this._existkey);\n\t\t\t\t}\n\t\t\t\tif (next == 124) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t\treturn this.finishToken(this._existor, '?|');\n\t\t\t\t}\n\t\t\t\tif (next == 63) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\t\t\t\tif (next == 61) {\n\t\t\t\t\t\t++this.tokPos;\n\t\t\t\t\t\treturn this.finishToken(this._haspropeq, '??=');\n\t\t\t\t\t}\n\t\t\t\t\treturn this.finishToken(this._hasprop, '??');\n\t\t\t\t}\n\t\t\t\tif (next == 61) {\n\t\t\t\t\t++this.tokPos;\n\t\t\t\t\treturn this.finishToken(this._existeq, '?=');\n\t\t\t\t}\n\t\t\t\treturn this.finishToken(this._question, '?');\n\n\t\t\t// '0x' is a hexadecimal number.\n\t\t\tcase 48:\n\t\t\t\t// '0'\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\tif (next === 120 || next === 88) return this.readHexNumber(); //0x 0X\n\t\t\t\tif (next === 66 || next === 98) return this.readBinNumber(); //0b 0B\n\t\t\t\tif (next === 79 || next === 111) return this.readOctNumber(); //0o 0O\n\n\t\t\t// Anything else beginning with a digit is an integer, octal\n\t\t\t// number, or float.\n\t\t\tcase 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n\t\t\t\t// 1-9\n\t\t\t\treturn this.readNumber(false);\n\n\t\t\t// Quotes produce strings.\n\n\t\t\tcase 34:case 39:case 96:\n\t\t\t\t// '\"', \"'\", \"`\"\n\t\t\t\treturn this.readString(code);\n\n\t\t\t// Operators are parsed inline in tiny state machines. '=' (61) is\n\t\t\t// often referred to. `this.finishOp` simply skips the amount of\n\t\t\t// characters it is given as second argument, and returns a token\n\t\t\t// of the type given by its first argument.\n\n\t\t\tcase 47:\n\t\t\t\t// '/'\n\t\t\t\treturn this.readToken_slash(code);\n\n\t\t\tcase 37:\n\t\t\t\t// %\n\t\t\t\treturn this.readToken_modulo();\n\n\t\t\tcase 42:\n\t\t\t\t// '*'\n\t\t\t\treturn this.readToken_multiply();\n\n\t\t\tcase 124:case 38:\n\t\t\t\t// '|&'\n\t\t\t\treturn this.readToken_pipe_amp(code);\n\n\t\t\tcase 94:\n\t\t\t\t// '^'\n\t\t\t\treturn this.readToken_caret();\n\n\t\t\tcase 43:\n\t\t\t\treturn this.readToken_plus_min(code);\n\t\t\tcase 45:\n\t\t\t\t// '+-'\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\tif (next == 62) {\n\t\t\t\t\tthis.tokPos += 2;\n\t\t\t\t\treturn this.finishToken(this._thinArrow, '->');\n\t\t\t\t}\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\treturn this.readToken_plus_min(code);\n\n\t\t\tcase 60:case 62:\n\t\t\t\t// '<>'\n\t\t\t\treturn this.readToken_lt_gt(code);\n\n\t\t\tcase 61:\n\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\tif (next == 62) {\n\t\t\t\t\tthis.tokPos += 2;\n\t\t\t\t\treturn this.finishToken(this._fatArrow, '=>');\n\t\t\t\t}\n\n\t\t\tcase 33:\n\t\t\t\t// '=!'\n\t\t\t\treturn this.readToken_eq_excl(code);\n\n\t\t\tcase 126:\n\t\t\t\t// '~'\n\t\t\t\treturn this.finishOp(this._notxor, 1);\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tthis.readToken = function (forceRegexp) {\n\t\t// in templated string check\n\t\tthis.probe_flag = false;\n\t\tif (this.templateNext) {\n\t\t\tthis.templateNext = false;\n\t\t\treturn this.readString(96);\n\t\t}\n\n\t\tif (!forceRegexp) this.tokStart = this.tokPos;else this.tokPos = this.tokStart + 1;\n\t\tif (forceRegexp) return this.readRegexp();\n\t\tif (this.tokPos >= this.inputLen) return this.finishToken(this._eof);\n\n\t\tvar code = this.input.charCodeAt(this.tokPos);\n\t\tif (code == 64) {\n\t\t\tthis.tokPos++;\n\t\t\tvar tok = this.readToken(forceRegexp);\n\t\t\tthis.probe_flag = true;\n\t\t\treturn tok;\n\t\t}\n\t\t// Identifier or keyword. '\\uXXXX' sequences are allowed in\n\t\t// identifiers, so '\\' also dispatches to that.\n\t\tif (this.isIdentifierStart(code) || code === 92 /* '\\' */) return this.readWord();\n\n\t\tvar tok = this.getTokenFromCode(code);\n\n\t\tif (tok === false) {\n\t\t\t// If we are here, we either found a non-ASCII identifier\n\t\t\t// character, or something that's entirely disallowed.\n\t\t\tvar ch = String.fromCharCode(code);\n\t\t\tif (ch === \"\\\\\" || this.nonASCIIidentifierStart.test(ch)) return this.readWord();\n\t\t\tthis.raise(this.tokPos, \"Unexpected character '\" + ch + \"'\");\n\t\t}\n\t\treturn tok;\n\t};\n\n\tthis.finishOp = function (type, size) {\n\t\tvar str = this.input.slice(this.tokPos, this.tokPos + size);\n\t\tthis.tokPos += size;\n\t\tthis.finishToken(type, str);\n\t};\n\n\t// Parse a regular expression. Some context-awareness is necessary,\n\t// since a '/' inside a '[]' set does not end the expression.\n\n\tthis.readRegexp = function (multiLine) {\n\t\tvar content = \"\",\n\t\t    escaped,\n\t\t    inClass,\n\t\t    start = this.tokPos;\n\t\tfor (;;) {\n\t\t\tif (this.tokPos >= this.inputLen) this.raise(start, \"Unterminated regular expression\");\n\t\t\tvar ch = this.input.charAt(this.tokPos);\n\t\t\tif (!multiLine && this.newline.test(ch)) this.raise(start, \"Unterminated regular expression\");\n\t\t\tif (!escaped) {\n\t\t\t\tif (ch === \"[\") inClass = true;else if (ch === \"]\" && inClass) inClass = false;else if (ch === \"/\" && !inClass) {\n\t\t\t\t\tif (multiLine) {\n\t\t\t\t\t\tvar next = this.input.charCodeAt(this.tokPos + 1);\n\t\t\t\t\t\tif (next == 47 || next == 42) {\n\t\t\t\t\t\t\t// its a /* */ comment to skip\n\t\t\t\t\t\t\tcontent += this.input.slice(start, this.tokPos);\n\t\t\t\t\t\t\tif (next == '*') {\n\t\t\t\t\t\t\t\tfor (;;) {\n\t\t\t\t\t\t\t\t\tthis.tokPos++;\n\t\t\t\t\t\t\t\t\tif (this.input.charCodeAt(this.tokPos) == 42 && this.input.charCodeAt(this.tokPos + 1) == 47) {\n\t\t\t\t\t\t\t\t\t\tstart = this.tokPos + 2;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this.tokPos >= this.inputLen) this.raise(start, \"Unterminated regular expression\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// single line comment\n\t\t\t\t\t\t\t\tfor (;;) {\n\t\t\t\t\t\t\t\t\tthis.tokPos++;\n\t\t\t\t\t\t\t\t\tif (this.input.charCodeAt(this.tokPos) == 10) {\n\t\t\t\t\t\t\t\t\t\tstart = this.tokPos + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this.tokPos >= this.inputLen) this.raise(start, \"Unterminated regular expression\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (next == 32 && this.input.charCodeAt(this.tokPos + 2) == 47) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else break;\n\t\t\t\t}\n\t\t\t\tescaped = ch === \"\\\\\";\n\t\t\t} else escaped = false;\n\t\t\t++this.tokPos;\n\t\t}\n\t\tcontent += this.input.slice(start, this.tokPos);\n\n\t\t++this.tokPos;\n\t\tif (multiLine) this.tokPos += 2;\n\t\t// Need to use `this.readWord1` because '\\uXXXX' sequences are allowed\n\t\t// here (don't ask).\n\t\tvar mods = this.readWord1();\n\t\tif (mods && !/^[gmsiy]*$/.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n\t\ttry {\n\t\t\tif (multiLine) content = content.replace(/[\\s\\r\\n]*/g, '');\n\t\t\tvar value = new RegExp(content, mods);\n\t\t} catch (e) {\n\t\t\tif (e instanceof SyntaxError) this.raise(start, \"Error parsing regular expression: \" + e.message);\n\t\t\tthis.raise(e);\n\t\t}\n\t\tthis.regexContent = '/' + content + '/' + mods;\n\t\tthis.isMultiLine = multiLine;\n\t\treturn this.finishToken(this._regexp, value);\n\t};\n\n\t// Read an integer in the given radix. Return null if zero digits\n\t// were read, the integer value otherwise. When `len` is given, this\n\t// will return `null` unless the integer has exactly `len` digits.\n\n\tthis.readInt = function (radix, len) {\n\t\tvar start = this.tokPos,\n\t\t    total = 0;\n\t\tfor (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n\t\t\tvar code = this.input.charCodeAt(this.tokPos),\n\t\t\t    val;\n\t\t\tif (code >= 97) val = code - 97 + 10; // a\n\t\t\telse if (code >= 65) val = code - 65 + 10; // A\n\t\t\t\telse if (code >= 48 && code <= 57) val = code - 48; // 0-9\n\t\t\t\t\telse val = Infinity;\n\t\t\tif (val >= radix) break;\n\t\t\t++this.tokPos;\n\t\t\ttotal = total * radix + val;\n\t\t}\n\t\tif (this.tokPos === start || len != null && this.tokPos - start !== len) return null;\n\n\t\treturn total;\n\t};\n\n\tthis.readOctNumber = function () {\n\t\tthis.tokPos += 2; // 0o\n\t\tvar val = this.readInt(8);\n\t\tif (val == null) this.raise(this.tokStart + 2, \"Expected octal number\");\n\t\tif (this.isIdentifierStart(this.input.charCodeAt(this.tokPos))) this.raise(this.tokPos, \"Identifier directly after number\");\n\t\tthis.newNumSyntax = 1;\n\t\treturn this.finishToken(this._num, val);\n\t};\n\n\tthis.readBinNumber = function () {\n\t\tthis.tokPos += 2; // 0b\n\t\tvar val = this.readInt(2);\n\t\tif (val == null) this.raise(this.tokStart + 2, \"Expected binary number\");\n\t\tif (this.isIdentifierStart(this.input.charCodeAt(this.tokPos))) this.raise(this.tokPos, \"Identifier directly after number\");\n\t\treturn this.finishToken(this._num, val);\n\t};\n\n\tthis.readHexNumber = function () {\n\t\tthis.tokPos += 2; // 0x\n\t\tvar val = this.readInt(16);\n\t\tif (val == null) this.raise(this.tokStart + 2, \"Expected hexadecimal number\");\n\t\tif (this.isIdentifierStart(this.input.charCodeAt(this.tokPos))) this.raise(this.tokPos, \"Identifier directly after number\");\n\t\treturn this.finishToken(this._num, val);\n\t};\n\n\t// Read an integer, octal integer, or floating-point number.\n\n\tthis.readNumber = function (startsWithDot) {\n\t\tvar start = this.tokPos,\n\t\t    isFloat = false;\n\n\t\tif (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n\t\tif (this.input.charCodeAt(this.tokPos) === 46) {\n\t\t\t++this.tokPos;\n\t\t\tthis.readInt(10);\n\t\t\tisFloat = true;\n\t\t}\n\t\tvar next = this.input.charCodeAt(this.tokPos);\n\t\tif (next === 69 || next === 101) {\n\t\t\t// 'eE'\n\t\t\tnext = this.input.charCodeAt(++this.tokPos);\n\t\t\tif (next === 43 || next === 45) ++this.tokPos; // '+-'\n\t\t\tif (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n\t\t\tisFloat = true;\n\t\t}\n\n\t\tif (this.isIdentifierStart(this.input.charCodeAt(this.tokPos))) {\n\t\t\tthis.injectMul = true;\n\t\t}\n\n\t\tvar str = this.input.slice(start, this.tokPos),\n\t\t    val;\n\t\tif (isFloat) val = parseFloat(str);else val = parseInt(str, 10);\n\t\treturn this.finishToken(this._num, val);\n\t};\n\t// Read a string value, interpreting backslash-escapes.\n\n\tthis.readString = function (quote) {\n\t\tthis.tokPos++;\n\t\tvar out = \"\";\n\t\tthis.isMultiLine = false;\n\t\tfor (;;) {\n\t\t\tif (this.tokPos >= this.inputLen) this.raise(this.tokStart, \"Unterminated string constant\");\n\t\t\tvar ch = this.input.charCodeAt(this.tokPos);\n\n\t\t\tif (ch === quote) {\n\t\t\t\t++this.tokPos;\n\t\t\t\treturn this.finishToken(this._string, out);\n\t\t\t}\n\t\t\tif (ch === 92) {\n\t\t\t\t// '\\'\n\t\t\t\tch = this.input.charCodeAt(++this.tokPos);\n\t\t\t\tvar octal = /^[0-7]+/.exec(this.input.slice(this.tokPos, this.tokPos + 3));\n\t\t\t\tif (octal) octal = octal[0];\n\t\t\t\twhile (octal && parseInt(octal, 8) > 255) {\n\t\t\t\t\toctal = octal.slice(0, -1);\n\t\t\t\t}if (octal === \"0\") octal = null;\n\t\t\t\t++this.tokPos;\n\t\t\t\tif (octal) {\n\t\t\t\t\tif (this.strict) this.raise(this.tokPos - 2, \"Octal literal in this.strict mode\");\n\t\t\t\t\tout += String.fromCharCode(parseInt(octal, 8));\n\t\t\t\t\tthis.tokPos += octal.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (ch) {\n\t\t\t\t\t\tcase 110:\n\t\t\t\t\t\t\tout += \"\\n\";break; // 'n' -> '\\n'\n\t\t\t\t\t\tcase 114:\n\t\t\t\t\t\t\tout += \"\\r\";break; // 'r' -> '\\r'\n\t\t\t\t\t\tcase 120:\n\t\t\t\t\t\t\tout += String.fromCharCode(this.readHexChar(2));break; // 'x'\n\t\t\t\t\t\tcase 117:\n\t\t\t\t\t\t\tout += String.fromCharCode(this.readHexChar(4));break; // 'u'\n\t\t\t\t\t\tcase 85:\n\t\t\t\t\t\t\tout += String.fromCharCode(this.readHexChar(8));break; // 'U'\n\t\t\t\t\t\tcase 116:\n\t\t\t\t\t\t\tout += \"\\t\";break; // 't' -> '\\t'\n\t\t\t\t\t\tcase 98:\n\t\t\t\t\t\t\tout += \"\\b\";break; // 'b' -> '\\b'\n\t\t\t\t\t\tcase 118:\n\t\t\t\t\t\t\tout += '\\x0B';break; // 'v' -> '\\u000b'\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\t\tout += \"\\f\";break; // 'f' -> '\\f'\n\t\t\t\t\t\tcase 48:\n\t\t\t\t\t\t\tout += \"\\0\";break; // 0 -> '\\0'\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tif (this.input.charCodeAt(this.tokPos) === 10) ++this.tokPos; // '\\r\\n'\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t// ' \\n'\n\t\t\t\t\t\t\tthis.skippedNewlines = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tout += String.fromCharCode(ch);break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// templated string\n\t\t\t\tif (quote == 96 && this.stringTemplating && ch == 36 && this.input.charCodeAt(this.tokPos + 1) == 123) {\n\t\t\t\t\tif (ch == 36) this.tokPos++;\n\t\t\t\t\tthis.parenStack.push(96);\n\t\t\t\t\treturn this.finishToken(this._template, out);\n\t\t\t\t}\n\t\t\t\tif (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) {\n\t\t\t\t\tif (!this.multilineStrings) this.raise(this.tokStart, \"Unterminated string constant\");\n\t\t\t\t\tthis.isMultiLine = true;\n\t\t\t\t}\n\t\t\t\tout += String.fromCharCode(ch); // '\\'\n\t\t\t\t++this.tokPos;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n\tthis.readHexChar = function (len) {\n\t\tvar n = this.readInt(16, len);\n\t\tif (n === null) this.raise(this.tokStart, \"Bad character escape sequence\");\n\t\treturn n;\n\t};\n\n\t// Used to signal to callers of `this.readWord1` whether the word\n\t// contained any escape sequences. This is needed because words with\n\t// escape sequences must not be interpreted as keywords.\n\n\tthis.containsEsc;\n\n\t// reads ~ and ! as a flag on a word \n\tthis.containsFlag;\n\n\t// injects a * as the next token\n\tthis.injectMul;\n\n\t// Read an identifier, and return it as a string. Sets `this.containsEsc`\n\t// to whether the word contained a '\\u' escape.\n\t//\n\t// Only builds up the word character-by-character when it actually\n\t// containeds an escape, as a micro-optimization.\n\n\n\tthis.readWord1 = function () {\n\t\tthis.containsEsc = false;\n\t\tthis.containsFlag = false;\n\t\tvar word,\n\t\t    first = true,\n\t\t    start = this.tokPos;\n\t\tfor (;;) {\n\t\t\tvar ch = this.input.charCodeAt(this.tokPos);\n\t\t\tif (this.isIdentifierChar(ch)) {\n\t\t\t\tif (ch == 35) {\n\t\t\t\t\tif (!first) this.raise(this.tokPos, \"# and @ cannot be used in the middle of a word\");\n\t\t\t\t\tthis.containsFlag = ch;\n\t\t\t\t\tstart++;\n\t\t\t\t}\n\t\t\t\tif (this.containsEsc) word += this.input.charAt(this.tokPos);\n\t\t\t\t++this.tokPos;\n\t\t\t} else if (ch === 92) {\n\t\t\t\t// \"\\\"\n\t\t\t\tif (!this.containsEsc) word = this.input.slice(start, this.tokPos);\n\t\t\t\tthis.containsEsc = true;\n\t\t\t\tif (this.input.charCodeAt(++this.tokPos) != 117) // \"u\"\n\t\t\t\t\tthis.raise(this.tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n\t\t\t\t++this.tokPos;\n\t\t\t\tvar esc = this.readHexChar(4);\n\t\t\t\tvar escStr = String.fromCharCode(esc);\n\t\t\t\tif (!escStr) this.raise(this.tokPos - 1, \"Invalid Unicode escape\");\n\t\t\t\tif (!(first ? this.isIdentifierStart(esc) : this.isIdentifierChar(esc))) this.raise(this.tokPos - 4, \"Invalid Unicode escape\");\n\t\t\t\tword += escStr;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfirst = false;\n\t\t}\n\t\tvar ret = this.containsEsc ? word : this.input.slice(start, this.tokPos);\n\n\t\treturn ret;\n\t};\n\n\t// Read an identifier or keyword token. Will check for reserved\n\t// words when necessary.\n\n\tthis.readWord = function () {\n\t\tvar word = this.readWord1();\n\t\tvar type = this._name;\n\t\tif (!this.containsEsc && this.isKeyword(word)) {\n\t\t\ttype = this.keywordTypes[word];\n\t\t}\n\t\treturn this.finishToken(type, word);\n\t};\n\n\t// ## Parser\n\n\t// A recursive descent parser operates by defining functions for all\n\t// syntactic elements, and recursively calling those, each function\n\t// advancing the this.input stream and returning an AST node. Precedence\n\t// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n\t// instead of `(!x)[1]` is handled by the fact that the parser\n\t// function that parses unary prefix operators is called first, and\n\t// in turn calls the function that parses `[]` subscripts — that\n\t// way, it'll receive the node for `x[1]` already parsed, and wraps\n\t// *that* in the unary operator node.\n\t//\n\t// Acorn uses an [operator precedence parser][opp] to handle binary\n\t// operator precedence, because it is much more compact than using\n\t// the technique outlined above, which uses different, nesting\n\t// functions to specify precedence, for all of the ten binary\n\t// precedence levels that JavaScript defines.\n\t//\n\t// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\t// ### Parser utilities\n\n\t// Continue to the next token.\n\n\tthis.next = function () {\n\t\tthis.lastStart = this.tokStart;\n\t\tthis.lastEnd = this.tokEnd;\n\t\tthis.lastTok = this.tokType;\n\t\tif (this.injectMul) {\n\t\t\tthis.finishToken(this._multiplyModulo, \"*\");\n\t\t\tthis.injectMul = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.readToken();\n\t};\n\n\t// Enter this.strict mode. Re-reads the next token to please pedantic\n\t// tests (\"use this.strict\"; 010; -- should fail).\n\n\tthis.setStrict = function (strct) {\n\t\tthis.strict = strct;\n\t\tthis.tokPos = this.tokStart;\n\t\tthis.skipSpace();\n\t\tthis.readToken();\n\t};\n\n\t// Start an AST node, attaching a start offset.\n\tthis.Node = {};\n\tthis.lastDeferred = [];\n\n\tthis.finishComments = function () {\n\t\t// we take a comment, then walk lastNodes \n\t\tvar comments = this.lastComments;\n\t\tvar nodes = this.lastNodes;\n\t\tvar clen = comments.length;\n\t\tvar nlen = nodes.length;\n\t\tif (!clen || !nlen) return;\n\t\tvar c = 0;\n\t\tvar n = 0;\n\t\twhile (c < clen) {\n\t\t\t// we have a comment we want a place for\n\t\t\tvar cpos = comments[c];\n\t\t\twhile (n < nlen && nodes[n].end <= cpos) {\n\t\t\t\tn++;\n\t\t\t}if (n == nlen) {\n\t\t\t\t// apply all our comments on the last node\n\t\t\t\tn--;\n\t\t\t\tvar out = nodes[n].comments = [];\n\t\t\t\twhile (c < clen) {\n\t\t\t\t\tif (nodes[n].end <= comments[c]) out.push(comments[c + 1]);\n\t\t\t\t\tc += 2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t\tif (n < 0) n = 0;\n\t\t\t\tvar out = nodes[n].comments || (nodes[n].comments = []);\n\t\t\t\tout.push(comments[c + 1]);\n\t\t\t}\n\t\t\tc += 2;\n\t\t}\n\t\tthis.lastComments.length = 0;\n\t\tthis.lastNodes.length = 0;\n\t};\n\n\tthis.startNode = function (type) {\n\n\t\tvar node = {\n\t\t\ttype: null,\n\t\t\tstart: this.tokStart,\n\t\t\tend: this.tokStart\n\n\t\t\t// lets process lastNodes against lastComments\n\t\t\t//if(this.storeComments && this.lastComments.length){\n\t\t\t//\tthis.lastNodes.push(node)\n\t\t\t//this.finishComments()\n\t\t\t//}\n\n\t\t};return node;\n\t};\n\n\t// Start a node whose start offset information should be based on\n\t// the start of another node. For example, a binary operator node is\n\t// only started after its left-hand side has already been parsed.\n\n\tthis.startNodeFrom = function (other) {\n\n\t\tvar node = {\n\t\t\ttype: null,\n\t\t\tend: null,\n\t\t\tstart: other.start\n\t\t};\n\n\t\treturn node;\n\t};\n\t/*\n // Finish an AST node, adding `type` and `end` properties.\n this.nodetypes = {\n \tProgram: function Program(){},\n \tEmpty: function Empty(){},\n \tId: function Id(){},\n \tValue: function Value(){},\n \tThis: function This(){},\n \tArray: function Array(){},\n \tObject: function Object(){},\n \tIndex: function Index(){},\n \tKey: function Key(){},\n \tThisCall: function ThisCall(){},\n \tBlock: function Block(){},\n \tList: function List(){},\n \tComprehension: function Comprehension(){},\n \tTemplate: function Template(){},\n \tBreak: function Break(){},\n \tContinue: function Continue(){},\n \tLabel: function Label(){},\n \t\tIf: function If(){},\n \tSwitch: function Switch(){},\n \tCase: function Case(){},\n \t\tThrow: function Throw(){},\n \tTry: function Try(){},\n \t\tWhile: function While(){},\n \tDoWhile: function DoWhile(){},\n \tFor: function For(){},\n \tForIn: function ForIn(){},\n \tForOf: function ForOf(){},\n \tForFrom: function ForFrom(){},\n \tForTo: function ForTo(){},\n \t\tVar: function Var(){},\n \tTypeVar: function TypeVar(){},\n \tStruct: function Struct(){},\n \tDefine: function defineDreem(){},\n \tEnum: function Enum(){},\n \t\tDef: function Def(){},\n \t\tFunction: function Function(){},\n \tReturn: function Return(){},\n \tYield: function Yield(){},\n \tAwait: function Await(){},\n \t\tUnary: function Unary(){},\n \tBinary: function Binary(){},\n \tLogic: function Logic(){},\n \tAssign: function Assign(){},\n \tUpdate: function Update(){},\n \tCondition: function Condition(){},\n \t\tNew: function New(){},\n \tCall: function Call(){},\n \tNest: function Nest(){},\n \t\tClass: function Class(){},\n \t\tSignal: function Signal(){},\n \tQuote: function Quote(){},\n \tAssignQuote: function AssignQuote(){},\n \tRest: function Rest(){},\n \tThen: function Then(){},\n \t\tDebugger: function Debugger(){},\n \tWith: function With(){}\t\n }*/\n\n\tthis.finishNode = function (node, type) {\n\t\tnode.type = type;\n\t\tnode.end = this.lastEnd;\n\t\t//node.constructor = this.nodetypes[type]\n\t\tif (this.storeComments) this.lastNodes.push(node);\n\t\treturn node;\n\t};\n\n\t// Test whether a statement node is the string literal `\"use this.strict\"`.\n\n\tthis.isUseStrict = function (stmt) {\n\t\treturn this.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && stmt.expression.value === \"use this.strict\";\n\t};\n\n\t// Predicate that tests whether the next token is of the given\n\t// type, and if yes, consumes it as a side effect.\n\n\tthis.eat = function (type) {\n\t\tif (this.tokType === type) {\n\t\t\tthis.next();\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// Test whether a this.semicolon can be inserted at the current position.\n\n\tthis.canInsertSemicolon = function () {\n\t\treturn !this.strictSemicolons && (this.tokType === this._eof || this.tokType === this._braceR || this.newline.test(this.input.slice(this.lastEnd, this.tokStart)));\n\t};\n\n\t// Consume a this.semicolon, or, failing that, see if we are allowed to\n\t// pretend that there is a this.semicolon at this position.\n\n\tthis.semicolon = function () {\n\t\tif (!this.eat(this._semi) && !this.canInsertSemicolon()) this.unexpected();\n\t};\n\n\t// Expect a token of a given type. If found, consume it, otherwise,\n\t// this.raise an this.unexpected token error.\n\n\tthis.expect = function (type) {\n\t\tif (this.tokType === type) this.next();else this.unexpected();\n\t};\n\n\t// Raise an this.unexpected token error.\n\n\tthis.unexpected = function () {\n\t\tthis.raise(this.tokStart, \"Unexpected token\");\n\t};\n\n\t// Verify that a node is an lval — something that can be assigned\n\t// to.\n\n\tthis.checkLVal = function (expr) {\n\t\tif (expr.type === \"Array\") {\n\t\t\t// destructuring assignment\n\t\t\tthis.raise(expr.start, \"TODO add destructuring assignment\");\n\t\t}\n\t\tif (expr.type !== \"Id\" && expr.type !== \"Key\" && expr.type !== \"Index\") this.raise(expr.start, \"Assigning to rvalue\" + expr.type);\n\n\t\tif (this.strict && expr.type === \"Ident\" && this.isStrictBadIdWord(expr.name)) this.raise(expr.start, \"Assigning to \" + expr.name + \" in this.strict mode\");\n\t};\n\n\t// ### Statement parsing\n\n\t// Parse a program. Initializes the parser, reads any number of\n\t// statements, and wraps them in a Program node.  Optionally takes a\n\t// `program` argument.  If present, the statements will be appended\n\t// to its body instead of creating a new node.\n\n\tthis.parseTopLevel = function () {\n\t\tthis.lastStart = this.lastEnd = this.tokPos;\n\t\tthis.inFunction = this.strict = null;\n\t\tthis.labels = [];\n\t\tthis.readToken();\n\t\tvar node = this.startNode(),\n\t\t    first = true;\n\n\t\tnode.steps = [];\n\t\twhile (this.tokType !== this._eof) {\n\t\t\tif (this.storeComments) var cmt = this.commentBegin();\n\t\t\tvar stmt = this.parseStatement(true);\n\t\t\tif (this.storeComments) this.commentEnd(stmt, cmt, this._braceR);\n\n\t\t\tnode.steps.push(stmt);\n\t\t\tif (first && this.isUseStrict(stmt)) this.setStrict(true);\n\t\t\tfirst = false;\n\t\t}\n\t\t// if we have end comments , put them on Program\n\n\t\t// alright so. how do we recognise these things\n\t\tif (this.storeComments) this.commentTail(node, this._braceR);\n\t\tvar ret = this.finishNode(node, \"Program\");\n\t\t//this.finishComments()\n\t\treturn ret;\n\t};\n\n\tthis.commentBegin = function (node) {\n\t\tvar comments = this.lastComments;\n\t\t// we have to return the comments 'above' where we are. so\n\t\t// we cant just eat it all. \n\t\t// what does that mean\n\t\tvar out = [];\n\t\tfor (var i = 0, l = comments.length; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') {\n\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push(item);\n\t\t}\n\t\tif (i == l) this.lastComments = [];\n\t\treturn out;\n\t};\n\n\tthis.commentEnd = function (node, prefix, tail) {\n\t\t// process the prefix comments\n\t\tvar out = [];\n\t\tvar split = false;\n\t\tfor (var i = 0, l = prefix.length; i < l; i++) {\n\t\t\tvar item = prefix[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') {\n\t\t\t\tsplit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push(item);\n\t\t}\n\t\t// assign to up comments\n\t\tif (out.length) node.cmu = out;\n\t\tvar out = [];\n\t\tif (split) {\n\t\t\tfor (i++; i < l; i++) {\n\t\t\t\t// push the rest of comments as things next to the item\n\t\t\t\tsplit = false;\n\t\t\t\tvar item = prefix[i];\n\t\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') break;\n\t\t\t\tout.push(item);\n\t\t\t}\n\t\t\tif (!split) {\n\t\t\t\tif (out.length) node.cmr = out;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tvar comments = this.lastComments;\n\n\t\tfor (var i = 0, l = comments.length; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif (item === tail) break;\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') break;\n\t\t}\n\n\t\tfor (; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') {\n\t\t\t\tcomments.splice(0, i);\n\t\t\t\tif (out.length) node.cmr = out;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tout.push(item);\n\t\t\tif (item === 1) {\n\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\tif (out.length) node.cmr = out;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (out.length) node.cmr = out;\n\t\tcomments.length = 0;\n\t};\n\t// called on the head of a block\n\tthis.commentHead = function (node) {\n\t\tvar out = [];\n\t\tvar comments = this.lastComments;\n\t\tfor (var i = 0, l = comments.length; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) != 'object') {\n\t\t\t\tout.push(item);\n\t\t\t\tif (item === 1) {\n\t\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (out.length) {\n\t\t\tnode.cm1 = out;\n\t\t}\n\t};\n\t// this is called at a } we run to it then splice and leave that for the next layer up\n\tthis.commentTail = function (node, tail) {\n\t\tvar out = [];\n\t\tvar comments = this.lastComments;\n\t\t//console.log('tail',cmt.join(','))\n\t\tfor (var i = 0, l = comments.length; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif (item === tail) {\n\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n\t\t\t\tout.push(item);\n\t\t\t}\n\t\t}\n\t\tif (i == l) {\n\t\t\tcomments.length = 0;\n\t\t}\n\t\tif (out.length) node.cm2 = out;\n\t};\n\n\tthis.commentInline = function (term) {\n\t\t// ok so, we find all newlines and comments\n\t\tvar out = [];\n\t\tvar any = false;\n\t\tvar comments = this.lastComments;\n\t\tfor (var i = 0, l = comments.length; i < l; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n\t\t\t\tout.push(item);\n\t\t\t\tany = true;\n\t\t\t} else if (any || item === term) {\n\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t\tthis.lastComments = [];\n\t\treturn out;\n\t};\n\n\tthis.commentAround = function (node, token) {\n\t\tvar comments = this.lastComments;\n\t\tfor (var i = comments.length - 1; i >= 0; i--) {\n\t\t\tif (comments[i] == token) {\n\t\t\t\tvar out = [];\n\t\t\t\t// scan backwards for the comments before\n\t\t\t\tfor (var j = i - 1; j >= 0; j++) {\n\t\t\t\t\tvar item = comments[j];\n\t\t\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object') break;\n\t\t\t\t\tout.unshift(item);\n\t\t\t\t}\n\t\t\t\tif (out.length) node.cm1 = out;\n\t\t\t\tvar out = [];\n\t\t\t\t// scan forward for the comments after\n\t\t\t\tfor (var j = i + 1; j < comments.length; j++) {\n\t\t\t\t\tvar item = comments[j];\n\t\t\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object') break;\n\t\t\t\t\tout.push(item);\n\t\t\t\t}\n\t\t\t\tif (out.length) node.cm2 = out;\n\t\t\t\tcomments.splice(0, j);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.commentAfter = function () {\n\t\t// ok so, we find all newlines and comments\n\t\tvar out = [];\n\t\tvar any = false;\n\t\tvar comments = this.lastComments;\n\t\tvar args = arguments,\n\t\t    arglen = args.length;\n\t\tfor (var i = comments.length - 1; i >= 0; i--) {\n\t\t\tvar brk = false;\n\t\t\tfor (var j = 0; j < arglen; j++) {\n\t\t\t\tif (comments[i] === args[j]) brk = true;\n\t\t\t}if (brk) break;\n\t\t}\n\t\tfor (i++; i < comments.length; i++) {\n\t\t\tvar item = comments[i];\n\t\t\tif ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object') {\n\t\t\t\tcomments.splice(0, i + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push(item);\n\t\t}\n\t\treturn out;\n\t};\n\n\tthis.loopLabel = { kind: \"loop\" };\n\tthis.switchLabel = { kind: \"switch\"\n\n\t\t// parse array dimensions\n\t\t/*\n  this.parseDims = function( node, check ){\n  \t if( this.eat(this._bracketL) ){\n  \t\tif( check && check.dim !== undefined ) this.unexpected()\n  \t\tif( this.tokType == this._num ){\n  \t\t\tvar num = this.startNode()\n  \t\t\tnum.value = this.tokVal\n  \t\t\tnum.raw = this.input.slice(this.tokStart, this.tokEnd)\n  \t\t\tthis.next()\n  \t\t\tnode.dim = this.finishNode(num, \"Value\")\n  \t\t} \n  \t\telse node.dim = 0\n  \t\tif( !this.eat(this._bracketR) ) this.unexpected()\n  \t}\n  }*/\n\n\t\t// parse function args or variable defines with inits\n\t\t// and destructuring and and and it makes coffee too.\n\t};this.parseDefs = function (noIn, defs, cantype) {\n\t\tdefs = defs || [];\n\n\t\tfor (;;) {\n\t\t\tvar def;\n\t\t\tif (this.tokType == this._parenR) break;\n\t\t\tif (this.tokType == this._dot) break;\n\t\t\tif (this.tokType == this._bracketL) {\n\t\t\t\t// destructure object\n\t\t\t\tdef = this.startNode();\n\t\t\t\tdef.id = this.parseArray();\n\t\t\t\tif (this.eat(this._eq)) {\n\t\t\t\t\tdef.init = this.parseNoCommaExpression(noIn);\n\t\t\t\t}\n\t\t\t} else if (this.tokType == this._braceL) {\n\t\t\t\t// destructure array\n\t\t\t\tdef = this.startNode();\n\t\t\t\tdef.id = this.parseObj();\n\t\t\t\tif (this.eat(this._eq)) {\n\t\t\t\t\tdef.init = this.parseNoCommaExpression(noIn);\n\t\t\t\t}\n\t\t\t} else if (this.tokType !== this._name) break;else {\n\n\t\t\t\tdef = this.startNode();\n\t\t\t\tdef.id = this.parseIdent();\n\n\t\t\t\tif (this.strict && this.isStrictBadIdWord(def.id.name)) this.raise(def.id.start, \"Binding \" + def.id.name + \" in this.strict mode\");\n\t\t\t\t// dont allow newline before a function-init\n\t\t\t\t/*\n    if( cantype && this.tokType == this._name && !this.lastSkippedNewlines){\n    \tvar id = this.parseIdent()\n    \tid.typing = def.id\n    \tdef.id = id\n    \t// support second type\n    \tif( cantype && this.tokType == this._name && !this.lastSkippedNewlines){\n    \t\tvar id = this.parseIdent()\n    \t\tid.typing = def.id\n    \t\tdef.id = id\n    \t}\n    }*/\n\n\t\t\t\tif (!this.lastSkippedNewlines && this.tokType == this._parenL) {\n\t\t\t\t\tdef.init = this.parseCall(def.id);\n\t\t\t\t\t// remove the name as its duplicate\n\t\t\t\t\tdef.init.name = undefined;\n\t\t\t\t\tdef.init.fn = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t//this.parseDims(def, node)\n\t\t\t\t\tif (this.eat(this._eq)) {\n\t\t\t\t\t\tdef.init = this.parseNoCommaExpression(noIn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.storeComments) {\n\t\t\t\tdef.cm1 = this.commentInline();\n\t\t\t}\n\n\t\t\tdefs.push(this.finishNode(def, \"Def\"));\n\t\t\tif (!this.eat(this._comma)) break;\n\t\t}\n\t\treturn defs;\n\t};\n\n\tthis.parseStatementBlock = function () {\n\t\t// this parses \n\t\tif (this.tokType == this._braceL) {\n\t\t\treturn this.parseBlock();\n\t\t}\n\t\tvar comment = this.commentAfter(this._parenR, this._else);\n\t\tvar node = this.parseStatement();\n\t\tif (comment.length) node.cmu = comment;\n\t\treturn node;\n\t};\n\n\t// Parse a single statement.\n\t//\n\t// If expecting a statement and finding a slash operator, parse a\n\t// regular expression literal. This is to handle cases like\n\t// `if (foo) /blah/.exec(foo);`, where looking at the previous token\n\t// does not help.\n\n\tthis.parseStatement = function () {\n\t\tif (this.tokType === this._slash || this.tokType === this._assign && this.tokVal == \"/=\") this.readToken(true);\n\n\t\tvar starttype = this.tokType,\n\t\t    node = this.startNode();\n\n\t\tthis.currentStatement = node;\n\n\t\t// Most types of statements are recognized by the keyword they\n\t\t// start with. Many are trivial to parse, some require a bit of\n\t\t// complexity.\n\n\t\tswitch (starttype) {\n\t\t\tcase this._break:case this._continue:\n\t\t\t\tthis.next();\n\t\t\t\tvar isBreak = starttype === this._break;\n\n\t\t\t\tif (this.tokType == this._if) return this.finishNode(node, isBreak ? \"Break\" : \"Continue\");\n\n\t\t\t\tif (!this.eat(this._semi) && !this.canInsertSemicolon()) this.unexpected();\n\n\t\t\t\treturn this.finishNode(node, isBreak ? \"Break\" : \"Continue\");\n\n\t\t\tcase this._debugger:\n\t\t\t\tthis.next();\n\t\t\t\tthis.semicolon();\n\t\t\t\treturn this.finishNode(node, \"Debugger\");\n\n\t\t\tcase this._do:\n\t\t\t\tthis.next();\n\t\t\t\tthis.labels.push(this.loopLabel);\n\t\t\t\tnode.loop = this.parseStatementBlock();\n\t\t\t\tthis.labels.pop();\n\t\t\t\tthis.expect(this._while);\n\t\t\t\tnode.test = this.parseParenExpression();\n\t\t\t\tthis.semicolon();\n\t\t\t\treturn this.finishNode(node, \"DoWhile\");\n\n\t\t\tcase this._macro:\n\t\t\t\tthis.next();\n\t\t\t\t// we parse a function def\n\t\t\t\tvar node = this.parseFunction(node, true);\n\t\t\t\tnode.type = 'Macro';\n\t\t\t\treturn node;\n\t\t\t/*\n   \t\tcase this._struct:\n   \t\t\tthis.next()\n   \t\t\tif( this.tokType !== this._name ) this.unexpected()\n   \t\t\tnode.id = this.parseIdent()\n   \t\t\tif(this.eat(this._extends)){\n   \t\t\t\tnode.base = this.parseIdent()\n   \t\t\t}\n   \t\t\tnode.struct = this.parseBlock()\n   \t\t\treturn this.finishNode(node, \"Struct\")\n   \t\t\n   \t\tcase this._enum:\n   \t\t\tthis.next()\n   \t\t\tnode.id = this.parseIdent()\n   \t\t\tthis.expect(this._braceL)\n   \t\t\tnode.enums = []\n   \t\t\tfor(;;){\n   \t\t\t\tif(this.tokType == this._braceR) break\n   \t\t\t\tvar enm = this.startNode()\n   \t\t\t\tif(this.tokType == this._string){\n   \t\t\t\t\tvar str = this.startNode()\n   \t\t\t\t\tstr.kind = \"string\"\n   \t\t\t\t\tstr.value = this.tokVal\n   \t\t\t\t\tstr.multi = this.isMultiLine\n   \t\t\t\t\tstr.raw = this.input.slice(this.tokStart, this.tokEnd)\n   \t\t\t\t\tthis.finishNode(str, 'Value')\n   \t\t\t\t\tthis.next()\n   \t\t\t\t\tenm.id = str\n   \t\t\t\t} \n   \t\t\t\telse{\n   \t\t\t\t\tenm.id = this.parseIdent(true)\n   \t\t\t\t}\n   \t\t\t\tif(this.eat(this._eq)){\n   \t\t\t\t\tenm.init = this.parseNoCommaExpression()\n   \t\t\t\t}\n   \t\t\t\tnode.enums.push(this.finishNode(enm, \"Def\"))\n   \t\t\t\tif(!this.canInjectComma(this.tokType) && !this.eat(this._comma)){\n   \t\t\t\t\tbreak\n   \t\t\t\t}\n   \t\t\t}\n   \t\t\tthis.expect(this._braceR)\n   \t\t\treturn this.finishNode(node, \"Enum\")\n   \n   \t\t\t// Disambiguating between a `for` and a `for`/`in` loop is\n   \t\t\t// non-trivial. Basically, we have to parse the init `var`\n   \t\t\t// statement or expression, disallowing the `in` operator (see\n   \t\t\t// the second parameter to `this.parseExpression`), and then check\n   \t\t\t// whether the next token is `in`. When there is no init part\n   \t\t\t// (this.semicolon immediately after the opening parenthesis), it is\n   \t\t\t// a regular `for` loop.\n   \t*/\n\t\t\tcase this._for:\n\t\t\t\tthis.next();\n\t\t\t\tthis.labels.push(this.loopLabel);\n\t\t\t\treturn this.parseAllFor(node);\n\n\t\t\tcase this._function:\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseFunction(node, true);\n\n\t\t\tcase this._if:\n\t\t\t\tthis.next();\n\t\t\t\tnode.test = this.parseParenExpression();\n\t\t\t\tnode.then = this.parseStatementBlock();\n\t\t\t\tif (this.tokType == this._else) {\n\n\t\t\t\t\tif (this.storeComments) {\n\t\t\t\t\t\tnode.cm1 = this.commentInline(); //this._else)\n\t\t\t\t\t}\n\t\t\t\t\tthis.eat(this._else);\n\t\t\t\t\tnode.else = this.parseStatementBlock();\n\t\t\t\t}\n\t\t\t\treturn this.finishNode(node, \"If\");\n\n\t\t\tcase this._return:\n\t\t\t\tif (!this.inFunction && !this.allowReturnOutsideFunction) this.raise(this.tokStart, \"'return' outside of function\");\n\t\t\t\tthis.next();\n\n\t\t\t\t// In `return` (and `break`/`continue`), the keywords with\n\t\t\t\t// optional arguments, we eagerly look for a this.semicolon or the\n\t\t\t\t// possibility to insert one.\n\n\t\t\t\tif (this.eat(this._semi) || this.canInsertSemicolon()) node.arg = null;else {\n\t\t\t\t\tnode.arg = this.parseExpression();this.semicolon();\n\t\t\t\t}\n\t\t\t\treturn this.finishNode(node, \"Return\");\n\n\t\t\tcase this._yield:\n\t\t\t\tthis.next();\n\n\t\t\t\tif (this.eat(this._semi) || this.canInsertSemicolon()) node.arg = null;else {\n\t\t\t\t\tnode.arg = this.parseExpression();this.semicolon();\n\t\t\t\t}\n\t\t\t\treturn this.finishNode(node, \"Yield\");\n\n\t\t\tcase this._switch:\n\t\t\t\tthis.next();\n\t\t\t\tnode.on = this.parseParenExpression();\n\t\t\t\tnode.cases = [];\n\n\t\t\t\tif (this.storeComments) this.commentHead(node);\n\n\t\t\t\tthis.expect(this._braceL);\n\t\t\t\tthis.labels.push(this.switchLabel);\n\t\t\t\t// Statements under must be grouped (by label) in SwitchCase\n\t\t\t\t// nodes. `cur` is used to keep the node that we are currently\n\t\t\t\t// adding statements to.\n\n\t\t\t\tfor (var cur, sawDefault; this.tokType != this._braceR;) {\n\n\t\t\t\t\tif (this.storeComments) {\n\t\t\t\t\t\tvar cmt = this.commentBegin();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.tokType === this._case || this.tokType === this._default) {\n\t\t\t\t\t\tvar isCase = this.tokType === this._case;\n\t\t\t\t\t\tif (cur) this.finishNode(cur, \"Case\");\n\t\t\t\t\t\tnode.cases.push(cur = this.startNode());\n\t\t\t\t\t\tcur.steps = [];\n\t\t\t\t\t\tthis.next();\n\t\t\t\t\t\tif (isCase) cur.test = this.parseExpression(false, true);else {\n\t\t\t\t\t\t\tif (sawDefault) this.raise(this.lastStart, \"Multiple default clauses\");sawDefault = true;\n\t\t\t\t\t\t\tcur.test = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.expect(this._colon);\n\t\t\t\t\t\tif (this.storeComments) this.commentEnd(cur, cmt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!cur) this.unexpected();\n\t\t\t\t\t\tvar step = this.parseStatement();\n\t\t\t\t\t\tcur.steps.push(step);\n\t\t\t\t\t\tif (this.storeComments) {\n\t\t\t\t\t\t\tthis.commentEnd(step, cmt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (cur) this.finishNode(cur, \"Case\");\n\t\t\t\tthis.next(); // Closing brace\n\t\t\t\tthis.labels.pop();\n\n\t\t\t\tif (this.storeComments) this.commentTail(node, this._braceR);\n\n\t\t\t\treturn this.finishNode(node, \"Switch\");\n\n\t\t\tcase this._throw:\n\t\t\t\tthis.next();\n\t\t\t\tif (this.newline.test(this.input.slice(this.lastEnd, this.tokStart))) this.raise(this.lastEnd, \"Illegal this.newline after throw\");\n\t\t\t\tnode.arg = this.parseExpression();\n\t\t\t\tthis.semicolon();\n\t\t\t\treturn this.finishNode(node, \"Throw\");\n\n\t\t\tcase this._try:\n\t\t\t\tthis.next();\n\t\t\t\tnode.try = this.parseBlock();\n\t\t\t\tif (this.tokType === this._catch) {\n\t\t\t\t\tthis.next();\n\t\t\t\t\tthis.expect(this._parenL);\n\t\t\t\t\tnode.arg = this.parseIdent();\n\t\t\t\t\tif (this.strict && this.isStrictBadIdWord(clause.arg.name)) this.raise(clause.param.start, \"Binding \" + clause.param.name + \" in this.strict mode\");\n\t\t\t\t\tthis.expect(this._parenR);\n\t\t\t\t\tnode.catch = this.parseBlock();\n\t\t\t\t}\n\t\t\t\tnode.finally = this.eat(this._finally) ? this.parseBlock() : null;\n\t\t\t\tif (!node.catch && !node.finally) this.raise(node.start, \"Missing catch or finally clause\");\n\t\t\t\treturn this.finishNode(node, \"Try\");\n\n\t\t\t//case this._const:\n\t\t\t//\tnode.const = true;\n\t\t\tcase this._var:\n\t\t\t\tthis.next();\n\t\t\t\tthis.parseVar(node);\n\t\t\t\tthis.semicolon();\n\n\t\t\t\treturn this.finishNode(node, \"Var\");\n\n\t\t\tcase this._class:\n\t\t\t\tthis.next();\n\t\t\t\tnode.id = this.parseIdent();\n\t\t\t\tif (this.eat(this._extends)) {\n\t\t\t\t\t// we should parse Ident and then \n\t\t\t\t\tvar base = this.parseIdent();\n\t\t\t\t\tnode.base = this.parseSubscripts(base, true);\n\t\t\t\t\tif (node.base.type !== 'Id' && node.base.type !== 'Index' && node.base.type !== 'Key') this.unexpected();\n\t\t\t\t}\n\t\t\t\tif (this.tokType !== this._braceL) this.unexpected();\n\t\t\t\tnode.body = this.parseStatementBlock();\n\t\t\t\treturn this.finishNode(node, \"Class\");\n\n\t\t\tcase this._while:\n\n\t\t\t\tthis.next();\n\t\t\t\tnode.test = this.parseParenExpression();\n\t\t\t\tthis.labels.push(this.loopLabel);\n\t\t\t\tnode.loop = this.parseStatementBlock();\n\t\t\t\tthis.labels.pop();\n\t\t\t\treturn this.finishNode(node, \"While\");\n\n\t\t\tcase this._with:\n\t\t\t\tif (this.strict) this.raise(this.tokStart, \"'with' in this.strict mode\");\n\t\t\t\tthis.next();\n\t\t\t\tnode.object = this.parseParenExpression();\n\t\t\t\tnode.body = this.parseStatementBlock();\n\t\t\t\treturn this.finishNode(node, \"With\");\n\n\t\t\tcase this._semi:\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"Empty\");\n\n\t\t\tdefault:\n\t\t\t\t// parse #define here\n\t\t\t\tif (this.tokType == this._name && this.tokVal == 'define' && this.isIdentifierStart(this.input.charCodeAt(this.tokPos))) {\n\t\t\t\t\tthis.next();\n\t\t\t\t\tif (this.lastSkippedNewlines) this.unexpected();\n\t\t\t\t\t// we should be able to parse an id,\n\t\t\t\t\t// and then ( ) arguments, and then a define\n\t\t\t\t\tvar base = this.parseIdent();\n\n\t\t\t\t\tif (this.lastSkippedNewlines) this.unexpected();\n\t\t\t\t\tif (this.eat(this._parenL)) {\n\t\t\t\t\t\tvar macro = this.startNodeFrom(base);\n\t\t\t\t\t\tmacro.fn = base;\n\t\t\t\t\t\tmacro.args = this.parseExprList(this._parenR, false);\n\t\t\t\t\t\tthis.finishNode(macro, \"Call\");\n\t\t\t\t\t\tnode.id = macro;\n\t\t\t\t\t\t// if we have  { } we are parsing a macro function.\n\t\t\t\t\t\tif (this.tokType == this._braceL) {\n\t\t\t\t\t\t\tif (this.lastSkippedNewlines) this.unexpected();\n\t\t\t\t\t\t\t// we have to turn the macro into a function\n\t\t\t\t\t\t\tvar fn = this.startNodeFrom(node.id);\n\t\t\t\t\t\t\tnode.id = this.parseArrowFunction(fn, node.id);\n\t\t\t\t\t\t\t//node.value = this.parseStatementBlock()\n\t\t\t\t\t\t\treturn this.finishNode(node, \"Define\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else node.id = base;\n\t\t\t\t\tif (this.lastSkippedNewlines) this.unexpected();\n\n\t\t\t\t\tnode.value = this.parseExpression();\n\t\t\t\t\treturn this.finishNode(node, \"Define\");\n\t\t\t\t}\n\n\t\t\t\tvar maybeName = this.tokVal,\n\t\t\t\t    expr = this.parseExpression(false, false, true);\n\n\t\t\t\tif (starttype === this._name && expr.type === \"Id\" && this.eat(this._colon)) {\n\t\t\t\t\tnode.left = expr;\n\t\t\t\t\tif (this.eat(this._eq)) {\n\t\t\t\t\t\tnode.right = this.parseNoCommaExpression();\n\t\t\t\t\t\tthis.eat(this._comma);\n\t\t\t\t\t\treturn this.finishNode(node, \"Signal\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.quote = this.parseNoCommaExpression();\n\t\t\t\t\t\tthis.eat(this._comma);\n\t\t\t\t\t\treturn this.finishNode(node, \"AssignQuote\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.tokType != this._else) this.semicolon();\n\t\t\t\t\treturn expr;\n\t\t\t\t}\n\t\t}\n\t};\n\n\t// Used for constructs like `switch` and `if` that insist on\n\t// parentheses around their expression.\n\tthis.parseParenExpression = function () {\n\t\tthis.expect(this._parenL);\n\t\tvar val = this.parseExpression();\n\t\tthis.expect(this._parenR);\n\t\treturn val;\n\t};\n\n\t// Parse a this.semicolon-enclosed block of statements, handling `\"use\n\t// this.strict\"` declarations when `allowStrict` is true (used for\n\t// function bodies).\n\n\tthis.parseBlock = function (allowStrict) {\n\t\tvar node = this.startNode(),\n\t\t    first = true,\n\t\t    strict = false,\n\t\t    oldStrict;\n\t\tnode.steps = [];\n\t\t// this pops the comment we need to store on the body\n\t\tif (this.storeComments) this.commentHead(node);\n\t\tthis.expect(this._braceL);\n\n\t\twhile (!this.eat(this._braceR)) {\n\t\t\t// first we see if we have any comments\n\t\t\tif (this.storeComments) {\n\t\t\t\tvar cmt = this.commentBegin();\n\t\t\t}\n\t\t\tvar stmt = this.parseStatement();\n\t\t\t//console.log(\"HERE\", stmt)\n\t\t\tif (this.storeComments) this.commentEnd(stmt, cmt, this._braceR);\n\t\t\tnode.steps.push(stmt);\n\t\t\tif (first && allowStrict && this.isUseStrict(stmt)) {\n\t\t\t\toldStrict = strict;\n\t\t\t\tthis.setStrict(strict = true);\n\t\t\t}\n\t\t\tfirst = false;\n\t\t}\n\t\tif (this.strict && !oldStrict) this.setStrict(false);\n\t\tif (this.storeComments) this.commentTail(node, this._braceR);\n\n\t\treturn this.finishNode(node, \"Block\", true);\n\t};\n\n\t// parse a comprehension block\n\tthis.parseComprBlock = function () {\n\t\t// we can parse either a for or an if or an expression\n\t\tif (this.tokType == this._for) {\n\t\t\tvar node = this.startNode();\n\t\t\tthis.eat(this._for);\n\t\t\tnode.compr = true;\n\t\t\treturn this.parseAllFor(node, true);\n\t\t} else if (this.tokType == this._if) {\n\n\t\t\tvar node = this.startNode();\n\t\t\tthis.next();\n\t\t\t// if we dont have a paren, we switch to if .. then\n\t\t\tif (this.tokType !== this._parenL) {\n\t\t\t\tnode.test = this.parseNoCommaExpression();\n\t\t\t\tif (this.tokVal != 'then') this.unexpected();\n\t\t\t\tthis.next();\n\t\t\t} else {\n\t\t\t\tnode.test = this.parseParenExpression();\n\t\t\t}\n\t\t\tnode.then = this.parseComprBlock();\n\t\t\tnode.else = this.eat(this._else) ? this.parseComprBlock() : null;\n\t\t\tnode.compr = true;\n\t\t\treturn this.finishNode(node, 'If');\n\t\t}\n\t\treturn this.parseExpression();\n\t};\n\n\tthis.parseAllFor = function (node, compr) {\n\t\tthis.expect(this._parenL);\n\n\t\tif (this.tokType === this._semi) return this.parseFor(node, null, compr);\n\t\t// its either a var, or the next token starts with an id\n\t\tvar is_typed;\n\t\tif (this.tokType === this._var || (is_typed = this.isIdentifierStart(this.input.charCodeAt(this.tokPos)))) {\n\t\t\tvar init = this.startNode();\n\t\t\tif (is_typed) {\n\t\t\t\tinit.typing = this.parseIdent();\n\t\t\t\tinit.defs = this.parseDefs(true);\n\t\t\t\tthis.finishNode(init, \"TypeVar\");\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t\tthis.parseVar(init, true);\n\t\t\t\tthis.finishNode(init, \"Var\");\n\t\t\t}\n\n\t\t\tif (this.tokType == this._of) {\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseForOf(node, init, compr);\n\t\t\t}\n\n\t\t\tif (this.tokType == this._name && this.tokVal == 'from') {\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseForFrom(node, init, compr);\n\t\t\t}\n\n\t\t\tif (init.defs.length === 1) {\n\t\t\t\tif (this.eat(this._in)) return this.parseForIn(node, init, compr);\n\t\t\t\tif (this.tokType == this._name && this.tokVal == 'to') {\n\t\t\t\t\tthis.next();\n\t\t\t\t\treturn this.parseForTo(node, init, compr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.parseFor(node, init);\n\t\t}\n\t\tvar init = this.parseExpression(true);\n\n\t\tif (this.eat(this._in)) return this.parseForIn(node, init, compr);\n\n\t\tif (this.tokType == this._of) {\n\t\t\tthis.next();\n\t\t\treturn this.parseForOf(node, init, compr);\n\t\t} else if (this.tokType == this._name) {\n\t\t\tif (this.tokVal == 'to') {\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseForTo(node, init, compr);\n\t\t\t}\n\t\t\tif (this.tokVal == 'from') {\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseForFrom(node, init, compr);\n\t\t\t}\n\t\t}\n\n\t\treturn this.parseFor(node, init);\n\t};\n\t// Parse a regular `for` loop. The disambiguation code in\n\t// `this.parseStatement` will already have parsed the init statement or\n\t// expression.\n\n\tthis.parseFor = function (node, init, compr) {\n\t\tnode.init = init;\n\t\tthis.expect(this._semi);\n\t\tnode.test = this.tokType === this._semi ? null : this.parseExpression();\n\t\tthis.expect(this._semi);\n\t\tnode.update = this.tokType === this._parenR ? null : this.parseExpression();\n\t\tthis.expect(this._parenR);\n\t\tif (compr) node.loop = this.parseComprBlock();else node.loop = this.parseStatementBlock();\n\t\tthis.labels.pop();\n\t\treturn this.finishNode(node, \"For\");\n\t};\n\n\t// Parse a `for`/`in` loop.\n\n\tthis.parseForIn = function (node, init, compr) {\n\t\tnode.left = init;\n\t\tnode.right = this.parseExpression();\n\t\tthis.expect(this._parenR);\n\t\tif (compr) node.loop = this.parseComprBlock();else node.loop = this.parseStatementBlock();\n\t\treturn this.finishNode(node, \"ForIn\");\n\t};\n\n\t// Parse a `for`/`to` loop.\n\n\tthis.parseForTo = function (node, init, compr) {\n\n\t\tnode.left = init;\n\t\tnode.right = this.parseNoCommaExpression(true);\n\t\tif (this.eat(this._in)) {\n\t\t\tnode.in = this.parseNoCommaExpression(true);\n\t\t}\n\t\tthis.expect(this._parenR);\n\t\tif (compr) {\n\t\t\tnode.loop = this.parseComprBlock();\n\t\t} else {\n\t\t\tnode.loop = this.parseStatementBlock();\n\t\t\tthis.labels.pop();\n\t\t}\n\t\treturn this.finishNode(node, \"ForTo\");\n\t};\n\n\t// Parse a `for`/`of` loop.\n\n\tthis.parseForOf = function (node, init, compr) {\n\t\tnode.left = init;\n\t\tnode.right = this.parseExpression();\n\t\tthis.expect(this._parenR);\n\t\tif (compr) {\n\t\t\tnode.loop = this.parseComprBlock();\n\t\t} else {\n\t\t\tnode.loop = this.parseStatementBlock();\n\t\t\tthis.labels.pop();\n\t\t}\n\t\treturn this.finishNode(node, \"ForOf\");\n\t};\n\n\t// Parse a for from optimized array loop\n\tthis.parseForFrom = function (node, init, compr) {\n\t\tnode.left = init;\n\t\tnode.right = this.parseExpression();\n\t\tthis.expect(this._parenR);\n\t\tif (compr) node.loop = this.parseComprBlock();else {\n\t\t\tnode.loop = this.parseStatementBlock();\n\t\t\tthis.labels.pop();\n\t\t}\n\t\treturn this.finishNode(node, \"ForFrom\");\n\t};\n\t// Parse a list of variable declarations.\n\tthis.parseVar = function (node, noIn) {\n\t\tnode.kind = \"var\";\n\t\tnode.defs = this.parseDefs(noIn);\n\t\treturn node;\n\t};\n\n\t// Determines if a comma injection is safe\n\tthis.canInjectComma = function (type) {\n\t\treturn this.injectCommas && this.lastSkippedNewlines && (type.canInj || type.isValue || type.prefix);\n\t};\n\n\t// ### Expression parsing\n\n\t// These nest, from the most general expression type at the top to\n\t// 'atomic', nondivisible expression types at the bottom. Most of\n\t// the functions will simply let the function(s) below them parse,\n\t// and, *if* the syntactic construct they handle is present, wrap\n\t// the AST node that the inner parser gave them in another node.\n\n\t// Parse a full expression. The arguments are used to forbid comma\n\t// sequences (in argument lists, array literals, or object literals)\n\t// or the `in` operator (in for loops initalization expressions).\n\n\tthis.parseExpression = function (noIn, termColon, inStatement) {\n\n\t\tvar expr = this.parseMaybeQuote(noIn);\n\t\t/*\n  if(inStatement && (\n  \texpr.type == 'Index' && expr.object.kind || \n  \texpr.type == 'Assign' && expr.left.type == 'Index' && expr.left.object.kind)){\n  \tthis.raise(expr.start, \"Please use 'type[] x', not 'type x[]' for array types\")\n  }\n  // parse float x, y to be a TypeVar not (float x), y\n  \n  if(inStatement && (\n  \texpr.type == 'Index' && expr.object.typing ||\n  \texpr.type == 'Id' && expr.typing || \n  \texpr.type == 'Assign' && expr.left.typing || \n  \texpr.type == 'Call' && expr.fn.typing)){\n  \t// lets convert to something that looks like a var decl\n  \tvar node = this.startNodeFrom(expr)\n  \tvar defs = node.defs = []\n  \tif(expr.type == 'Assign'){\n  \t\t// make an init def\n  \t\tnode.typing = expr.left.typing\n  \t\texpr.left.typing = undefined\n  \t\tvar def = this.startNodeFrom(expr)\n  \t\tdef.id = expr.left\n  \t\tdef.init = expr.right\n  \t\tdefs[0] = this.finishNode(def, \"Def\")\n  \t}\n  \telse if(expr.type == 'Call'){\n  \t\t// make a call init def\n  \t\tnode.typing = expr.fn.typing\n  \t\texpr.fn.typing = undefined\n  \t\tvar def = this.startNodeFrom(expr)\n  \t\tdef.id = expr.fn\n  \t\texpr.name = undefined\n  \t\tdef.init = expr\n  \t\tdef.init.fn = node.typing\n  \t\tdefs[0] = this.finishNode(def, \"Def\")\n  \t}\n  \telse {\n  \t\t// normal def\n  \t\tnode.typing = expr.typing\n  \t\texpr.typing = undefined\n  \t\tdef = this.startNodeFrom(expr)\n  \t\tdef.id = expr\n  \t\tdefs[0] = this.finishNode(def, \"Def\")\n  \t}\n  \tif(this.tokType === this._comma){\n  \t\tthis.eat(this._comma)\n  \t\tthis.parseDefs(noIn, defs)\n  \t}\n  \treturn this.finishNode(node, 'TypeVar')\n  }*/\n\n\t\tif (this.tokType === this._comma) {\n\t\t\tvar node = this.startNodeFrom(expr);\n\t\t\tnode.items = [expr];\n\n\t\t\twhile (this.eat(this._comma)) {\n\n\t\t\t\tif (this.tokType === this._else) break;\n\t\t\t\tnode.items.push(this.parseMaybeQuote(noIn, termColon));\n\t\t\t}\n\t\t\treturn this.finishNode(node, \"List\");\n\t\t}\n\t\treturn expr;\n\t};\n\n\tthis.parseNoCommaExpression = function (noIn) {\n\t\treturn this.parseMaybeQuote(noIn);\n\t};\n\n\t// parse quoting of expressions\n\tthis.parseMaybeQuote = function (noIn) {\n\t\tif (this.tokType == this._colon) {\n\t\t\tvar node = this.startNode();\n\t\t\tthis.next();\n\t\t\tnode.quote = this.parseMaybeAssign(noIn);\n\t\t\treturn this.finishNode(node, \"Quote\");\n\t\t}\n\t\treturn this.parseMaybeAssign(noIn);\n\t};\n\n\t// Parse an assignment expression. This includes applications of\n\t// operators like `+=`.\n\n\tthis.parseMaybeAssign = function (noIn) {\n\t\tvar left = this.parseMaybeConditional(noIn);\n\t\tif (this.tokType.isAssign) {\n\t\t\tvar node = this.startNodeFrom(left);\n\t\t\tif (this.probe_flag) node.store = 8;\n\n\t\t\tif (this.storeComments) {\n\t\t\t\tthis.commentAround(node, this.tokType);\n\t\t\t}\n\t\t\tnode.op = this.tokVal;\n\t\t\tnode.left = left;\n\t\t\tthis.next();\n\t\t\t// lets parse shit in the middle\n\n\t\t\tnode.right = this.parseMaybeQuote(noIn);\n\t\t\tif (node.op != '=') this.checkLVal(left);\n\t\t\treturn this.finishNode(node, \"Assign\");\n\t\t}\n\t\treturn left;\n\t};\n\n\t// Parse a ternary conditional (`?:`) operator.\n\n\tthis.parseMaybeConditional = function (noIn) {\n\t\tvar expr = this.parseExprOps(noIn);\n\t\tif (this.eat(this._question)) {\n\t\t\tvar node = this.startNodeFrom(expr);\n\t\t\tnode.test = expr;\n\t\t\tnode.then = this.parseNoCommaExpression(noIn);\n\t\t\tthis.expect(this._colon);\n\t\t\tnode.else = this.parseNoCommaExpression(noIn);\n\t\t\treturn this.finishNode(node, \"Condition\");\n\t\t}\n\t\treturn expr;\n\t};\n\n\t// Start the precedence parser.\n\n\tthis.parseExprOps = function (noIn) {\n\t\treturn this.parseExprOp(this.parseMaybeUnary(), -1, noIn);\n\t};\n\n\t// Parse binary operators with the operator precedence parsing\n\t// algorithm. `left` is the left-hand side of the operator.\n\t// `minPrec` provides context that allows the function to stop and\n\t// defer further parser to one of its callers when it encounters an\n\t// operator that has a lower precedence than the set it is parsing.\n\n\tthis.parseExprOp = function (left, minPrec, noIn) {\n\n\t\tvar prec = this.tokType.binop;\n\t\tif (prec != null && !this.tokType.isAssign && (!noIn || this.tokType !== this._in && this.tokTYpe !== this._of && (this.tokType !== this._name || this.tokVal !== 'to' && this.tokVal !== 'from'))) {\n\t\t\tif (prec > minPrec) {\n\t\t\t\tvar node = this.startNodeFrom(left);\n\t\t\t\tif (this.probe_flag) node.store = 8;\n\t\t\t\t// ok lets annotate newlines/comments\n\t\t\t\t// allright this is the only point we can annotate comments/newlines \n\n\t\t\t\t// ok so. either we are object, 1\n\t\t\t\t// or we are 1, object\n\t\t\t\tif (this.storeComments) {\n\t\t\t\t\tthis.commentAround(node, this.tokType);\n\t\t\t\t}\n\t\t\t\tnode.left = left;\n\t\t\t\tnode.op = this.tokType.replace || this.tokVal;\n\t\t\t\tnode.prio = this.tokType.binop;\n\t\t\t\tvar op = this.tokType.replaceOp || this.tokType;\n\t\t\t\tthis.next();\n\n\t\t\t\tnode.right = this.parseExprOp(this.parseMaybeUnary(), prec, noIn);\n\t\t\t\tvar exprNode = this.finishNode(node, op.logic ? \"Logic\" : \"Binary\");\n\t\t\t\treturn this.parseExprOp(exprNode, minPrec, noIn);\n\t\t\t}\n\t\t}\n\t\treturn left;\n\t};\n\n\t// Parse unary operators, both prefix and postfix.\n\n\tthis.parseMaybeUnary = function () {\n\t\tif (this.tokType.prefix) {\n\t\t\tvar node = this.startNode(),\n\t\t\t    update = this.tokType.isUpdate;\n\n\t\t\tnode.op = this.tokType.replace || this.tokVal;\n\t\t\tif (this.probe_flag) node.store = 8;\n\t\t\tnode.prefix = true;\n\t\t\tthis.tokRegexpAllowed = true;\n\t\t\tthis.next();\n\t\t\tnode.arg = this.parseMaybeUnary();\n\t\t\tif (update) this.checkLVal(node.arg);else if (this.strict && node.op === \"delete\" && node.arg.type === \"Id\") this.raise(node.start, \"Deleting local variable in this.strict mode\");\n\t\t\treturn this.finishNode(node, update ? \"Update\" : \"Unary\");\n\t\t}\n\t\tvar expr = this.parseExprSubscripts();\n\t\twhile (this.tokType.postfix && !this.canInsertSemicolon()) {\n\t\t\tvar node = this.startNodeFrom(expr);\n\t\t\tnode.op = this.tokVal;\n\t\t\tnode.prefix = false;\n\t\t\tnode.arg = expr;\n\t\t\tthis.checkLVal(expr);\n\t\t\tthis.next();\n\t\t\texpr = this.finishNode(node, \"Update\");\n\t\t}\n\t\treturn expr;\n\t};\n\n\t// Parse call, dot, and `[]`-subscript expressions.\n\n\tthis.parseExprSubscripts = function () {\n\t\tvar probe = this.probe_flag;\n\t\tvar atom = this.parseExprAtom();\n\t\tif (probe) atom.store = atom.store || 0, atom.store |= 8;\n\t\treturn this.parseSubscripts(atom);\n\t};\n\n\tthis.bench = {};\n\n\tthis.parseSubscripts = function (base, noCalls) {\n\n\t\tswitch (this.tokType) {\n\t\t\tcase this._bracketL:\n\t\t\t\t// we also dont do this._bracketL on new line\n\t\t\t\tif (this.lastSkippedNewlines) return base;\n\t\t\t\tvar probe = this.probe_flag;\n\t\t\t\tthis.eat(this._bracketL);\n\t\t\t\tvar node = this.startNodeFrom(base);\n\t\t\t\tif (probe) node.store = 8;\n\t\t\t\tnode.object = base;\n\t\t\t\tif (this.tokType != this._bracketR) {\n\t\t\t\t\tnode.index = this.parseExpression();\n\t\t\t\t}\n\t\t\t\tthis.expect(this._bracketR);\n\t\t\t\treturn this.parseSubscripts(this.finishNode(node, \"Index\"), noCalls);\n\n\t\t\tcase this._dot:\n\t\t\t\tvar probe = this.probe_flag;\n\n\t\t\t\tvar node = this.startNodeFrom(base);\n\n\t\t\t\tthis.commentAround(node, this._dot);\n\n\t\t\t\tthis.eat(this._dot);\n\n\t\t\t\tprobe = probe || this.probe_flag;\n\n\t\t\t\tif (probe) node.store = 8;\n\t\t\t\tnode.object = base;\n\t\t\t\tnode.key = this.parseIdent(true, \"Property\");\n\t\t\t\treturn this.parseSubscripts(this.finishNode(node, \"Key\"), noCalls);\n\n\t\t\tcase this._bracketR:\n\t\t\tcase this._multiplyModulo:\n\t\t\tcase this._parenR:\n\t\t\tcase this._comma:\n\t\t\t\treturn base;\n\n\t\t\tcase this._parenL:\n\t\t\t\tif (noCalls) return base;\n\t\t\t\treturn this.parseCall(base);\n\t\t\t/*\n   \t\tcase this._existkey:\n   \t\t\tthis.eat(this._existkey)\n   \t\t\tvar node = this.startNodeFrom(base)\n   \t\t\tnode.object = base\n   \t\t\tif(this.isExistStore){\n   \t\t\t\tbase.store = 1\n   \t\t\t}\n   \t\t\tnode.key = this.parseIdent(true)\n   \t\t\tnode.exist = 1\n   \t\t\treturn this.parseSubscripts(this.finishNode(node, \"Key\"), noCalls)\n   \t\t\t*/\n\t\t\tcase this._this:\n\t\t\tcase this._string:\n\t\t\tcase this._name:\n\t\t\t\tif (this.lastSkippedNewlines) return base;\n\n\t\t\t\tif (base.type !== 'This' && base.type !== 'Id' && base.type !== 'Index' && base.type !== 'Key') return base;\n\t\t\t\t//if(base.typing) this.raise(base.start, \"Chaining multiple types has no purpose(yet)\")\n\t\t\t\tvar node = this.startNodeFrom(base);\n\t\t\t\tnode.typing = base;\n\t\t\t\tnode.name = this.tokVal;\n\t\t\t\tthis.eat(this._name) || this.eat(this._string) || this.eat(this._this);\n\n\t\t\t\treturn this.parseSubscripts(this.finishNode(node, \"Id\"));\n\t\t\t/*\n   \t\tcase this._dotdot:\n   \t\t\tif( this.lastSkippedNewlines ) return base\n   \t\t\tthis.eat(this._dotdot)\n   \t\t\tbase.store = base.store || 0\n   \t\t\tbase.store |= 1\n   \t\t\tif( this.lastSkippedNewlines ) return base\n   \t\t\tif( this.tokType === this._name || this.tokType.keyword){\n   \t\t\t\tvar node = this.startNodeFrom(base)\n   \t\t\t\tnode.object = base\n   \t\t\t\tnode.key = this.parseIdent(true)\n   \t\t\t\treturn this.parseSubscripts(this.finishNode(node, \"Key\"), noCalls)\n   \t\t\t}\n   \t\t\treturn this.parseSubscripts(base, noCalls)\n   \n   \t\tcase this._notxor:\n   \t\t\tif( this.lastSkippedNewlines ) return base\n   \t\t\tif(this.tokVal == '!') base.store |= 2\n   \t\t\telse base.store |= 4\n   \t\t\tthis.eat(this._notxor)\n   \t\t\tbase.store = base.store || 0\n   \t\t\treturn base\n   \n   \n   \t\tcase this._doublecolon:\n   \t\t\tthis.eat(this._doublecolon)\n   \t\t\tvar node = this.startNodeFrom(base)\n   \t\t\tnode.object = base\n   \t\t\tnode.key = this.parseIdent(true)\n   \t\t\treturn this.parseSubscripts(this.finishNode(node, \"ThisCall\"), noCalls)\n   \t\t\t*/\n\t\t\t/*\n   case this._braceL:\n   \t// we also dont do this._braceL on new line\n   \tif( noCalls || this.lastSkippedNewlines ) return base\n   \t\n   \t// we have to figure out if we are a Function or not.\n   \t// if base has parens, we are a short arrow funciton\n   \tif(base.parens || base.type == 'Call'){\n   \t\tvar node = this.startNodeFrom(base)\n   \t\t//node.arrow = '->'\n   \t\treturn this.parseArrowFunction(node, base)\n   \t} \n   \telse {\n   \t\tvar node = this.startNodeFrom(base)\n   \t\tnode.fn = base\n   \t\t//node.arrow = '->'\n   \t\tnode.body = this.parseBlock(true)\n   \t\treturn this.parseSubscripts(this.finishNode(node, \"Nest\"), noCalls)\n   \t}*/\n\t\t\t//case this._thinArrow:\n\t\t\tcase this._fatArrow:\n\t\t\t\t// you cant separate an arrow from its args with a this.newline\n\t\t\t\tif (this.lastSkippedNewlines) return base;\n\t\t\t\tvar node = this.startNodeFrom(base);\n\t\t\t\tnode.arrow = this.tokType.type;\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseArrowFunction(node, base);\n\t\t\t/*\n   case this._on:\n   case this._do:\n   \t// do on next line followed by { } is interpreted as the JS do/while\n   \tif( this.lastSkippedNewlines && this.input.charCodeAt(this.tokPos) == 123)return base\n   \t\tvar type = this.tokType\n   \tvar node = base\n   \tif(base.type !== 'Call'){\n   \t\tnode = this.startNodeFrom(base)\n   \t\tnode.fn = base\n   \t\tnode.args = []\n   \t}\n   \t\t// lets modify base into a call.\n   \tnode.extarg = this.tokVal\n   \tthis.next()\n   \tvar arg = this.parseNoCommaExpression()\n   \t\t\tif(type == this._do){\n   \t\tnode.args.push(arg)\n   \t}\n   \telse\n   \t\tnode.args.unshift(arg)\n   \t\t// we can parse other _do's or catch's\n   \tif(this.eat(this._catch)){\n   \t\tnode.args.push(this.parseNoCommaExpression())\n   \t}\n   \t\tif(this.tokType == this._name && this.tokVal == 'then'){\n   \t\tnode = this.finishNode(node, 'Call')\n   \t\tvar ident = this.parseIdent()\n   \t\tif(this.tokType == this._parenL){\n   \t\t\tthis.eat(this._parenL)\n   \t\t\tthis.expect(this._parenR)\n   \t\t}\n   \t\tnode.then = this.parseSubscripts(ident, noCalls)\n   \t\treturn node\n   \t\t//eat(this._ident)\n   \t}\n   \treturn this.finishNode( node, 'Call')\n   \n   case this._on:\n   case this._do:\n   \t// do on next line followed by { } is interpreted as the JS do/while\n   \tif( this.lastSkippedNewlines && this.input.charCodeAt(this.tokPos) == 123)return base\n   \t// if we are a catch, we must scan up to\n   \t// the last do\n   \tvar node = this.startNodeFrom(base)\n   \t\n   \t// lets modify base into a call.\n   \t\t\tnode.call = base\n   \tnode.kind = this.tokVal\n   \tthis.next()\n   \tnode.arg = this.parseNoCommaExpression()\n   \t// we can parse other _do's or catch's\n   \tif(this.eat(this._catch)){\n   \t\tnode.catch = this.parseNoCommaExpression()\n   \t}\n   \t\tif(this.tokType == this._name && this.tokVal == 'then'){\n   \t\tnode = this.finishNode( node, 'Do')\n   \t\tvar ident = this.parseIdent()\n   \t\tif(this.tokType == this._parenL){\n   \t\t\tthis.eat(this._parenL)\n   \t\t\tthis.expect(this._parenR)\n   \t\t}\n   \t\tnode.then = this.parseSubscripts(ident, noCalls)\n   \t\treturn node\n   \t\t//eat(this._ident)\n   \t}\n   \treturn this.finishNode( node, 'Do')\n   \t*/\n\t\t}\n\t\treturn base;\n\t};\n\n\tthis.parseCall = function (base) {\n\t\tif (this.lastSkippedNewlines) return base;\n\t\tvar node = this.startNodeFrom(base);\n\t\tvar probe = this.probe_flag;\n\n\t\tif (this.storeComments) this.commentHead(node);\n\n\t\tthis.eat(this._parenL);\n\t\tif (probe) node.store = 8;\n\t\tnode.fn = base;\n\t\tnode.args = this.parseExprList(this._parenR, true, true);\n\t\tif (this.storeComments) this.commentTail(node, this._parenR);\n\n\t\tif (this.debug) console.log(node);\n\t\treturn this.parseSubscripts(this.finishNode(node, \"Call\"));\n\t};\n\n\t// Parse an atomic expression — either a single token that is an\n\t// expression, an expression started by a keyword like `function` or\n\t// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n\t// or `{}`.\n\n\tthis.parseExprAtom = function () {\n\n\t\tswitch (this.tokType) {\n\t\t\tcase this._this:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"This\");\n\t\t\tcase this._new:\n\t\t\t\treturn this.parseNew();\n\t\t\tcase this._name:\n\t\t\t\tvar typing = this.parseIdent();\n\t\t\t\t//if(!this.lastSkippedNewlines && this.tokType == this._name){\n\t\t\t\t//\tvar node = this.parseIdent()\n\t\t\t\t//\tnode.typing = typing\n\t\t\t\t//\treturn node\n\t\t\t\t//}\n\t\t\t\treturn typing;\n\t\t\tcase this._num:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.kind = \"num\";\n\t\t\t\tnode.value = this.tokVal;\n\t\t\t\tnode.raw = this.input.slice(this.tokStart, this.tokEnd);\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"Value\");\n\t\t\tcase this._template:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.chain = [];\n\t\t\t\t// what this should do is call\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar item = this.startNode();\n\t\t\t\t\titem.kind = \"string\";\n\t\t\t\t\titem.value = this.tokVal;\n\t\t\t\t\titem.multi = this.isMultiLine;\n\t\t\t\t\tnode.chain.push(item);\n\t\t\t\t\tvar tokType = this.tokType;\n\t\t\t\t\tthis.next();\n\t\t\t\t\tthis.finishNode(item, \"Value\");\n\t\t\t\t\tif (tokType == this._string) break;\n\t\t\t\t\tnode.chain.push(this.parseBlock());\n\t\t\t\t}\n\t\t\t\treturn this.finishNode(node, \"Template\");\n\t\t\tcase this._string:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.kind = \"string\";\n\t\t\t\tnode.value = this.tokVal;\n\t\t\t\tnode.multi = this.isMultiLine;\n\t\t\t\tnode.raw = this.input.slice(this.tokStart, this.tokEnd);\n\t\t\t\tthis.next();\n\t\t\t\t// we should emit a this._stringInterp\n\t\t\t\t// and keep a stack for the tokenizer\n\n\t\t\t\t// how are we going to do string interpolation?\n\t\t\t\treturn this.finishNode(node, \"Value\");\n\t\t\tcase this._regexp:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.kind = \"regexp\";\n\t\t\t\tnode.value = this.regexContent;\n\t\t\t\tnode.multi = this.isMultiLine;\n\t\t\t\tnode.raw = this.input.slice(this.tokStart, this.tokEnd);\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"Value\");\n\n\t\t\tcase this._null:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.value = this.tokType.atomValue;\n\t\t\t\tnode.raw = this.tokType.keyword;\n\t\t\t\tnode.kind = \"object\";\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"Value\");\n\n\t\t\tcase this._true:case this._false:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.value = this.tokType.atomValue;\n\t\t\t\tnode.raw = this.tokType.keyword;\n\t\t\t\tnode.kind = \"boolean\";\n\t\t\t\tthis.next();\n\t\t\t\treturn this.finishNode(node, \"Value\");\n\n\t\t\tcase this._parenL:\n\t\t\t\tvar tokStart1 = this.tokStart;\n\t\t\t\tthis.next();\n\n\t\t\t\tif (this.tokType == this._parenR) {\n\t\t\t\t\t// this.empty parens\n\t\t\t\t\tthis.eat(this._parenR);\n\n\t\t\t\t\tif (this.tokType !== this._thinArrow && this.tokType !== this._fatArrow && this.tokType !== this._braceL) this.unexpected();\n\t\t\t\t\tvar val = this.startNode();\n\t\t\t\t\tval.start = tokStart1;\n\t\t\t\t\tval.parens = 1;\n\t\t\t\t\treturn this.parseSubscripts(this.finishNode(val, \"Empty\"));\n\t\t\t\t}\n\n\t\t\t\tvar val = this.parseExpression();\n\t\t\t\tval.start = tokStart1;\n\t\t\t\tval.end = this.tokEnd;\n\t\t\t\tval.parens = 1;\n\t\t\t\tthis.expect(this._parenR);\n\n\t\t\t\treturn val;\n\n\t\t\tcase this._bracketL:\n\t\t\t\treturn this.parseArray();\n\n\t\t\tcase this._braceL:\n\t\t\t\treturn this.parseObj();\n\n\t\t\tcase this._function:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseFunction(node, false);\n\n\t\t\tcase this._yield:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tthis.next();\n\t\t\t\tnode.arg = this.parseExpression();\n\t\t\t\treturn this.finishNode(node, \"Yield\");\n\n\t\t\tcase this._await:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tthis.next();\n\t\t\t\tnode.arg = this.parseExpression();\n\t\t\t\treturn this.finishNode(node, \"Await\");\n\n\t\t\tcase this._thinArrow:\n\t\t\tcase this._fatArrow:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tnode.arrow = this.tokType.type;\n\t\t\t\tthis.next();\n\t\t\t\treturn this.parseArrowFunction(node);\n\t\t\tcase this._tripledot:\n\t\t\t\tvar node = this.startNode();\n\t\t\t\tthis.next();\n\t\t\t\tif (this.tokType == this._name || this.tokType.keyword) {\n\t\t\t\t\tnode.id = this.parseIdent(true);\n\t\t\t\t}\n\t\t\t\treturn this.finishNode(node, \"Rest\");\n\t\t\t//case this._dot: // a flagged identifier\n\t\t\t//\tvar node = this.startNode()\n\t\t\t//\tthis.next()\n\t\t\t//\tnode.name = this.parseIdent(true)\n\t\t\t//\tnode.flag = 46\n\t\t\t//\treturn this.finishNode(node, \"Id\")\n\t\t\tcase this._dotdot:\n\t\t\t\tvar base = this.startNode();\n\t\t\t\tbase.name = '';\n\t\t\t\tbase.flag = -1;\n\t\t\t\tthis.finishNode(base, \"Id\");\n\t\t\t\tthis.next();\n\t\t\t\tif (this.lastSkippedNewlines) return base;\n\t\t\t\tif (this.tokType == this._name || this.tokType.keyword) {\n\t\t\t\t\tvar node = this.startNodeFrom(base);\n\t\t\t\t\tnode.object = base;\n\t\t\t\t\tnode.key = this.parseIdent(true);\n\t\t\t\t\treturn this.parseSubscripts(this.finishNode(node, \"Key\"));\n\t\t\t\t}\n\t\t\t\treturn this.parseSubscripts(base);\n\t\t\t//case this._doublecolon:\n\t\t\t//\treturn this.parseExtends()\n\t\t\tdefault:\n\t\t\t\tthis.unexpected();\n\t\t}\n\t};\n\n\t// New's precedence is slightly tricky. It must allow its argument\n\t// to be a `[]` or dot subscript expression, but not a call — at\n\t// least, not without wrapping it in parentheses. Thus, it uses the\n\n\tthis.parseNew = function () {\n\t\tvar node = this.startNode();\n\t\tthis.next();\n\t\tnode.fn = this.parseSubscripts(this.parseExprAtom(), true);\n\t\tif (this.eat(this._parenL)) node.args = this.parseExprList(this._parenR, false);else node.args = this.empty;\n\t\treturn this.finishNode(node, \"New\");\n\t};\n\n\t// parseArray\n\tthis.parseArray = function () {\n\t\tvar node = this.startNode();\n\n\t\tif (this.storeComments) this.commentHead(node);\n\t\tthis.next();\n\t\tif (this.tokType == this._for) {\n\t\t\tthis.next();\n\t\t\tvar nfor = this.startNode();\n\t\t\tnfor.compr = true;\n\t\t\tnode.for = this.parseAllFor(nfor, true);\n\t\t\tthis.eat(this._bracketR);\n\t\t\treturn this.finishNode(node, 'Comprehension');\n\t\t}\n\t\tnode.elems = this.parseExprList(this._bracketR, true, true);\n\t\tif (this.storeComments) this.commentTail(node, this._bracketR);\n\t\treturn this.finishNode(node, \"Array\");\n\t};\n\n\t// Parse an object literal.\n\tthis.parseObj = function () {\n\t\tvar node = this.startNode(),\n\t\t    first = true,\n\t\t    sawGetSet = false;\n\t\tnode.keys = [];\n\n\t\tif (this.storeComments) this.commentHead(node);\n\n\t\tthis.next();\n\t\twhile (!this.eat(this._braceR)) {\n\n\t\t\tif (this.storeComments) var cmt = this.commentBegin();\n\n\t\t\tif (!first) {\n\t\t\t\tthis.canInjectComma(this.tokType) || this.expect(this._comma);\n\t\t\t\tif (this.allowTrailingCommas && this.eat(this._braceR)) break;\n\t\t\t} else first = false;\n\n\t\t\tvar prop = { key: this.parsePropertyName() },\n\t\t\t    isGetSet = false,\n\t\t\t    kind;\n\n\t\t\tif (this.eat(this._colon)) {\n\t\t\t\tprop.value = this.parseNoCommaExpression();\n\t\t\t\tkind = prop.kind = \"init\";\n\t\t\t} else if (this.ecmaVersion >= 5 && prop.key.type === \"Id\" && (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n\t\t\t\tisGetSet = sawGetSet = true;\n\t\t\t\tkind = prop.kind = prop.key.name;\n\t\t\t\tprop.key = this.parsePropertyName();\n\t\t\t\tif (this.tokType !== this._parenL) this.unexpected();\n\t\t\t\tprop.value = this.parseFunction(this.startNode(), false);\n\t\t\t} else {\n\t\t\t\tif (this.tokType != this._braceR && this.tokType != this._comma && !this.canInjectComma(this.tokType)) this.unexpected();\n\t\t\t\t// we are a shorthand initialized value\n\t\t\t\tprop.short = 1;\n\t\t\t}\n\t\t\t// getters and setters are not allowed to clash — either with\n\t\t\t// each other or with an init property — and in this.strict mode,\n\t\t\t// init properties are also not allowed to be repeated.\n\n\t\t\tif (prop.key.type === \"Id\" && (this.strict || sawGetSet)) {\n\t\t\t\tfor (var i = 0; i < node.keys.length; ++i) {\n\t\t\t\t\tvar other = node.keys[i];\n\t\t\t\t\tif (other.key.name === prop.key.name) {\n\t\t\t\t\t\tvar conflict = kind == other.kind || isGetSet && other.kind === \"init\" || kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n\t\t\t\t\t\tif (conflict && !this.strict && kind === \"init\" && other.kind === \"init\") conflict = false;\n\t\t\t\t\t\tif (conflict) this.raise(prop.key.start, \"Redefinition of property\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.storeComments) this.commentEnd(prop, cmt, this._braceR);\n\t\t\tnode.keys.push(prop);\n\t\t}\n\t\tif (this.storeComments) this.commentTail(node, this._braceR);\n\t\treturn this.finishNode(node, \"Object\");\n\t};\n\n\tthis.parsePropertyName = function () {\n\t\tif (this.tokType === this._num || this.tokType === this._string) return this.parseExprAtom();\n\t\treturn this.parseIdent(true, 'Property');\n\t};\n\n\t// Parse a function declaration or literal (depending on the\n\t// `isStatement` parameter).\n\n\tthis.argToDef = function (node) {\n\t\tvar o = this.startNodeFrom(node);\n\t\to.end = node.end;\n\t\to.type = 'Def';\n\n\t\tif (node.type === 'Id' || node.type === 'Array' || node.type === 'Object') {\n\t\t\to.id = node;\n\t\t} else if (node.type === 'Assign' && node.op === '=') {\n\t\t\to.id = node.left;\n\t\t\to.init = node.right;\n\t\t} else this.raise(node.start, \"Invalid function argument definition\");\n\t\treturn o;\n\t};\n\n\tthis.parseArrowFunction = function (node, args) {\n\t\tif (args) {\n\t\t\t// convert args to a List of Defs\n\t\t\tif (args.type === 'Empty') {\n\t\t\t\tnode.params = [];\n\t\t\t} else if (args.type === 'List' || args.type === 'Call') {\n\t\t\t\tvar items;\n\t\t\t\tif (args.type == 'Call') {\n\t\t\t\t\tnode.name = args.fn;\n\t\t\t\t\titems = args.args;\n\t\t\t\t} else if (args.type == 'List') items = args.items;\n\n\t\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\t\tif (items[i].type == 'Rest') {\n\t\t\t\t\t\tif (i < l - 1) this.raise(items[i].start, \"Cannot use rest prefix befor last parameter\");\n\t\t\t\t\t\tnode.rest = items[i];\n\t\t\t\t\t\titems.length--;\n\t\t\t\t\t} else items[i] = this.argToDef(items[i]);\n\t\t\t\t}\n\t\t\t\tnode.params = items;\n\t\t\t} else {\n\t\t\t\tif (args.type == 'Rest') {\n\t\t\t\t\tnode.rest = args;\n\t\t\t\t} else node.params = [this.argToDef(args)];\n\t\t\t}\n\t\t}\n\t\tif (this.tokType == this._braceL) node.body = this.parseBlock(true);else node.body = this.parseNoCommaExpression();\n\n\t\treturn this.finishNode(node, 'Function');\n\t};\n\n\t// Parse a function declaration or literal (depending on the\n\t// `isStatement` parameter).\n\n\tthis.parseFunction = function (node, isStatement) {\n\t\tif (this.tokType === this._multiplyModulo) {\n\t\t\tnode.gen = 1;\n\t\t\tthis.next();\n\t\t}\n\t\tif (this.tokType === this._name) node.id = this.parseIdent();else node.id = null;\n\n\t\tthis.expect(this._parenL);\n\t\tnode.params = this.parseDefs(false, undefined, true);\n\n\t\t//if(this.tokType == this._dot) node.rest = this.parseDots(true)\n\n\t\tthis.expect(this._parenR);\n\n\t\t// Start a new scope with regard to this.labels and the `this.inFunction`\n\t\t// flag (restore them to their old value afterwards).\n\t\tvar oldInFunc = this.inFunction,\n\t\t    oldLabels = this.labels;\n\t\tthis.inFunction = true;this.labels = [];\n\t\tnode.body = this.parseBlock(true);\n\t\tthis.inFunction = oldInFunc;this.labels = oldLabels;\n\n\t\t// If this is a this.strict mode function, verify that argument names\n\t\t// are not repeated, and it does not try to bind the words `eval`\n\t\t// or `arguments`.\n\t\tif (this.strict || node.body.steps.length && this.isUseStrict(node.body.steps[0])) {\n\t\t\tfor (var i = node.id ? -1 : 0; i < node.args.length; ++i) {\n\t\t\t\tvar id = i < 0 ? node.id : node.args[i];\n\t\t\t\tif (this.isStrictReservedWord(id.name) || this.isStrictBadIdWord(id.name)) this.raise(id.start, \"Defining '\" + id.name + \"' in this.strict mode\");\n\t\t\t\tif (i >= 0) for (var j = 0; j < i; ++j) {\n\t\t\t\t\tif (id.name === node.args[j].name) this.raise(id.start, \"Argument name clash in this.strict mode\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnode.def = isStatement && node.id !== undefined;\n\n\t\treturn this.finishNode(node, \"Function\");\n\t};\n\n\t// Parses a comma-separated list of expressions, and returns them as\n\t// an array. `close` is the token type that ends the list, and\n\t// `allowEmpty` can be turned on to allow subsequent commas with\n\t// nothing in between them to be parsed as `null` (which is needed\n\t// for array literals).\n\n\t//this.parseExprList(this._bracketR, true, true)\n\n\tthis.parseExprList = function (close, allowTrailingComma, allowEmpty) {\n\t\tvar elts = [],\n\t\t    first = true;\n\t\twhile (!this.eat(close)) {\n\t\t\tif (this.storeComments) {\n\t\t\t\tvar cmt = this.commentBegin();\n\t\t\t}\n\t\t\tif (!first) {\n\t\t\t\tthis.canInjectComma(this.tokType) || this.expect(this._comma);\n\t\t\t\tif (allowTrailingComma && this.allowTrailingCommas && this.eat(close)) break;\n\t\t\t} else first = false;\n\t\t\tif (allowEmpty && this.tokType === this._comma) elts.push(null);else {\n\t\t\t\tvar sub = this.parseNoCommaExpression();\n\t\t\t\telts.push(sub);\n\t\t\t\tthis.commentEnd(sub, cmt, close);\n\t\t\t}\n\t\t}\n\t\treturn elts;\n\t};\n\n\t// Parse the next token as an identifier. If `liberal` is true (used\n\t// when parsing properties), it will also convert keywords into\n\t// identifiers.\n\n\tthis.parseIdent = function (liberal, specialid) {\n\t\tvar node = this.startNode();\n\t\tif (this.tokIsType) node.isType = this.tokVal;\n\t\tif (liberal && this.forbidReserved == \"everywhere\") liberal = false;\n\n\t\t/*if((this.tokType == this._delete || this.tokType == this._new) && \n  \t!this.isIdentifierStart(this.input.charCodeAt(this.tokPos)))\n  \tthis.tokType = this._name*/\n\n\t\tif (this.tokType === this._name) {\n\t\t\tif (!liberal && (this.forbidReserved && (this.ecmaVersion === 3 ? this.isReservedWord3 : this.isReservedWord5)(this.tokVal) || this.strict && this.isStrictReservedWord(this.tokVal)) && this.input.slice(this.tokStart, this.tokEnd).indexOf(\"\\\\\") == -1) this.raise(this.tokStart, \"The keyword '\" + this.tokVal + \"' is reserved\");\n\t\t\tnode.name = this.tokVal;\n\t\t} else if (liberal && this.tokType.keyword) {\n\t\t\tnode.name = this.tokType.keyword;\n\t\t} else {\n\t\t\tthis.unexpected();\n\t\t}\n\t\tthis.tokRegexpAllowed = false;\n\t\tif (this.containsFlag) {\n\t\t\tnode.flag = this.containsFlag;\n\t\t}\n\t\tthis.next();\n\t\treturn this.finishNode(node, specialid || \"Id\");\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/onejsparser.js\n// module id = 139\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/onejsparser.js?");

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.space = ' ';\n\tthis.newline = '\\n';\n\tthis.indent = '\\t';\n\tthis.line = 0;\n\tthis.comma = ',' + this.space;\n\tthis.term = ';';\n\n\tthis.expand = function (node, parent, state) {\n\t\t// recursive expansion\n\t\tif (!state) throw new Error('Please pass in state {depth:\"\"}');\n\t\tif (!node || !node.type) return '';\n\n\t\tnode.parent = parent;\n\t\tnode.infer = undefined;\n\n\t\tif (!this[node.type]) throw new Error('Undefined type in OneJSGen:' + node.type);\n\n\t\tvar ret = this[node.type](node, parent, state);\n\n\t\t// lets pass the inference up\n\t\tif (node.infer && parent && !parent.infer) parent.infer = node.infer;\n\n\t\tif (node.store) {\n\t\t\tif (node.store & 1) ret = ret + '..';\n\t\t\tif (node.store & 2) ret = ret + '!';\n\t\t\tif (node.store & 4) ret = ret + '~';\n\t\t}\n\n\t\tif (state.trace) {\n\t\t\tvar out = state.depth + node.type + '';\n\t\t\tif (node.type === \"Call\") out += \" fn:\" + node.fn.name;\n\t\t\tif (node.type == \"Id\") out += ' name:' + node.name;\n\t\t\tif (node.type == \"Value\") out += ' value:' + node.value;\n\t\t\tconsole.log(out);\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\tthis.block = function (array, parent, state, noindent) {\n\t\t// term split array\n\t\tstate = Object.create(state);\n\t\tif (!noindent) state.depth += this.indent;\n\n\t\tvar ret = '';\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tvar node = array[i];\n\t\t\tvar blk = this.expand(node, parent, state);\n\n\t\t\tif (blk === undefined) throw new Error('ast node ' + node.type + ' returned undefined in block');\n\n\t\t\tif (blk[0] == '(' || blk[0] == '[') ret += state.depth + ';' + blk;else ret += state.depth + blk;\n\n\t\t\tif (this.term) ret += this.term;\n\n\t\t\tif (ret[ret.length - 1] !== '\\n') ret += this.newline, this.line++;\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.flat = function (array, parent, state) {\n\t\tvar ret = '';\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tif (i) ret += this.comma;\n\t\t\tret += this.expand(array[i], parent, state);\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.list = function (array, parent, state) {\n\t\tvar ret = '';\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tif (ret !== '') ret += this.comma;\n\t\t\tret += this.expand(array[i], parent, state);\n\t\t\tif (ret[ret.length - 1] == '\\n') {\n\t\t\t\tret += state.depth;\n\t\t\t\tif (i !== len - 1) ret += this.indent;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.needsParens = function (node, other, isleft) {\n\t\tvar other_t = other.type;\n\n\t\tif (other_t == 'Assign' || other_t == 'List' || other_t == 'Condition' || (other_t == 'Binary' || other_t == 'Logic') && other.prio <= node.prio) {\n\t\t\tif (other.prio == node.prio && isleft) return false;\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tthis.Program = function (node, parent, state) {\n\t\treturn this.block(node.steps, node, state, true);\n\t};\n\n\tthis.Empty = function (node, parent, state) {\n\t\treturn '';\n\t};\n\n\tthis.Id = function (node, parent, state) {\n\t\tvar flag = node.flag;\n\t\tif (flag) {\n\t\t\tif (flag === -1) return '..';\n\t\t\tif (flag === 46) return '.' + node.name;\n\t\t\tif (flag === 126) return node.name + '~';\n\t\t\tif (flag === 33) return node.name + '!';\n\t\t\tif (flag === 64) return '@' + (node.name !== undefined ? node.name : '');\n\t\t\tif (flag === 35) return '#' + (node.name !== undefined ? node.name : '');\n\t\t}\n\t\tif (node.typing) return this.expand(node.typing, node, state) + ' ' + node.name;\n\t\treturn node.name;\n\t};\n\n\tthis.Define = function (node, parent, state) {\n\t\tthrow new Error('depricated');\n\t};\n\n\tthis.Value = function (node, parent, state) {\n\t\treturn node.raw;\n\t};\n\t// string, number, bool\n\tthis.This = function (node, parent, state) {\n\t\treturn 'this';\n\t};\n\n\tthis.Array = function (node, parent, state) {\n\t\tvar ret = '[' + this.list(node.elems, node, state) + ']';\n\t\treturn ret;\n\t};\n\n\tthis.Object = function (node, parent, state) {\n\n\t\tvar nstate = Object.create(state);\n\t\tnstate.depth += this.indent;\n\n\t\tvar keys = node.keys;\n\t\tvar len = keys.length;\n\t\tvar ret = '{' + this.space;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar prop = keys[i];\n\t\t\tif (i) ret += ',' + this.space;\n\n\t\t\tvar ch = ret[ret.length - 1];\n\t\t\tif (ch == '\\n') ret += nstate.depth;else if (ch == '}') ret += this.newline + nstate.depth;\n\n\t\t\tret += prop.key.name || prop.key.raw;\n\n\t\t\tif (prop.short === undefined) {\n\t\t\t\tret += ':' + this.expand(prop.value, node, nstate);\n\t\t\t}\n\t\t}\n\n\t\tvar ch = ret[ret.length - 1];\n\t\tif (ch == '\\n') ret += state.depth + '}';else {\n\t\t\tif (ch == '}') ret += this.newline + state.depth + '}';else ret += this.space + '}';\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\tthis.Index = function (node, parent, state) {\n\t\tvar obj = node.object;\n\t\tvar object_t = obj.type;\n\t\tvar object = this.expand(obj, node, state);\n\n\t\tif (object_t !== 'Index' && object_t !== 'Id' && object_t !== 'Key' && object_t !== 'Call' && object_t !== 'This' && object_t !== 'ThisCall') object = '(' + object + ')';\n\n\t\treturn object + '[' + this.expand(node.index, node, state) + ']';\n\t};\n\n\tthis.Key = function (node, parent, state) {\n\t\tvar obj = node.object;\n\t\tvar object_t = obj.type;\n\t\tvar object = this.expand(obj, node, state);\n\n\t\tif (object_t !== 'Index' && object_t !== 'Id' && object_t !== 'Key' && object_t !== 'Call' && object_t !== 'This' && object_t !== 'ThisCall') object = '(' + object + ')';\n\n\t\treturn object + (this.exist ? '?.' : '.') + this.expand(node.key, node, state);\n\t};\n\n\tthis.ThisCall = function (node, parent, state) {\n\t\tvar obj = node.object;\n\t\tvar object_t = obj.type;\n\t\tvar object = this.expand(obj, node);\n\n\t\tif (object_t !== 'Index' && object_t !== 'Id' && object_t !== 'Key' && object_t !== 'Call' && object_t !== 'This' && object_t !== 'ThisCall') object = '(' + object + ')';\n\n\t\treturn object + '::' + this.expand(node.key, node);\n\t};\n\n\tthis.Block = function (node, parent, state) {\n\t\tvar ret = '{' + this.newline + this.block(node.steps, node, state) + state.depth + '}';\n\t\treturn ret;\n\t};\n\n\tthis.List = function (node, parent, state) {\n\t\treturn this.list(node.items, node, state);\n\t};\n\n\tthis.Comprehension = function (node, parent, state) {\n\t\treturn '1';\n\t};\n\n\tthis.Template = function (node, parent, state) {\n\t\tvar ret = '`';\n\t\tvar chain = node.chain;\n\t\tvar len = chain.length;\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar item = chain[i];\n\t\t\tif (item.type == 'Block') {\n\t\t\t\tif (item.steps.length == 1 && outer.IsExpr[item.steps[0].type]) {\n\t\t\t\t\tret += '{' + this.expand(item.steps[0], node, state) + '}';\n\t\t\t\t} else ret += this.expand(item, node, state);\n\t\t\t} else {\n\t\t\t\tif (item.value !== undefined) ret += item.value;\n\t\t\t}\n\t\t}\n\t\tret += '`';\n\t\treturn ret;\n\t};\n\n\tthis.Break = function (node, parent, state) {\n\t\treturn 'break' + (node.label ? ' ' + this.expand(node.label, node, state) : '');\n\t};\n\n\tthis.Continue = function (node, parent, state) {\n\t\treturn 'continue' + (node.label ? ' ' + this.expand(node.label, node, state) : '');\n\t};\n\n\tthis.Label = function (node, parent, state) {\n\t\treturn this.expand(node.label, node, state) + ':' + this.expand(node.body, node, state);\n\t};\n\n\tthis.If = function (node, parent, state) {\n\t\tvar ret = 'if(';\n\t\tret += this.expand(node.test, node, state);\n\n\t\tif (ret[ret.length - 1] == '\\n') ret += state.depth + this.indent;\n\t\tret += ')' + this.space + this.expand(node.then, node, state);\n\n\t\tif (node.else) {\n\t\t\tvar ch = ret[ret.length - 1];\n\t\t\tif (ch !== '}' && this.term) ret += this.term;\n\t\t\tif (ch !== '\\n') ret += this.newline;\n\t\t\tret += state.depth + 'else ' + this.expand(node.else, node, state);\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\tthis.Switch = function (node, parent, state) {\n\t\tvar ret = 'switch(' + this.expand(node.on, node, state) + '){';\n\t\tret += this.newline;\n\n\t\tvar nstate = Object.create(state);\n\t\tnstate.depth += this.indent;\n\n\t\tvar cases = node.cases;\n\t\tif (cases) for (var i = 0; i < cases.length; i++) {\n\t\t\tret += nstate.depth + this.expand(cases[i], node, nstate);\n\t\t}ret += state.depth + '}';\n\n\t\treturn ret;\n\t};\n\n\tthis.Case = function (node, parent, state) {\n\t\tif (!node.test) {\n\t\t\treturn 'default:' + (node.steps.length ? this.newline + this.block(node.steps, node, state) : this.newline);\n\t\t}\n\t\tvar ret = 'case ';\n\n\t\tret += this.expand(node.test, node) + ':';\n\t\tret += this.newline;\n\n\t\tif (node.steps.length) ret += this.block(node.steps, node);\n\n\t\treturn ret;\n\t};\n\n\tthis.Throw = function (node, parent, state) {\n\t\treturn 'throw ' + this.expand(node.arg, node);\n\t};\n\n\tthis.Try = function (node, parent, state) {\n\t\tvar ret = 'try' + this.expand(node.try, node);\n\t\tif (node.catch) {\n\t\t\tif (node.arg.type !== 'Id') throw new Error(\"unsupported catch type\");\n\t\t\tvar name = node.arg.name;\n\t\t\tret += 'catch(' + name + ')' + this.expand(node.catch, node, state);\n\t\t}\n\n\t\tif (node.finally) ret += 'finally' + this.expand(node.finally, node, state);\n\t\treturn ret;\n\t};\n\n\tthis.While = function (node, parent, state) {\n\t\treturn 'while(' + this.expand(node.test, node, state) + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.DoWhile = function (node, parent, state) {\n\t\treturn 'do' + this.expand(node.loop, node, state) + 'while(' + this.expand(node.test, node, state) + ')';\n\t};\n\n\tthis.For = function (node, parent, state) {\n\t\treturn 'for(' + this.expand(node.init, node, state) + ';' + this.expand(node.test, node, state) + ';' + this.expand(node.update, node, state) + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.ForIn = function (node, parent, state) {\n\t\treturn 'for(' + this.expand(node.left, node, state) + ' in ' + this.expand(node.right, node, state) + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.ForOf = function (node, parent, state) {\n\n\t\treturn 'for(' + this.expand(node.left, node, state) + ' of ' + this.expand(node.right, node, state) + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.ForFrom = function (node, parent, state) {\n\t\treturn 'for(' + this.expand(node.left, node, state) + ' from ' + this.expand(node.right, node, state) + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.ForTo = function (node, parent, state) {\n\t\treturn 'for(' + this.expand(node.left, node, state) + ' to ' + this.expand(node.right, node, state) + (node.in ? ' in ' + this.expand(node.in, node, state) : '') + ')' + this.expand(node.loop, node, state);\n\t};\n\n\tthis.Var = function (node, parent, state) {\n\t\treturn 'var ' + this.flat(node.defs, node, state);\n\t};\n\n\tthis.TypeVar = function (node, parent, state) {\n\t\treturn this.expand(node.typing, node, state) + ' ' + this.flat(node.defs, node, state);\n\t};\n\n\tthis.Def = function (node, parent, state) {\n\t\treturn this.expand(node.id, node, state) + (node.init ? this.space + '=' + this.space + this.expand(node.init, node, state) : '');\n\t};\n\n\tthis.Struct = function (node, parent, state) {\n\t\treturn 'struct ' + this.expand(node.id, node, state) + this.expand(node.struct, node, state);\n\t};\n\n\tthis.Enum = function (node, parent, state) {\n\t\treturn 'enum ' + this.expand(node.id, node) + '{' + this.newline + state.depth + this.indent + this.list(node.enums, node, state) + '}';\n\t};\n\n\tthis.Function = function (node, parent, state) {\n\t\tif (node.arrow) {\n\t\t\tvar arrow = node.arrow;\n\t\t\t// if an arrow has just one Id as arg leave off ( )\n\t\t\tif (!node.name && !node.rest && node.params && node.params.length == 1 && !node.params[0].init && node.params[0].id.type == 'Id') {\n\t\t\t\treturn this.expand(node.params[0].id, node, state) + arrow + this.expand(node.body, node, state);\n\t\t\t}\n\t\t\tvar ret = '';\n\t\t\tif (node.name) ret += this.expand(node.name, node, state);\n\n\t\t\tret += '(' + (node.params ? this.list(node.params, node, state) : '') + (node.rest ? ',' + this.space + this.expand(node.rest, node, state) : '') + ')';\n\t\t\tif (!node.name || node.body.type != 'Block' || arrow != '->') ret += arrow;\n\t\t\tret += this.expand(node.body, node);\n\t\t\tthis.cignore = 1;\n\t\t\treturn ret;\n\t\t}\n\t\tvar ret;\n\t\tif (node.name) ret = this.expand(node.name);else ret = 'function';\n\t\tif (node.gen) ret += '*';\n\t\tif (node.id) ret += ' ' + this.expand(node.id, node, state);\n\t\tret += '(' + this.list(node.params, node, state);\n\t\tif (node.rest) ret += ',' + this.expand(node.rest, node, state);\n\t\tret += ')';\n\t\tret += this.expand(node.body, node, state);\n\t\treturn ret;\n\t};\n\n\tthis.Return = function (node, parent, state) {\n\t\tif (!node.arg) return 'return';\n\t\treturn 'return ' + this.expand(node.arg, node, state);\n\t};\n\n\tthis.Yield = function (node, parent, state) {\n\t\tif (!node.arg) return 'yield';\n\t\treturn 'yield ' + this.expand(node.arg, node, state);\n\t};\n\n\tthis.Await = function (node, parent, state) {\n\t\tif (!node.arg) return 'await';\n\t\treturn 'await ' + this.expand(node.arg, node, state);\n\t};\n\n\tthis.Unary = function (node, parent, state) {\n\t\tvar arg = this.expand(node.arg, node, state);\n\t\tvar atype = node.arg.type;\n\n\t\tif (node.prefix) {\n\t\t\tif (atype == 'Assign' || atype == 'Binary' || atype == 'Logic' || atype == 'Condition') arg = '(' + arg + ')';\n\n\t\t\tif (node.op.length != 1) return node.op + ' ' + arg;\n\n\t\t\treturn node.op + arg;\n\t\t}\n\t\treturn arg + node.op;\n\t};\n\n\t// alright so how are we going to do parens?\n\tthis.Binary = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar right = this.expand(node.right, node, state);\n\n\t\tif (this.needsParens(node, node.left)) left = '(' + left + ')';\n\t\tif (this.needsParens(node, node.right)) right = '(' + right + ')';\n\n\t\treturn left + this.space + node.op + this.space + right;\n\t};\n\n\tthis.Logic = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar right = this.expand(node.right, node, state);\n\n\t\tif (this.needsParens(node, node.left)) left = '(' + left + ')';\n\t\tif (this.needsParens(node, node.right)) right = '(' + right + ')';\n\n\t\treturn left + this.space + node.op + this.space + right;\n\t};\n\n\tthis.Assign = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar right = this.expand(node.right, node, state);\n\t\treturn left + this.space + node.op + this.space + right;\n\t};\n\n\tthis.Update = function (node, parent, state) {\n\t\tif (node.prefix) return node.op + this.expand(node.arg, node, state);\n\t\treturn this.expand(node.arg, node, state) + node.op;\n\t};\n\n\tthis.Condition = function (node, parent, state) {\n\t\t// if we have a test of logic or binary\n\t\tvar test = this.expand(node.test, node, state);\n\t\tvar test_t = node.test.type;\n\n\t\tif (test_t == 'Assign' || test_t == 'List' || test_t == 'Logic' || test_t == 'Binary') test = '(' + test + ')';\n\n\t\tvar else_v = this.expand(node.else, node, state);\n\t\tvar else_t = node.else.type;\n\t\tif (else_t == 'Assign' || else_t == 'List' || else_t == 'Logic' || else_t == 'Binary') else_v = '(' + else_v + ')';\n\n\t\treturn test + '?' + this.space + this.expand(node.then, node, state) + ':' + this.space + else_v;\n\t};\n\n\tthis.New = function (node, parent, state) {\n\t\tvar fn = this.expand(node.fn, node, state);\n\t\tvar fn_t = node.fn.type;\n\t\tif (fn_t == 'List' || fn_t == 'Logic' || fn_t == 'Condition') fn = '(' + fn + ')';\n\t\treturn 'new ' + fn + '(' + this.list(node.args, node, state) + ')';\n\t};\n\n\tthis.callArgs = function (node, parent, state) {\n\t\tvar arg = '';\n\t\tif (node.first_args) arg += this.list(node.first_args, node, state);\n\t\tif (node.args && node.args.length) {\n\t\t\tif (arg) arg += ', ';\n\t\t\targ += this.list(node.args, node, state);\n\t\t}\n\t\tif (node.last_args) {\n\t\t\tif (arg) arg += ', ';\n\t\t\targ += this.list(node.last_args, node, state);\n\t\t}\n\t\treturn arg;\n\t};\n\n\tthis.Call = function (node, parent, state) {\n\t\tvar fn = this.expand(node.fn, node, state);\n\t\tvar fn_t = node.fn.type;\n\t\tif (fn_t == 'Function' || fn_t == 'List' || fn_t == 'Logic' || fn_t == 'Condition') fn = '(' + fn + ')';\n\n\t\treturn fn + '(' + this.callArgs(node, parent, state) + ')';\n\t};\n\n\tthis.Nest = function (node, parent, state) {\n\t\treturn this.expand(node.fn, node, state) + this.expand(node.body, node, state);\n\t};\n\n\tthis.Class = function (node, parent, state) {\n\t\tvar ret = 'class ' + node.id.name;\n\t\tif (node.base) ret += ' extends ' + node.base.name;\n\t\tret += this.expand(node.body, node, state);\n\t\treturn ret;\n\t};\n\n\tthis.Quote = function (node, parent, state) {\n\t\tvar ret = ':' + this.expand(node.quote, node, state);\n\t\treturn ret;\n\t};\n\n\tthis.Signal = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar right = this.expand(node.right, node, state);\n\t\treturn left + ':=' + this.space + quote;\n\t};\n\n\tthis.AssignQuote = function (node, parent, state) {\n\t\tvar left = this.expand(node.left, node, state);\n\t\tvar quote = this.expand(node.quote, node, state);\n\t\treturn left + ':' + this.space + quote;\n\t};\n\n\tthis.Rest = function (node, parent, state) {\n\t\treturn '...' + this.expand(node.id, node, state);\n\t};\n\n\tthis.CallBlock = function (node, parent, state) {\n\t\treturn this.expand(node.object, node, state) + this.expand(node.body, node, state);\n\t};\n\n\tthis.Debugger = function (node, parent, state) {\n\t\treturn 'debugger';\n\t};\n\n\tthis.With = function (node, parent, state) {\n\t\treturn 'with(' + this.expand(node.object, node, state) + ')' + this.expand(node.body, node, state);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/onejsserialize.js\n// module id = 140\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/onejsserialize.js?");

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, module) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// self generating onejs walker utility class, run with nodejs to regenerate\n\nif (typeof process !== 'undefined' && requireDreem.main === module) {\n\tvar _require = requireDreem('../base/define');\n\tvar defs = requireDreem('./onejsdef.js');\n\tvar fs = requireDreem('fs');\n\t// read self\n\tvar head = fs.readFileSync(module.filename).toString().match(/^[\\S\\s]*\\/\\/ generated/)[0];\n\t// the template for the generated bottom part\n\tvar template = function () {\n\t\tdefineDreem.class(function () {\n\t\t\tthis.walk = function (node, parent, state, index) {\n\t\t\t\tif (!node) return;\n\t\t\t\tvar fn = this[node.type];\n\t\t\t\tif (!fn) throw new Error(\"Cannot find type \" + node.type);\n\t\t\t\tfn.call(this, node, parent, state, index);\n\t\t\t};\n\t\t\tBODY;\n\t\t});\n\t}.toString().match(/function\\s*\\(\\)\\{\\n([\\S\\s]*)\\}/)[1].replace(/(^|\\n)\\t\\t/g, '\\n');\n\n\tvar out = '\\n';\n\tfor (var key in defs) {\n\t\tout += '\tthis.' + key + ' = function(node, parent, state, index){\\n';\n\t\tvar def = defs[key];\n\t\tfor (var sub in def) {\n\t\t\tvar type = def[sub];\n\t\t\tif (type == 1) out += '\t\tthis.walk(node.' + sub + ', node, state, -1)\\n';else if (type == 2) out += '\t\tvar arr = node.' + sub + '\\n\\t\\tif(arr) for(var i = 0, len = arr.length; i < len; i++) this.walk(arr[i], node, state, i)\\n';else if (type == 3) {\n\t\t\t\tout += '\t\tvar arr = node.' + sub + '\\n\\t\\tif(arr) for(var i = 0, len = arr.length; i < len; i++) { this.walk(arr[i].key, node, state, i); this.walk(arr[i].value, node, state, i) }\\n';\n\t\t\t}\n\t\t}\n\t\tout += '\t}\\n\\n';\n\t}\n\tfs.writeFileSync(module.filename, head + template.replace(/BODY/, out));\n\tconsole.log(\"Written \" + module.filename);\n}\n\n// generated\ndefineDreem.class(function () {\n\tthis.walk = function (node, parent, state, index) {\n\t\tif (!node) return;\n\t\tvar fn = this[node.type];\n\t\tif (!fn) throw new Error(\"Cannot find type \" + node.type);\n\t\tfn.call(this, node, parent, state, index);\n\t};\n\n\tthis.Program = function (node, parent, state, index) {\n\t\tvar arr = node.steps;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Empty = function (node, parent, state, index) {};\n\n\tthis.Id = function (node, parent, state, index) {};\n\n\tthis.Property = function (node, parent, state, index) {};\n\n\tthis.Value = function (node, parent, state, index) {};\n\n\tthis.This = function (node, parent, state, index) {};\n\n\tthis.Array = function (node, parent, state, index) {\n\t\tvar arr = node.elems;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Object = function (node, parent, state, index) {\n\t\tvar arr = node.keys;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i].key, node, state, i);this.walk(arr[i].value, node, state, i);\n\t\t}\n\t};\n\n\tthis.Index = function (node, parent, state, index) {\n\t\tthis.walk(node.object, node, state, -1);\n\t\tthis.walk(node.index, node, state, -1);\n\t};\n\n\tthis.Key = function (node, parent, state, index) {\n\t\tthis.walk(node.object, node, state, -1);\n\t\tthis.walk(node.key, node, state, -1);\n\t};\n\n\tthis.ThisCall = function (node, parent, state, index) {\n\t\tthis.walk(node.object, node, state, -1);\n\t\tthis.walk(node.key, node, state, -1);\n\t};\n\n\tthis.Block = function (node, parent, state, index) {\n\t\tvar arr = node.steps;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.List = function (node, parent, state, index) {\n\t\tvar arr = node.items;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Comprehension = function (node, parent, state, index) {\n\t\tthis.walk(node.for, node, state, -1);\n\t\tthis.walk(node.expr, node, state, -1);\n\t};\n\n\tthis.Template = function (node, parent, state, index) {\n\t\tvar arr = node.chain;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Break = function (node, parent, state, index) {\n\t\tthis.walk(node.label, node, state, -1);\n\t};\n\n\tthis.Continue = function (node, parent, state, index) {\n\t\tthis.walk(node.label, node, state, -1);\n\t};\n\n\tthis.Label = function (node, parent, state, index) {\n\t\tthis.walk(node.label, node, state, -1);\n\t\tthis.walk(node.body, node, state, -1);\n\t};\n\n\tthis.If = function (node, parent, state, index) {\n\t\tthis.walk(node.test, node, state, -1);\n\t\tthis.walk(node.then, node, state, -1);\n\t\tthis.walk(node.else, node, state, -1);\n\t};\n\n\tthis.Switch = function (node, parent, state, index) {\n\t\tthis.walk(node.on, node, state, -1);\n\t\tvar arr = node.cases;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Case = function (node, parent, state, index) {\n\t\tthis.walk(node.test, node, state, -1);\n\t\tvar arr = node.steps;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Throw = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Try = function (node, parent, state, index) {\n\t\tthis.walk(node.try, node, state, -1);\n\t\tthis.walk(node.arg, node, state, -1);\n\t\tthis.walk(node.catch, node, state, -1);\n\t\tthis.walk(node.finally, node, state, -1);\n\t};\n\n\tthis.While = function (node, parent, state, index) {\n\t\tthis.walk(node.test, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t};\n\n\tthis.DoWhile = function (node, parent, state, index) {\n\t\tthis.walk(node.loop, node, state, -1);\n\t\tthis.walk(node.test, node, state, -1);\n\t};\n\n\tthis.For = function (node, parent, state, index) {\n\t\tthis.walk(node.init, node, state, -1);\n\t\tthis.walk(node.test, node, state, -1);\n\t\tthis.walk(node.update, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t};\n\n\tthis.ForIn = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t};\n\n\tthis.ForOf = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t};\n\n\tthis.ForFrom = function (node, parent, state, index) {\n\t\tthis.walk(node.right, node, state, -1);\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t};\n\n\tthis.ForTo = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t\tthis.walk(node.loop, node, state, -1);\n\t\tthis.walk(node.in, node, state, -1);\n\t};\n\n\tthis.Var = function (node, parent, state, index) {\n\t\tvar arr = node.defs;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.TypeVar = function (node, parent, state, index) {\n\t\tthis.walk(node.typing, node, state, -1);\n\t\tvar arr = node.defs;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}this.walk(node.dim, node, state, -1);\n\t};\n\n\tthis.Struct = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tthis.walk(node.struct, node, state, -1);\n\t\tthis.walk(node.base, node, state, -1);\n\t};\n\n\tthis.Define = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tthis.walk(node.value, node, state, -1);\n\t};\n\n\tthis.Enum = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tvar arr = node.enums;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Def = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tthis.walk(node.init, node, state, -1);\n\t\tthis.walk(node.dim, node, state, -1);\n\t};\n\n\tthis.Function = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tthis.walk(node.name, node, state, -1);\n\t\tvar arr = node.params;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}this.walk(node.rest, node, state, -1);\n\t\tthis.walk(node.body, node, state, -1);\n\t};\n\n\tthis.Return = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Yield = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Await = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Unary = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Binary = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t};\n\n\tthis.Logic = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t};\n\n\tthis.Assign = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t};\n\n\tthis.Update = function (node, parent, state, index) {\n\t\tthis.walk(node.arg, node, state, -1);\n\t};\n\n\tthis.Condition = function (node, parent, state, index) {\n\t\tthis.walk(node.test, node, state, -1);\n\t\tthis.walk(node.then, node, state, -1);\n\t\tthis.walk(node.else, node, state, -1);\n\t};\n\n\tthis.New = function (node, parent, state, index) {\n\t\tthis.walk(node.fn, node, state, -1);\n\t\tvar arr = node.args;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Call = function (node, parent, state, index) {\n\t\tthis.walk(node.fn, node, state, -1);\n\t\tvar arr = node.args;\n\t\tif (arr) for (var i = 0, len = arr.length; i < len; i++) {\n\t\t\tthis.walk(arr[i], node, state, i);\n\t\t}\n\t};\n\n\tthis.Nest = function (node, parent, state, index) {\n\t\tthis.walk(node.fn, node, state, -1);\n\t\tthis.walk(node.body, node, state, -1);\n\t};\n\n\tthis.Class = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t\tthis.walk(node.base, node, state, -1);\n\t\tthis.walk(node.body, node, state, -1);\n\t};\n\n\tthis.Signal = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.right, node, state, -1);\n\t};\n\n\tthis.Quote = function (node, parent, state, index) {\n\t\tthis.walk(node.quote, node, state, -1);\n\t};\n\n\tthis.AssignQuote = function (node, parent, state, index) {\n\t\tthis.walk(node.left, node, state, -1);\n\t\tthis.walk(node.quote, node, state, -1);\n\t};\n\n\tthis.Rest = function (node, parent, state, index) {\n\t\tthis.walk(node.id, node, state, -1);\n\t};\n\n\tthis.Then = function (node, parent, state, index) {\n\t\tthis.walk(node.name, node, state, -1);\n\t\tthis.walk(node.do, node, state, -1);\n\t};\n\n\tthis.Debugger = function (node, parent, state, index) {};\n\n\tthis.With = function (node, parent, state, index) {\n\t\tthis.walk(node.object, node, state, -1);\n\t\tthis.walk(node.body, node, state, -1);\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(8)(module)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/onejswalk.js\n// module id = 141\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/onejswalk.js?");

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Script error holds a file/line\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.atConstructor = function (message, path, line, col) {\n\t\tthis.message = message;\n\t\tif (arguments.length == 2) {\n\t\t\tthis.where = path;\n\t\t\treturn;\n\t\t}\n\t\tthis.path = path;\n\t\tthis.line = line;\n\t\tthis.col = col;\n\t};\n\n\tthis.expand = function (path, source) {\n\t\tif (this.where !== undefined) {\n\t\t\tvar col = 0;\n\t\t\tvar line = 0;\n\t\t\tfor (var i = 0; i < source.length && i < this.where; i++, col++) {\n\t\t\t\tif (source.charCodeAt(i) == 10) line++, col = 0;\n\t\t\t}\n\t\t\tthis.line = line + 1;\n\t\t\tthis.col = col + 1;\n\t\t\tthis.path = path;\n\t\t\tthis.where = undefined;\n\t\t}\n\t};\n\n\tthis.toString = function () {\n\t\treturn 'Dreem Error: ' + this.path + (this.line !== undefined ? \":\" + this.line + (this.col ? \":\" + this.col : \"\") : \"\") + \"- \" + this.message;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/scripterror.js\n// module id = 142\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/scripterror.js?");

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Acorn binding walker\n\ndefineDreem.class(\"$system/parse/onejsserialize\", function (requireDreem) {\n\n\tthis.newState = function () {\n\t\treturn {\n\t\t\tdepth: \"\",\n\t\t\treferences: []\n\t\t};\n\t};\n\n\tthis.Index = function (node, parent, state) {\n\t\tif (!state.expr || node.index.type !== 'Value') throw new Error(\"Cannot property bind to dynamic index\");\n\t\tstate.expr.unshift(node.index.value);\n\n\t\treturn this.expand(node.object, node, state) + '[' + node.index.value + ']';\n\t};\n\n\tthis.Key = function (node, parent, state) {\n\t\t// ok we are a member expression\n\t\tvar name = node.key.name;\n\t\tif (!name) {\n\t\t\tname = node.key.value;\n\t\t}\n\t\tif (state.expr) state.expr.unshift(name);else {\n\t\t\tstate = Object.create(state);\n\t\t\tstate.expr = [name];\n\t\t\tif (parent.type !== 'Call' || parent.fn !== node) {\n\t\t\t\tstate.references.push(state.expr);\n\t\t\t}\n\t\t}\n\t\treturn this.expand(node.object, node, state) + '.' + name;\n\t};\n\tthis.This = function (node, parent, state) {\n\t\tif (state.expr) state.expr.unshift('this');\n\t\treturn 'this';\n\t};\n\n\tthis.Id = function (node, parent, state) {\n\t\tif (state.expr) state.expr.unshift(node.name);\n\t\treturn node.name;\n\t};\n\n\tthis.Value = function (node, parent, state) {\n\t\treturn node.raw;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/parse/wiredwalker.js\n// module id = 143\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/parse/wiredwalker.js?");

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Copied from compositionserver.js for dali. This assumes that the\n// node server is running on the same machine where dali is running.\n\ndefineDreem.class(function (requireDreem) {\n\n\tconsole.log('Loading bootdali', defineDreem.$environment);\n\n\t// composition_client references WebSocket\n\t//WebSocket = requireDreem('$system/base/nodewebsocket')\n\n\t//var Render = requireDreem('$system/platform/render')\n\n\tvar path = requireDreem('path');\n\tvar fs = requireDreem('fs');\n\n\tvar ExternalApps = requireDreem('$system/server/externalapps');\n\tvar FileWatcher = requireDreem('$system/server/filewatcher');\n\n\tvar BusServer = requireDreem('$system/rpc/busserver');\n\tvar HTMLParser = requireDreem('$system/parse/htmlparser');\n\tvar ScriptError = requireDreem('$system/parse/scripterror');\n\tvar legacy_support = 0;\n\n\tvar Texture = requireDreem('$system/platform/$platform/texture$platform');\n\n\tthis.atConstructor = function (args, //Object: Process arguments\n\tcompname, //String: name of the composition\n\trootserver) {\n\t\t//TeemServer: teem server object\n\n\t\tdefineDreem.$platform = 'dali';\n\n\t\t// Called from defineDreem.noderequirewrapper to load a texture\n\t\tdefineDreem.loadImage = function (name) {\n\t\t\t//console.log('loadImage', name);\n\t\t\treturn Texture.fromImage({ path: name });\n\t\t};\n\n\t\t// Dali stage settings (from command-line), or defaults\n\t\tthis.width = parseInt(args['-width']) || 1920;\n\t\tthis.height = parseInt(args['-height']) || 1080;\n\t\tthis.name = args['-name'] || 'dreemgl';\n\n\t\t// Check if a remote composition is used\n\t\tif (compname.indexOf('http') >= 0) {\n\t\t\tthis.server = compname;\n\t\t\tconsole.log('remote dreemgl server', compname);\n\t\t}\n\n\t\t// Detect location for Dali Node.js add-on. On Tizen\n\t\t// it can be required like any npm module, on Ubuntu\n\t\t// it's in the /dali-toolkit/node-addon/build/Release/dali\n\t\t// relative to Dali's root folder.\n\t\tthis.onTizen = false;\n\t\tthis.dalilib = 'dali';\n\t\ttry {\n\t\t\tthis.onTizen = fs.statSync('/etc/tizen-release').isFile();\n\t\t} catch (e) {}\n\n\t\t// Dali/nodejs interface (nodejs package at top-level of dreemgl repository)\n\t\tif (!this.onTizen) {\n\t\t\tvar daliRoot = process.env['DESKTOP_PREFIX'].replace('/dali-env/opt', '');\n\t\t\tthis.dalilib = daliRoot + '/dali-toolkit/node-addon/build/Release/dali';\n\t\t}\n\n\t\tif ('-dumpprog' in args) {\n\t\t\tvar dp = args['-dumpprog'];\n\t\t\tthis.dumpprog = dp.length > 0 ? args['-dumpprog'] : 'stdout';\n\t\t}\n\n\t\tthis.args = args;\n\t\tthis.compname = compname;\n\t\tthis.rootserver = rootserver;\n\n\t\tthis.busserver = new BusServer();\n\n\t\t// Initialize dali early. Otherwise, some composition can fail\n\t\t// when run from a remote server.\n\t\tthis.initDali();\n\n\t\t// lets give it a session\n\t\tthis.session = Math.random() * 1000000;\n\n\t\tthis.slow_watcher = new FileWatcher();\n\n\t\tthis.slow_watcher.atChange = function () {\n\t\t\t// lets reload this app\n\t\t\tthis.reload();\n\t\t}.bind(this);\n\n\t\tthis.components = {};\n\n\t\tthis.paths = \"\";\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tif (this.paths) this.paths += ',\\n\\t\\t';\n\t\t\tthis.paths += '$' + key + ':\"$root/' + key + '\"';\n\t\t}\n\n\t\t// lets compile and run the dreem composition\n\t\tdefineDreem.atRequire = function (filename) {\n\t\t\tthis.slow_watcher.watch(filename);\n\t\t}.bind(this);\n\t\t//\n\t\tthis.reload();\n\t};\n\n\t// Called when any of the dependent files change for this composition\n\tthis.atChange = function () {};\n\n\t// Destroys all objects maintained by the composition\n\tthis.destroy = function () {\n\t\tif (this.mycomposition && this.mycomposition.destroy) this.mycomposition.destroy();\n\t\tthis.mycomposition = undefined;\n\t};\n\n\t// initialize dali runtime. This should be run before the composition is\n\t// loaded.\n\tthis.initDali = function () {\n\t\t// Load DALi module\n\t\tthis.DaliApi = requireDreem('./dali_api');\n\t\tthis.DaliApi.initialize({ width: this.width, height: this.height, name: this.name, dalilib: this.dalilib, dumpprog: this.dumpprog });\n\t};\n\n\t// Load the composition. If composition is defined, load it remotely\n\tthis.loadComposition = function (composition) {\n\t\trequireDreem.clearCache();\n\n\t\tif (composition) {\n\t\t\t// Remote server\n\t\t\tthis.composition = new composition(undefined, undefined, this.server);\n\t\t} else {\n\t\t\t// Local assets\n\t\t\tvar Composition = requireDreem(defineDreem.expandVariables(this.filename));\n\t\t\tthis.composition = new Composition(this.busserver, this.session);\n\t\t}\n\t};\n\n\tthis.reload = function () {\n\t\tthis.destroy();\n\n\t\t// lets fill\n\t\trequireDreem.clearCache();\n\n\t\t// lets see if our composition is a dir or a jsfile\n\t\tif (this.server) {\n\t\t\t// Remote server\n\t\t\tvar self = this;\n\t\t\trequireDreem.async(self.server).then(function (composition) {\n\t\t\t\treturn self.loadComposition(composition);\n\t\t\t}).catch(function (error) {\n\t\t\t\tconsole.log('Composition load failure', error.stack);\n\t\t\t});\n\t\t} else {\n\t\t\t// Use local files\n\n\t\t\tvar dir = '$root/';\n\t\t\tvar jsname = dir + this.compname + '.js';\n\t\t\ttry {\n\t\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\t\tthis.filename = jsname;\n\t\t\t\t\treturn this.loadComposition();\n\t\t\t\t} else {\n\t\t\t\t\tvar jsname = dir + this.compname + '/index.js';\n\t\t\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\t\t\tthis.filename = jsname;\n\t\t\t\t\t\treturn this.loadComposition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t//console.log(e.stack)\n\t\t\t}\n\t\t}\n\n\t\tthis.screenname = this.compname;\n\n\t\t// Reaching here indicates the path does not exist\n\t\tconsole.log('bootdali.reload: Unable to load', this.compname);\n\t};\n\n\tthis.loadHTML = function (title, boot) {\n\t\treturn '';\n\t};\n\n\tthis.loadTemplate = function (title, boot) {\n\t\tconsole.warn('warning: bootdali.loadTemplate not written');\n\t\treturn '';\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/bootdali.js\n// module id = 144\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/bootdali.js?");

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/compositionclient', function (requireDreem, baseclass) {\n\n\tvar Device = requireDreem('$system/platform/$platform/device$platform');\n\tvar BusClient = requireDreem('$system/rpc/busclient');\n\tvar NodeWebSocket = requireDreem('$system/server/nodewebsocket');\n\n\t// Override from compositionclient. Returns the screen name from the url.\n\t// compositionclient assumes a browser (ie. the location object exists)\n\tthis.screenForClient = function () {\n\t\t// console.log('screenForClient', this.query);\n\t\treturn this.query;\n\t};\n\n\tthis.atConstructor = function (previous, parent, baseurl) {\n\t\t//console.log('compositiondali', previous, parent, baseurl);\n\n\t\t// baseurl can contain a screen name (if remote).\n\t\t// Remove query parameters and store as this.query\n\t\tthis.baseurl = baseurl;\n\t\tif (this.baseurl) {\n\t\t\tvar pos = this.baseurl.indexOf('?');\n\t\t\tif (pos >= 0) {\n\t\t\t\tthis.query = this.baseurl.substring(pos + 1);\n\t\t\t\tthis.baseurl = this.baseurl.substring(0, pos);\n\t\t\t}\n\t\t}\n\t\t//TODO\n\t\t//previous = null\n\t\t//parent = null\n\n\t\tif (previous) {\n\t\t\tthis.reload = (previous.reload || 0) + 1;\n\t\t\tthis.device = new Device(previous.device); //previous.device\n\t\t\t//\t\t\tthis.device = previous.device// new Device(previous.device) //previous.device\n\t\t\tthis.device.reload = this.reload;\n\t\t\tconsole.log(\"Reload \" + this.reload);\n\t\t} else {\n\t\t\t// lets spawn up a device\n\t\t\tthis.device = new Device();\n\t\t}\n\n\t\t//baseclass.atConstructor.call(this, previous, parent)\n\t\tbaseclass.atConstructor.call(this);\n\t\tthis.screen._size = this.device.size;\n\n\t\t//Render the display\n\t\tthis.doRender();\n\t};\n\n\tthis.createBus = function () {\n\t\t// Only create the bus if baseurl defined (ie. running from remote server)\n\t\tif (this.baseurl) {\n\t\t\tconsole.log('createBus', this.baseurl);\n\t\t\tthis.bus = new BusClient(this.baseurl, NodeWebSocket);\n\t\t} else {\n\t\t\t// Stub out rpc when running locally\n\t\t\tconsole.log('compositiondali.createBus is NOT supported when running locally');\n\t\t\tthis.bus = {\n\t\t\t\tsend: function send() {}\n\t\t\t};\n\t\t}\n\t};\n\n\tthis.doRender = function (previous, parent) {\n\t\tbaseclass.doRender.call(this, previous, parent);\n\n\t\t/*  webgl\n  \t\tthis.screen.addListener('locationhash', function(event){\n  \t\t\tvar obj = event.value\n  \t\t\tvar str = ''\n  \t\t\tfor(var key in obj){\n  \t\t\t\tvar value = obj[key]\n  \t\t\t\tif(str.length) str += '&'\n  \t\t\t\tif(value === true) str += key\n  \t\t\t\telse str += key + '=' + value\n  \t\t\t}\n  \t\t\tlocation.hash = '#' + str\n  \t\t})\n  \n  \t\tthis.decodeLocationHash = function(){\n  \t\t\t// lets split it on & into a=b pairs, \n  \t\t\tvar obj = {}\n  \t\t\tvar parts = location.hash.slice(1).split(/\\&/)\n  \t\t\tfor(var i = 0; i < parts.length; i++){\n  \t\t\t\tvar part = parts[i]\n  \t\t\t\tvar kv = part.split(/=/)\n  \t\t\t\tif(kv.length === 1) obj[kv[0]] = true\n  \t\t\t\telse{\n  \t\t\t\t\tobj[kv[0]] = kv[1]\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tthis.screen.locationhash = obj\n  \t\t}\n  \n  \t\twindow.onhashchange = function(){\n  \t\t\tthis.decodeLocationHash()\n  \t\t}.bind(this)\n  \n  \t\tthis.decodeLocationHash()\n  */\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/compositiondali.js\n// module id = 145\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/compositiondali.js?");

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliActor\n * Layer between DreemGL and Dali. Although Dali has a complete api, this\n * class is used to encapsulate the api to simplify how it is embedded into\n * the dreemgl dali platform.\n *\n * Each instance of DaliActor contains a dali.Actor object.\n */\n\n/**\n * @property daliactor\n * dali.Actor object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// Assign a unique id to each daliactor object\n\tvar DaliActor = exports;\n\tDaliActor.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a dali.Actor object with default parameters\n  * You can access the dali.Actor object as this.daliactor\n  * @param {Object} view The view object the actor belongs to\n  */\n\tthis.atConstructor = function (view) {\n\t\tthis.object_type = 'DaliActor';\n\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Cache the property values (uniforms) to minimize writes.\n\t\tthis.property_cache = {};\n\n\t\t// Keep a copy of the view in case it is useful.\n\t\tthis.id = ++DaliActor.GlobalId;\n\t\tthis.view = view;\n\t\tthis.daliactor = new dali.Actor();\n\t\tthis.onstage = false;\n\n\t\t// The width/height of the actor to stored in a view's layout\n\t\tvar layout = view.view._layout;\n\t\tvar width = layout.width || 100;\n\t\tvar height = layout.height || 100;\n\n\t\tthis.daliactor.size = [width, height, 0];\n\t\tthis.daliactor.parentOrigin = dali.TOP_LEFT;\n\t\tthis.daliactor.anchorPoint = dali.TOP_LEFT;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var ' + this.name() + ' = new dali.Actor();');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.size = [' + width + ', ' + height + ', 0];');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.parentOrigin = dali.TOP_LEFT;');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.anchorPoint = dali.TOP_LEFT;');\n\t\t}\n\t};\n\n\t/**\n  * @method addRenderer\n  * Add a renderer to the actor.\n  * @param {Object} DaliRenderer object to add. Adding the first renderer\n  *                 also adds the object to the stage.\n  */\n\tthis.addRenderer = function (renderer) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tthis.dalirenderer = renderer;\n\n\t\tthis.daliactor.addRenderer(this.dalirenderer.dalirenderer);\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.addRenderer(' + this.dalirenderer.name() + ');');\n\t\t}\n\n\t\t// Add the actor to the stage\n\t\tif (!this.onstage) {\n\t\t\tDaliApi.addActor(this);\n\t\t\tthis.onstage = true;\n\t\t}\n\t};\n\n\t/**\n  * @method setColor\n  * Specify the color of the actor\n  * @param {object} color 4 element array of [r,g,b,a]\n  */\n\tDaliApi.setColor = function (color) {\n\t\t//TODO Is it faster if I cache the last value\n\t\tthis.daliactor.color = color;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.color = ' + JSON.stringify(color) + ';');\n\t\t}\n\t};\n\n\t// Internal, method to format a single value when emitting dali code\n\tthis.formatSingle = function (value) {\n\t\tif (typeof value === 'undefined') return 0;\n\n\t\t// I've seen NaN values. Dali doesn't accept them\n\t\tif (isNaN(value) || value === null) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (typeof value === 'string' || typeof value === 'boolean') return value;\n\n\t\tvar ivalue = parseInt(value);\n\t\tif (value == ivalue) return ivalue;\n\n\t\treturn value;\n\t};\n\n\t// Internal, method to format a value when emitting dali code\n\tthis.formatValue = function (value) {\n\t\tif (!Array.isArray(value)) return this.formatSingle(value);\n\n\t\tvar str = [];\n\t\tfor (var i in value) {\n\t\t\tstr.push(this.formatSingle(value[i]));\n\t\t}\n\n\t\treturn str.join(', ');\n\t};\n\n\t/**\n  * @method setUniformValue\n  * Sets a uniform value. If a value exists in the cache (and has changed),\n  * the property is set directly. Otherwise, registerAnimatableProperty\n  * is called.\n  * @param {string} Name of uniform to set\n  * @param {Object} Compiled uniform structure\n  */\n\tthis.setUniformValue = function (name, uni) {\n\t\tvar val = DaliApi.getArrayValue(uni);\n\t\tvar key = '_' + name;\n\n\t\t// Do nothing if the value has not changed\n\t\tvar hash = DaliApi.getHash(val);\n\t\tvar lasthash = this.property_cache[name];\n\t\tif (lasthash && lasthash == hash) return;\n\n\t\tvar fval = this.formatValue(val);\n\n\t\tif (lasthash) {\n\t\t\t// Existing value. Set the property directly\n\t\t\tthis.daliactor[key] = val;\n\t\t} else {\n\t\t\t// New property. Register it\n\t\t\tthis.daliactor.registerAnimatableProperty(key, val);\n\t\t}\n\n\t\tthis.property_cache[name] = hash;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tif (lasthash) {\n\t\t\t\tconsole.log('DALICODE: ' + this.name() + '[\\'' + key + '\\'] = ' + JSON.stringify(val) + ';');\n\t\t\t} else {\n\t\t\t\tconsole.log('DALICODE: ' + this.name() + '.registerAnimatableProperty(\\'' + key + '\\', ' + JSON.stringify(val) + ');');\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.name = function () {\n\t\treturn 'daliactor' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { daliActor: this.id, obj: [this.dalirenderer.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_actor.js\n// module id = 146\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_actor.js?");

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliApi\n * Top-level, static, class to manage the dali stage.\n */\n\ndefineDreem.class(function (exports) {\n\tvar DaliApi = exports;\n\n\t/**\n  * @property dali\n  * static dali object to access dali api.\n  */\n\tObject.defineProperty(DaliApi, 'dali', {\n\t\t// Internally, the dalimodule is stored in global\n\t\tget: function get() {\n\t\t\tif (!global.dalimodule) {\n\t\t\t\tconsole.log('DaliApi: Dali has not been initialized');\n\t\t\t}\n\t\t\treturn global.dalimodule;\n\t\t},\n\t\tset: function set(v) {\n\t\t\tif (global.dalimodule) {\n\t\t\t\tconsole.log('DaliApi: Dali has already been initialized');\n\t\t\t}\n\t\t\tglobal.dalimodule = v;\n\t\t}\n\t});\n\n\t// Set emitcode to true to emit dali code to the console. These lines\n\t// are preceeded with DALICODE to make it easier to extract into a file.\n\t// The -dumpprog command-line option codes this value\n\tDaliApi.emitcode = global.emitcode;\n\n\t// Create all actors on a layer to ignore depth test.\n\t// (From Nick: When using this mode any ordering would be with respect to\n\t// depthIndex property of Renderers.)\n\t// Changed to global.rootlayer\n\t// DaliApi.rootlayer = undefined;\n\n\t// The current layer to use when adding actors. Set by setLayer(). If\n\t// currentlayer is never set, the root layer (DaliApi.rootlayer) is used.\n\t// Actors are added in order so the normal order of execution is:\n\t//   - Create a DaliLayer object,\n\t//   - Call DaliApi.setLayer to make this layer the current layer\n\t//   - Add actors using DaliApi.addActor. This will use the current layer\n\t//     if none was specified.\n\t//   - Repeat the above process. You can reset the current layer by\n\t//     passing null to DaliApi.setLayer\n\t// Changed to global.currentlayer\n\t// DaliApi.currentlayer = undefined;\n\n\t/**\n  * @method setLayer\n  * Static method to specify the layer to use when actors are added to the\n  * stage. Simple applications will never call this method because the\n  * default layer is sufficient.\n  * @param {object} layer DaliLayer object to use. If missing, the built-in\n  *                       root layer is used.\n  */\n\tDaliApi.setLayer = function (layer) {\n\t\tif (!layer) layer = global.rootlayer;\n\n\t\tglobal.currentlayer = layer;\n\t};\n\n\t/**\n  * @method addActor\n  * Static method to add an actor to the stage.\n  * In our usage, it will add the actor to the current layer. The second\n  * parameter is optional and specifies the DaliLayer object to use.\n  * @param {object} actor DaliActor object\n  * @param {object} layer DaliLayer object to use. If missing, the current\n  *                 layer is used.\n  */\n\tDaliApi.addActor = function (actor, layer) {\n\t\tif (!layer) layer = global.currentlayer;\n\n\t\tlayer.add(actor);\n\t};\n\n\t/**\n  * @method initialize\n  * Static method to initialize and create the dali stage. This method is\n  * called when dali starts running.\n  * @param {Object} settings Initial settings:\n  *                   width    Width of stage\n  *                   height   Height of stage\n  *                   name     Name of stage\n  *                   dalilib  Path to dali lib (optional). If the path is\n  *                            missing, a fixed path is used.\n  *                   dumpprog Path of file to dump dali program to, or use\n  *                            stdout is no file is specified\n  */\n\tDaliApi.initialize = function (settings) {\n\t\tDaliLayer = requireDreem('./dali_layer');\n\n\t\tDaliApi.width = settings.width;\n\t\tDaliApi.height = settings.height;\n\t\tDaliApi.screenname = settings.name;\n\t\tDaliApi.dalilib = settings.dalilib || DaliApi.dalilib;\n\t\tDaliApi.dumpprog = settings.dumpprog;\n\n\t\tif (DaliApi.dumpprog) global.emitcode = DaliApi.dumpprog;\n\t\tDaliApi.emitcode = global.emitcode;\n\n\t\tvar window = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: DaliApi.width,\n\t\t\theight: DaliApi.height,\n\t\t\ttransparent: false,\n\t\t\tname: DaliApi.screenname\n\t\t};\n\n\t\tvar viewMode = {\n\t\t\t'stereoscopic-mode': 'mono',\n\t\t\t'stereo-base': 65\n\t\t};\n\n\t\tvar options = {\n\t\t\t'window': window,\n\t\t\t'view-mode': viewMode\n\t\t};\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var window= {x:0, y:0, width:' + DaliApi.width + ', height:' + DaliApi.height + ', transparent: false, name: \\'' + DaliApi.screenname + '\\'};');\n\n\t\t\tconsole.log('DALICODE: var viewMode={\\'stereoscopic-mode\\':\\'mono\\', \\'stereo-base\\': 65};');\n\n\t\t\tconsole.log('DALICODE: var options= {\\'window\\': window, \\'view-mode\\': viewMode}');\n\t\t\tconsole.log('DALICODE: var dali = require(\\'' + DaliApi.dalilib + '\\')(options);');\n\t\t}\n\n\t\ttry {\n\t\t\t// Load the library and make available as DaliApi.dali\n\t\t\t// console.log('LOADING', dalilib);\n\t\t\tvar dalimodule = defineDreem.require(DaliApi.dalilib)(options);\n\t\t\tDaliApi.dali = dalimodule;\n\n\t\t\t// Create a top-level 2D layer to the stage.\n\t\t\tvar dali = DaliApi.dali;\n\t\t\tglobal.rootlayer = global.currentlayer = new DaliLayer(null, DaliApi.width, DaliApi.height);\n\t\t\tdali.stage.add(global.rootlayer.dalilayer);\n\n\t\t\tif (DaliApi.emitcode) {\n\t\t\t\tconsole.log('DALICODE: dali.stage.add(' + global.rootlayer.name() + ');');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('Failed to load dalilib', DaliApi.dalilib);\n\t\t\tconsole.log(e.stack);\n\t\t}\n\t};\n\n\t/**\n  * @method createDaliObjects\n  * Static method to create dali objects on the specified object. Most\n  * objects, such as actor and geometry are attached to a view using\n  * createDaliActor(). Currently, only the shader object is attached to\n  * object.\n  * @param {object} obj Object to attach dali objects to. This should\n  *                     already contain an element dalishader. In webgl\n  *                     the object is an object created by gl.createProgram.\n  *                     In dali, a custom object is created in shaderdali.js\n  *                     to hold the compiled state of the shader. This object\n  *                     also holds an instance of DaliShader.\n  * @param {object} shader Instance with runtime values (ex. hardrect)\n  */\n\tDaliApi.createDaliObjects = function (obj, shader) {\n\t\tif (!obj.dalishader) {\n\t\t\tconsole.log('WARNING. createDaliObjects cannot find DaliShader', Object.keys(obj));\n\t\t}\n\n\t\tobj.dreem_obj = shader;\n\t};\n\n\t/**\n  * @method createDaliActor\n  * Static method to create dali.Actor object on the specified object,\n  * using dali geometries located in another object. A Material and Renderer\n  * are also created on the object.\n  * @param {object} obj Object to attach dali actor to. This is a view\n  *                 object.\n  * @param {object} shader Shader object containing compiled shader\n  *                 information (from createDaliObjects).\n  */\n\tDaliApi.createDaliActor = function (obj, shader) {\n\t\tDaliGeometry = requireDreem('./dali_geometry');\n\t\tDaliMaterial = requireDreem('./dali_material');\n\t\tDaliRenderer = requireDreem('./dali_renderer');\n\t\tDaliActor = requireDreem('./dali_actor');\n\n\t\t// TODO: Re-use the geometry, unless we have a texture\n\t\tobj.daligeometry = new DaliGeometry(obj.drawtype);\n\t\tobj.daligeometry.addGeometry(shader.dreem_obj);\n\n\t\t//console.log('Calling DaliMaterial with shader = ', shader.object_type);\n\t\tobj.dalimaterial = new DaliMaterial(shader.dalishader);\n\t\tobj.dalirenderer = new DaliRenderer(obj.daligeometry, obj.dalimaterial);\n\n\t\tobj.daliactor = new DaliActor(obj);\n\t\tobj.daliactor.addRenderer(obj.dalirenderer);\n\t};\n\n\t/**\n  * @method setBackgroundColor\n  * Static method to set the background color of the stage\n  * @param {object} color 4 element array of [r,g,b,a]\n  */\n\tDaliApi.setBackgroundColor = function (color) {\n\t\t//TODO This is frequently set, although it often does not change. Cache?\n\t\tDaliApi.dali.stage.setBackgroundColor(color);\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: dali.stage.setBackgroundColor(' + JSON.stringify(color) + ');');\n\t\t}\n\t};\n\n\t/**\n  * @method daliBuffer\n  * Static. Build a Dali property buffer, given a value, and type.\n  * value can be an array or a single value, but the value is a float.\n  * A cache is maintained to reuse proper buffers. The cache key is a\n  * hash value of the dali.PropertyBuffer (see DaliApi.getHash).\n  * @param {Object} vals Value to use. Either a single value or an\n  * array can be specified.\n  * @param {Object} Format hash, suitable for dali.PropertyBuffer.\n  * The hash looks like {name : type}. See dali docs for dali.PropertyBuffer.\n  * @param {Number} nrecs The number of records, in the buffer.\n  * @param {Boolean} cache Set to true to re-use dali.PropertyBuffers.\n  * @return {Object} [dali.PropertyBuffer, id]. This is the same value stored\n  * in the cache DaliApi.BufferCache.\n  */\n\tDaliApi.BufferId = 0;\n\tDaliApi.BufferCache = {}; // key: hash  value: [Dali.PropertyBuffer, id]\n\tDaliApi.daliBuffer = function (vals, format, nrecs, cache) {\n\t\t//console.log('daliBuffer format', format, 'nrecs', nrecs, 'vals', vals.length);\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Accept either an array or a single value\n\t\tvar data = vals.length ? vals : [vals];\n\n\t\t// console.trace('daliBuffer with', nrecs, 'items', 'length = ', data.length);\n\n\t\t// Reuse an existing propertybuffer\n\t\tif (cache) {\n\t\t\tvar hash = DaliApi.getHash(vals);\n\t\t\tif (DaliApi.BufferCache[hash]) {\n\t\t\t\treturn DaliApi.BufferCache[hash];\n\t\t\t}\n\t\t}\n\n\t\t// Create the dali.PropertyBuffer\n\t\tvar buffer = new dali.PropertyBuffer(format, nrecs);\n\n\t\tDaliApi.BufferId += 1;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var buffer' + DaliApi.BufferId + ' = new dali.PropertyBuffer(' + JSON.stringify(format) + ', ' + nrecs + ')');\n\t\t}\n\n\t\t// Write data to the buffer\n\t\t//console.log('numberItems', nrecs, data.length);\n\t\tDaliApi.writeDaliBuffer(buffer, DaliApi.BufferId, data);\n\n\t\tvar ret = [buffer, DaliApi.BufferId];\n\t\tif (cache) {\n\t\t\tDaliApi.BufferCache[hash] = ret;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\t/**\n  * @method writeDaliBuffer\n  * Static. Write data to an existing dali.PropertyBuffer\n  * @param {Object} buffer dali.PropertyBuffer to write to.\n  * @param {Number} bufferid buffer index\n  * @param {Object} data An array of values to use.\n  * array can be specified.\n  */\n\tDaliApi.writeDaliBuffer = function (buffer, bufferid, data) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tvar dataArray = new Float32Array(data.length);\n\t\tdataArray.set(data);\n\t\tbuffer.setData(dataArray);\n\t\tdataArray = null;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var data' + bufferid + ' = ' + JSON.stringify(data));\n\t\t\tconsole.log('DALICODE: var dataArray' + bufferid + ' = new Float32Array(data' + bufferid + '.length);');\n\t\t\tconsole.log('DALICODE: dataArray' + bufferid + '.set(data' + bufferid + ');');\n\t\t\tconsole.log('DALICODE: buffer' + bufferid + '.setData(dataArray' + bufferid + ')');\n\t\t}\n\n\t\treturn buffer;\n\t};\n\n\t/**\n  * @method getArrayValue\n  * Given the name of a uniform object, retrieve the array of values from\n  * the dreemgl compiled structure. In webgl this extraction happens inline.\n  * NaN and null values are converted to 0 (dali will error on these)\n  * @param {Object} obj Compiled object\n  * @return {Object} single value or array, or undefined if name not found.\n  */\n\tDaliApi.getArrayValue = function (obj) {\n\t\t// Detect, and return array data, if found. Array data is\n\t\t// found in struct.slots.\n\t\tif (obj && obj.struct && obj.struct.slots) {\n\t\t\tif (obj.struct.slots == 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar array = [];\n\t\t\tfor (var i = 0; i < obj.struct.slots; i++) {\n\t\t\t\tvar val = obj[i];\n\t\t\t\tif (isNaN(val) || val === null) val = 0;\n\n\t\t\t\tarray.push(val);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t}\n\n\t\t// Dali doesn't like NaN values\n\t\tvar val = obj;\n\t\tif (isNaN(val) || val === null) val = 0;\n\n\t\treturn val;\n\t};\n\n\t/**\n  * @method getDaliPropertySize\n  * Static. Return the number of elements required for a dali property,\n  * given the dali constant.\n  * From Nick (via slack).\n  * @param {Number} format property constant\n  * @return {Number} Number of elements\n  */\n\tDaliApi.getDaliPropertySize = function (format) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tswitch (format) {\n\t\t\tcase dali.PROPERTY_VECTOR2:\n\t\t\t\treturn 2;\n\t\t\tcase dali.PROPERTY_VECTOR3:\n\t\t\t\treturn 3;\n\t\t\tcase dali.PROPERTY_VECTOR4:\n\t\t\t\treturn 4;\n\t\t\tcase dali.PROPERTY_MATRIX3:\n\t\t\t\treturn 9;\n\t\t\tcase dali.PROPERTY_MATRIX4:\n\t\t\t\treturn 16;\n\t\t\tdefault:\n\t\t\t\treturn 1;\n\t\t}\n\t};\n\n\t/**\n  * @method getDaliPropertyType\n  * Static. Return the dali property name for a type, given its size\n  * @param {Number} bytes Number of bytes used by the data\n  * @return {Number} dali property type\n  */\n\tDaliApi.getDaliPropertyType = function (bytes) {\n\t\tvar dali = DaliApi.dali;\n\t\tvar type = dali.PROPERTY_FLOAT; // default\n\n\t\tswitch (bytes) {\n\t\t\tcase 4:\n\t\t\t\ttype = dali.PROPERTY_FLOAT;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\ttype = dali.PROPERTY_VECTOR2;\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\ttype = dali.PROPERTY_VECTOR3;\n\t\t\t\tbreak;\n\t\t\tcase 16:\n\t\t\t\ttype = dali.PROPERTY_VECTOR4;\n\t\t\t\tbreak;\n\t\t\tcase 64:\n\t\t\t\ttype = dali.PROPERTY_MATRIX;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.trace('UNKNOWN PROPERTY SIZE', bytes);\n\t\t\t\tbreak;\n\t\t};\n\n\t\treturn type;\n\t};\n\n\t/**\n  * @method getHash\n  * Static. Compute the hash of the specified data. The data is first\n  * converted to json, and an xor-like hash is used. These values are used\n  * as keys in caches.\n  * @param {Object} data Object to compute the hash\n  * @return {Number} Hash value\n  */\n\tDaliApi.getHash = function (data) {\n\t\tvar str = JSON.stringify(data);\n\n\t\t// Algorithm from: https://github.com/darkskyapp/string-hash/blob/master/index.js\n\t\tvar hash = 5381,\n\t\t    i = str.length;\n\n\t\twhile (i) {\n\t\t\thash = hash * 33 ^ str.charCodeAt(--i);\n\t\t}return hash >>> 0;\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_api.js\n// module id = 147\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_api.js?");

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliGeometry\n * Layer between DreemGL and Dali. Although Dali has a complete api, this\n * class is used to encapsulate the api to simplify how it is embedded into\n * the dreemgl dali platform.\n *\n * Each instance of DaliGeometry contains a dali.Geometry object, which contains\n * vertex data for displaying a mesh actor.\n */\n\n/**\n * @property daligeometry\n * dali.Geometry object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\tvar gltypes = requireDreem('$system/base/gltypes');\n\n\t// Assign a unique id to each daligeometry object\n\tvar DaliGeometry = exports;\n\tDaliGeometry.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a dali.Geometry object, using triangles\n  * You can access the dali.Geometry object as this.daligeometry\n  * @param {number} drawtype Line drawing type (webgl value).\n     *                 DALi does NOT use the same values (but they are close)\n  *                 The default is dali.GEOMETRY_TRIANGLES.\n  */\n\tthis.atConstructor = function (drawtype) {\n\t\tthis.object_type = 'DaliGeometry';\n\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Keep track of all vertex_buffers added. This acts as a cache\n\t\t// Values = [format_hash, data_hash, vertex_index, vertex_buffer, buffer_id];\n\t\tthis.vertex_buffers = {};\n\n\t\tthis.id = ++DaliGeometry.GlobalId;\n\t\tthis.daligeometry = new dali.Geometry();\n\n\t\t// Map the webgl values to DALi. Triangle fan and strip are different\n\t\tvar drawmap = {};\n\t\tdrawmap[gltypes.gl.POINTS] = dali.GEOMETRY_POINTS;\n\t\tdrawmap[gltypes.gl.LINES] = dali.GEOMETRY_LINES;\n\t\tdrawmap[gltypes.gl.LINE_LOOP] = dali.GEOMETRY_LINE_LOOP;\n\t\tdrawmap[gltypes.gl.LINE_STRIP] = dali.GEOMETRY_LINE_STRIP;\n\t\tdrawmap[gltypes.gl.TRIANGLES] = dali.GEOMETRY_TRIANGLES;\n\t\tdrawmap[gltypes.gl.TRIANGLE_STRIP] = dali.GEOMETRY_TRIANGLE_STRIP;\n\t\tdrawmap[gltypes.gl.TRIANGLE_FAN] = dali.GEOMETRY_TRIANGLE_FAN;\n\n\t\tdrawtype = drawtype || gltypes.gl.TRIANGLES;\n\t\tvar dali_drawtype = drawmap[drawtype];\n\n\t\t// console.log('drawtype', drawtype, dali_drawtype);\n\t\tthis.daligeometry.setGeometryType(dali_drawtype);\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var ' + this.name() + ' = new dali.Geometry();');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setGeometryType(' + this.drawtypeDali(dali_drawtype) + ');');\n\t\t}\n\t};\n\n\t// Internal, method to convert a drawtype into the dali value, if possible.\n\t// This is used when generating dali output to the console.\n\tthis.drawtypeDali = function (drawtype) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tswitch (drawtype) {\n\t\t\tcase dali.GEOMETRY_LINES:\n\t\t\t\tdrawtype = 'dali.GEOMETRY_LINES';\n\t\t\t\tbreak;\n\t\t\tcase dali.GEOMETRY_LINE_LOOP:\n\t\t\t\tdrawtype = 'GEOMETRY_LINE_LOOP';\n\t\t\t\tbreak;\n\t\t\tcase dali.GEOMETRY_LINE_STRIP:\n\t\t\t\tdrawtype = 'dali.GEOMETRY_LINE_STRIP';\n\t\t\t\tbreak;\n\n\t\t\tcase dali.GEOMETRY_TRIANGLES:\n\t\t\t\tdrawtype = 'dali.GEOMETRY_TRIANGLES';\n\t\t\t\tbreak;\n\t\t\tcase dali.GEOMETRY_TRIANGLE_FAN:\n\t\t\t\tdrawtype = 'dali.GEOMETRY_TRIANGLE_FAN';\n\t\t\t\tbreak;\n\t\t\tcase dali.GEOMETRY_TRIANGLE_STRIP:\n\t\t\t\tdrawtype = 'dali.GEOMETRY_TRIANGLE_STRIP';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn drawtype;\n\t};\n\n\t/**\n  * @method addGeometry\n  * Add geometries (vertex buffers) given a dreem shader object\n  * @param {Object} dreem_shader Compiled data structure. (see shaderdali.js)\n  */\n\tthis.addGeometry = function (dreem_shader) {\n\t\t//console.trace('addGeometry');\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Make sure the correct object was passed. dreem_shader holds the\n\t\t// dreemgl compiled structures.\n\t\tif (!dreem_shader.vtx_state) {\n\t\t\tconsole.log('WARNING. Incorrect object passed to addGeometry', dreem_shader.object_type);\n\t\t\treturn;\n\t\t}\n\n\t\tvar dreem_attributes = dreem_shader.vtx_state.attributes;\n\n\t\t// If there are no keys, it means an object with no parameters\n\t\tvar keys = Object.keys(dreem_attributes);\n\t\tfor (var i in keys) {\n\t\t\t// The shader program uses a '_' at the beginning of the name\n\t\t\tvar name = keys[i];\n\t\t\tvar storedname = '_' + name;\n\n\t\t\t// I found that dreemgl keys with nested information (ie. has _DOT_)\n\t\t\t// do not require vertex.\n\t\t\tif (name.indexOf('_DOT_') > 0) {\n\t\t\t\t//console.log('DaliGeometry.addGeometry Skipping texture', name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// For each attribute, convert the data into an array\n\t\t\tvar obj = dreem_attributes[name];\n\t\t\tvar type = DaliApi.getDaliPropertyType(obj.bytes);\n\t\t\tvar nslots = DaliApi.getDaliPropertySize(type);\n\n\t\t\t// dali format is a hash of {name: type}\n\t\t\tvar format = {};\n\t\t\tformat[storedname] = type;\n\n\t\t\tvar data = [];\n\t\t\tvar arr = dreem_shader[name];\n\t\t\tif (arr && arr.array) {\n\t\t\t\t// Do not take all the (allocated) array. Take only length\n\t\t\t\tvar entries = nslots * arr.length;\n\t\t\t\tfor (var i = 0; i < entries; i++) {\n\t\t\t\t\tvar val = parseFloat(arr.array[i]);\n\t\t\t\t\tdata.push(val);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add or update a vertex buffer\n\t\t\t//console.log('updating', format, nslots);\n\t\t\tthis.updateVertexBuffer(storedname, data, format, nslots);\n\t\t}\n\t};\n\n\t/**\n  * @method addAttributeGeometryAlt\n  * Add other attribute geometries to a dali Actor. This version was used\n  * during testing to make sure DALi could handle the packed layout outlined\n  * in the docs.\n  *\n  * This version can be removed if no problems are found.\n  *\n  * @param {Object} shader_dali Compiled data structure\n  * @param {Object} attrlocs Compiled data structure\n  */\n\tthis.addAttributeGeometryAlt = function (shader_dali, attrlocs) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tif (Object.keys(attrlocs) == 0) return;\n\n\t\t// Write each value separately, in order to test the dali API.\n\t\t// The original version (see below) writes a composite\n\t\t// dali.PropertyBuffer.\n\n\t\tvar name;\n\t\tvar nslots = 0;\n\t\tfor (var key in attrlocs) {\n\t\t\tvar format = {};\n\t\t\tvar attrloc = attrlocs[key];\n\t\t\tname = attrloc.name;\n\n\t\t\tvar storedname = '_' + key;\n\t\t\tvar type = dali.PROPERTY_FLOAT;\n\n\t\t\t// Skip invalid entries\n\t\t\tif (typeof attrloc.slots === 'undefined') continue;\n\n\t\t\tswitch (attrloc.slots) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttype = dali.PROPERTY_FLOAT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR4;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('addAttributeGeometry. Unknown type', attrloc.slots);\n\t\t\t\t\t//TODO This happens, do I ignore it?\n\t\t\t\t\t//return;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tformat[storedname] = type;\n\n\t\t\tif (attrloc.slots == 0) continue;\n\n\t\t\t// Extract the data from the array\n\t\t\tvar arr = shader_dali[name];\n\t\t\t//console.trace('**** addAttributeGeometry', name, arr.array.length);\n\n\t\t\tvar data = [];\n\t\t\tif (arr && arr.array) {\n\t\t\t\t// Find the offset and length of the data to extract\n\t\t\t\tvar record_offset = arr.slots;\n\t\t\t\tvar data_offset = attrloc.offset / 4; // attrloc.offset is bytes\n\n\t\t\t\tvar offset = 0;\n\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\tvar off = offset + data_offset;\n\t\t\t\t\tfor (var j = 0; j < attrloc.slots; j++) {\n\t\t\t\t\t\tvar val = parseFloat(arr.array[off++]);\n\t\t\t\t\t\tdata.push(val);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += record_offset;\n\t\t\t\t}\n\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tthis.updateVertexBuffer(key, data, format, attrloc.slots);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * @method addAttributeGeometry\n  * Add other attribute geometries to a dali Actor.\n  * @param {Object} shader_dali Compiled data structure\n  * @param {Object} attrlocs Compiled data structure\n  */\n\tthis.addAttributeGeometry = function (shader_dali, attrlocs) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tvar object_id = 'attribgeom_' + shader_dali.view.name;\n\n\t\tif (Object.keys(attrlocs) == 0) return;\n\n\t\t//TODO Support multiple names in the keys, like webgl\n\t\tvar format = {};\n\t\tvar name;\n\t\tvar nslots = 0;\n\n\t\t// DO NOT iterate on key name. You need to iterate in offset order to\n\t\t// preserve the order.\n\t\t// Sort based on the offset, and then loop in this order. \n\t\tvar tosort = [];\n\t\tfor (var key in attrlocs) {\n\t\t\ttosort.push([attrlocs[key].offset, key]);\n\t\t}\n\t\ttosort.sort(function (a, b) {\n\t\t\treturn a[0] - b[0];\n\t\t}); // Numeric sort!\n\t\t//console.log('SORTED', tosort);\n\n\t\tfor (var i in tosort) {\n\t\t\tkey = tosort[i][1];\n\n\t\t\tvar attrloc = attrlocs[key];\n\t\t\tname = attrloc.name;\n\n\t\t\tvar storedname = '_' + key;\n\t\t\tvar type = dali.PROPERTY_FLOAT;\n\n\t\t\t// Skip invalid entries\n\t\t\tif (typeof attrloc.slots === 'undefined') continue;\n\n\t\t\tswitch (attrloc.slots) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttype = dali.PROPERTY_FLOAT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\ttype = dali.PROPERTY_VECTOR4;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('addAttributeGeometry. Unknown type', attrloc.slots);\n\t\t\t\t\t//TODO This happens, do I ignore it?\n\t\t\t\t\t//return;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tformat[storedname] = type;\n\t\t\tnslots += attrloc.slots;\n\t\t}\n\n\t\tif (!name || Object.keys(format).length == 0) return;\n\t\t//console.log('***************addAttributeGeometry******************');\n\t\t//console.log(attrlocs);\n\t\t//console.log('*****************************************************');\n\n\t\tvar arr = shader_dali[name];\n\n\t\tvar data = [];\n\n\t\tif (arr && arr.array) {\n\t\t\t// Do not take all the (allocated) array. Take only length elements.\n\t\t\t// There can be gaps in the stored array, so only the first nslots\n\t\t\t// are used.\n\t\t\tvar offset = 0;\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tfor (var j = 0; j < nslots; j++) {\n\t\t\t\t\tvar val = parseFloat(arr.array[offset++]);\n\t\t\t\t\tdata.push(val);\n\t\t\t\t}\n\t\t\t\toffset += arr.slots - nslots;\n\t\t\t}\n\t\t}\n\n\t\t// Add or update a vertex buffer\n\t\tif (data.length > 0) this.updateVertexBuffer(object_id, data, format, nslots);\n\t};\n\n\t/**\n  * @method updateVertexBuffer\n  * Add, or update a vertex buffer.\n  * @param {string} name Cached name\n  * @param {Object} data Object containing data to write\n  * @param {Object} format Hash of format information to write.\n  * @param {Number} nitems Number of items per record\n  */\n\tthis.updateVertexBuffer = function (name, data, format, nitems) {\n\t\tvar format_hash = DaliApi.getHash(format);\n\t\tvar data_hash = DaliApi.getHash(data);\n\n\t\t// index, buffer, and bufferindex are either built or come from cache\n\t\tvar index;\n\t\tvar buffer;\n\t\tvar bufferindex;\n\n\t\t// Cache [hash of format, hash of data, dali buffer index, dali.PropertyBuffer, our buffer id, length of data, number of items per data point ]\n\t\tvar cache = this.vertex_buffers[name];\n\t\tif (cache) {\n\t\t\tvar oformathash = cache[0];\n\t\t\tvar odatahash = cache[1];\n\t\t\tvar data_length = cache[5];\n\t\t\tvar item_length = cache[6];\n\t\t\tif (format_hash == oformathash && data.length == data_length && nitems == item_length) {\n\t\t\t\tif (data_hash == odatahash) {\n\t\t\t\t\t// No change to the value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reuse the vertex buffer\n\t\t\t\tindex = cache[2];\n\t\t\t\tbuffer = cache[3];\n\t\t\t\tbufferindex = cache[4];\n\t\t\t} else {\n\t\t\t\tindex = cache[2];\n\t\t\t\tconsole.log('addGeometry: vertex buffer already exists: ', name, index, '. Removing');\n\n\t\t\t\t//TODO daliwrite\n\t\t\t\tif (index) {\n\t\t\t\t\tthis.daligeometry.removeVertexBuffer(index);\n\t\t\t\t}\n\t\t\t\tdelete this.vertex_buffers[name];\n\t\t\t\tbuffer = null;\n\t\t\t}\n\t\t}\n\n\t\t// Generate the buffer\n\t\tif (!buffer) {\n\t\t\tvar ret = DaliApi.daliBuffer(data, format, data.length / nitems);\n\t\t\tvar buffer = ret[0];\n\t\t\tbufferindex = ret[1];\n\t\t\tindex = this.daligeometry.addVertexBuffer(buffer);\n\n\t\t\tif (DaliApi.emitcode) {\n\t\t\t\tconsole.log('DALICODE: ' + this.name() + '.addVertexBuffer(buffer' + bufferindex + ')');\n\t\t\t}\n\n\t\t\t// Store the index so it can be removed later\n\t\t\tthis.vertex_buffers[name] = [format_hash, data_hash, index, buffer, bufferindex, data.length, nitems];\n\t\t} else {\n\t\t\t// Update an existing buffer using setData\n\t\t\tDaliApi.writeDaliBuffer(buffer, bufferindex, data);\n\t\t\tthis.vertex_buffers[name] = [format_hash, data_hash, index, buffer, bufferindex, data.length, nitems];\n\t\t}\n\t};\n\n\t/**\n  * @method addVertices\n  * Add vertex attributes array to a dali Geometry. Format is very close\n  * to gl.vertexAttribPointer. Assumes float data\n  * @param {Object} array Buffer array\n  * @param {Number} index Index of attribute in the buffer\n  * @param {Number} size Number of components per attribute (1,2,3,4)\n  * @param {Number} stride Offset (bytes) between consecutive attributes\n  * @param {Number} offset Offset (bytes) to first attribute\n  * @param {Number} index Index of attribute in the buffer\n  * @return {Object} Index of vertex buffer\n  */\n\tthis.addVertices = function (name, array, slots, stride, offset) {\n\t\tconsole.log('addVertices IS NOT IMPLEMENTED');\n\t};\n\n\tthis.name = function () {\n\t\treturn 'daligeometry' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { daliGeometry: this.id };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_geometry.js\n// module id = 148\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_geometry.js?");

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliLayer\n * A DaliLayer is like a DaliActor that contains a group of actors. It is not\n * derived from DaliActor.\n *\n * Each instance of DaliLayer contains a dali.Layer object.\n */\n\n/**\n * @property dalilayer\n * dali.Layer object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// Assign a unique id to each daliactor object\n\tvar DaliLayer = exports;\n\tDaliLayer.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a dali.Layer object with default parameters\n  * You can access the dali.Layer object as this.dalilayer\n  * @param {Object} parent The layer object to add this layer to. If this\n  * is not defined, the layer is added to the top-level layer. If null,\n  * the layer is not added. The null case is used to initialize the\n  * root layer.\n  * @param {Number} width The width of the layer, in pixels.\n  * @param {Number} height The height of the layer, in pixels.\n  */\n\tthis.atConstructor = function (parent, width, height) {\n\t\tthis.object_type = 'DaliLayer';\n\n\t\tvar dali = DaliApi.dali;\n\n\t\tthis.id = ++DaliLayer.GlobalId;\n\t\tthis.dalilayer = new dali.Layer();\n\n\t\tthis.onstage = false;\n\n\t\t// Support older and newer DALi versions\n\t\tvar older = typeof dali.ALPHA_FUNCTION_DEFAULT === 'undefined';\n\t\tvar behavior = older ? \"Dali::Layer::LAYER_2D\" : \"LAYER_2D\";\n\t\t// console.log('behavior', behavior);\n\t\tthis.dalilayer.behavior = behavior;\n\n\t\tif (width && height) this.dalilayer.size = [width, height, 0];\n\n\t\tthis.dalilayer.parentOrigin = dali.TOP_LEFT;\n\t\tthis.dalilayer.anchorPoint = dali.TOP_LEFT;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var ' + this.name() + ' = new dali.Layer();');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.behavior = \"' + behavior + '\"');\n\t\t\tif (width && height) console.log('DALICODE: ' + this.name() + '.size = [' + width + ', ' + height + ', 0];');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.parentOrigin = dali.TOP_LEFT;');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.anchorPoint = dali.TOP_LEFT;');\n\t\t}\n\n\t\t// Add to another layer unless parent is null (root layer)\n\t\tif (typeof parent === 'undefined') parent = DaliApi.currentlayer;\n\t\tif (parent) {\n\t\t\tDaliApi.rootlayer.add(this);\n\t\t\t//parent.add(this);\n\t\t}\n\t};\n\n\t/**\n  * @method add\n  * Add an actor to this layer.\n  * @param {object} actor DaliActor or DaliLayer object\n  */\n\tthis.add = function (actor) {\n\t\tif (actor.dalilayer) {\n\t\t\t// Adding a layer to an existing layer\n\t\t\tthis.dalilayer.add(actor.dalilayer);\n\t\t} else {\n\t\t\t// Adding an actor to a layer\n\t\t\tthis.dalilayer.add(actor.daliactor);\n\t\t}\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.add(' + actor.name() + ');');\n\t\t}\n\t};\n\n\tthis.name = function () {\n\t\treturn 'dalilayer' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { dalilayer: this.id };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_layer.js\n// module id = 149\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_layer.js?");

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliMaterial\n * Layer between DreemGL and Dali. Although Dali has a complete api, this\n * class is used to encapsulate the api to simplify how it is embedded into\n * the dreemgl dali platform.\n *\n * Each instance of DaliMaterial contains a dali.Material object, which is a\n * combination of a dali.Shader object and textures.\n */\n\n/**\n * @property dalimaterial\n * dali.Material object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// Assign a unique id to each dalimaterial object\n\tvar DaliMaterial = exports;\n\tDaliMaterial.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a dali.Material object.\n  * You can access the dali.Material object as this.dalimaterial.\n  * The passed shader object is available as this.dalishader.\n  * @param {object} shader DaliShader object\n  */\n\tthis.atConstructor = function (shader) {\n\t\tthis.object_type = 'DaliMaterial';\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Cache the property values (blend-related)\n\t\tthis.property_cache = {};\n\n\t\tthis.id = ++DaliMaterial.GlobalId;\n\t\tthis.dalishader = shader;\n\t\tthis.dalimaterial = new dali.Material(this.dalishader.dalishader);\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var ' + this.name() + ' = new dali.Material(' + this.dalishader.name() + ');');\n\t\t}\n\t};\n\n\t/**\n  * @method addTexture\n  * Forward request to dali.Material object\n  * @param {object} texture Texture object\n  * @param {object} name Uniform name\n  * @param {object} sampler Dali.Sampler object\n  */\n\tthis.addTexture = function (texture, name, sampler) {\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var texid = ' + this.name() + '.addTexture(texture' + texture.id + ', \\'' + name + '\\', sampler' + this.id + ');');\n\t\t}\n\n\t\t// We currently have one texture per material. Delete existing textures\n\t\twhile (this.dalimaterial.getNumberOfTextures() > 0) {\n\t\t\t// console.log('Removing texture', this.id);\n\t\t\tthis.removeTexture(0);\n\t\t}\n\n\t\treturn this.dalimaterial.addTexture(texture.image, name, sampler);\n\t};\n\n\t/**\n  * @method removeTexture\n  * Forward request to dali.Material object\n  * @param {number} index Index of texture to remove\n  */\n\tthis.removeTexture = function (index) {\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.removeTexture(' + index + ');');\n\t\t}\n\n\t\tthis.dalimaterial.removeTexture(index);\n\t};\n\n\t// Blend Modes moved from material to renderer in some versions of dali\n\n\t/**\n  * @method hasBlender\n  * Return true if the material has blending api\n  */\n\tthis.hasBlender = function (mode) {\n\t\treturn typeof this.dalimaterial.setBlendEquation === 'function';\n\t};\n\n\t/**\n  * @method setBlendMode\n  * Forward request to dali.Material object. dali enumerations match webgl.\n  * @param {number} mode Set the blending mode\n  */\n\tthis.setBlendMode = function (mode) {\n\t\tvar val = this.property_cache['blendmode'];\n\t\tif (val && val == mode) return;\n\n\t\tthis.dalimaterial.setBlendMode(mode);\n\t\tthis.property_cache['blendmode'] = mode;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setBlendMode(' + mode + ');');\n\t\t}\n\t};\n\n\t/**\n  * @method setBlendEquation\n  * Forward request to dali.Material object\n  * @param {number} equationRgb Equation for combining rgb components\n  * @param {number} equationAlpha Equation for combining alpha component\n  */\n\tthis.setBlendEquation = function (equationRgb, equationAlpha) {\n\t\tvar hash = DaliApi.getHash([equationRgb, equationAlpha]);\n\n\t\tvar val = this.property_cache['blendequation'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.dalimaterial.setBlendEquation(equationRgb, equationAlpha);\n\t\tthis.property_cache['blendequation'] = hash;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setBlendEquation(' + equationRgb + ', ' + equationAlpha + ');');\n\t\t}\n\t};\n\n\t/**\n  * @method setBlendFunc\n  * Forward request to dali.Material object\n  * @param {number} srcFactorRgb Source blending rgb\n  * @param {number} dstFactorRgb Destination blending rgb\n  * @param {number} srcFactorAlpha Source blending alpha\n  * @param {number} dstFactorAlpha Destination blending alpha\n  */\n\tthis.setBlendFunc = function (srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha) {\n\t\tvar hash = DaliApi.getHash([srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha]);\n\n\t\tvar val = this.property_cache['blendfunc'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.dalimaterial.setBlendFunc(srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha);\n\t\tthis.property_cache['blendfunc'] = hash;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setBlendFunc(' + srcFactorRgb + ', ' + dstFactorRgb + ', ' + srcFactorAlpha + ', ' + dstFactorAlpha + ');');\n\t\t}\n\t};\n\n\tthis.name = function () {\n\t\treturn 'dalimaterial' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { daliMaterial: this.id, obj: [this.dalishader.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_material.js\n// module id = 150\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_material.js?");

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliRenderer\n * Layer between DreemGL and Dali. Although Dali has a complete api, this\n * class is used to encapsulate the api to simplify how it is embedded into\n * the dreemgl dali platform.\n *\n * Each instance of DaliRenderer contains a dali.Renderer object, which\n * combines a DaliGeometry object and a DaliMaterial object\n */\n\n/**\n * @property dalirenderer\n * dali.Renderer object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// Assign a unique id to each dalirenderer object\n\tvar DaliRenderer = exports;\n\tDaliRenderer.GlobalId = 0;\n\n\t// The depth index does not auto-increment. Child layers should have a\n\t// larger value than parent so child actors are rendered after parent.\n\t// An alternate solution suggested by Nick, is to add an actor as a child\n\t// to another actor (no depthindex changes are needed).\n\tDaliRenderer.DepthIndex = 5;\n\n\t/**\n  * @method constructor\n  * Create a dali.Renderer object by specifying a geometry and material\n  * @param {object} geometry DaliShader object\n  * @param {object} material DaliMaterial object\n  * You can access the dali.Renderer object as this.dalirenderer\n  */\n\tthis.atConstructor = function (geometry, material) {\n\t\tthis.object_type = 'DaliRenderer';\n\n\t\tvar dali = DaliApi.dali;\n\n\t\t// Cache the property values (blend-related)\n\t\tthis.property_cache = {};\n\n\t\tthis.id = ++DaliRenderer.GlobalId;\n\t\tthis.daligeometry = geometry;\n\t\tthis.dalimaterial = material;\n\t\tthis.dalirenderer = new dali.Renderer(this.daligeometry.daligeometry, this.dalimaterial.dalimaterial);\n\n\t\tDaliRenderer.DepthIndex += 5;\n\t\tthis.dalirenderer.depthIndex = DaliRenderer.DepthIndex;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + ' = new dali.Renderer(' + this.daligeometry.name() + ', ' + this.dalimaterial.name() + ');');\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.depthIndex = ' + DaliRenderer.DepthIndex + ';');\n\t\t}\n\t};\n\n\t// Blend Modes moved from material to renderer in some versions of dali\n\n\t/**\n  * @method hasBlender\n  * Return true if the material has blending api\n  */\n\tthis.hasBlender = function (mode) {\n\t\treturn typeof this.dalirenderer.setBlendEquation === 'function';\n\t};\n\n\t/**\n  * @method setBlendMode\n  * Forward request to dali.Material object. dali enumerations match webgl.\n  * @param {number} mode Set the blending mode\n  */\n\tthis.setBlendMode = function (mode) {\n\t\tvar val = this.property_cache['blendmode'];\n\t\tif (val && val == mode) return;\n\n\t\tthis.dalirenderer.blendingMode = mode;\n\t\tthis.property_cache['blendmode'] = mode;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.blendingMode = ' + mode + ';');\n\t\t}\n\t};\n\n\t/**\n  * @method setBlendEquation\n  * Forward request to dali.Material object\n  * @param {number} equationRgb Equation for combining rgb components\n  * @param {number} equationAlpha Equation for combining alpha component\n  */\n\tthis.setBlendEquation = function (equationRgb, equationAlpha) {\n\t\tvar hash = DaliApi.getHash([equationRgb, equationAlpha]);\n\n\t\tvar val = this.property_cache['blendequation'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.dalirenderer.setBlendEquation(equationRgb, equationAlpha);\n\t\tthis.property_cache['blendequation'] = hash;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setBlendEquation(' + equationRgb + ', ' + equationAlpha + ');');\n\t\t}\n\t};\n\n\t/**\n  * @method setBlendFunc\n  * Forward request to dali.Material object\n  * @param {number} srcFactorRgb Source blending rgb\n  * @param {number} dstFactorRgb Destination blending rgb\n  * @param {number} srcFactorAlpha Source blending alpha\n  * @param {number} dstFactorAlpha Destination blending alpha\n  */\n\tthis.setBlendFunc = function (srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha) {\n\t\tvar hash = DaliApi.getHash([srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha]);\n\n\t\tvar val = this.property_cache['blendfunc'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.dalirenderer.setBlendFunc(srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha);\n\t\tthis.property_cache['blendfunc'] = hash;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: ' + this.name() + '.setBlendFunc(' + srcFactorRgb + ', ' + dstFactorRgb + ', ' + srcFactorAlpha + ', ' + dstFactorAlpha + ');');\n\t\t}\n\t};\n\n\tthis.name = function () {\n\t\treturn 'dalirenderer' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { daliRenderer: this.id, obj: [this.daligeometry.inspect(depth), this.dalimaterial.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_renderer.js\n// module id = 151\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_renderer.js?");

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class DaliShader\n * Layer between DreemGL and Dali. Although Dali has a complete api, this\n * class is used to encapsulate the api to simplify how it is embedded into\n * the dreemgl dali platform.\n *\n * Each instance of DaliShader contains a dali.Shader object, and is extended\n * with information about the uniforms and attributes used by the shader.\n */\n\n/**\n * @property dalishader\n * dali.Shader object\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// Assign a unique id to each dalishader object\n\tvar DaliShader = exports;\n\tDaliShader.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a dali.Shader object\n  * You can access the dali.Shader object as this.dalishader\n  * @param {string} vertexShader VertexShader code\n  * @param {string} fragmentShader FragmentShader code\n  */\n\tthis.atConstructor = function (vertexShader, fragmentShader) {\n\t\tthis.object_type = 'DaliShader';\n\n\t\tvar vs = vertexShader;\n\t\tvar fs = fragmentShader;\n\n\t\tvar shaderOptions = {\n\t\t\tvertexShader: vs,\n\t\t\tfragmentShader: fs\n\t\t};\n\n\t\tvar dali = DaliApi.dali;\n\t\tthis.id = ++DaliShader.GlobalId;\n\t\tthis.dalishader = new dali.Shader(shaderOptions);\n\t\tthis.vertexshader = vertexShader;\n\t\tthis.fragmentShader = fragmentShader;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\t// Simplify the shader by removing comments and empty lines\n\t\t\tvs = this.trimShader(vs);\n\t\t\tfs = this.trimShader(fs);\n\n\t\t\t// #extension lines must have a \\n at the end to compile\n\t\t\tvs = vs.replace(/(\\#extension.*)\\n/g, '$1\\\\n\\\\\\n');\n\t\t\tfs = fs.replace(/(\\#extension.*)\\n/g, '$1\\\\n\\\\\\n');\n\n\t\t\t// Each line needs a separate DALICODE statement\n\t\t\tvs = vs.replace(/\\n/g, \"\\nDALICODE: \");\n\t\t\tfs = fs.replace(/\\n/g, \"\\nDALICODE: \");\n\n\t\t\tconsole.log('DALICODE: var vertexShader' + this.id + ' = \"' + vs + '\"');\n\t\t\tconsole.log('DALICODE: var fragmentShader' + this.id + ' = \"' + fs + '\"');\n\t\t\tconsole.log('DALICODE: var shaderOptions' + this.id + ' = {vertexShader : vertexShader' + this.id + ', fragmentShader: fragmentShader' + this.id + ' };');\n\t\t\tconsole.log('DALICODE: var ' + this.name() + ' = new dali.Shader(shaderOptions' + this.id + ');');\n\t\t}\n\t};\n\n\t// Internal method to remove comments and empty lines from a shader. This\n\t// is to prevent issues when the dalicode is replayed.\n\tthis.trimShader = function (code) {\n\t\tvar str = code;\n\n\t\t// Remove blank lines\n\t\tstr = str.replace(/\\n\\n/g, \"\\\\n\");\n\n\t\t// Remove comments\n\t\t//var str = code.replace(//*.+?*/|//.*(?=[nr])/g, '');\n\t\tstr = str.replace(/\\/\\/.*\\n/g, '');\n\n\t\t// Remove trailing new line\n\t\tif (str[str.length - 1] == \"\\n\") str = str.substring(0, str.length - 1);\n\n\t\t// Remove new lines\n\t\tstr = str.replace(/\\n/g, \"\\\\n\");\n\n\t\t// Create a multi-line string\n\t\tstr = str.replace(/\\\\n/g, \"\\\\\\n\");\n\n\t\t// Add an additional newline for #extension (or else it won't compile)\n\t\tstr = str.replace(/(\\#extension.*)\\\\\\n/g, '$1\\n\\\\\\n');\n\n\t\treturn str;\n\t};\n\n\tthis.name = function () {\n\t\treturn 'dalishader' + this.id;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { daliShader: this.id, vertex: this.vertexshader.length, fragment: this.fragmentShader.length };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/dali_shader.js\n// module id = 152\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/dali_shader.js?");

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// dali wrapper file, adapted from dali example applications.\n// (For example: dali-nodejs/dali-toolkit/node-addon/line-mesh.js).\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\t// internal, Initialize and show the dali screen\n\tthis.atConstructor = function (width, height, name) {\n\t\twidth = width || 1920;\n\t\theight = height || 1080;\n\t\tname = name || 'dreemgl';\n\n\t\tthis.dali_initialize(width, height, name);\n\t};\n\n\t// internal, Initialize dali/nodejs and display the screen\n\tthis.dali_initialize = function (width, height, name) {\n\t\tif (this.dali) {\n\t\t\tconsole.warn('warning: dali_wrapper already initialized');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.window = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\ttransparent: false,\n\t\t\tname: name\n\t\t};\n\n\t\tthis.viewMode = {\n\t\t\t'stereoscopic-mode': 'mono', // stereo-horizontal, stereo-vertical, stereo-interlaced,\n\t\t\t'stereo-base': 65 // Distance in millimeters between left/right cameras typically between (50-70mm)\n\t\t};\n\n\t\tthis.options = {\n\t\t\t'window': this.window,\n\t\t\t'view-mode': this.viewMode\n\n\t\t\t// Dali/nodejs interface (nodejs package at top-level of dreemgl repository)\n\t\t\t//TODO Use a fixed location to locate dali code\n\n\t\t\t//TODO FIX absolute path and use of require_builtin\n\t\t};this.dali = defineDreem.requireDreem('/home/dali/teem/src/dreemgl/Release/dali')(this.options);\n\n\t\t// Application\n\t\tthis.daliApp = {};\n\t};\n\n\t// Application\n\tthis.daliApp = {};\n\n\t// Pass the dali object to createMeshActor\n\tthis.daliApp.createMeshActor = function (dali, daliapp) {\n\t\tdaliapp.actors(dali);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/daliwrapper.js\n// module id = 153\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/daliwrapper.js?");

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\tvar _gl;\n\n\t//internal, HACK to simulate gl (during dev)\n\tgl = (_gl = {\n\t\tgetUniformLocation: function getUniformLocation() {},\n\t\tgetAttribLocation: function getAttribLocation() {},\n\t\tuniform4f: function uniform4f() {},\n\t\tdrawArrays: function drawArrays() {},\n\t\tframebufferTexture2D: function framebufferTexture2D() {},\n\t\tbindRenderbuffer: function bindRenderbuffer() {},\n\t\tcreateRenderbuffer: function createRenderbuffer() {\n\t\t\treturn {};\n\t\t},\n\t\tcreateFramebuffer: function createFramebuffer() {\n\t\t\treturn {};\n\t\t},\n\t\tbindFramebuffer: function bindFramebuffer() {},\n\t\trenderbufferStorage: function renderbufferStorage() {},\n\t\tframebufferRenderbuffer: function framebufferRenderbuffer() {},\n\t\tviewport: function viewport() {},\n\t\tclearColor: function clearColor() {},\n\t\tclear: function clear() {},\n\t\tcreateShader: function createShader() {},\n\t\tattachShader: function attachShader() {},\n\t\tshaderSource: function shaderSource() {},\n\t\tcompileShader: function compileShader() {},\n\t\tcreateTexture: function createTexture() {\n\t\t\treturn {};\n\t\t},\n\t\tactiveTexture: function activeTexture() {},\n\t\tbindTexture: function bindTexture() {},\n\t\tgetShaderParameter: function getShaderParameter() {},\n\t\tgetShaderInfoLog: function getShaderInfoLog() {\n\t\t\treturn '';\n\t\t},\n\t\tuseProgram: function useProgram() {},\n\t\tcreateBuffer: function createBuffer() {\n\t\t\treturn 0;\n\t\t},\n\t\tdeleteBuffer: function deleteBuffer() {},\n\t\tbindBuffer: function bindBuffer() {},\n\t\tbufferData: function bufferData() {},\n\t\tenable: function enable() {},\n\t\tdisable: function disable() {},\n\t\tblendEquation: function blendEquation() {},\n\t\tblendFunc: function blendFunc() {},\n\t\tenableVertexAttribArray: function enableVertexAttribArray() {},\n\t\tvertexAttribPointer: function vertexAttribPointer() {},\n\t\tuniform1f: function uniform1f(l, v) {\n\t\t\tconsole.log('uniform1f', l, v);return 0;\n\t\t},\n\t\tuniform2f: function uniform2f() {\n\t\t\treturn 0;\n\t\t},\n\t\tuniform3f: function uniform3f() {\n\t\t\treturn 0;\n\t\t}\n\t}, _defineProperty(_gl, 'uniform4f', function uniform4f() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'uniform1i', function uniform1i() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'uniformMatrix4fv', function uniformMatrix4fv() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'pixelStorei', function pixelStorei() {}), _defineProperty(_gl, 'texParameterf', function texParameterf() {}), _defineProperty(_gl, 'texParameteri', function texParameteri() {}), _defineProperty(_gl, 'depthFunc', function depthFunc() {}), _defineProperty(_gl, 'texImage2D', function texImage2D() {}), _gl);\n\n\tthis.Keyboard = requireDreem('./keyboarddali');\n\tthis.Pointer = requireDreem('./pointerdali');\n\n\t// require embedded classes\n\tthis.Shader = requireDreem('./shaderdali');\n\tthis.Texture = requireDreem('./texturedali');\n\tthis.DrawPass = requireDreem('./drawpassdali');\n\n\tthis.preserveDrawingBuffer = false;\n\tthis.premultipliedAlpha = false;\n\tthis.antialias = false;\n\tthis.debug_pick = false;\n\n\tthis.document = null;\n\n\tthis.atConstructor = function (previous) {\n\t\t// DaliApi is a static object to access the dali api\n\t\tthis.DaliApi = requireDreem('./dali_api');\n\n\t\tthis.extensions = previous && previous.extensions || {};\n\t\tthis.shadercache = previous && previous.shadercache || {};\n\t\tthis.drawpass_list = previous && previous.drawpass_list || [];\n\t\tthis.layout_list = previous && previous.layout_list || [];\n\t\tthis.pick_resolve = [];\n\t\tthis.anim_redraws = [];\n\t\tthis.animate_hooks = [];\n\t\tthis.doPick = this.doPick.bind(this);\n\n\t\t//TODO Use setTimeout for animation until dali animation ready (DALI)\n\t\tthis.time = 0;\n\t\tthis.animFrame = function (time) {\n\t\t\t//console.log('animFrame', time);\n\t\t\tvar interval = 16;\n\t\t\tvar cur = new Date().getTime();\n\t\t\tvar t = this.doColor(cur);\n\n\t\t\tif (t) {\n\t\t\t\tthis.anim_req = true;\n\t\t\t\tthis.time += interval;\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis.animFrame(this.time);\n\t\t\t\t}.bind(this), interval);\n\t\t\t} else this.anim_req = false;\n\t\t\t//if(this.pick_resolve.length) this.doPick()\n\t\t}.bind(this);\n\n\t\tif (previous) {\n\t\t\tthis.canvas = previous.canvas;\n\t\t\tthis.gl = previous.gl;\n\t\t\tthis.keyboard = previous.keyboard;\n\t\t\tthis.pointer = previous.pointer;\n\t\t\tthis.parent = previous.parent;\n\t\t\tthis.drawtarget_pools = previous.drawtarget_pools;\n\t\t\tthis.frame = this.main_frame = previous.main_frame;\n\t\t} else {\n\t\t\tthis.frame = this.main_frame = this.Texture.fromType('rgb_depth');\n\t\t\tthis.keyboard = new this.Keyboard(this);\n\t\t\tthis.pointer = new this.Pointer(this);\n\t\t\tthis.drawtarget_pools = {};\n\n\t\t\tthis.createContext();\n\t\t\tthis.createWakeupWatcher();\n\t\t}\n\n\t\tthis.initResize();\n\n\t\t//TODO Force an update\n\t\t//this.doColor(0);\n\t};\n\n\tthis.createWakeupWatcher = function () {\n\t\tvar last = Date.now();\n\t\tsetInterval(function () {\n\t\t\tvar now = Date.now();\n\t\t\tif (now - last > 1000 && this.screen) {\n\t\t\t\t//this.doresize()\n\t\t\t\tthis.redraw();\n\t\t\t\tthis.screen.emit('wakeup');\n\t\t\t}\n\t\t\tlast = now;\n\t\t}.bind(this), 200);\n\t};\n\n\tthis.createContext = function () {\n\t\tconsole.log('devicedali.createContext NOT implemented');\n\t};\n\n\tthis.initResize = function () {\n\t\t// Get size of stage\n\t\tvar size = this.DaliApi.dali.stage.getSize();\n\t\tvar dpi = this.DaliApi.dali.stage.getDpi();\n\n\t\tthis.width = size.x;\n\t\tthis.height = size.y;\n\t\tthis.ratio = dpi.x / dpi.y;\n\n\t\t//console.log('initResize size ', size, dpi);\n\n\t\t//HACK to emulate gl (to avoid javascript errors)\n\t\tthis.gl = gl;\n\n\t\t//TODO Use real values\n\t\tthis.main_frame = { ratio: this.ratio, size: vec2(this.width, this.height) };\n\t\tthis.size = vec2(this.width, this.height);\n\t};\n\n\tthis.clear = function (r, g, b, a) {\n\t\tif (arguments.length === 1) {\n\t\t\ta = r.length === 4 ? r[3] : 1, b = r[2], g = r[1], r = r[0];\n\t\t}\n\t\tif (arguments.length === 3) a = 1;\n\n\t\tDaliApi.setBackgroundColor([r, g, b, a]);\n\n\t\tthis.gl.clearColor(r, g, b, a);\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\t};\n\n\tthis.getExtension = function (name) {\n\t\tvar ext = this.extensions[name];\n\t\tif (ext) return ext;\n\t\treturn this.extensions[name] = this.gl.getExtension(name);\n\t};\n\n\tthis.redraw = function () {\n\t\tif (this.anim_req) return;\n\t\tthis.anim_req = true;\n\n\t\t//TODO\n\t\tthis.time = 0;\n\t\tsetTimeout(function () {\n\t\t\tthis.animFrame(this.time);\n\t\t}.bind(this), 0);\n\t};\n\n\tthis.bindFramebuffer = function (frame) {\n\t\tif (!frame) frame = this.main_frame;\n\n\t\tthis.frame = frame;\n\t\tthis.size = vec2(frame.size[0] / frame.ratio, frame.size[1] / frame.ratio);\n\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frame.glframe_buf || null);\n\t\tthis.gl.viewport(0, 0, frame.size[0], frame.size[1]);\n\n\t\t// Set the layer to use (root layer if frame.dali_layer doesn't exist)\n\t\t//TODO When layers are used, use framebuffers to render them.\n\t\t//this.DaliApi.setLayer(frame.dali_layer);\n\t};\n\n\tthis.readPixels = function (x, y, w, h) {\n\t\tvar buf = new Uint8Array(w * h * 4);\n\t\tthis.gl.readPixels(x, y, w, h, this.gl.RGBA, this.gl.UNSIGNED_BYTE, buf);\n\t\treturn buf;\n\t};\n\n\tthis.doPick = function () {\n\t\tthis.pick_timer = 0;\n\t\tvar x = this.pick_x,\n\t\t    y = this.pick_y;\n\n\t\tif (!this.first_draw_done) {\n\t\t\tthis.doColor(this.last_time);\n\t\t}\n\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\t\t\tvar last = i === len - 1;\n\t\t\tvar skip = false;\n\t\t\tvar view = this.drawpass_list[i];\n\n\t\t\t// little hack to dont use rtt if you only use a single view\n\t\t\tif (view.parent == this.screen && view.flex == 1 && this.screen.children.length === 1) {\n\t\t\t\tskip = last = true;\n\t\t\t}\n\t\t\t// lets set up glscissor on last\n\t\t\t// and then read the goddamn pixel\n\t\t\tif (last || view.draw_dirty & 2) {\n\t\t\t\tview.draw_dirty &= 1;\n\t\t\t\tview.drawpass.drawPick(last, i + 1, x, y, this.debug_pick);\n\t\t\t}\n\t\t\tif (skip) {\n\t\t\t\tthis.screen.draw_dirty &= 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// now lets read the pixel under the pointer\n\t\tvar pick_resolve = this.pick_resolve;\n\t\tthis.pick_resolve = [];\n\n\t\tif (this.debug_pick) {\n\t\t\tvar data = this.readPixels(x * this.ratio, this.main_frame.size[1] - y * this.ratio, 1, 1);\n\t\t} else {\n\t\t\tvar data = this.readPixels(0, 0, 1, 1);\n\t\t}\n\n\t\t// decode the pass and drawid\n\t\tvar passid = data[0]; //(data[0]*43)%256\n\t\tvar drawid = data[2] << 8 | data[1]; //*60777)%65536\n\t\t// lets find the view.\n\t\tvar passview = this.drawpass_list[passid];\n\t\tvar drawpass = passview && passview.drawpass;\n\t\tvar view = drawpass && drawpass.draw_list[drawid];\n\n\t\twhile (view && view.nopick) {\n\t\t\tview = view.parent;\n\t\t}\n\n\t\tfor (var i = 0; i < pick_resolve.length; i++) {\n\t\t\tpick_resolve[i](view);\n\t\t}\n\t};\n\n\tthis.pickScreen = function (x, y) {\n\t\t// promise based pickray rendering\n\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\tthis.pick_resolve.push(resolve);\n\t\t\tthis.pick_x = x;\n\t\t\tthis.pick_y = y;\n\t\t\tif (!this.pick_timer) {\n\t\t\t\tthis.pick_timer = setTimeout(this.doPick, 0);\n\t\t\t}\n\t\t\t//this.doPick()\n\t\t}.bind(this));\n\t};\n\n\tthis.doColor = function (time) {\n\t\tif (!this.first_time) this.first_time = time;\n\t\tthis.last_time = time;\n\n\t\tif (!this.screen) return;\n\n\t\tthis.first_draw_done = true;\n\n\t\tvar stime = (time - this.first_time) / 1000;\n\t\t//console.log(this.last_time - stime)\n\n\t\t// lets layout shit that needs layouting.\n\t\tvar anim_redraw = this.anim_redraws;\n\t\tanim_redraw.length = 0;\n\t\tthis.screen.doAnimation(stime, anim_redraw);\n\n\t\tthis.screen._maxsize = this.screen._size = vec2(this.main_frame.size[0] / this.ratio, this.main_frame.size[1] / this.ratio);\n\n\t\t// do all the animate hooks\n\t\tvar animate_hooks = this.animate_hooks;\n\t\tfor (var i = 0; i < animate_hooks.length; i++) {\n\t\t\tvar item = animate_hooks[i];\n\t\t\t//console.log(item)\n\t\t\tif (item.atAnimate(stime)) {\n\t\t\t\tanim_redraw.push(item);\n\t\t\t}\n\t\t}\n\n\t\t// do the dirty layouts\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.layout_dirty) {\n\t\t\t\tview.doLayout();\n\t\t\t\tview.layout_dirty = false;\n\t\t\t}\n\t\t}\n\n\t\t// do the dirty matrix regen\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.matrix_dirty) {\n\t\t\t\tview.updateMatrices(view.parent ? view.parent.totalmatrix : undefined, view._viewport);\n\t\t\t}\n\t\t}\n\n\t\tvar hastime = false;\n\t\tvar clipview = undefined;\n\t\t// lets draw draw all dirty passes.\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\n\t\t\tvar view = this.drawpass_list[i];\n\t\t\t//var skip = false\n\t\t\tvar last = i === len - 1;\n\t\t\t//if(view.parent == this.screen && view.flex == 1 && this.screen.children.length ===1){\n\t\t\t//\tskip = last = true\n\t\t\t//}\n\n\t\t\tif (view.draw_dirty & 1 || last) {\n\n\t\t\t\tif (!last) {\n\t\t\t\t\tif (clipview === undefined) clipview = view;else clipview = null;\n\t\t\t\t}\n\n\t\t\t\thastime = view.drawpass.drawColor(last, stime, clipview);\n\n\t\t\t\tview.draw_dirty &= 2;\n\t\t\t\tif (hastime) {\n\t\t\t\t\tanim_redraw.push(view);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if(skip){\n\t\t\t//\tthis.screen.drawpass.calculateDrawMatrices(false, this.screen.drawpass.colormatrices);\n\t\t\t//\tthis.screen.draw_dirty &= 2\n\t\t\t//\tbreak\n\t\t\t//}\n\t\t}\n\n\t\tif (anim_redraw.length) {\n\t\t\t//console.log(\"REDRAWIN\", anim_redraw)\n\t\t\tvar redraw = false;\n\t\t\tfor (var i = 0; i < anim_redraw.length; i++) {\n\t\t\t\tvar aredraw = anim_redraw[i];\n\t\t\t\tif (!aredraw.atAfterDraw || aredraw.atAfterDraw()) {\n\t\t\t\t\tredraw = true;\n\t\t\t\t\taredraw.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn redraw;\n\t\t}\n\t\treturn hastime;\n\t};\n\n\tthis.atNewlyRendered = function (view) {\n\t\t// if view is not a layer we have to find the layer, and regenerate that whole layer.\n\t\tif (!view.parent) this.screen = view; // its the screen\n\t\t// alright lets do this.\n\t\tvar node = view;\n\t\twhile (!node._viewport) {\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (!node.parent) {\n\t\t\t// fast path to chuck the whole set\n\t\t\t//console.log(\"FLUSHING ALL\")\n\t\t\t// lets put all the drawpasses in a pool for reuse\n\t\t\tfor (var i = 0; i < this.drawpass_list.length; i++) {\n\t\t\t\tvar draw = this.drawpass_list[i];\n\t\t\t\tdraw.drawpass.poolDrawTargets();\n\t\t\t\tdraw.layout_dirty = true;\n\t\t\t\tdraw.draw_dirth = 3;\n\t\t\t}\n\t\t\tthis.drawpass_list = [];\n\t\t\tthis.layout_list = [];\n\t\t\tthis.drawpass_idx = 0;\n\t\t\tthis.layout_idx_first = 0;\n\t\t\tthis.layout_idx = 0;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t\tthis.first_draw_done = false;\n\t\t\tthis.redraw();\n\t\t} else {\n\t\t\t// else we remove drawpasses first then re-add them\n\t\t\tthis.removeDrawPasses(node);\n\t\t\tthis.layout_idx_first = this.layout_idx;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t}\n\t\tnode.relayout();\n\t};\n\n\t// internal, remove drawpasses related to a view\n\tthis.removeDrawPasses = function (view) {\n\t\t// we have to remove all the nodes which have view as their parent layer\n\t\tvar drawpass_list = this.drawpass_list;\n\t\tthis.drawpass_idx = Infinity;\n\t\tfor (var i = 0; i < drawpass_list.length; i++) {\n\t\t\tvar node = drawpass_list[i];\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.drawpass_idx) this.drawpass_idx = i;\n\t\t\t\tnode.drawpass.poolDrawTargets();\n\t\t\t\tdrawpass_list.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.drawpass_idx === Infinity) this.drawpass_idx = 0;\n\t\t// now remove all layouts too\n\t\tthis.layout_idx = Infinity;\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tvar pass = layout_list[i];\n\t\t\tvar node = pass;\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.layout_idx) this.layout_idx = i;\n\t\t\t\tlayout_list.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif (this.layout_idx === Infinity) this.layout_idx = 0;\n\t};\n\n\t// internal, add drawpasses and layouts recursively from a view\n\tthis.addDrawPassRecursive = function (view) {\n\t\t// lets first walk our children( depth first)\n\t\tvar children = view.children;\n\t\tif (children) for (var i = 0; i < children.length; i++) {\n\t\t\tthis.addDrawPassRecursive(children[i]);\n\t\t}\n\n\t\t// lets create a drawpass\n\t\tif (view._viewport) {\n\t\t\tvar pass = new this.DrawPass(this, view);\n\t\t\tthis.drawpass_list.splice(this.drawpass_idx, 0, view);\n\t\t\tthis.drawpass_idx++;\n\t\t\t// lets also add a layout pass\n\t\t\tif (isNaN(view._flex)) {\n\t\t\t\t// if not flex, make sure layout runs before the rest\n\t\t\t\t// we are self contained\n\t\t\t\tthis.layout_list.splice(this.layout_idx_first, 0, view);\n\t\t\t} else {\n\t\t\t\t// we are flex, make sure we layout after\n\t\t\t\tthis.layout_list.splice(this.layout_idx, 0, view);\n\t\t\t}\n\t\t\t//this.layout_idx++\n\t\t}\n\t};\n\n\tthis.relayout = function () {\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tview = layout_list[i];\n\t\t\tif (!isNaN(view._flex) || view == this.screen) {\n\t\t\t\tview.relayout();\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.atResize = function () {\n\t\t// lets relayout the whole fucker\n\t\tthis.relayout();\n\t\tthis.redraw();\n\t\t// do stuff\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/devicedali.js\n// module id = 154\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/devicedali.js?");

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, baseclass) {\n\t// internal, drawing\n\tvar Shader = requireDreem('./shaderdali');\n\n\t/**\n  * @method DrawPass constructor\n  * @param {Object} gldevice Instance of DeviceDali\n  * @param {Object} view Instance of View\n  */\n\tthis.atConstructor = function (gldevice, view) {\n\t\tthis.device = gldevice;\n\t\tthis.view = view;\n\t\tview.drawpass = this;\n\t\t// lets do the flatten\n\t\tthis.pickmatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\n\t\tthis.colormatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\n\t\tthis.debugrect = new DebugRect();\n\t};\n\n\tthis.atDestroy = function () {\n\t\tthis.releaseTexture();\n\t};\n\n\tthis.poolDrawTargets = function () {\n\t\tvar pools = this.device.drawtarget_pools;\n\t\tif (!this.drawtargets) return;\n\t\tfor (var i = 0; i < this.drawtargets.length; i++) {\n\t\t\tvar dt = this.drawtargets[i];\n\t\t\tif (!pools[dt]) pools[dt] = [];\n\t\t\tpools[dt].push(this[dt]);\n\t\t\tthis[dt] = null;\n\t\t}\n\t};\n\n\tthis.allocDrawTarget = function (width, height, view, drawtarget, passid) {\n\t\t//console.log('allocDrawTarget', width, height, drawtarget, passid);\n\t\twidth = floor(width);\n\t\theight = floor(height);\n\t\tvar Texture = this.device.Texture;\n\t\tif (!this.drawtargets) this.drawtargets = [];\n\t\tif (this.drawtargets.indexOf(drawtarget) === -1) this.drawtargets.push(drawtarget);\n\t\tvar dt = this[drawtarget];\n\t\t//var twidth = this.nextPowerTwo(layout.width* main_ratio), theight = this.nextPowerTwo(layout.height* main_ratio)\n\t\tif (!dt) {\n\t\t\t// lets scan the pools for a suitable drawtarget, otherwise create it\n\t\t\tvar pool = this.device.drawtarget_pools[drawtarget];\n\t\t\tif (pool && pool.length) {\n\t\t\t\t// first find a drawtarget with the same size\n\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\tvar size = tgt.size;\n\t\t\t\t\tif (size[0] === width && size[1] === height) {\n\t\t\t\t\t\t// lets remove it from the pool\n\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// then we find a drawtarget with the same passid as last time\n\t\t\t\tif (!dt) {\n\t\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\t\tif (passid === tgt.passid) {\n\t\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// otherwise we create a new one\n\t\t\tif (!dt) {\n\t\t\t\tdt = this[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : Texture.RGBA | Texture.DEPTH | Texture.STENCIL, width, height, this.device);\n\t\t\t} else this[drawtarget] = dt;\n\t\t\tdt.passid = passid;\n\t\t}\n\t\t// make sure the drawtarget has the right size\n\t\tvar tsize = this[drawtarget].size;\n\t\tif (width !== tsize[0] || height !== tsize[1]) {\n\t\t\tthis[drawtarget].delete();\n\t\t\tthis[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : Texture.RGBA | Texture.DEPTH | Texture.STENCIL, width, height, this.device);\n\t\t}\n\t};\n\n\tthis.calculateDrawMatrices = function (isroot, storage, pointerx, pointery) {\n\t\tvar view = this.view;\n\t\tvar scroll = view._scroll;\n\t\tvar layout = view._layout;\n\n\t\tif (view._viewport === '2d') {\n\t\t\tif (isroot && pointerx !== undefined) {\n\t\t\t\tvar sizel = 0;\n\t\t\t\tvar sizer = 1;\n\t\t\t\tmat4.ortho(scroll[0] + pointerx - sizel, scroll[0] + pointerx + sizer, scroll[1] + pointery - sizer, scroll[1] + pointery + sizel, -100, 100, storage.viewmatrix);\n\t\t\t\tmat4.ortho(pointerx - sizel, pointerx + sizer, pointery - sizer, pointery + sizel, -100, 100, storage.noscrollmatrix);\n\t\t\t} else {\n\t\t\t\tvar zoom = view._zoom;\n\t\t\t\tif (isroot) {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], scroll[1], layout.height * zoom + scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, 0, layout.height, -100, 100, storage.noscrollmatrix);\n\t\t\t\t} else {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], layout.height * zoom + scroll[1], scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, layout.height, 0, -100, 100, storage.noscrollmatrix);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (view._viewport === '3d') {\n\t\t\tstorage.perspectivematrix = mat4.perspective(view._fov * PI * 2 / 360.0, layout.width / layout.height, view._nearplane, view._farplane);\n\t\t\tstorage.lookatmatrix = mat4.lookAt(view._camera, view._lookat, view._up);\n\t\t\tstorage.viewmatrix = mat4.mat4_mul_mat4(storage.lookatmatrix, storage.perspectivematrix);\n\t\t}\n\t};\n\n\tfunction isInBounds2D(view, draw) {\n\t\tif (draw.noboundscheck) return true;\n\t\tvar height = view._layout.height;\n\t\tvar width = view._layout.width;\n\t\tvar drawlayout = draw._layout;\n\n\t\tif (draw.parent && draw.parent !== view) {\n\t\t\tdrawlayout.absx = draw.parent._layout.absx + drawlayout.left;\n\t\t\tdrawlayout.absy = draw.parent._layout.absy + drawlayout.top;\n\t\t} else {\n\t\t\tdrawlayout.absx = drawlayout.left;\n\t\t\tdrawlayout.absy = drawlayout.top;\n\t\t}\n\n\t\t// if(draw === view && view.sublayout){\n\t\t// \twidth = view.sublayout.width\n\t\t// \theight = view.sublayout.height\n\t\t// }\n\t\t// early out check\n\t\t// if(draw !== view && !draw.noscroll){\n\t\t// \tvar scroll = view._scroll\n\t\t// \tvar zoom = view._zoom\n\t\t// \tif( drawlayout.absy - scroll[1] > height * zoom || drawlayout.absy + drawlayout.height - scroll[1] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// \tif(drawlayout.absx - scroll[0] > width * zoom || drawlayout.absx + drawlayout.width - scroll[0] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// }\n\t\treturn true;\n\t}\n\n\tthis.nextItem = function (draw, nottype) {\n\t\tvar view = this.view;\n\t\tvar next = (draw === view || !draw._viewport && draw._visible && draw._drawtarget !== nottype) && draw.children[0],\n\t\t    next_index = 0;\n\t\twhile (!next) {\n\t\t\t// skip to parent next\n\t\t\tif (draw === view) break;\n\t\t\tnext_index = draw.draw_index + 1;\n\t\t\tdraw = draw.parent;\n\t\t\tnext = draw.children[next_index];\n\t\t}\n\t\tif (next === view) return undefined;\n\t\tif (next) next.draw_index = next_index;\n\t\treturn next;\n\t};\n\n\tthis.drawPick = function (isroot, passid, pointerx, pointery, debug) {\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\tif (isroot) {\n\t\t\tif (!debug) this.allocDrawTarget(1, 1, this.view, 'pick_buffer', passid);\n\t\t} else {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tratio = 1;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'pick_buffer', passid);\n\t\t}\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t\tdevice.bindFramebuffer(this.pick_buffer || null);\n\t\tdevice.clear(0, 0, 0, 0);\n\n\t\tvar matrices = this.pickmatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices, debug ? undefined : pointerx, pointery);\n\t\t// calculate the colormatrices too\n\t\t//if(!this.colormatrices.initialized){\n\t\t//\tthis.calculateDrawMatrices(isroot, this.colormatrices)\n\t\t//}\n\n\t\tvar pickguid = vec3();\n\t\tpickguid[0] = passid / 255; //(((passid)*131)%256)/255\n\n\n\t\t// modulo inverse: http://www.wolframalpha.com/input/?i=multiplicative+inverse+of+31+mod+256\n\t\tvar pick_id = 0;\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 1;\n\n\t\t\tpick_id += draw.pickrange;\n\t\t\tif (!draw._visible || draw._drawtarget === 'color' || draw._first_draw_pick && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_pick = 1;\n\n\t\t\t\tvar id = pick_id; //(pick_id*29401)%65536\n\t\t\t\tpickguid[1] = (id & 255) / 255;\n\t\t\t\tpickguid[2] = (id >> 8) / 255;\n\n\t\t\t\tdraw.pickguid = pickguid[0] * 255 << 16 | pickguid[1] * 255 << 8 | pickguid[2] * 255;\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (!draw._visible) continue;\n\t\t\t\tif (draw._viewport && draw.drawpass !== this && draw.drawpass.pick_buffer) {\n\t\t\t\t\t// ok so the pick pass needs the alpha from the color buffer\n\t\t\t\t\t// and then hard forward the color\n\t\t\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\t\t\tif (view._viewport === '3d') {\n\t\t\t\t\t\t// dont do this!\n\t\t\t\t\t\tif (shader.depth_test_eq.func === 0) shader.depth_test = 'src_depth <= dst_depth';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblendshader.depth_test = '';\n\t\t\t\t\t}\n\t\t\t\t\tblendshader.texture = draw.drawpass.pick_buffer;\n\t\t\t\t\tblendshader._width = draw.layout.width;\n\t\t\t\t\tblendshader._height = draw.layout.height;\n\t\t\t\t\tblendshader.drawArrays(this.device);\n\t\t\t\t} else {\n\t\t\t\t\t//draw.updateShaders()\n\t\t\t\t\t// alright lets iterate the shaders and call em\n\t\t\t\t\tvar shaders = draw.shader_draw_list;\n\t\t\t\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t\t\t\tvar shader = shaders[j];\n\n\t\t\t\t\t\tif (view._viewport === '3d') {\n\t\t\t\t\t\t\tif (shader.depth_test_eq.func == 0) shader.depth_test = 'src_depth <= dst_depth';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshader.pickguid = pickguid;\n\n\t\t\t\t\t\tif (!shader.visible) continue;\n\t\t\t\t\t\tif (draw.pickalpha !== undefined) shader.pickalpha = draw.pickalpha;\n\t\t\t\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\t\t\tshader.drawArrays(this.device, 'pick');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw, 'color');\n\t\t}\n\t};\n\n\tthis.getDrawID = function (id) {\n\t\tvar view = this.view;\n\t\tvar draw = view;\n\t\tvar pick_id = 0;\n\t\twhile (draw) {\n\n\t\t\tif (id > pick_id && id <= pick_id + draw.pickrange) {\n\t\t\t\tdraw.last_pick_id = pick_id + draw.pickrange - id;\n\t\t\t\treturn draw;\n\t\t\t}\n\n\t\t\tpick_id += draw.pickrange;\n\n\t\t\tdraw = this.nextItem(draw);\n\t\t}\n\t};\n\n\tthis.drawBlend = function (draw) {\n\t\tif (!draw.drawpass.color_buffer) {\n\t\t\tconsole.error(\"Null color_buffer detected, did you forget sizing/flex:1 on your 3D viewport?\", draw);\n\t\t} else {\n\t\t\t// ok so when we are drawing a pick pass, we just need to 1 on 1 forward the color data\n\t\t\t// lets render the view as a layer\n\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\tif (this.view._viewport === '3d') {\n\t\t\t\tblendshader.depth_test = 'src_depth <= dst_depth';\n\t\t\t} else {\n\t\t\t\tblendshader.depth_test = '';\n\t\t\t}\n\t\t\tblendshader.texture = draw.drawpass.color_buffer;\n\t\t\tblendshader.width = draw._layout.width;\n\t\t\tblendshader.height = draw._layout.height;\n\t\t\tblendshader.drawArrays(this.device);\n\t\t}\n\t};\n\n\tthis.drawNormal = function (draw, view, matrices) {\n\t\tdraw.updateShaders();\n\t\tvar vtx_count = 0;\n\t\t// alright lets iterate the shaders and call em\n\t\tvar shaders = draw.shader_draw_list;\n\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t// lets draw em\n\t\t\tvar shader = shaders[j];\n\t\t\tif (view._viewport === '3d') {\n\t\t\t\tif (shader.depth_test_eq.func === 0) shader.depth_test = 'src_depth < dst_depth';\n\t\t\t}\n\n\t\t\tif (shader.pickonly || !shader.visible) continue; // was pick only\n\t\t\tshader.view = draw;\n\t\t\tif (shader.atDraw) shader.atDraw(draw);\n\t\t\t// we have to set our guid.\n\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\tvtx_count += shader.drawArrays(this.device);\n\t\t}\n\t\treturn vtx_count;\n\t};\n\n\tthis.drawColor = function (isroot, time, clipview) {\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tvar dom_count = 0;\n\t\tvar vtx_count = 0;\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\t// lets see if we need to allocate our framebuffer..\n\t\tif (!isroot) {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'color_buffer');\n\t\t}\n\n\t\tthis.device.bindFramebuffer(this.color_buffer || null);\n\n\t\tif (layout.width === 0 || layout.height === 0) return false;\n\n\t\tvar hastime = false;\n\t\tvar zoom = view._zoom;\n\n\t\tvar matrices = this.colormatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices);\n\t\tview.colormatrices = matrices;\n\n\t\tgl.disable(gl.SCISSOR_TEST);\n\n\t\tif (isroot) {}\n\t\t/*\n  if(clipview){\n  \tvar ratio = this.device.frame.ratio\n  \tvar xs = this.device.frame.size[0] / ratio\n  \tvar ys = this.device.frame.size[1] / ratio\n  \tvar clayout = clipview._layout\n  \tvar c1 = vec2.mul_mat4(vec2(0, 0),clipview.viewportmatrix)\n  \tvar c2 = vec2.mul_mat4(vec2(clayout.width, clayout.height),clipview.viewportmatrix)\n  \tvar x1 = c1[0], y1 = c1[1], x2 = c2[0] - x1, y2 = c2[1] - y1\n  \tgl.enable(gl.SCISSOR_TEST)\n  \tgl.scissor((x1)*ratio, (ys - y2 - y1)*ratio, x2 * ratio, (y2)*ratio)//x1*2, y1*2, x2*2, y2*2)\n  }\n  */\n\n\t\t//console.log(matrices.viewmatrix)\n\t\tdevice.clear(view._clearcolor);\n\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 2;\n\n\t\t\t//}\n\t\t\t//for(var dl = this.draw_list, i = 0; i < dl.length; i++){\n\t\t\t//\tvar draw = dl[i]\n\t\t\tif (!draw._visible || draw._drawtarget === 'pick' || draw._first_draw_color && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_color = 1;\n\n\t\t\t\t//if(view.constructor.name === 'slideviewer')console.log('here',draw.constructor.name, draw.text)\n\t\t\t\tdraw._time = time;\n\n\t\t\t\tif (draw._listen_time || draw.ontime) hastime = true;\n\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (draw.atDraw && draw.atDraw(this)) hastime = true;\n\t\t\t\tif (draw._viewport && draw.drawpass !== this) {\n\t\t\t\t\tthis.drawBlend(draw);\n\t\t\t\t} else {\n\t\t\t\t\tvtx_count += this.drawNormal(draw, view, matrices);\n\t\t\t\t}\n\n\t\t\t\tif (draw.debug_view) {\n\t\t\t\t\tthis.debugrect.view = draw;\n\t\t\t\t\tthis.debugrect.drawArrays(this.device);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw, 'pick');\n\t\t}\n\t\treturn hastime;\n\t};\n\n\tvar DebugRect = defineDreem.class(Shader, function () {\n\t\tthis.view = { totalmatrix: mat4(), viewmatrix: mat4(), layout: { width: 0, height: 0 } };\n\n\t\tthis.mesh = vec2.array();\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\n\t\tthis.position = function () {\n\t\t\treturn vec4(vec2(mesh.x * view.layout.width, mesh.y * view.layout.height), 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\t\tthis.color = function () {\n\t\t\treturn vec4(1, 0, 0, 0.5);\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/drawpassdali.js\n// module id = 155\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/drawpassdali.js?");

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/keyboard', function (requireDreem, exports) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/keyboarddali.js\n// module id = 156\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/keyboarddali.js?");

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Pointerwebgl adds mouse and touch listeners and connectes them pointer.js API.\n\ndefineDreem.class('$system/base/pointer', function (require, exports) {\n\n\tthis._cursor = 'arrow';\n\tthis._tooltip = 'Application';\n\n\t// Minimum non-zero wheel value\n\tvar wheelmin = vec2(1000, 1000);\n\n\tObject.defineProperty(this, 'cursor', {\n\t\tget: function get() {\n\t\t\treturn this._cursor;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._cursor = value;\n\t\t\tif (value === 'arrow') value = 'default';\n\t\t\tthis.device.keyboard.textarea.style.cursor = document.body.style.cursor = value;\n\t\t}\n\t});\n\n\tthis.atConstructor = function (device) {\n\n\t\tthis.device = device;\n\n\t\t// Internal: creates pointer array with a single pointer from mouse event data.\n\t\tvar mouseToPointers = function (event) {\n\n\t\t\t// Set wheel min non-zero value\n\t\t\twheelmin[0] = min(wheelmin[0], abs(event.deltaX || wheelmin[0]));\n\t\t\twheelmin[1] = min(wheelmin[1], abs(event.deltaY || wheelmin[1]));\n\n\t\t\treturn [{\n\t\t\t\tvalue: vec2(event.pageX, event.pageY),\n\t\t\t\tposition: vec2(event.pageX, event.pageY),\n\t\t\t\tbutton: event.button === 0 ? 1 : event.button === 1 ? 3 : 2,\n\t\t\t\tshift: event.shiftKey,\n\t\t\t\talt: event.altKey,\n\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\tmeta: event.metaKey,\n\t\t\t\twheel: vec2(event.deltaX / wheelmin[0], event.deltaY / wheelmin[1]),\n\t\t\t\ttouch: false\n\t\t\t}];\n\t\t}.bind(this);\n\n\t\t// Internal: creates pointer array from touch event.\n\t\tvar touchToPointers = function (event) {\n\t\t\tvar array = [];\n\t\t\tfor (var i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tarray.push({\n\t\t\t\t\tvalue: vec2(event.changedTouches[i].pageX, event.changedTouches[i].pageY),\n\t\t\t\t\tposition: vec2(event.changedTouches[i].pageX, event.changedTouches[i].pageY),\n\t\t\t\t\tbutton: 1,\n\t\t\t\t\tshift: event.shiftKey,\n\t\t\t\t\talt: event.altKey,\n\t\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\t\tmeta: event.metaKey,\n\t\t\t\t\ttouch: true\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn array;\n\t\t}.bind(this);\n\n\t\t// Internal: handler for `mousedown` event starts `mousemove` listening.\n\t\tthis.mousedown = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setstart(mouseToPointers(e));\n\t\t\t// window.addEventListener('mousemove', this._mousemove)\n\t\t\t// window.addEventListener('mouseup', this._mouseup)\n\t\t\t// window.addEventListener('contextmenu', this._mouseup)\n\t\t\t// window.removeEventListener('mousemove', this._mousehover)\n\t\t\t// window.removeEventListener('mousedown', this._mousedown)\n\t\t\t// Hack to capture mouse up outside iframe\n\t\t\t// if (parent.window) parent.window.addEventListener('mouseup', this._mouseup)\n\t\t\t// if (parent.window) parent.window.addEventListener('contextmenu', this._mouseup)\n\t\t};\n\t\t// window.addEventListener('mousedown', this.mousedown.bind(this))\n\n\t\t// Internal: handler for `mousemove` event.\n\t\tthis.mousemove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setmove(mouseToPointers(e));\n\t\t};\n\t\tthis._mousemove = this.mousemove.bind(this);\n\n\t\t// Internal: handler for `mousedown` event stops `mousemove` listening.\n\t\tthis.mouseup = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setend(mouseToPointers(e));\n\t\t\t// window.removeEventListener('mousemove', this._mousemove)\n\t\t\t// window.removeEventListener('mouseup', this._mouseup)\n\t\t\t// window.removeEventListener('contextmenu', this._mouseup)\n\t\t\t// window.addEventListener('mousemove', this._mousehover)\n\t\t\t// window.addEventListener('mousedown', this._mousedown)\n\t\t\t// Hack to capture mouse up outside iframe\n\t\t\t// if (parent.window) parent.window.removeEventListener('mouseup', this._mouseup)\n\t\t\t// if (parent.window) parent.window.removeEventListener('contextmenu', this._mouseup)\n\t\t};\n\t\tthis._mouseup = this.mouseup.bind(this);\n\n\t\t// Internal: handler for `mousemove` for the purpose of hover tracking.\n\t\tthis.mousehover = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.sethover(mouseToPointers(e));\n\t\t};\n\t\tthis._mousehover = this.mousehover.bind(this);\n\t\t// window.addEventListener('mousemove', this._mousehover)\n\n\t\t// Internal: handler for `touchstart` event.\n\t\tthis.touchstart = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setstart(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchstart', this.touchstart.bind(this))\n\n\t\t// Internal: handler for `touchmove` event.\n\t\tthis.touchmove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setmove(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchmove', this.touchmove.bind(this))\n\n\t\t// Internal: handler for `touchend` event.\n\t\tthis.touchend = function (e) {\n\t\t\tthis.setend(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchend', this.touchend.bind(this))\n\t\t// window.addEventListener('touchcancel', this.touchend.bind(this))\n\t\t// window.addEventListener('touchleave', this.touchend.bind(this))\n\n\t\t// Internal: handler for `wheel` event. Sets the wheel or zoom attribute/event.\n\t\tthis.wheelmove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setwheel(mouseToPointers(e));\n\t\t};\n\t\t// document.addEventListener('wheel', this.wheelmove.bind(this))\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/pointerdali.js\n// module id = 157\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/pointerdali.js?");

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/shader', function (requireDreem, exports) {\n\n\tvar gltypes = requireDreem('$system/base/gltypes');\n\n\texports.Texture = this.Texture = requireDreem('./texturedali');\n\n\tutil = requireDreem('util');\n\n\t// DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\t// DaliDreemgl is the interface between dreemgl and dali.\n\tDaliShader = requireDreem('./dali_shader');\n\tDaliActor = requireDreem('./dali_actor');\n\n\t/**\n  * @method compileShader\n  * Compiles the shader, or use the cached version.\n  * Construct a mesh actor if necessary and attach to the view\n  * The 'this' pointer is an object like border or hardrect\n  * @param {Object} gldevice Instance of DeviceDali\n  * @return {Object} shader Object containing compiled shader information.\n  *                  In webgl this is an object returned by gl.createProgram\n  *                  In dali, this is a hash containing a dali_shader object\n  */\n\tthis.compileShader = function (gldevice) {\n\t\t//console.log('*#*#*#*# compileShader', this.view ? this.view.id : '<SCREEN>');\n\t\tvar vtx_state = this.vtx_state;\n\t\tvar pix_state = this.pix_state;\n\t\tvar vtx_code = vtx_state.code;\n\n\t\t//console.log('vtx_code', vtx_code);\n\t\t//console.log('pix_code', pix_state.code_color);\n\t\t//console.log('====== vtx_state call', vtx_state.call);\n\n\t\tvar pix_color = pix_state.code_color;\n\t\tvar pix_pick = pix_state.code_pick;\n\t\tvar pix_debug = pix_state.code_debug;\n\n\t\tvar gl = gldevice.gl;\n\t\tvar cache_id = vtx_code + pix_color + this.has_pick;\n\n\t\t// Get the DaliShader object from a cache, or build one\n\t\tshader = gldevice.shadercache[cache_id];\n\t\t//if(shader) return this.dalishader\n\n\t\tif (!shader) {\n\t\t\t// shader is a hash of compiled information and dali objects\n\t\t\tshader = {\n\t\t\t\tobject_type: '(compiled_shader_data)',\n\n\t\t\t\tdebug: {},\n\t\t\t\tpick: {},\n\n\t\t\t\tuniset: {},\n\t\t\t\tunilocks: {},\n\t\t\t\trefattr: {},\n\n\t\t\t\ttexlocs: {}\n\t\t\t};\n\n\t\t\t// Build a DaliShader object and attach to shader\n\t\t\tvar shadercode = vtx_state.code;\n\t\t\tvar fragcode = pix_state.code_color;\n\t\t\tshader.dalishader = new DaliShader(shadercode, fragcode);\n\n\t\t\t//DEV\n\t\t\t// Compile the dali objects\n\t\t\t//shader.compileShader(this, dalishader);\n\n\t\t\t//Not used by Dali\n\t\t\t//\t\tvar vtx_shader = gl.createShader(gl.VERTEX_SHADER)\n\t\t\t//\t\tgl.shaderSource(vtx_shader, vtx_code)\n\t\t\t//\t\tgl.compileShader(vtx_shader)\n\t\t\t//\t\tif (!gl.getShaderParameter(vtx_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\tvar err = gl.getShaderInfoLog(vtx_shader)\n\t\t\t//\t\t\tconsole.error(err.toString(), this.annotateLines(vtx_code))\n\t\t\t//\t\t\treturn\n\t\t\t//\t\t\t//throw new Error(err)\n\t\t\t//\t\t}\n\t\t\t//\t\t\n\t\t\t//\t\t// compile the shader\n\t\t\t//\t\tvar pix_color_shader = gl.createShader(gl.FRAGMENT_SHADER)\n\t\t\t//\t\tgl.shaderSource(pix_color_shader, pix_color)\n\t\t\t//\t\tgl.compileShader(pix_color_shader)\n\t\t\t//\t\tif (!gl.getShaderParameter(pix_color_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\tvar err = gl.getShaderInfoLog(pix_color_shader)\n\t\t\t//\n\t\t\t//\t\t\tconsole.error(err.toString(), this.annotateLines(pix_color))\n\t\t\t//\t\t\treturn\n\t\t\t//\t\t\t//throw new Error(err)\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\t//\t\tshader = gldevice.shadercache[cache_id] = gl.createProgram()\n\t\t\t//\t\tgl.attachShader(shader, vtx_shader)\n\t\t\t//\t\tgl.attachShader(shader, pix_color_shader)\n\t\t\t//\t\tgl.linkProgram(shader)\n\n\t\t\t// Build information on uniforms, textures, and attributes\n\t\t\tthis.getLocations(gl, shader, vtx_state, pix_state);\n\n\t\t\t//console.log('*** COMPILED ***');\n\t\t\t//console.log('unilocks', shader.unilocks);\n\t\t\t//console.log('uniset', shader.uniset);\n\t\t\t//console.log('refattr', shader.refattr);\n\t\t\t//console.log('texlocs', shader.texlocs);\n\n\t\t\t//TODO. Remove?\n\t\t\tthis.compile_use = true;\n\n\t\t\tif (this.compile_use) this.compileUse(shader);\n\t\t\tgldevice.shadercache[cache_id] = shader;\n\n\t\t\t//Not supported by Dali (Yet)\n\t\t\t//\t\tif(pix_debug){\n\t\t\t//\t\t\t// compile the pick shader\n\t\t\t//\t\t\tvar pix_debug_shader = gl.createShader(gl.FRAGMENT_SHADER)\n\t\t\t//\t\t\tgl.shaderSource(pix_debug_shader, pix_debug)\n\t\t\t//\t\t\tgl.compileShader(pix_debug_shader)\n\t\t\t//\t\t\tif (!gl.getShaderParameter(pix_debug_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\t\tvar err = gl.getShaderInfoLog(pix_debug_shader)\n\t\t\t//\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix_debug))\n\t\t\t//\t\t\t\tthrow new Error(err)\n\t\t\t//\t\t\t}\n\t\t\t//\n\t\t\t//\t\t\tshader.debug = gl.createProgram()\n\t\t\t//\t\t\tgl.attachShader(shader.debug, vtx_shader)\n\t\t\t//\t\t\tgl.attachShader(shader.debug, pix_debug_shader)\n\t\t\t//\t\t\tgl.linkProgram(shader.debug)\n\t\t\t//\t\t\t// add our pick uniform\n\t\t\t//\t\t\tthis.getLocations(gl, shader.debug, vtx_state, pix_state)\n\t\t\t//\t\t\tif(this.compile_use) this.compileUse(shader.debug)\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\t//\t\tif(this.has_pick){\n\t\t\t//\t\t\t// compile the pick shader\n\t\t\t//\t\t\tvar pix_pick_shader = gl.createShader(gl.FRAGMENT_SHADER)\n\t\t\t//\t\t\tgl.shaderSource(pix_pick_shader, pix_pick)\n\t\t\t//\t\t\tgl.compileShader(pix_pick_shader)\n\t\t\t//\t\t\tif (!gl.getShaderParameter(pix_pick_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\t\tvar err = gl.getShaderInfoLog(pix_pick_shader)\n\t\t\t//\n\t\t\t//\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix))\n\t\t\t//\t\t\t\tthrow new Error(err)\n\t\t\t//\t\t\t}\n\t\t\t//\n\t\t\t//\t\t\tshader.pick = gl.createProgram()\n\t\t\t//\t\t\tgl.attachShader(shader.pick, vtx_shader)\n\t\t\t//\t\t\tgl.attachShader(shader.pick, pix_pick_shader)\n\t\t\t//\t\t\tgl.linkProgram(shader.pick)\n\t\t\t//\t\t\t// add our pick uniform\n\t\t\t//\t\t\tpix_state.uniforms['pickguid'] = vec3\n\t\t\t//\n\t\t\t//\t\t\tthis.getLocations(gl, shader.pick, vtx_state, pix_state)\n\t\t\t//\n\t\t\t//\t\t\tif(this.compile_use) this.compileUse(shader.pick)\n\t\t\t//\t\t}\n\t\t} // if (!this.dalishader) {\n\n\n\t\t// Build missing dali objects (if they don't exist)\n\t\t//console.log('shader', shader.object_type, shader);\n\n\t\t//console.trace('CALLING createDaliObjects');\n\t\tDaliApi.createDaliObjects(shader, this); //  shader);\n\n\t\t//console.log('shader has', Object.keys(shader));\n\n\t\t//DaliApi.createDaliActor(this, shader);\n\n\n\t\t//console.log('---- ---- ---- ADDING TEXTURE INFO');\n\t\t//shader.addAttributeGeometry(this, shader.attrlocs);\n\n\t\treturn shader;\n\t};\n\n\tthis.useShader = function (gl, shader) {\n\t\tif (shader.use) return shader.use(gl, shader, this);\n\n\t\tconsole.log('***************************************************************************************************OLD CODE RUNNING');\n\t};\n\n\tthis.compile_use = true;\n\n\t// Override from shader.js (DALI)\n\tthis.mapUniforms = function (gl, shader, uniforms, uniset, unilocs) {\n\t\t// dali uses registerAnimatableProperty to set a uniform\n\t\tfor (var key in uniforms) {\n\t\t\tif (!uniset[key]) {\n\t\t\t\tvar type = gltypes.getType(uniforms[key]);\n\t\t\t\t//uniset[key] = gltypes.uniforms[type]\n\t\t\t\tuniset[key] = gltypes.uniforms[type];\n\t\t\t\tvar loc = unilocs[key] = {\n\t\t\t\t\ttype: type,\n\t\t\t\t\tloc: key // Store the name, not the location\n\t\t\t\t};\n\t\t\t\tif (key.indexOf('_DOT_') !== -1) loc.split = key.split(/_DOT_/);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.mapTextures = function (gl, shader, textures, texlocs) {\n\t\tfor (var key in textures) {\n\t\t\tvar tex = textures[key];\n\t\t\tvar loc = texlocs[key] = {\n\t\t\t\tloc: key, // Store the name, not the location\n\t\t\t\tsamplerdef: tex.samplerdef,\n\t\t\t\tsamplerid: tex.samplerid,\n\t\t\t\tname: tex.name\n\t\t\t};\n\t\t\tif (tex.name.indexOf('_DOT_') !== -1) loc.split = tex.name.split(/_DOT_/);\n\t\t}\n\t};\n\n\t// Template for generated code\n\t//   {object} gl stubbed out gl object\n\t//   {object} shader compiled shader object, containing dalishader\n\t//                   and daligeometry. (see compileShader in this file)\n\t//   {object} root display object (ex. border, hardrect), containing\n\t//                        dalimaterial, dalirenderer, daliactor.\n\tthis.useShaderTemplate = function (gl, shader, root) {\n\n\t\t// Create dali objects when first used\n\t\tif (root && !root.daliactor) {\n\t\t\tDaliApi.createDaliActor(root, shader);\n\t\t}\n\n\t\t//console.log('useShader', root.view ? root.view.id : 'screen', 'shader', shader.object_type, 'root', root.object_type)\n\n\t\t// use the shader\n\t\tgl.useProgram(shader);\n\t\tvar dali = DaliApi.dali;\n\t\tvar daliactor = root ? root.daliactor : undefined;\n\t\tvar dalimaterial = root ? root.dalimaterial : undefined;\n\t\tvar daligeometry = root.daligeometry;\n\n\t\t//console.log('daliactor', daliactor.id, 'shader', shader.dalishader.id, 'geometry', daligeometry.id);\n\n\t\t// set uniforms\n\t\t//shader.addUniforms(shader.dreem_shader);\n\t\tSET_UNIFORMS;\n\n\t\t// textures\n\t\tTEXTURE_START;\n\t\tvar texture = TEXTURE_VALUE;\n\t\t// lets fetch the sampler\n\t\tvar gltex = texture.TEXTURE_SAMPLER;\n\t\t// lets do the texture slots correct\n\t\tif (!gltex) {\n\t\t\tif (!texture.createGLTexture) texture = TEXTURE_VALUE = root.Texture.fromStub(texture);\n\t\t\tgltex = texture.createGLTexture(gl, TEXTURE_ID, TEXTURE_INFO);\n\t\t\tif (texture.image) {\n\t\t\t\tvar ti = TEXTURE_INFO;\n\n\t\t\t\t//TODO Get current values for sampler\n\t\t\t\tvar sampler = new dali.Sampler();\n\t\t\t\tsampler.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);\n\t\t\t\tsampler.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);\n\n\t\t\t\tif (DaliApi.emitcode) {\n\t\t\t\t\tconsole.log('DALICODE: var sampler' + dalimaterial.id + ' = new dali.Sampler();');\n\t\t\t\t\tconsole.log('DALICODE: sampler' + dalimaterial.id + '.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);');\n\t\t\t\t\tconsole.log('DALICODE: sampler' + dalimaterial.id + '.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);');\n\t\t\t\t}\n\n\t\t\t\t//FIX\n\t\t\t\tif (dalimaterial) {\n\t\t\t\t\tvar index = dalimaterial.addTexture(texture, ti.loc, sampler);\n\t\t\t\t\tgltex.texture_index = index;\n\t\t\t\t\t//console.log('**** **** **** dali.addTexture', ti.loc, texture.image.getWidth(), texture.image.getHeight(), 'return index', index);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gltex) return 0;\n\t\t} else {\n\t\t\tgl.activeTexture(TEXTUREGL_ID); // gl.TEXTURE0 + TEXTURE_ID\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\n\t\t\tif (texture.image) {\n\t\t\t\tvar sampler = new dali.Sampler();\n\t\t\t\tsampler.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);\n\t\t\t\tsampler.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);\n\t\t\t\tif (DaliApi.emitcode) {\n\t\t\t\t\tconsole.log('DALICODE: var sampler' + dalimaterial.id + ' = new dali.Sampler();');\n\t\t\t\t\tconsole.log('DALICODE: sampler' + dalimaterial.id + '.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);');\n\t\t\t\t\tconsole.log('DALICODE: sampler' + dalimaterial.id + '.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);');\n\t\t\t\t}\n\n\t\t\t\tvar ti = TEXTURE_INFO;\n\t\t\t\tvar index = dalimaterial.addTexture(texture, ti.loc, sampler);\n\t\t\t}\n\n\t\t\tif (texture.updateid !== gltex.updateid) {\n\t\t\t\ttexture.updateGLTexture(gl, gltex);\n\t\t\t\tif (gltex.texture_index) {\n\t\t\t\t\tvar dalimaterial = root.dalimaterial;\n\t\t\t\t\tdalimaterial.removeTexture(gltex.texture_index);\n\t\t\t\t\tgltex.texture_index = undefined;\n\t\t\t\t\tif (texture.image) {\n\t\t\t\t\t\tvar ti = TEXTURE_INFO;\n\n\t\t\t\t\t\t//TODO Get current values for sampler\n\t\t\t\t\t\tvar sampler = new dali.Sampler();\n\t\t\t\t\t\tsampler.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);\n\t\t\t\t\t\tsampler.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);\n\n\t\t\t\t\t\tif (DaliApi.emitcode) {\n\t\t\t\t\t\t\tconsole.log('DALICODE: var sampler = new dali.Sampler();');\n\t\t\t\t\t\t\tconsole.log('DALICODE: sampler.setFilterMode(dali.FILTER_MODE_LINEAR, dali.FILTER_MODE_LINEAR);');\n\t\t\t\t\t\t\tconsole.log('DALICODE: sampler.setWrapMode(dali.WRAP_MODE_CLAMP_TO_EDGE, dali.WRAP_MODE_CLAMP_TO_EDGE);');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar index = dalimaterial.addTexture(texture.image, ti.loc, sampler);\n\t\t\t\t\t\tgltex.texture_index = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgl.uniform1i(TEXTURE_LOC, TEXTURE_ID);\n\t\tif (TEXTURE_ID > 0) debugger;\n\t\tTEXTURE_END;\n\n\t\t// attributes\n\t\t//shader.compileShader(this);\n\t\t//console.log('---- ---- ---- addAttributeGeometry');\n\t\t//shader.daligeometry.addAttributeGeometry(shader, shader.attrlocs);\n\n\n\t\tvar len = 0; // pull the length out of the buffers\n\t\tvar lastbuf;\n\t\tATTRLOC_START;\n\t\tvar buf = ATTRLOC_BUF;\n\t\tif (lastbuf !== buf) {\n\t\t\tlastbuf = buf;\n\t\t\tif (!buf.glvb) buf.glvb = gl.createBuffer();\n\t\t\tif (buf.length > len) len = buf.length;\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf.glvb);\n\t\t\tif (!buf.clean) {\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, buf.array, gl.STATIC_DRAW);\n\t\t\t\tbuf.clean = true;\n\t\t\t}\n\t\t}\n\t\tvar loc = ATTRLOC_LOC;\n\t\tgl.enableVertexAttribArray(loc);\n\t\tATTRLOC_ATTRIBPTR;\n\t\tATTRLOC_END;\n\n\t\tvar blender = root.dalimaterial.hasBlender() ? root.dalimaterial : root.dalirenderer;\n\n\t\t// set up blend mode\n\t\tif (root.alpha_blend_eq.op) {\n\t\t\t//console.log('==== alpha_blend_eq.op');\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) {\n\t\t\t\t//console.log('CONSTANT', constant[0], constant[1], constant[2], constant[3], 'Not implemented');\n\t\t\t\tgl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\t}\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquationSeparate(root.color_blend_eq.op, root.alpha_blend_eq.op);\n\t\t\tgl.blendFuncSeparate(root.color_blend_eq.src, root.color_blend_eq.dst, root.alpha_blend_eq.src, root.alpha_blend_eq.dst);\n\n\t\t\t// DALI\n\t\t\t//console.log('*** full blend');\n\t\t\tblender.setBlendMode(dali.BLENDING_ON);\n\t\t\tblender.setBlendEquation(root.color_blend_eq.op, root.color_blend_eq.op);\n\t\t\tblender.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, root.alpha_blend_eq.src, root.alpha_blend_eq.dst);\n\t\t} else if (root.color_blend_eq.op) {\n\t\t\t//console.log('BLEND', root.color_blend_eq);\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) {\n\t\t\t\t//console.log('CONSTANT 2', constant[0], constant[1], constant[2], constant[3], 'Not implemented');\n\t\t\t\tgl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\t}\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquation(root.color_blend_eq.op);\n\t\t\tgl.blendFunc(root.color_blend_eq.src, root.color_blend_eq.dst);\n\n\t\t\tblender.setBlendMode(dali.BLENDING_ON);\n\t\t\tblender.setBlendEquation(root.color_blend_eq.op, root.color_blend_eq.op);\n\n\t\t\t//TODO Check this. What are the last two args?\n\t\t\tblender.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, root.color_blend_eq.src, root.color_blend_eq.dst);\n\t\t\t//dalimaterial.setBlendFunc(dali.BLEND_FACTOR_SRC_COLOR, dali.BLEND_FACTOR_DST_COLOR, root.color_blend_eq.src, root.color_blend_eq.dst);\n\t\t\t//dalimaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, dali.BLEND_FACTOR_ONE, dali.BLEND_FACTOR_ZERO);\n\t\t\t//dalimaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, dali.BLEND_FACTOR_SRC_ALPHA, dali.BLEND_FACTOR_ONE_MINUS_SRC_ALPHA);\n\n\t\t\t//dalimaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, dali.BLEND_FACTOR_CONSTANT_ALPHA, dali.BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA);\n\t\t} else {\n\t\t\t//console.log('==== blend disabled');\n\t\t\tgl.disable(gl.BLEND);\n\t\t\t//DALI\n\t\t\tblender.setBlendMode(dali.BLENDING_OFF);\n\t\t}\n\n\t\t// set up depth test\n\t\tif (root.depth_test_eq.func) {\n\t\t\tconsole.log('***Depth test enabled. NOT IMPLEMENTED');\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tgl.depthFunc(root.depth_test_eq.func);\n\t\t} else {\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t}\n\n\t\treturn len;\n\t};\n\n\t// {object} shader DaliShader object, amended with location information\n\t//                 (see getLocations call above)\n\t// The 'this' pointer is a view\n\tthis.compileUse = function (shader) {\n\t\t// Make sure the object has dali\n\t\t//DaliApi.createDaliObjects(this.shader);\n\n\t\t//console.log('*****compileUse', shader.object_type, this.object_type);\n\t\t// alright lets compile our useShader from \n\t\tvar tpl = this.useShaderTemplate.toString();\n\t\ttpl = tpl.replace(/^function/, \"function useshader_\" + (this.view ? this.view.constructor.name : 'anonymous') + '_shader_' + this.constructor.name);\n\t\t// ok lets replace shit.\n\t\t// set uniforms\n\n\t\tvar uniset = shader.uniset;\n\t\tvar unilocs = shader.unilocs;\n\t\tvar refattr = shader.refattr;\n\n\t\tvar out = 'var loc, uni\\n';\n\t\tout += 'var actor = root.daliactor\\n';\n\t\tout += 'if (shader && actor) {\\n';\n\n\t\tfor (var key in uniset) {\n\t\t\tvar loc = unilocs[key];\n\t\t\tvar split = loc.split;\n\t\t\tvar isattr = key in refattr;\n\t\t\tif (split) {\n\t\t\t\tvar name = '';\n\t\t\t\tfor (var i = 0; i < split.length; i++) {\n\t\t\t\t\tif (i) name += '.';\n\t\t\t\t\tvar part = split[i];\n\t\t\t\t\tif (part === 'layout' || isattr && i === split.length - 1) name += '_';\n\t\t\t\t\tname += part;\n\t\t\t\t}\n\t\t\t\tout += '\\t\\tuni = root.' + name + '\\n';\n\t\t\t} else {\n\t\t\t\tout += '\\t\\tuni = root.';\n\t\t\t\tif (isattr) out += '_';\n\t\t\t\tout += key + '\\n';\n\t\t\t}\n\t\t\tout += '\\t\\tloc = shader.unilocs.' + key + '\\n';\n\t\t\tvar gen = gltypes.uniform_gen[loc.type];\n\t\t\t//if(gen.args == 1){\n\n\t\t\tvar call = gen.call;\n\t\t\t//if(call !== 'uniformMatrix4fv' && call !== 'uniformMatrix3fv' && call !== 'uniformMatrix2fv'){\n\t\t\t//\tout += '\\t\\tif(loc.value !== uni) loc.value = uni, '\n\t\t\t//}\n\n\t\t\t// Update uniform. Use registerAnimatableProperty only if \n\t\t\t// the value is not set yet. (DALI)\n\t\t\t//TODO Optimize\n\t\t\t//out += 'console.log(\\'------ROOT\\', root.view.id, root.daliactor.object_type)\\n'\n\t\t\tout += '\\t\\tvar val = actor.setUniformValue(\\'' + key + '\\',uni)\\n';\n\n\t\t\t// Use addUniformValue instead of this code\n\t\t\t/*\n               out += '\\t\\tvar val = shader.getArrayValue(uni)\\n'\n               out += '\\t\\tvar v = shader.meshActor._' + key + '\\n'\n               out += '\\tconsole.log(\\'key\\',\\'' + key + '\\',\\'value\\', val)\\n'\n   \t\t\tout += '\\t\\tif (v) {v = val} \\n'\n               out += '\\t\\telse {shader.meshActor.registerAnimatableProperty(\\'_' + key + '\\', val)}\\n'\n   */\n\n\t\t\t/*\n   \t\t\tout += 'gl.' + gen.call + '(loc.loc'\n   \n   \t\t\tif(gen.mat) out += ', false'\n   \n   \t\t\tif(gen.args == 1) out += ',uni)\\n'\n   \t\t\tif(gen.args == 2) out += ',uni[0], uni[1])\\n'\n   \t\t\tif(gen.args == 3) out += ',uni[0], uni[1], uni[2])\\n'\n   \t\t\tif(gen.args == 4) out += ',uni[0], uni[1], uni[2], uni[3])\\n'\n   \t\t\tif(gen.args === this.loguni) out += 'if(typeof uni === \"number\")console.log(uni)\\n'\n   */\n\t\t}\n\t\tout += '}\\n';\n\n\t\ttpl = tpl.replace(/SET\\_UNIFORMS/, out);\n\n\t\ttpl = tpl.replace(/TEXTURE\\_START([\\S\\s]*)TEXTURE\\_END/, function (m) {\n\t\t\tvar out = '';\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar texlocs = shader.texlocs;\n\t\t\tvar texid = 0;\n\t\t\tfor (var key in texlocs) {\n\t\t\t\tvar texinfo = texlocs[key];\n\t\t\t\tvar split = texinfo.split;\n\n\t\t\t\tvar TEXTURE_VALUE = '';\n\t\t\t\tif (split) {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + split.join('.');\n\t\t\t\t} else {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + texinfo.name;\n\t\t\t\t}\n\t\t\t\t//console.log('key', key);\n\t\t\t\t//console.log('TEXTURE_VALUE', TEXTURE_VALUE);\n\t\t\t\t//console.log('TEXTURE_SAMPLER', texinfo.samplerid);\n\t\t\t\t//console.log('TEXTURE_ID', texid);\n\t\t\t\t//console.log('TEXTURE_LOC', 'shader.texlocs.' + key+ '.loc');\n\t\t\t\t//console.log('TEXTURE_INFO', 'shader.texlocs.' + key);\n\t\t\t\t//console.log('TEXTUREGL_ID', gltypes.gl.TEXTURE0 + texid);\n\n\t\t\t\tout += body.replace(/TEXTURE_VALUE/g, TEXTURE_VALUE).replace(/TEXTURE_SAMPLER/g, texinfo.samplerid).replace(/TEXTURE_ID/g, texid).replace(/TEXTURE_LOC/g, 'shader.texlocs.' + key + '.loc').replace(/TEXTURE_INFO/g, 'shader.texlocs.' + key).replace(/TEXTUREGL_ID/g, gltypes.gl.TEXTURE0 + texid);\n\t\t\t}\n\t\t\t//console.log('=-=-=-=-=- texlocs', out);\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/ATTRLOC\\_START([\\S\\s]*)ATTRLOC\\_END/, function (m) {\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar out = '';\n\t\t\tvar attrlocs = shader.attrlocs;\n\t\t\tvar len = 0; // pull the length out of the buffers\n\t\t\tvar lastbuf;\n\t\t\tif (Object.keys(attrlocs).length > 0) {\n\t\t\t\t//console.log('*************************** attrlocs ***********************');\n\t\t\t\t//console.log(attrlocs);\n\t\t\t\t//console.log('************************************************************');\n\t\t\t\tout += 'root.daligeometry.addAttributeGeometry(root, shader.attrlocs)\\n';\n\t\t\t}\n\n\t\t\tfor (var key in attrlocs) {\n\t\t\t\tvar attrloc = attrlocs[key];\n\t\t\t\tvar ATTRLOC_BUF;\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + attrloc.name;\n\t\t\t\t\tvar buf = this[attrloc.name];\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + key;\n\t\t\t\t}\n\t\t\t\tvar ATTRLOC_LOC = 'shader.attrlocs.' + key + '.loc';\n\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'gl.vertexAttribPointer(loc, ' + attrloc.slots + ', gl.FLOAT, false, buf.stride, ' + attrloc.offset + ')';\n\n\t\t\t\t\t//ATTRLOC_ATTRIBPTR = 'console.log(\\'buf type 1\\', \\'' + key + '\\',' + attrloc.slots + ', buf.stride, buf.length,' + attrloc.offset + ');daligeometry.addVertices(\\'' + key + '\\', buf.array, ' + attrloc.slots + ', buf.stride, ' + attrloc.offset + ')'\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'if(buf.slots>4)debugger;gl.vertexAttribPointer(loc, buf.slots, gl.FLOAT, false, buf.stride, 0)';\n\n\t\t\t\t\t//ATTRLOC_ATTRIBPTR = 'console.log(\\'buf type 2\\', \\'' + key + '\\',buf.slots, buf.stride, buf.length);daligeometry.addVertices(\\'' + key + '\\', buf.array, buf.slots, buf.stride, 0)'\n\t\t\t\t}\n\n\t\t\t\t//HACK. Setting this for text causes problems with image display\n\t\t\t\tATTRLOC_ATTRIBPTR = '';\n\n\t\t\t\tout += body.replace(/ATTRLOC_BUF/, ATTRLOC_BUF).replace(/ATTRLOC_LOC/, ATTRLOC_LOC).replace(/ATTRLOC_ATTRIBPTR/, ATTRLOC_ATTRIBPTR);\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/gl.[A-Z][A-Z0-9_]+/g, function (m) {\n\t\t\treturn gltypes.gl[m.slice(3)];\n\t\t});\n\n\t\t//if (shader.texlocs && shader.texlocs.length > 0)\n\t\t//console.log('FUNCTION', this.view.id, tpl);\n\n\t\t//console.log('FUNCTION', tpl);\n\t\t//shader.use = new Function('return ' + tpl)().bind(this);\n\t\tshader.use = new Function('return ' + tpl)();\n\t};\n\n\t// all draw types\n\texports.TRIANGLES = this.TRIANGLES = 0x4;\n\texports.LINES = this.LINES = 0x1;\n\texports.LINE_LOOP = this.LINE_LOOP = 0x2;\n\texports.LINE_STRIP = this.LINE_STRIP = 0x3;\n\texports.TRIANGLE_STRIP = this.TRIANGLE_STRIP = 0x5;\n\texports.TRIANGLE_FAN = this.TRIANGLE_FAN = 0x6;\n\n\tthis.drawtype = this.TRIANGLES;\n\n\t// lets draw ourselves.\n\t// A view (the this pointer) makes one call to drawArrays for each shader.\n\t// A typical number is two (one for border and one for hardimage\n\tthis.drawArrays = function (devicegl, sub, start, end) {\n\t\t//if (this.texture) {\n\t\t//\tconsole.trace('drawArrays');\n\t\t//}\n\t\t//console.trace('*****drawArrays', (this.view? this.view.id : '<screen>'));\n\t\t// console.log('PROG', this.vtx_state.code);\n\t\t//if(this.mydbg) debugger\n\t\tif (!this.hasOwnProperty('shader') || this.shader === undefined) this.compile(devicegl);\n\t\tvar gl = devicegl.gl;\n\t\tvar shader = sub ? this.shader[sub] : this.shader;\n\t\t// Attach the dali_obj to the shader.shader object (DALI)\n\t\tvar len = this.useShader(gl, shader);\n\t\tif (len) gl.drawArrays(this.drawtype, start || 0, end === undefined ? len : end);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/shaderdali.js\n// module id = 158\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/shaderdali.js?");

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/texture', function (requireDreem, exports) {\n\t// internal, DaliApi is a static object to access the dali api\n\tDaliApi = requireDreem('./dali_api');\n\n\tvar Texture = exports;\n\n\tTexture.GlobalId = 0;\n\n\tTexture.Image = function (path) {\n\t\t//console.log('setting path to ', path);\n\t\tthis.path = path;\n\t};\n\n\t// Map hash of texture to an existing texture\n\tTexture.Cache = {};\n\n\tfs = requireDreem('fs');\n\n\tthis.atConstructor = function (type, w, h, device) {\n\t\tthis.id = ++Texture.GlobalId;\n\t\tthis.device = device;\n\t\tthis.type = type;\n\t\tthis.size = vec2(w, h);\n\t};\n\n\tthis.ratio = 1;\n\tthis.frame_buf = null;\n\n\tTexture.fromStub = function (stub) {\n\t\treturn Texture.buildDaliTexture(stub.array, stub.type, stub.size[0], stub.size[1]);\n\t};\n\n\tTexture.fromType = function (type) {\n\t\t//console.log('********** fromType', type);\n\t\treturn new Texture(type, 0, 0);\n\t};\n\n\t// Load from a local image file. Returns the Texture\n\tTexture.fromLocalImage = function (path) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tvar img = new dali.ResourceImage({ url: path });\n\n\t\tvar tex = new Texture(Texture.RGBA, img.getWidth(), img.getHeight());\n\t\ttex.path = path;\n\t\ttex.image = img;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\tconsole.log('DALICODE: var texture' + tex.id + ' = new dali.ResourceImage({url: \\'' + path + '\\'});');\n\t\t}\n\n\t\treturn tex;\n\t};\n\n\t// Load texture from a local file or remote url.\n\t// If imagedata is a texture, it is returned immediately.\n\t// If the image is loaded remotely, the callback function is called when\n\t// the texture is loaded.\n\tTexture.fromImage = function (imagedata, callback) {\n\t\t// Return immediately if a texture was specified\n\t\tif (imagedata.image || imagedata.array) return imagedata;\n\n\t\tvar dali = DaliApi.dali;\n\n\t\t// With dali, the references should either be absolute, or relative\n\t\t// to the path where dali runs.\n\t\tvar fullpath = imagedata.path;\n\t\tif (!fullpath) {\n\t\t\tconsole.error('Error: Use require() to load images for DALi platform');\n\t\t\treturn new Texture(Texture.RGBA, 0, 0);\n\t\t}\n\n\t\tif (imagedata.path[0] !== '/') fullpath = defineDreem.$example + fullpath;\n\n\t\tif (fullpath.indexOf('http') < 0) {\n\t\t\t// Local assets\n\t\t\treturn Texture.fromLocalImage(fullpath);\n\t\t}\n\n\t\t// Remote assets are loaded into the cache\n\t\tvar localpath = defineDreem.mapToCacheDir(fullpath);\n\t\ttry {\n\t\t\tif (fs.statSync(localpath).isFile()) {\n\t\t\t\t// File is already in the cache\n\t\t\t\treturn Texture.fromLocalImage(localpath);\n\t\t\t}\n\t\t} catch (e) {}\n\n\t\t// Load the image into the cache.\n\t\tdefineDreem.httpGetCached(fullpath).then(function (result) {\n\t\t\tvar img = new dali.ResourceImage({ url: result.path });\n\t\t\tvar tex = new Texture(Texture.RGBA, img.getWidth(), img.getHeight());\n\t\t\ttex.image = img;\n\n\t\t\tif (callback) callback(tex);\n\t\t});\n\t};\n\n\tTexture.fromArray = function (array, w, h) {\n\t\treturn Texture.buildDaliTexture(array, Texture.RGBA, w, h);\n\t};\n\n\t// Construct a texture from a ArrayBuffer, with a width/height (DALI)\n\tTexture.buildDaliTexture = function (array, type, w, h) {\n\t\tvar dali = DaliApi.dali;\n\n\t\tvar tex = new Texture(type, w, h);\n\t\ttex.array = array;\n\n\t\t// Dali wants a byte array. Use a checksum + size to cache the data\n\t\tvar uint8 = new Uint8Array(array);\n\n\t\tvar sum = 0;\n\t\tvar offset = 0;\n\t\tvar nbytes = w * h * (type == Texture.RGBA ? 4 : 1);\n\t\tfor (var i = 0; i < nbytes; i++) {\n\t\t\tsum += uint8[offset++];\n\t\t}\n\n\t\t// Cache the texture based upon its size and texture data\n\t\tvar texture_key = w + ':' + h + ':' + sum;\n\t\tif (texture_key in Texture.Cache) {\n\t\t\ttex = Texture.Cache[texture_key];\n\t\t\t//console.log('Found cached texture', type, w, h, texture_key);\n\t\t\treturn tex;\n\t\t}\n\n\t\t//console.log('buildDaliTexture', type, w, h, texture_key);\n\n\t\t// Support 1-byte per pixel and 4-byte per pixel textures.\n\t\tvar pixel_type = type == Texture.LUMINANCE ? dali.PIXEL_FORMAT_L8 : dali.PIXEL_FORMAT_RGBA8888;\n\n\t\tvar image_options = {\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tpixelFormat: pixel_type\n\t\t};\n\t\t//console.log('********** fromArray', image_options, uint8.length);\n\n\t\tvar img = new dali.BufferImage(uint8, image_options);\n\t\ttex.image = img;\n\n\t\tTexture.Cache[texture_key] = tex;\n\n\t\tif (DaliApi.emitcode) {\n\t\t\t// Write font_<INDEX>.bin\n\t\t\tvar buffer = new Buffer(uint8);\n\t\t\tfs.writeFile('font_' + tex.id + '.bin', buffer, 'binary', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('File ERROR', err);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\t//console.log('File Saved');\n\t\t\t});\n\n\t\t\tconsole.log('DALICODE: var texture' + tex.id + ';');\n\t\t\tconsole.log('DALICODE: var fs = require(\\'fs\\');');\n\t\t\tconsole.log('DALICODE: var texturedata' + tex.id + ' = fs.readFileSync(\\'font_' + tex.id + '.bin\\');');\n\n\t\t\tconsole.log('DALICODE: var image_options' + tex.id + ' = {width: ' + w + ', height: ' + h + ', pixelFormat : ' + pixel_type + '}');\n\t\t\tconsole.log('DALICODE: var uint8_' + tex.id + ' = new Uint8Array(texturedata' + tex.id + ');');\n\t\t\tconsole.log('DALICODE: var texture' + tex.id + ' = new dali.BufferImage(uint8_' + tex.id + ', image_options' + tex.id + ')');\n\t\t\ttex.img = img;\n\t\t}\n\n\t\treturn tex;\n\t};\n\n\tTexture.createRenderTarget = function (type, width, height, device) {\n\t\tvar tex = new Texture(type, width, height, device);\n\t\ttex.initAsRendertarget();\n\t\treturn tex;\n\t};\n\n\t// type flags\n\tTexture.RGB = 1 << 0;\n\tTexture.RGBA = 1 << 1;\n\tTexture.ALPHA = 1 << 3;\n\tTexture.DEPTH = 1 << 4;\n\tTexture.STENCIL = 1 << 5;\n\tTexture.LUMINANCE = 1 << 6;\n\n\tTexture.FLOAT = 1 << 10;\n\tTexture.HALF_FLOAT = 1 << 11;\n\tTexture.FLOAT_LINEAR = 1 << 12;\n\tTexture.HALF_FLOAT_LINEAR = 1 << 13;\n\n\tthis.typeString = function () {\n\t\tvar str = '';\n\t\tfor (var key in Texture) {\n\t\t\tvar value = Texture[key];\n\t\t\tif (typeof value === 'number' && value & this.type) {\n\t\t\t\tif (str) str += '|';\n\t\t\t\tstr += 'Texture.' + key;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t};\n\n\tthis.initAsRendertarget = function () {\n\t\tvar gl = this.device.gl;\n\n\t\tif (!this.type) this.type = Texture.RGBA | Texture.DEPTH | Texture.STENCIL;\n\t\tvar type = this.type;\n\n\t\tthis.glframe_buf = gl.createFramebuffer();\n\t\tthis.gltex = this.IL_AL_SC_TC = gl.createTexture();\n\n\t\t// our normal render to texture thing\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.gltex);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\t\tthis.glbuf_type = gl.RGB;\n\t\tif (type & Texture.LUMINANCE) {\n\t\t\tthis.glbuf_type = gl.LUMINANCE;\n\t\t\tif (type & TEXTURE.ALPHA) this.glbuf_type = gl.LUMINANCE_ALPHA;\n\t\t} else if (type & Texture.ALPHA) this.glbuf_type = gl.ALPHA;else if (type & Texture.RGBA) this.glbuf_type = gl.RGBA;\n\n\t\tthis.gldata_type = gl.UNSIGNED_BYTE;\n\t\tif (type & Texture.HALF_FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float_linear');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_float_linear');\n\t\t\tthis.gldata_type = ext.FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.HALF_FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_OES;\n\t\t} else if (type & Texture.HALF_FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_float');\n\t\t\tthis.gldata_type = gl.FLOAT;\n\t\t}\n\n\t\t// Create a layer object and attach to the texture. This will be\n\t\t// activated when dalidevice#bindFramebuffer is called. The layer's\n\t\t// parent will be the current layer\n\t\tDaliLayer = requireDreem('./dali_layer');\n\t\tthis.dali_layer = new DaliLayer(DaliApi.currentlayer, this.size[0], this.size[1]);\n\n\t\tconsole.log('texturedali.initAsRendertarget texture NOT implemented');\n\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.glbuf_type, this.size[0], this.size[1], 0, this.glbuf_type, this.gldata_type, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glframe_buf);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.gltex, 0);\n\n\t\tif (type & Texture.DEPTH || type & Texture.STENCIL) {\n\t\t\tthis.gldepth_buf = gl.createRenderbuffer();\n\n\t\t\tthis.gldepth_type = gl.DEPTH_COMPONENT16;\n\t\t\tthis.glattach_type = gl.DEPTH_ATTACHMENT;\n\n\t\t\tif (type & Texture.DEPTH && type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.DEPTH_STENCIL;\n\t\t\t\tthis.glattach_type = gl.DEPTH_STENCIL_ATTACHMENT;\n\t\t\t} else if (type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.STENCIL_INDEX;\n\t\t\t\tthis.glattach_type = gl.STENCIL_ATTACHMENT;\n\t\t\t}\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.gldepth_buf);\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, this.gldepth_type, this.size[0], this.size[1]);\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, this.glattach_type, gl.RENDERBUFFER, this.gldepth_buf);\n\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t};\n\n\tthis.delete = function () {\n\t\tif (!this.device) return;\n\t\tvar gl = this.device.gl;\n\t\tif (this.glframe_buf) {\n\t\t\tgl.deleteFramebuffer(this.glframe_buf);\n\t\t\tthis.glframe_buf = undefined;\n\t\t}\n\t\tif (this.gltex) {\n\t\t\tgl.deleteTexture(this.gltex);\n\t\t\tthis.gltex = undefined;\n\t\t}\n\t\tif (this.depth_buf) {\n\t\t\tgl.deleteRenderbuffer(this.gldepth_buf);\n\t\t}\n\t};\n\n\tthis.resize = function (width, height) {\n\t\tthis.delete;\n\t\tthis.size = vec2(width, height);\n\t\tthis.initAsRendertarget();\n\t};\n\n\tthis.size = vec2(0, 0);\n\n\tthis.createGLTexture = function (gl, texid, texinfo) {\n\t\tvar samplerid = texinfo.samplerid;\n\t\t//console.log('**** createGLTexture', samplerid)\n\n\t\tif (this.image && this.image[samplerid]) {\n\t\t\tthis[samplerid] = this.image[samplerid];\n\t\t}\n\n\t\tvar gltex = this[samplerid];\n\t\tif (gltex) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\treturn gltex;\n\t\t}\n\n\t\t// Add to material\n\t\t//TODO\n\n\t\tvar samplerdef = texinfo.samplerdef;\n\t\tvar gltex = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, samplerdef.UNPACK_FLIP_Y_WEBGL || false);\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, samplerdef.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n\n\t\tif (this.array) {\n\t\t\t//console.log('texturedali.createGLTexture texture NOT implemented from array', this.size[0], this.size[1]);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.size[0], this.size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.array));\n\t\t} else if (this.image) {\n\t\t\t//console.log('texturedali.createGLTexture texture NOT implemented from image', this.size[0], this.size[1]);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\n\t\t\tthis.image[samplerid] = gltex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgltex.updateid = this.updateid;\n\t\t// set up sampler parameters\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[samplerdef.MIN_FILTER]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[samplerdef.MAG_FILTER]);\n\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[samplerdef.WRAP_S]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[samplerdef.WRAP_T]);\n\n\t\tthis[samplerid] = gltex;\n\t\treturn gltex;\n\t};\n\n\tthis.updateGLTexture = function (gl, gltex) {\n\t\t//console.log('+++++updateGLTexture');\n\t\tif (this.array) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.size[0], this.size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.data));\n\t\t} else if (this.image) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\n\t\t}\n\t\tgltex.updateid = this.updateid;\n\t};\n\n\t// Shders\n\tthis.sample2 = function (x, y) {\n\t\treturn sample(vec2(x, y));\n\t};\n\tthis.sample = function (v) {\n\t\treturn texture2D(this, v, {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.samplemip = function (v) {\n\t\treturn texture2D(this, v, {\n\t\t\tMIN_FILTER: 'LINEAR_MIPMAP_NEAREST',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.flipped2 = function (x, y) {\n\t\treturn flipped(vec2(x, y));\n\t};\n\tthis.flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point2 = function (x, y) {\n\t\treturn point(vec2(x, y));\n\t};\n\tthis.point = function (v) {\n\t\treturn texture2D(this, vec2(v.x, v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point_flipped2 = function (x, y) {\n\t\treturn point_flipped(vec2(x, y));\n\t};\n\tthis.point_flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.array1d = function (index) {\n\t\treturn texture2D(this, vec2(mod(index, this.size.x), floor(index / this.size.x)), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.array2d = function (v) {\n\t\treturn texture2D(this, vec2(v.x * this.size.x, v.y * this.size.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/texturedali.js\n// module id = 159\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/texturedali.js?");

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/worker', function (requireDreem, exports) {\n  var rpchub = requireDreem('$system/rpc/rpchub');\n\n  this._allocPromise = rpchub.allocPromise;\n  this._resolveReturn = rpchub.resolveReturn;\n\n  this._atConstructor = function (cores) {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/dali/workerdali.js\n// module id = 160\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/dali/workerdali.js?");

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Copied from compositionserver.js for headless. This assumes that the\n// node server is running on the same machine where headless is running.\n\ndefineDreem.class(function (requireDreem) {\n\t//internal\n\n\n\t// composition_client references WebSocket\n\t//WebSocket = requireDreem('$system/base/nodewebsocket')\n\n\t//var Render = requireDreem('$system/platform/render')\n\n\tvar path = requireDreem('path');\n\tvar fs = requireDreem('fs');\n\n\tvar ExternalApps = requireDreem('$system/server/externalapps');\n\tvar FileWatcher = requireDreem('$system/server/filewatcher');\n\n\tvar BusServer = requireDreem('$system/rpc/busserver');\n\tvar HTMLParser = requireDreem('$system/parse/htmlparser');\n\tvar ScriptError = requireDreem('$system/parse/scripterror');\n\tvar legacy_support = 0;\n\n\tthis.atConstructor = function (args, //Object: Process arguments\n\tcompname, //String: name of the composition\n\trootserver) {\n\t\t//TeemServer: teem server object\n\n\t\t// Headless stage settings (from command-line), or defaults\n\t\tthis.width = parseInt(args['-width']) || 1920;\n\t\tthis.height = parseInt(args['-height']) || 1080;\n\t\tthis.name = args['-name'] || 'dreemgl';\n\t\tthis.verbose = '-verbose' in args;\n\n\t\tif ('-dumpstate' in args) {\n\t\t\tvar ds = args['-dumpstate'];\n\t\t\tthis.dumpstate = ds.length > 0 ? args['-dumpstate'] : 'stdout';\n\t\t}\n\n\t\t// The duration (msec) of the test. 0 = render once and stop\n\t\tthis.duration = parseInt(args['-duration']) || 0;\n\n\t\tif (this.verbose) console.log('Loading environment', defineDreem.$environment);\n\n\t\tthis.args = args;\n\t\tthis.compname = compname;\n\t\tthis.rootserver = rootserver;\n\n\t\tthis.busserver = new BusServer();\n\t\t//this.busserver = null;\n\n\t\t// lets give it a session\n\t\tthis.session = Math.random() * 1000000;\n\n\t\tthis.slow_watcher = new FileWatcher();\n\n\t\tthis.slow_watcher.atChange = function () {\n\t\t\t// lets reload this app\n\t\t\tthis.reload();\n\t\t}.bind(this);\n\n\t\t//this.readSystemClasses('$classes', this.system_classes = {})\n\t\t//defineDreem.system_classes = this.system_classes;\n\n\t\tthis.components = {};\n\n\t\tthis.paths = \"\";\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tif (this.paths) this.paths += ',\\n\\t\\t';\n\t\t\tthis.paths += '$' + key + ':\"$root/' + key + '\"';\n\t\t}\n\n\t\t// lets compile and run the dreem composition\n\t\tdefineDreem.atRequire = function (filename) {\n\t\t\tthis.slow_watcher.watch(filename);\n\t\t}.bind(this);\n\t\t//\n\t\tthis.reload();\n\t};\n\n\t// Called when any of the dependent files change for this composition\n\tthis.atChange = function () {};\n\n\t// Destroys all objects maintained by the composition\n\tthis.destroy = function () {\n\t\tif (this.mycomposition && this.mycomposition.destroy) this.mycomposition.destroy();\n\t\tthis.mycomposition = undefined;\n\t};\n\n\tthis.loadComposition = function () {\n\t\tif (this.verbose) console.log(\"Reloading composition \" + this.filename);\n\t\trequireDreem.clearCache();\n\n\t\tthis.HeadlessApi = requireDreem('./headless_api');\n\t\tthis.HeadlessApi.initialize({ width: this.width, height: this.height, name: this.name, duration: this.duration, verbose: this.verbose, dumpstate: this.dumpstate });\n\n\t\tvar Composition = requireDreem(defineDreem.expandVariables(this.filename));\n\t\tthis.composition = new Composition(this.busserver, this.session);\n\t};\n\n\tthis.reload = function () {\n\t\tthis.destroy();\n\n\t\t// lets fill\n\t\trequireDreem.clearCache();\n\n\t\t// lets see if our composition is a dir or a jsfile\n\t\tvar dir = '$root/';\n\t\tvar jsname = dir + this.compname + '.js';\n\t\ttry {\n\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\tthis.filename = jsname;\n\t\t\t\treturn this.loadComposition();\n\t\t\t} else {\n\t\t\t\tvar jsname = dir + this.compname + '/index.js';\n\t\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\t\tthis.filename = jsname;\n\t\t\t\t\treturn this.loadComposition();\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\t//console.log(e.stack)\n\t\t}\n\n\t\tthis.screenname = this.compname;\n\n\t\t// Reaching here indicates the path does not exist\n\t\tconsole.log('bootheadless.reload: Unable to load', jsname);\n\t};\n\n\tthis.loadHTML = function (title, boot) {\n\t\treturn '';\n\t};\n\n\tthis.loadTemplate = function (title, boot) {\n\t\tconsole.warn('warning: bootheadless.loadTemplate not written');\n\t\treturn '';\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/bootheadless.js\n// module id = 161\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/bootheadless.js?");

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/compositionclient', function (requireDreem, baseclass) {\n\n\tvar Device = requireDreem('$system/platform/$platform/device$platform');\n\tvar WebRTC = requireDreem('$system/rpc/webrtc');\n\tvar BusClient = requireDreem('$system/rpc/busclient');\n\n\tHeadlessApi = requireDreem('./headless_api');\n\n\tthis.atConstructor = function (previous, parent) {\n\t\t//TODO\n\t\tprevious = null;\n\t\tparent = null;\n\n\t\tif (previous) {\n\t\t\tthis.reload = (previous.reload || 0) + 1;\n\t\t\tthis.device = previous.device; // new Device(previous.device) //previous.device\n\t\t\tthis.device.reload = this.reload;\n\t\t\tconsole.log(\"Reload \" + this.reload);\n\t\t} else {\n\t\t\t// lets spawn up a device\n\t\t\tthis.device = new Device();\n\t\t}\n\n\t\tbaseclass.atConstructor.call(this, previous, parent);\n\n\t\t//Render the display\n\t\tthis.doRender();\n\t};\n\n\tthis.createBus = function () {\n\t\tif (HeadlessApi.verbose) console.log('compositionheadless.createBus is NOT implemented');\n\t\tthis.bus = {\n\t\t\tsend: function send() {}\n\t\t};\n\t};\n\n\tthis.doRender = function (previous, parent) {\n\t\tbaseclass.doRender.call(this, previous, parent);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/compositionheadless.js\n// module id = 162\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/compositionheadless.js?");

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t} else {\n\t\tobj[key] = value;\n\t}return obj;\n}\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\tvar _gl;\n\n\t//internal\n\n\t//Stub out gl calls\n\tgl = (_gl = {\n\t\tgetUniformLocation: function getUniformLocation() {},\n\t\tgetAttribLocation: function getAttribLocation() {},\n\t\tuniform4f: function uniform4f() {},\n\t\tdrawArrays: function drawArrays() {},\n\t\tframebufferTexture2D: function framebufferTexture2D() {},\n\t\tbindRenderbuffer: function bindRenderbuffer() {},\n\t\tcreateRenderbuffer: function createRenderbuffer() {\n\t\t\treturn {};\n\t\t},\n\t\tcreateFramebuffer: function createFramebuffer() {\n\t\t\treturn {};\n\t\t},\n\t\tbindFramebuffer: function bindFramebuffer() {},\n\t\trenderbufferStorage: function renderbufferStorage() {},\n\t\tframebufferRenderbuffer: function framebufferRenderbuffer() {},\n\t\tviewport: function viewport() {},\n\t\tclearColor: function clearColor() {},\n\t\tclear: function clear() {},\n\t\tcreateShader: function createShader() {},\n\t\tattachShader: function attachShader() {},\n\t\tshaderSource: function shaderSource() {},\n\t\tcompileShader: function compileShader() {},\n\t\tcreateTexture: function createTexture() {\n\t\t\treturn {};\n\t\t},\n\t\tactiveTexture: function activeTexture() {},\n\t\tbindTexture: function bindTexture() {},\n\t\tgetShaderParameter: function getShaderParameter() {},\n\t\tgetShaderInfoLog: function getShaderInfoLog() {\n\t\t\treturn '';\n\t\t},\n\t\tuseProgram: function useProgram() {},\n\t\tcreateBuffer: function createBuffer() {\n\t\t\treturn 0;\n\t\t},\n\t\tbindBuffer: function bindBuffer() {},\n\t\tbufferData: function bufferData() {},\n\t\tenable: function enable() {},\n\t\tdisable: function disable() {},\n\t\tblendEquation: function blendEquation() {},\n\t\tblendFunc: function blendFunc() {},\n\t\tenableVertexAttribArray: function enableVertexAttribArray() {},\n\t\tvertexAttribPointer: function vertexAttribPointer() {},\n\t\tuniform1f: function uniform1f(l, v) {\n\t\t\tconsole.log('uniform1f', l, v);return 0;\n\t\t},\n\t\tuniform2f: function uniform2f() {\n\t\t\treturn 0;\n\t\t},\n\t\tuniform3f: function uniform3f() {\n\t\t\treturn 0;\n\t\t}\n\t}, _defineProperty(_gl, 'uniform4f', function uniform4f() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'uniform1i', function uniform1i() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'uniformMatrix4fv', function uniformMatrix4fv() {\n\t\treturn 0;\n\t}), _defineProperty(_gl, 'pixelStorei', function pixelStorei() {}), _defineProperty(_gl, 'texParameterf', function texParameterf() {}), _defineProperty(_gl, 'texParameteri', function texParameteri() {}), _defineProperty(_gl, 'depthFunc', function depthFunc() {}), _defineProperty(_gl, 'texImage2D', function texImage2D() {}), _gl);\n\n\t// HeadlessApi is a static object to access the headless api\n\tthis.HeadlessApi = requireDreem('./headless_api');\n\n\tthis.Keyboard = requireDreem('./keyboardheadless');\n\tthis.Pointer = requireDreem('./pointerheadless');\n\n\t// require embedded classes\n\tthis.Shader = requireDreem('./shaderheadless');\n\tthis.Texture = requireDreem('./textureheadless');\n\tthis.DrawPass = requireDreem('./drawpassheadless');\n\n\tthis.preserveDrawingBuffer = false;\n\tthis.premultipliedAlpha = false;\n\tthis.antialias = false;\n\tthis.debug_pick = false;\n\n\tthis.document = null;\n\n\tthis.atConstructor = function (previous) {\n\n\t\tthis.extensions = previous && previous.extensions || {};\n\t\tthis.shadercache = previous && previous.shadercache || {};\n\t\tthis.drawpass_list = previous && previous.drawpass_list || [];\n\t\tthis.layout_list = previous && previous.layout_list || [];\n\t\tthis.pick_resolve = [];\n\t\tthis.anim_redraws = [];\n\t\tthis.doPick = this.doPick.bind(this);\n\n\t\t//TODO Use setTimeout for animation until headless animation ready (HEADLESS)\n\t\tthis.time = 0;\n\t\tthis.animFrame = function (time) {\n\t\t\t//console.log('animFrame', time);\n\t\t\tvar interval = 16; // 500;\n\t\t\tvar t = this.doColor(time);\n\t\t\tif (t) {\n\t\t\t\tthis.anim_req = true;\n\t\t\t\tthis.time += interval;\n\t\t\t\tif (this.time > HeadlessApi.duration) {\n\t\t\t\t\t// Stop running\n\t\t\t\t\tHeadlessApi.terminate();\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis.animFrame(this.time);\n\t\t\t\t}.bind(this), interval);\n\t\t\t} else {\n\t\t\t\tthis.anim_req = false;\n\n\t\t\t\t// Stop running\n\t\t\t\tHeadlessApi.terminate();\n\t\t\t}\n\t\t\t//if(this.pick_resolve.length) this.doPick()\n\t\t}.bind(this);\n\n\t\tif (previous) {\n\t\t\tthis.canvas = previous.canvas;\n\t\t\tthis.gl = previous.gl;\n\t\t\tthis.keyboard = previous.keyboard;\n\t\t\tthis.pointer = previous.pointer;\n\t\t\tthis.parent = previous.parent;\n\t\t\tthis.drawtarget_pools = previous.drawtarget_pools;\n\t\t\tthis.frame = this.main_frame = previous.main_frame;\n\t\t} else {\n\t\t\tthis.frame = this.main_frame = this.Texture.fromType('rgb_depth');\n\t\t\tthis.keyboard = new this.Keyboard(this);\n\t\t\tthis.pointer = new this.Pointer(this);\n\t\t\tthis.drawtarget_pools = {};\n\n\t\t\tthis.createContext();\n\t\t}\n\n\t\tthis.initResize();\n\t};\n\n\tthis.createContext = function () {\n\t\tif (HeadlessApi.verbose) console.log('deviceheadless.createContext NOT implemented');\n\t};\n\n\tthis.initResize = function () {\n\t\t// Get size of stage\n\t\tthis.width = HeadlessApi.size.x;\n\t\tthis.height = HeadlessApi.size.y;\n\t\tthis.ratio = HeadlessApi.dpi.x / HeadlessApi.dpi.y;\n\n\t\t//console.log('initResize size ', size, dpi);\n\n\t\t//Stub gl calls (to avoid javascript errors)\n\t\tthis.gl = gl;\n\n\t\tthis.main_frame = { ratio: this.ratio, size: vec2(this.width, this.height) };\n\t\tthis.size = vec2(this.width, this.height);\n\t};\n\n\tthis.clear = function (r, g, b, a) {\n\t\tif (arguments.length === 1) {\n\t\t\ta = r.length === 4 ? r[3] : 1, b = r[2], g = r[1], r = r[0];\n\t\t}\n\t\tif (arguments.length === 3) a = 1;\n\n\t\tHeadlessApi.setBackgroundColor([r, g, b, a]);\n\n\t\tthis.gl.clearColor(r, g, b, a);\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\t};\n\n\tthis.getExtension = function (name) {\n\t\tvar ext = this.extensions[name];\n\t\tif (ext) return ext;\n\t\treturn this.extensions[name] = this.gl.getExtension(name);\n\t};\n\n\tthis.redraw = function () {\n\t\tif (this.anim_req) return;\n\t\tthis.anim_req = true;\n\n\t\tthis.time = 0;\n\t\tsetTimeout(function () {\n\t\t\tthis.animFrame(this.time);\n\t\t}.bind(this), 0);\n\t};\n\n\tthis.bindFramebuffer = function (frame) {\n\t\tif (!frame) frame = this.main_frame;\n\n\t\tthis.frame = frame;\n\t\tthis.size = vec2(frame.size[0] / frame.ratio, frame.size[1] / frame.ratio);\n\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frame.glframe_buf || null);\n\t\tthis.gl.viewport(0, 0, frame.size[0], frame.size[1]);\n\n\t\t// Set the layer to use (root layer if frame.headless_layer doesn't exist)\n\t\t//TODO When layers are used, use framebuffers to render them.\n\t\t//this.HeadlessApi.setLayer(frame.headless_layer);\n\t};\n\n\tthis.readPixels = function (x, y, w, h) {\n\t\tvar buf = new Uint8Array(w * h * 4);\n\t\tthis.gl.readPixels(x, y, w, h, this.gl.RGBA, this.gl.UNSIGNED_BYTE, buf);\n\t\treturn buf;\n\t};\n\n\tthis.doPick = function () {\n\t\tthis.pick_timer = 0;\n\t\tvar x = this.pick_x,\n\t\t    y = this.pick_y;\n\n\t\tif (!this.first_draw_done) {\n\t\t\tthis.doColor(this.last_time);\n\t\t}\n\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\t\t\tvar last = i === len - 1;\n\t\t\tvar skip = false;\n\t\t\tvar view = this.drawpass_list[i];\n\n\t\t\t// little hack to dont use rtt if you only use a single view\n\t\t\tif (view.parent == this.screen && view.flex == 1 && this.screen.children.length === 1) {\n\t\t\t\tskip = last = true;\n\t\t\t}\n\t\t\t// lets set up glscissor on last\n\t\t\t// and then read the goddamn pixel\n\t\t\tif (last || view.draw_dirty & 2) {\n\t\t\t\tview.draw_dirty &= 1;\n\t\t\t\tview.drawpass.drawPick(last, i + 1, x, y, this.debug_pick);\n\t\t\t}\n\t\t\tif (skip) {\n\t\t\t\tthis.screen.draw_dirty &= 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// now lets read the pixel under the mouse\n\t\tvar pick_resolve = this.pick_resolve;\n\t\tthis.pick_resolve = [];\n\n\t\tif (this.debug_pick) {\n\t\t\tvar data = this.readPixels(x * this.ratio, this.main_frame.size[1] - y * this.ratio, 1, 1);\n\t\t} else {\n\t\t\tvar data = this.readPixels(0, 0, 1, 1);\n\t\t}\n\n\t\t// decode the pass and drawid\n\t\tvar passid = data[0]; //(data[0]*43)%256\n\t\tvar drawid = data[2] << 8 | data[1]; //*60777)%65536\n\t\t// lets find the view.\n\t\tvar passview = this.drawpass_list[passid];\n\t\tvar drawpass = passview && passview.drawpass;\n\t\tvar view = drawpass && drawpass.draw_list[drawid];\n\n\t\twhile (view && view.nopick) {\n\t\t\tview = view.parent;\n\t\t}\n\n\t\tfor (var i = 0; i < pick_resolve.length; i++) {\n\t\t\tpick_resolve[i](view);\n\t\t}\n\t};\n\n\tthis.pickScreen = function (x, y) {\n\t\t// promise based pickray rendering\n\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\tthis.pick_resolve.push(resolve);\n\t\t\tthis.pick_x = x;\n\t\t\tthis.pick_y = y;\n\t\t\tif (!this.pick_timer) {\n\t\t\t\tthis.pick_timer = setTimeout(this.doPick, 0);\n\t\t\t}\n\t\t\t//this.doPick()\n\t\t}.bind(this));\n\t};\n\n\tthis.doColor = function (time) {\n\t\tif (!this.first_time) this.first_time = time;\n\t\tthis.last_time = time;\n\n\t\tif (!this.screen) return;\n\n\t\tthis.first_draw_done = true;\n\n\t\tvar stime = (time - this.first_time) / 1000;\n\t\t//console.log(this.last_time - stime)\n\n\t\t// lets layout shit that needs layouting.\n\t\tvar anim_redraw = this.anim_redraws;\n\t\tanim_redraw.length = 0;\n\t\tthis.screen.doAnimation(stime, anim_redraw);\n\n\t\tthis.screen._maxsize = this.screen._size = vec2(this.main_frame.size[0] / this.ratio, this.main_frame.size[1] / this.ratio);\n\t\t// do the dirty layouts\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.layout_dirty) {\n\t\t\t\tview.doLayout();\n\t\t\t\tview.layout_dirty = false;\n\t\t\t}\n\t\t}\n\n\t\t// do the dirty matrix regen\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.matrix_dirty) {\n\t\t\t\tview.updateMatrices(view.parent ? view.parent.totalmatrix : undefined, view._viewport);\n\t\t\t}\n\t\t}\n\n\t\tvar clipview = undefined;\n\t\t// lets draw draw all dirty passes.\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\n\t\t\tvar view = this.drawpass_list[i];\n\t\t\tvar skip = false;\n\t\t\tvar last = i === len - 1;\n\t\t\tif (view.parent == this.screen && view.flex == 1 && this.screen.children.length === 1) {\n\t\t\t\tskip = last = true;\n\t\t\t}\n\t\t\tif (view.draw_dirty & 1 || last) {\n\n\t\t\t\tif (!last) {\n\t\t\t\t\tif (clipview === undefined) clipview = view;else clipview = null;\n\t\t\t\t}\n\n\t\t\t\tvar hastime = view.drawpass.drawColor(last, stime);\n\t\t\t\tview.draw_dirty &= 2;\n\t\t\t\tif (hastime) {\n\t\t\t\t\tanim_redraw.push(view);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skip) {\n\t\t\t\tthis.screen.drawpass.calculateDrawMatrices(false, this.screen.drawpass.colormatrices);\n\n\t\t\t\tthis.screen.draw_dirty &= 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (anim_redraw.length) {\n\t\t\tfor (var i = 0; i < anim_redraw.length; i++) {\n\t\t\t\tanim_redraw[i].redraw();\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t// console.log('ACTORS', HeadlessApi.stage);\n\t\treturn hastime;\n\t};\n\n\tthis.atNewlyRendered = function (view) {\n\t\t// if view is not a layer we have to find the layer, and regenerate that whole layer.\n\t\tif (!view.parent) this.screen = view; // its the screen\n\t\t// alright lets do this.\n\t\tvar node = view;\n\t\twhile (!node._viewport) {\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (!node.parent) {\n\t\t\t// fast path to chuck the whole set\n\t\t\t//console.log(\"FLUSHING ALL\")\n\t\t\t// lets put all the drawpasses in a pool for reuse\n\t\t\tfor (var i = 0; i < this.drawpass_list.length; i++) {\n\t\t\t\tvar draw = this.drawpass_list[i];\n\t\t\t\tdraw.drawpass.poolDrawTargets();\n\t\t\t\tdraw.layout_dirty = true;\n\t\t\t\tdraw.draw_dirth = 3;\n\t\t\t}\n\t\t\tthis.drawpass_list = [];\n\t\t\tthis.layout_list = [];\n\t\t\tthis.drawpass_idx = 0;\n\t\t\tthis.layout_idx_first = 0;\n\t\t\tthis.layout_idx = 0;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t\tthis.first_draw_done = false;\n\t\t\tthis.redraw();\n\t\t} else {\n\t\t\t// else we remove drawpasses first then re-add them\n\t\t\tthis.removeDrawPasses(node);\n\t\t\tthis.layout_idx_first = this.layout_idx;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t}\n\t\tnode.relayout();\n\t};\n\n\t// internal, remove drawpasses related to a view\n\tthis.removeDrawPasses = function (view) {\n\t\t// we have to remove all the nodes which have view as their parent layer\n\t\tvar drawpass_list = this.drawpass_list;\n\t\tthis.drawpass_idx = Infinity;\n\t\tfor (var i = 0; i < drawpass_list.length; i++) {\n\t\t\tvar node = drawpass_list[i];\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.drawpass_idx) this.drawpass_idx = i;\n\t\t\t\tnode.drawpass.poolDrawTargets();\n\t\t\t\tdrawpass_list.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.drawpass_idx === Infinity) this.drawpass_idx = 0;\n\t\t// now remove all layouts too\n\t\tthis.layout_idx = Infinity;\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tvar pass = layout_list[i];\n\t\t\tvar node = pass;\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.layout_idx) this.layout_idx = i;\n\t\t\t\tlayout_list.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif (this.layout_idx === Infinity) this.layout_idx = 0;\n\t};\n\n\t// internal, add drawpasses and layouts recursively from a view\n\tthis.addDrawPassRecursive = function (view) {\n\t\t// lets first walk our children( depth first)\n\t\tvar children = view.children;\n\t\tif (children) for (var i = 0; i < children.length; i++) {\n\t\t\tthis.addDrawPassRecursive(children[i]);\n\t\t}\n\n\t\t// lets create a drawpass\n\t\tif (view._viewport) {\n\t\t\tvar pass = new this.DrawPass(this, view);\n\t\t\tthis.drawpass_list.splice(this.drawpass_idx, 0, view);\n\t\t\tthis.drawpass_idx++;\n\t\t\t// lets also add a layout pass\n\t\t\tif (isNaN(view._flex)) {\n\t\t\t\t// if not flex, make sure layout runs before the rest\n\t\t\t\t// we are self contained\n\t\t\t\tthis.layout_list.splice(this.layout_idx_first, 0, view);\n\t\t\t} else {\n\t\t\t\t// we are flex, make sure we layout after\n\t\t\t\tthis.layout_list.splice(this.layout_idx, 0, view);\n\t\t\t}\n\t\t\t//this.layout_idx++\n\t\t}\n\t};\n\n\tthis.relayout = function () {\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tview = layout_list[i];\n\t\t\tif (!isNaN(view._flex) || view == this.screen) {\n\t\t\t\tview.relayout();\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.atResize = function () {\n\t\t// lets relayout the whole fucker\n\t\tthis.relayout();\n\t\tthis.redraw();\n\t\t// do stuff\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/deviceheadless.js\n// module id = 163\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/deviceheadless.js?");

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, baseclass) {\n\t// internal, drawing\n\tvar Shader = requireDreem('./shaderheadless');\n\n\t/**\n  * @method DrawPass constructor\n  * @param {Object} gldevice Instance of DeviceHeadless\n  * @param {Object} view Instance of View\n  */\n\tthis.atConstructor = function (gldevice, view) {\n\t\tthis.device = gldevice;\n\t\tthis.view = view;\n\t\tview.drawpass = this;\n\t\t// lets do the flatten\n\t\tthis.pickmatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\n\t\tthis.colormatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\n\t\tthis.debugrect = new DebugRect();\n\t};\n\n\tthis.atDestroy = function () {\n\t\tthis.releaseTexture();\n\t};\n\n\tthis.poolDrawTargets = function () {\n\t\tvar pools = this.device.drawtarget_pools;\n\t\tif (!this.drawtargets) return;\n\t\tfor (var i = 0; i < this.drawtargets.length; i++) {\n\t\t\tvar dt = this.drawtargets[i];\n\t\t\tif (!pools[dt]) pools[dt] = [];\n\t\t\tpools[dt].push(this[dt]);\n\t\t\tthis[dt] = null;\n\t\t}\n\t};\n\n\tthis.allocDrawTarget = function (width, height, view, drawtarget, passid) {\n\t\t//console.log('allocDrawTarget', width, height, drawtarget, passid);\n\t\twidth = floor(width);\n\t\theight = floor(height);\n\t\tvar Texture = this.device.Texture;\n\t\tif (!this.drawtargets) this.drawtargets = [];\n\t\tif (this.drawtargets.indexOf(drawtarget) === -1) this.drawtargets.push(drawtarget);\n\t\tvar dt = this[drawtarget];\n\t\t//var twidth = this.nextPowerTwo(layout.width* main_ratio), theight = this.nextPowerTwo(layout.height* main_ratio)\n\t\tif (!dt) {\n\t\t\t// lets scan the pools for a suitable drawtarget, otherwise create it\n\t\t\tvar pool = this.device.drawtarget_pools[drawtarget];\n\t\t\tif (pool && pool.length) {\n\t\t\t\t// first find a drawtarget with the same size\n\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\tvar size = tgt.size;\n\t\t\t\t\tif (size[0] === width && size[1] === height) {\n\t\t\t\t\t\t// lets remove it from the pool\n\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// then we find a drawtarget with the same passid as last time\n\t\t\t\tif (!dt) {\n\t\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\t\tif (passid === tgt.passid) {\n\t\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// otherwise we create a new one\n\t\t\tif (!dt) {\n\t\t\t\tdt = this[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : Texture.RGBA | Texture.DEPTH | Texture.STENCIL, width, height, this.device);\n\t\t\t} else this[drawtarget] = dt;\n\t\t\tdt.passid = passid;\n\t\t}\n\t\t// make sure the drawtarget has the right size\n\t\tvar tsize = this[drawtarget].size;\n\t\tif (width !== tsize[0] || height !== tsize[1]) {\n\t\t\tthis[drawtarget].delete();\n\t\t\tthis[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : Texture.RGBA | Texture.DEPTH | Texture.STENCIL, width, height, this.device);\n\t\t}\n\t};\n\n\tthis.calculateDrawMatrices = function (isroot, storage, mousex, mousey) {\n\t\tvar view = this.view;\n\t\tvar scroll = view._scroll;\n\t\tvar layout = view._layout;\n\n\t\tif (view._viewport === '2d') {\n\t\t\tif (isroot && mousex !== undefined) {\n\t\t\t\tvar sizel = 0;\n\t\t\t\tvar sizer = 1;\n\t\t\t\tmat4.ortho(scroll[0] + mousex - sizel, scroll[0] + mousex + sizer, scroll[1] + mousey - sizer, scroll[1] + mousey + sizel, -100, 100, storage.viewmatrix);\n\t\t\t\tmat4.ortho(mousex - sizel, mousex + sizer, mousey - sizer, mousey + sizel, -100, 100, storage.noscrollmatrix);\n\t\t\t} else {\n\t\t\t\tvar zoom = view._zoom;\n\t\t\t\tif (isroot) {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], scroll[1], layout.height * zoom + scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, 0, layout.height, -100, 100, storage.noscrollmatrix);\n\t\t\t\t} else {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], layout.height * zoom + scroll[1], scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, layout.height, 0, -100, 100, storage.noscrollmatrix);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (view._viewport === '3d') {\n\t\t\tstorage.perspectivematrix = mat4.perspective(view._fov * PI * 2 / 360.0, layout.width / layout.height, view._nearplane, view._farplane);\n\t\t\tstorage.lookatmatrix = mat4.lookAt(view._camera, view._lookat, view._up);\n\t\t\tstorage.viewmatrix = mat4.mat4_mul_mat4(storage.lookatmatrix, storage.perspectivematrix);\n\t\t}\n\t};\n\n\tfunction isInBounds2D(view, draw) {\n\t\tif (draw.noboundscheck) return true;\n\t\tvar height = view._layout.height;\n\t\tvar width = view._layout.width;\n\t\tvar drawlayout = draw._layout;\n\n\t\tif (draw.parent && draw.parent !== view) {\n\t\t\tdrawlayout.absx = draw.parent._layout.absx + drawlayout.left;\n\t\t\tdrawlayout.absy = draw.parent._layout.absy + drawlayout.top;\n\t\t} else {\n\t\t\tdrawlayout.absx = drawlayout.left;\n\t\t\tdrawlayout.absy = drawlayout.top;\n\t\t}\n\n\t\t// if(draw === view && view.sublayout){\n\t\t// \twidth = view.sublayout.width\n\t\t// \theight = view.sublayout.height\n\t\t// }\n\n\t\t// early out check\n\t\t// if(draw !== view && !draw.noscroll){\n\t\t// \tvar scroll = view._scroll\n\t\t// \tvar zoom = view._zoom\n\t\t// \tif( drawlayout.absy - scroll[1] > height * zoom || drawlayout.absy + drawlayout.height - scroll[1] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// \tif(drawlayout.absx - scroll[0] > width * zoom || drawlayout.absx + drawlayout.width - scroll[0] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// }\n\t\treturn true;\n\t}\n\n\tthis.nextItem = function (draw) {\n\t\tvar view = this.view;\n\t\tvar next = (draw === view || !draw._viewport && draw._visible) && draw.children[0],\n\t\t    next_index = 0;\n\t\twhile (!next) {\n\t\t\t// skip to parent next\n\t\t\tif (draw === view) break;\n\t\t\tnext_index = draw.draw_index + 1;\n\t\t\tdraw = draw.parent;\n\t\t\tnext = draw.children[next_index];\n\t\t}\n\t\tif (next === view) return undefined;\n\t\tif (next) next.draw_index = next_index;\n\t\treturn next;\n\t};\n\n\tthis.drawPick = function (isroot, passid, mousex, mousey, debug) {\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\tif (isroot) {\n\t\t\tif (!debug) this.allocDrawTarget(1, 1, this.view, 'pick_buffer', passid);\n\t\t} else {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tratio = 1;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'pick_buffer', passid);\n\t\t}\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t\tdevice.bindFramebuffer(this.pick_buffer || null);\n\t\tdevice.clear(0, 0, 0, 0);\n\n\t\tvar matrices = this.pickmatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices, debug ? undefined : mousex, mousey);\n\t\t// calculate the colormatrices too\n\t\t//if(!this.colormatrices.initialized){\n\t\t//\tthis.calculateDrawMatrices(isroot, this.colormatrices)\n\t\t//}\n\n\t\tvar pickguid = vec3();\n\t\tpickguid[0] = passid / 255; //(((passid)*131)%256)/255\n\n\n\t\t// modulo inverse: http://www.wolframalpha.com/input/?i=multiplicative+inverse+of+31+mod+256\n\t\tvar pick_id = 0;\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 1;\n\n\t\t\tpick_id += draw.pickrange;\n\t\t\tif (!draw._visible || draw._first_draw_pick && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_pick = 1;\n\n\t\t\t\tvar id = pick_id; //(pick_id*29401)%65536\n\t\t\t\tpickguid[1] = (id & 255) / 255;\n\t\t\t\tpickguid[2] = (id >> 8) / 255;\n\n\t\t\t\tdraw.pickguid = pickguid[0] * 255 << 16 | pickguid[1] * 255 << 8 | pickguid[2] * 255;\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (!draw._visible) continue;\n\t\t\t\tif (draw._viewport && draw.drawpass !== this && draw.drawpass.pick_buffer) {\n\t\t\t\t\t// ok so the pick pass needs the alpha from the color buffer\n\t\t\t\t\t// and then hard forward the color\n\t\t\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\t\t\tif (view._viewport === '3d') {\n\t\t\t\t\t\t// dont do this!\n\t\t\t\t\t\tblendshader.depth_test = 'src_depth <= dst_depth';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblendshader.depth_test = '';\n\t\t\t\t\t}\n\t\t\t\t\tblendshader.texture = draw.drawpass.pick_buffer;\n\t\t\t\t\tblendshader._width = draw.layout.width;\n\t\t\t\t\tblendshader._height = draw.layout.height;\n\t\t\t\t\tblendshader.drawArrays(this.device);\n\t\t\t\t} else {\n\t\t\t\t\t//draw.updateShaders()\n\t\t\t\t\t// alright lets iterate the shaders and call em\n\t\t\t\t\tvar shaders = draw.shader_draw_list;\n\t\t\t\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t\t\t\tvar shader = shaders[j];\n\n\t\t\t\t\t\tshader.pickguid = pickguid;\n\t\t\t\t\t\tif (!shader.visible) continue;\n\t\t\t\t\t\tif (draw.pickalpha !== undefined) shader.pickalpha = draw.pickalpha;\n\t\t\t\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\t\t\tshader.drawArrays(this.device, 'pick');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw);\n\t\t}\n\t};\n\n\tthis.getDrawID = function (id) {\n\t\tvar view = this.view;\n\t\tvar draw = view;\n\t\tvar pick_id = 0;\n\t\twhile (draw) {\n\n\t\t\tif (id > pick_id && id <= pick_id + draw.pickrange) {\n\t\t\t\tdraw.last_pick_id = pick_id + draw.pickrange - id;\n\t\t\t\treturn draw;\n\t\t\t}\n\n\t\t\tpick_id += draw.pickrange;\n\n\t\t\tdraw = this.nextItem(draw);\n\t\t}\n\t};\n\n\tthis.drawBlend = function (draw) {\n\t\tif (!draw.drawpass.color_buffer) {\n\t\t\tconsole.error(\"Null color_buffer detected\");\n\t\t} else {\n\t\t\t// ok so when we are drawing a pick pass, we just need to 1 on 1 forward the color data\n\t\t\t// lets render the view as a layer\n\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\tif (this.view._viewport === '3d') {\n\t\t\t\tblendshader.depth_test = 'src_depth <= dst_depth';\n\t\t\t} else {\n\t\t\t\tblendshader.depth_test = '';\n\t\t\t}\n\t\t\tblendshader.texture = draw.drawpass.color_buffer;\n\t\t\tblendshader.width = draw._layout.width;\n\t\t\tblendshader.height = draw._layout.height;\n\t\t\tblendshader.drawArrays(this.device);\n\t\t}\n\t};\n\n\tthis.drawNormal = function (draw, matrices) {\n\t\tdraw.updateShaders();\n\t\tvar count = 0;\n\t\t// alright lets iterate the shaders and call em\n\t\tvar shaders = draw.shader_draw_list;\n\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t// lets draw em\n\t\t\tvar shader = shaders[j];\n\t\t\tif (shader.pickonly || !shader.visible) continue; // was pick only\n\t\t\t// we have to set our guid.\n\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\tcount++;\n\t\t\tshader.drawArrays(this.device);\n\t\t}\n\t\treturn count;\n\t};\n\n\tthis.drawColor = function (isroot, time, clipview) {\n\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tvar count = 0;\n\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\t// lets see if we need to allocate our framebuffer..\n\t\tif (!isroot) {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'color_buffer');\n\t\t}\n\n\t\tthis.device.bindFramebuffer(this.color_buffer || null);\n\n\t\tif (layout.width === 0 || layout.height === 0) return false;\n\n\t\tdevice.clear(view._clearcolor);\n\n\t\tvar hastime = false;\n\t\tvar zoom = view._zoom;\n\n\t\tvar matrices = this.colormatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices);\n\t\tview.colormatrices = matrices;\n\n\t\tgl.disable(gl.SCISSOR_TEST);\n\n\t\tif (isroot) {\n\t\t\t/*\n   if(clipview){\n   \tvar ratio = this.device.frame.ratio\n   \tvar xs = this.device.frame.size[0] / ratio\n   \tvar ys = this.device.frame.size[1] / ratio\n   \tvar clayout = clipview._layout\n   \tvar c1 = vec2.mul_mat4(vec2(0, 0),clipview.viewportmatrix)\n   \tvar c2 = vec2.mul_mat4(vec2(clayout.width, clayout.height),clipview.viewportmatrix)\n   \tvar x1 = c1[0], y1 = c1[1], x2 = c2[0] - x1, y2 = c2[1] - y1\n   \tgl.enable(gl.SCISSOR_TEST)\n   \tgl.scissor((x1)*ratio, (ys - y2 - y1)*ratio, x2 * ratio, (y2)*ratio)//x1*2, y1*2, x2*2, y2*2)\n   }\n   */\n\t\t}\n\n\t\tdevice.clear(view._clearcolor);\n\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 2;\n\n\t\t\t//}\n\t\t\t//for(var dl = this.draw_list, i = 0; i < dl.length; i++){\n\t\t\t//\tvar draw = dl[i]\n\t\t\tif (!draw._visible || draw._first_draw_color && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_color = 1;\n\n\t\t\t\t//if(view.constructor.name === 'slideviewer')console.log('here',draw.constructor.name, draw.text)\n\t\t\t\tdraw._time = time;\n\t\t\t\tif (draw._listen_time || draw.ontime) hastime = true;\n\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (draw.atDraw) draw.atDraw(this);\n\t\t\t\tif (draw._viewport && draw.drawpass !== this) {\n\t\t\t\t\tthis.drawBlend(draw);\n\t\t\t\t} else {\n\t\t\t\t\tcount += this.drawNormal(draw, matrices);\n\t\t\t\t}\n\n\t\t\t\tif (draw.debug_view) {\n\t\t\t\t\tthis.debugrect.view = draw;\n\t\t\t\t\tthis.debugrect.drawArrays(this.device);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw);\n\t\t}\n\t\t//console.log(count)\n\t\treturn hastime;\n\t};\n\n\tvar DebugRect = defineDreem.class(Shader, function () {\n\t\tthis.view = { totalmatrix: mat4(), viewmatrix: mat4(), layout: { width: 0, height: 0 } };\n\n\t\tthis.mesh = vec2.array();\n\t\tthis.mesh.pushQuad(0, 0, 1, 0, 0, 1, 1, 1);\n\n\t\tthis.position = function () {\n\t\t\treturn vec4(vec2(mesh.x * view.layout.width, mesh.y * view.layout.height), 0, 1) * view.totalmatrix * view.viewmatrix;\n\t\t};\n\t\tthis.color = function () {\n\t\t\treturn vec4(1, 0, 0, 0.5);\n\t\t};\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/drawpassheadless.js\n// module id = 164\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/drawpassheadless.js?");

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessActor\n * Simulate an actor (modeled from DALi platform).\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessactor object\n\tvar HeadlessActor = exports;\n\tHeadlessActor.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a headless.Actor object with default parameters\n  * You can access the headless.Actor object as this.headlessactor\n  * @param {Object} view The view object the actor belongs to\n  */\n\tthis.atConstructor = function (view) {\n\t\tthis.object_type = 'HeadlessActor';\n\n\t\tvar headless = HeadlessApi.headless;\n\n\t\t// Current values\n\t\tthis.props = {};\n\n\t\t// Cache the property values (uniforms) to minimize writes.\n\t\tthis.property_cache = {};\n\n\t\t// Keep a copy of the view in case it is useful.\n\t\tthis.id = ++HeadlessActor.GlobalId;\n\t\tthis.view = view;\n\t\tthis.onstage = false;\n\n\t\t// The width/height of the actor to stored in a view's layout\n\t\tvar layout = view.view._layout;\n\t\tvar width = layout.width || 100;\n\t\tvar height = layout.height || 100;\n\n\t\tthis.size = [width, height, 0];\n\t};\n\n\t/**\n  * @method addRenderer\n  * Add a renderer to the actor.\n  * @param {Object} HeadlessRenderer object to add. Adding the first renderer\n  *\t\t\t\t\t\t\t\t also adds the object to the stage.\n  */\n\tthis.addRenderer = function (renderer) {\n\t\tthis.headlessrenderer = renderer;\n\n\t\t// Add the actor to the stage\n\t\tif (!this.onstage) {\n\t\t\tHeadlessApi.addActor(this);\n\t\t\tthis.onstage = true;\n\t\t}\n\t};\n\n\t/**\n  * @method setColor\n  * Specify the color of the actor\n  * @param {object} color 4 element array of [r,g,b,a]\n  */\n\tHeadlessApi.setColor = function (color) {\n\t\tthis.headlessactor.color = color;\n\t};\n\n\t// Internal, method to format a single value when emitting headless code\n\tthis.formatSingle = function (value) {\n\t\tif (typeof value === 'undefined') return 0;\n\n\t\t// I've seen NaN values. Headless doesn't accept them\n\t\tif (isNaN(value) || value === null) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (typeof value === 'string' || typeof value === 'boolean') return value;\n\n\t\tvar ivalue = parseInt(value);\n\t\tif (value == ivalue) return ivalue;\n\n\t\treturn value;\n\t};\n\n\t// Internal, method to format a value when emitting headless code\n\tthis.formatValue = function (value) {\n\t\tif (!Array.isArray(value)) return this.formatSingle(value);\n\n\t\tvar str = [];\n\t\tfor (var i in value) {\n\t\t\tstr.push(this.formatSingle(value[i]));\n\t\t}\n\n\t\treturn str.join(', ');\n\t};\n\n\t/**\n  * @method setUniformValue\n  * Sets a uniform value. If a value exists in the cache (and has changed),\n  * the property is set directly. Otherwise, registerAnimatableProperty\n  * is called.\n  * @param {string} Name of uniform to set\n  * @param {Object} Compiled uniform structure\n  */\n\tthis.setUniformValue = function (name, uni) {\n\t\tvar val = HeadlessApi.getArrayValue(uni);\n\t\tvar key = '_' + name;\n\n\t\t// Do nothing if the value has not changed\n\t\tvar hash = HeadlessApi.getHash(val);\n\t\tvar lasthash = this.property_cache[name];\n\t\tif (lasthash && lasthash == hash) return;\n\n\t\tvar fval = this.formatValue(val);\n\n\t\tthis.props[key] = val;\n\t\tthis.property_cache[name] = hash;\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlessactor' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\t\tvar states = this.headlessrenderer.currentstate(verbose);\n\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\tvar props = [];\n\t\t\tvar keys = Object.keys(this.props).sort();\n\t\t\tfor (var i in keys) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tvar prop = {};\n\n\t\t\t\t// Format the values. This might be an array\n\t\t\t\tvar vals = this.props[key];\n\t\t\t\tvar v;\n\t\t\t\tif (Array.isArray(vals)) {\n\t\t\t\t\tv = [];\n\t\t\t\t\tfor (var i in vals) {\n\t\t\t\t\t\tv.push(parseFloat(vals[i].toFixed(4)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tv = parseFloat(vals.toFixed(4));\n\t\t\t\t}\n\n\t\t\t\tprop[key] = v;\n\t\t\t\tprops.push(prop);\n\t\t\t}\n\n\t\t\tvar state = [{ name: this.name() }, { renderer: this.headlessrenderer.name() }, { onstage: this.onstage }];\n\t\t\tif (props.length > 0) state.push({ props: props });\n\n\t\t\tstates.push(state);\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\t//HACK\n\t\tthis.currentstate();\n\n\t\tvar obj = { headlessActor: this.id, obj: [this.headlessrenderer.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_actor.js\n// module id = 165\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_actor.js?");

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessApi\n * Top-level, static, class to manage the headless stage.\n */\n\ndefineDreem.class(function (exports) {\n\tvar HeadlessApi = exports;\n\n\t/**\n  * @property stage\n  * The list of displayed objects. Layer objects are added to the stage,\n   * and actor objects are added to layers.\n  */\n\tHeadlessApi.stage = [];\n\n\t// Size of display\n\tHeadlessApi.size = { x: 0, y: 0 };\n\n\t// Duration of the test. 0 = run once and stop\n\tHeadlessApi.duration = 0;\n\n\t// Resolution of display\n\tHeadlessApi.dpi = { x: 72, y: 72 };\n\n\t// Background color of the stage\n\tHeadlessApi.bgcolor = null;\n\n\t// Verbose mode controls additional output\n\tHeadlessApi.verbose = false;\n\n\t// Geometry types (same values as webgl)\n\texports.Geometry = { POINTS: 0x0, LINES: 0x1, LINE_LOOP: 0x2, LINE_STRIP: 0x3, TRIANGLES: 0x4, TRIANGLE_STRIP: 0x5, TRIANGLE_FAN: 0x6 };\n\n\t// Create all actors on a layer to ignore depth test.\n\t// (From Nick: When using this mode any ordering would be with respect to\n\t// depthIndex property of Renderers.)\n\tHeadlessApi.rootlayer = undefined;\n\n\t// The current layer to use when adding actors. Set by setLayer(). If\n\t// currentlayer is never set, the root layer (HeadlessApi.rootlayer) is used.\n\t// Actors are added in order so the normal order of execution is:\n\t//   - Create a HeadlessLayer object,\n\t//   - Call HeadlessApi.setLayer to make this layer the current layer\n\t//   - Add actors using HeadlessApi.addActor. This will use the current layer\n\t//     if none was specified.\n\t//   - Repeat the above process. You can reset the current layer by\n\t//     passing null to HeadlessApi.setLayer\n\tHeadlessApi.currentlayer = undefined;\n\n\t/**\n  * @method setLayer\n  * Static method to specify the layer to use when actors are added to the\n  * stage. Simple applications will never call this method because the\n  * default layer is sufficient.\n  * @param {object} layer HeadlessLayer object to use. If missing, the built-in\n  *                       root layer is used.\n  */\n\tHeadlessApi.setLayer = function (layer) {\n\t\tif (!layer) layer = HeadlessApi.rootlayer;\n\n\t\tHeadlessApi.currentlayer = layer;\n\t};\n\n\t/**\n  * @method addActor\n  * Static method to add an actor to the stage.\n  * In our usage, it will add the actor to the current layer. The second\n  * parameter is optional and specifies the HeadlessLayer object to use.\n  * @param {object} actor HeadlessActor object\n  * @param {object} layer HeadlessLayer object to use. If missing, the current\n  *                 layer is used.\n  */\n\tHeadlessApi.addActor = function (actor, layer) {\n\t\tif (!layer) layer = HeadlessApi.currentlayer;\n\n\t\tlayer.add(actor);\n\t};\n\n\t/**\n  * @method initialize\n  * Static method to initialize and create the headless stage. This method is\n  * called when headless starts running.\n  * @param {Hash} Settings\n   *   width Width of stage\n  *   height Height of stage\n  *   name Name of stage\n  *   duration Duration of test (msec). Default=0 (one iteration)\n   *   verbose true to generate additional output\n  */\n\tHeadlessApi.initialize = function (settings) {\n\t\tHeadlessLayer = requireDreem('./headless_layer');\n\n\t\tHeadlessApi.size = { x: settings.width, y: settings.height };\n\t\tHeadlessApi.duration = settings.duration;\n\t\tHeadlessApi.name = settings.name;\n\t\tHeadlessApi.verbose = settings.verbose;\n\t\tHeadlessApi.dumpstate = settings.dumpstate;\n\n\t\ttry {\n\t\t\t// Create a top-level layer to the stage. \n\t\t\tHeadlessApi.rootlayer = HeadlessApi.currentlayer = new HeadlessLayer(null, settings.width, settings.height);\n\t\t\tHeadlessApi.stage.push(HeadlessApi.rootlayer);\n\t\t} catch (e) {\n\t\t\tconsole.error('Failed to load headless');\n\t\t\tconsole.log(e.stack);\n\t\t}\n\t};\n\n\t/**\n  * @method terminate\n  * Static method which is called when the composition is finished running.\n  * (see the duration argument on the command line)\n  */\n\tHeadlessApi.terminate = function () {\n\t\tif (HeadlessApi.verbose) console.log('Terminate');\n\n\t\t// Dump the object state, if enabled, to a file\n\t\tif (HeadlessApi.dumpstate && HeadlessApi.dumpstate.length > 0) {\n\t\t\tvar state = HeadlessApi.currentstate(true);\n\t\t\tvar state_json = JSON.stringify(state, null, 2);\n\n\t\t\t// Write to the specified file, or stdout\n\t\t\tvar file = HeadlessApi.dumpstate.toString();\n\t\t\tif (file === 'stdout') {\n\t\t\t\tprocess.stdout.write(state_json);\n\t\t\t} else {\n\t\t\t\tvar fs = requireDreem('fs');\n\t\t\t\tfs.writeFileSync(file, state_json);\n\t\t\t}\n\t\t}\n\n\t\tprocess.exit(0);\n\t};\n\n\t/**\n  * @method currentstate\n  * Static method to return the json state of the composition.\n  * Objects are displayed in the order they are referenced.\n  */\n\tHeadlessApi.currentstate = function (verbose) {\n\t\tHeadlessApi.shownobjects = {};\n\n\t\tvar states = HeadlessApi.rootlayer.currentstate(verbose);\n\n\t\treturn states;\n\t};\n\n\t/**\n  * @method shownObject\n  * Static method to indicate a named object that has been displayed\n  * @param {objname} String Object name\n  */\n\tHeadlessApi.shownobjects = {};\n\tHeadlessApi.shownObject = function (objname) {\n\t\tHeadlessApi.shownobjects[objname] = 1;\n\t};\n\n\t/**\n  * @method isShown\n  * Static method to test if the named object has been shown.\n  * @param {objname} String Object name\n  */\n\tHeadlessApi.isShown = function (objname) {\n\t\treturn objname in HeadlessApi.shownobjects;\n\t};\n\n\tHeadlessApi.inspect = function () {\n\t\t// TODO Dump the object state if enabled\n\t\tvar output = HeadlessApi.rootlayer.inspect();\n\t\tconsole.log('rootlayer', output);\n\t};\n\n\t/**\n  * @method inspect\n  * Static method to return the json state of the composition.\n  */\n\tHeadlessApi.inspect = function () {\n\t\t// TODO Dump the object state if enabled\n\t\tvar output = HeadlessApi.rootlayer.inspect();\n\t\tconsole.log('rootlayer', output);\n\t};\n\n\t/**\n  * @method createHeadlessObjects\n  * Static method to create headless objects on the specified object. Most\n  * objects, such as actor and geometry are attached to a view using\n  * createHeadlessActor(). Currently, only the shader object is attached to\n  * object.\n  * @param {object} obj Object to attach headless objects to. This should\n  *                     already contain an element headlessshader. In webgl\n  *                     the object is an object created by gl.createProgram.\n  *                     In headless, a custom object is created in shaderheadless.js\n  *                     to hold the compiled state of the shader. This object\n  *                     also holds an instance of HeadlessShader.\n  * @param {object} shader Instance with runtime values (ex. hardrect)\n  */\n\tHeadlessApi.createHeadlessObjects = function (obj, shader) {\n\t\tif (!obj.headlessshader) {\n\t\t\tconsole.log('WARNING. createHeadlessObjects cannot find HeadlessShader', Object.keys(obj));\n\t\t}\n\n\t\tobj.dreem_obj = shader;\n\t};\n\n\t/**\n  * @method createHeadlessActor\n  * Static method to create headless.Actor object on the specified object,\n  * using headless geometries located in another object. A Material and Renderer\n  * are also created on the object.\n  * @param {object} obj Object to attach headless actor to. This is a view\n  *                 object.\n  * @param {object} shader Shader object containing compiled shader\n  *                 information (from createHeadlessObjects).\n  */\n\tHeadlessApi.createHeadlessActor = function (obj, shader) {\n\t\tHeadlessGeometry = requireDreem('./headless_geometry');\n\t\tHeadlessMaterial = requireDreem('./headless_material');\n\t\tHeadlessRenderer = requireDreem('./headless_renderer');\n\t\tHeadlessActor = requireDreem('./headless_actor');\n\n\t\t// TODO: Re-use the geometry, unless we have a texture\n\t\tobj.headlessgeometry = new HeadlessGeometry(obj.drawtype);\n\t\tobj.headlessgeometry.addGeometry(shader.dreem_obj);\n\n\t\t//console.log('Calling HeadlessMaterial with shader = ', shader.object_type);\n\t\tobj.headlessmaterial = new HeadlessMaterial(shader.headlessshader);\n\t\tobj.headlessrenderer = new HeadlessRenderer(obj.headlessgeometry, obj.headlessmaterial);\n\n\t\tobj.headlessactor = new HeadlessActor(obj);\n\t\tobj.headlessactor.addRenderer(obj.headlessrenderer);\n\t};\n\n\t/**\n  * @method setBackgroundColor\n  * Static method to set the background color of the stage\n  * @param {object} color 4 element array of [r,g,b,a]\n  */\n\tHeadlessApi.setBackgroundColor = function (color) {\n\t\tHeadlessApi.bgcolor = color;\n\t};\n\n\t/**\n  * @method headlessBuffer\n  * Static. Build a Headless property buffer, given a value, and type.\n  * value can be an array or a single value, but the value is a float.\n  * A cache is maintained to reuse proper buffers. The cache key is a\n  * hash value of the headless.PropertyBuffer (see HeadlessApi.getHash).\n  * @param {Object} vals Value to use. Either a single value or an\n  * array can be specified.\n  * @param {Object} Format hash, suitable for headless.PropertyBuffer.\n  * The hash looks like {name : type}. See headless docs for headless.PropertyBuffer.\n  * @param {Number} nrecs The number of records, in the buffer.\n  * @return {Object} [headless.PropertyBuffer, id]. This is the same value stored\n  * in the cache HeadlessApi.BufferCache.\n  */\n\tHeadlessApi.BufferId = 0;\n\tHeadlessApi.BufferCache = {}; // key: hash  value: [Headless.PropertyBuffer, id]\n\tHeadlessApi.headlessBuffer = function (vals, format, nrecs) {\n\t\t//console.log('headlessBuffer format', format, 'nrecs', nrecs, 'vals', vals.length);\n\t\tvar headless = HeadlessApi.headless;\n\n\t\t// Accept either an array or a single value\n\t\tvar data = vals.length ? vals : [vals];\n\n\t\t// console.trace('headlessBuffer with', nrecs, 'items', 'length = ', data.length);\n\n\t\t// Reuse an existing propertybuffer\n\t\tvar hash = HeadlessApi.getHash(vals);\n\t\tif (HeadlessApi.BufferCache[hash]) {\n\t\t\treturn HeadlessApi.BufferCache[hash];\n\t\t}\n\n\t\t// Create the headless.PropertyBuffer\n\t\tvar buffer = { format: format, nrecs: nrecs };\n\n\t\tHeadlessApi.BufferId += 1;\n\n\t\t// Write data to the buffer\n\t\t//console.log('numberItems', nrecs, data.length);\n\t\tHeadlessApi.writeHeadlessBuffer(buffer, HeadlessApi.BufferId, data);\n\n\t\tvar ret = [buffer, HeadlessApi.BufferId];\n\t\tHeadlessApi.BufferCache[hash] = ret;\n\t\treturn ret;\n\t};\n\n\t/**\n  * @method writeHeadlessBuffer\n  * Static. Write data to an existing headless.PropertyBuffer\n  * @param {Object} buffer headless.PropertyBuffer to write to.\n  * @param {Number} bufferid buffer index\n  * @param {Object} data An array of values to use.\n  * array can be specified.\n  */\n\tHeadlessApi.writeHeadlessBuffer = function (buffer, bufferid, data) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tvar dataArray = new Float32Array(data.length);\n\t\tdataArray.set(data);\n\t\tbuffer.data = dataArray;\n\n\t\treturn buffer;\n\t};\n\n\t/**\n  * @method getArrayValue\n  * Given the name of a uniform object, retrieve the array of values from \n  * the dreemgl compiled structure. In webgl this extraction happens inline.\n  * NaN and null values are converted to 0 (headless will error on these)\n  * @param {Object} obj Compiled object\n  * @return {Object} single value or array, or undefined if name not found.\n  */\n\tHeadlessApi.getArrayValue = function (obj) {\n\t\t// Detect, and return array data, if found. Array data is\n\t\t// found in struct.slots.\n\t\tif (obj && obj.struct && obj.struct.slots) {\n\t\t\tif (obj.struct.slots == 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar array = [];\n\t\t\tfor (var i = 0; i < obj.struct.slots; i++) {\n\t\t\t\tvar val = obj[i];\n\t\t\t\tif (isNaN(val) || val === null) val = 0;\n\n\t\t\t\tarray.push(val);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t}\n\n\t\t// Headless doesn't like NaN values\n\t\tvar val = obj;\n\t\tif (isNaN(val) || val === null) val = 0;\n\n\t\treturn val;\n\t};\n\n\t/**\n  * @method getHeadlessPropertySize\n  * Static. Return the number of elements required for a headless property, \n  * given the headless constant.\n  * @param {String} format property constant\n  * @return {Number} Number of elements\n  */\n\tHeadlessApi.getHeadlessPropertySize = function (format) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tswitch (format) {\n\t\t\tcase 'VEC2':\n\t\t\t\treturn 2;\n\t\t\tcase 'VEC3':\n\t\t\t\treturn 3;\n\t\t\tcase 'VEC4':\n\t\t\t\treturn 4;\n\t\t\tcase 'MAT3':\n\t\t\t\treturn 9;\n\t\t\tcase 'MAT4':\n\t\t\t\treturn 16;\n\t\t\tdefault:\n\t\t\t\treturn 1;\n\t\t}\n\t};\n\n\t/**\n  * @method getHeadlessPropertyType\n  * Static. Return the headless property name for a type, given its size\n  * @param {Number} bytes Number of bytes used by the data\n  * @return {Number} headless property type\n  */\n\tHeadlessApi.getHeadlessPropertyType = function (bytes) {\n\t\tvar headless = HeadlessApi.headless;\n\t\tvar type = 'FLOAT';\n\n\t\tswitch (bytes) {\n\t\t\tcase 4:\n\t\t\t\ttype = 'FLOAT';\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\ttype = 'VEC2';\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\ttype = 'VEC3';\n\t\t\t\tbreak;\n\t\t\tcase 16:\n\t\t\t\ttype = 'VEC4';\n\t\t\t\tbreak;\n\t\t\tcase 64:\n\t\t\t\ttype = 'MAT4';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.trace('UNKNOWN PROPERTY SIZE', bytes);\n\t\t\t\tbreak;\n\t\t};\n\n\t\treturn type;\n\t};\n\n\t/**\n  * @method getHash\n  * Static. Compute the hash of the specified data. The data is first\n  * converted to json, and an xor-like hash is used. These values are used\n  * as keys in caches.\n  * @param {Object} data Object to compute the hash\n  * @return {Number} Hash value\n  */\n\tHeadlessApi.getHash = function (data) {\n\t\tvar str = JSON.stringify(data);\n\n\t\t// Algorithm from: https://github.com/darkskyapp/string-hash/blob/master/index.js\n\t\tvar hash = 5381,\n\t\t    i = str.length;\n\n\t\twhile (i) {\n\t\t\thash = hash * 33 ^ str.charCodeAt(--i);\n\t\t}return hash >>> 0;\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_api.js\n// module id = 166\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_api.js?");

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessGeometry\n * Simulate a geometry\n * Modeled from DALi platform.\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessgeometry object\n\tvar HeadlessGeometry = exports;\n\tHeadlessGeometry.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a headless.Geometry object, using triangles\n  * You can access the headless.Geometry object as this.headlessgeometry\n  * @param {number} drawtype Line drawing type. headless uses the same values\n  *\t\t\t\t\t\t\t\t as webgl. The default is HeadlessApi.Geometry.TRIANGLES.\n  */\n\tthis.atConstructor = function (drawtype) {\n\t\tthis.object_type = 'HeadlessGeometry';\n\n\t\tvar headless = HeadlessApi.headless;\n\n\t\t// Keep track of all vertex_buffers added. This acts as a cache\n\t\t// Values = [format_hash, data_hash, vertex_index, vertex_buffer, buffer_id];\n\t\tthis.vertex_buffers = {};\n\n\t\tthis.id = ++HeadlessGeometry.GlobalId;\n\n\t\tdrawtype = drawtype || HeadlessApi.Geometry.TRIANGLES;\n\t\tthis.geometryType = drawtype;\n\t};\n\n\t/**\n  * @method addGeometry\n  * Add geometries (vertex buffers) given a dreem shader object\n  * @param {Object} dreem_shader Compiled data structure. (see shaderheadless.js)\n  */\n\tthis.addGeometry = function (dreem_shader) {\n\t\t//console.trace('addGeometry');\n\t\tvar headless = HeadlessApi.headless;\n\n\t\t// Make sure the correct object was passed. dreem_shader holds the\n\t\t// dreemgl compiled structures.\n\t\tif (!dreem_shader.vtx_state) {\n\t\t\tconsole.log('WARNING. Incorrect object passed to addGeometry', dreem_shader.object_type);\n\t\t\treturn;\n\t\t}\n\n\t\tvar dreem_attributes = dreem_shader.vtx_state.attributes;\n\n\t\t// If there are no keys, it means an object with no parameters\n\t\tvar keys = Object.keys(dreem_attributes);\n\t\tfor (var i in keys) {\n\t\t\t// The shader program uses a '_' at the beginning of the name\n\t\t\tvar name = keys[i];\n\t\t\tvar storedname = '_' + name;\n\n\t\t\t// I found that dreemgl keys with nested information (ie. has _DOT_)\n\t\t\t// do not require vertex.\n\t\t\tif (name.indexOf('_DOT_') > 0) {\n\t\t\t\t//console.log('HeadlessGeometry.addGeometry Skipping texture', name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// For each attribute, convert the data into an array\n\t\t\tvar obj = dreem_attributes[name];\n\t\t\tvar type = HeadlessApi.getHeadlessPropertyType(obj.bytes);\n\t\t\tvar nslots = HeadlessApi.getHeadlessPropertySize(type);\n\n\t\t\t// headless format is a hash of {name: type}\n\t\t\tvar format = {};\n\t\t\tformat[storedname] = type;\n\n\t\t\tvar data = [];\n\t\t\tvar arr = dreem_shader[name];\n\t\t\tif (arr && arr.array) {\n\t\t\t\t// Do not take all the (allocated) array. Take only length\n\t\t\t\tvar entries = nslots * arr.length;\n\t\t\t\tfor (var i = 0; i < entries; i++) {\n\t\t\t\t\tvar val = parseFloat(arr.array[i]);\n\t\t\t\t\tdata.push(val);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add or update a vertex buffer\n\t\t\t//console.log('updating', format, nslots);\n\t\t\tthis.updateVertexBuffer(storedname, data, format, nslots);\n\t\t}\n\t};\n\n\t/**\n  * @method addAttributeGeometryAlt\n  * Add other attribute geometries to a headless Actor. This version was used\n  * during testing to make sure Headless could handle the packed layout outlined\n  * in the docs.\n  *\n  * This version can be removed if no problems are found.\n  *\n  * @param {Object} shader_headless Compiled data structure\n  * @param {Object} attrlocs Compiled data structure\n  */\n\tthis.addAttributeGeometryAlt = function (shader_headless, attrlocs) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tif (Object.keys(attrlocs) == 0) return;\n\n\t\t// Write each value separately, in order to test the headless API.\n\t\t// The original version (see below) writes a composite\n\t\t// headless.PropertyBuffer.\n\n\t\tvar name;\n\t\tvar nslots = 0;\n\t\tfor (var key in attrlocs) {\n\t\t\tvar format = {};\n\t\t\tvar attrloc = attrlocs[key];\n\t\t\tname = attrloc.name;\n\n\t\t\tvar storedname = '_' + key;\n\t\t\tvar type = 'FLOAT';\n\n\t\t\t// Skip invalid entries\n\t\t\tif (typeof attrloc.slots === 'undefined') continue;\n\n\t\t\tswitch (attrloc.slots) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttype = 'FLOAT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttype = 'VEC2';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttype = 'VEC3';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\ttype = 'VEC4';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('addAttributeGeometry. Unknown type', attrloc.slots);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tformat[storedname] = type;\n\n\t\t\tif (attrloc.slots == 0) continue;\n\n\t\t\t// Extract the data from the array\n\t\t\tvar arr = shader_headless[name];\n\t\t\t//console.trace('**** addAttributeGeometry', name, arr.array.length);\n\n\t\t\tvar data = [];\n\t\t\tif (arr && arr.array) {\n\t\t\t\t// Find the offset and length of the data to extract\n\t\t\t\tvar record_offset = arr.slots;\n\t\t\t\tvar data_offset = attrloc.offset / 4; // attrloc.offset is bytes\n\n\t\t\t\tvar offset = 0;\n\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\tvar off = offset + data_offset;\n\t\t\t\t\tfor (var j = 0; j < attrloc.slots; j++) {\n\t\t\t\t\t\tvar val = parseFloat(arr.array[off++]);\n\t\t\t\t\t\tdata.push(val);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += record_offset;\n\t\t\t\t}\n\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tthis.updateVertexBuffer(key, data, format, attrloc.slots);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * @method addAttributeGeometry\n  * Add other attribute geometries to a headless Actor.\n  * @param {Object} shader_headless Compiled data structure\n  * @param {Object} attrlocs Compiled data structure\n  */\n\tthis.addAttributeGeometry = function (shader_headless, attrlocs) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tif (Object.keys(attrlocs) == 0) return;\n\n\t\t//TODO Support multiple names in the keys, like webgl\n\t\tvar format = {};\n\n\t\tvar name;\n\t\tvar nslots = 0;\n\t\tfor (var key in attrlocs) {\n\t\t\tvar attrloc = attrlocs[key];\n\t\t\tname = attrloc.name;\n\n\t\t\tvar storedname = '_' + key;\n\t\t\tvar type = 'FLOAT';\n\n\t\t\t// Skip invalid entries\n\t\t\tif (typeof attrloc.slots === 'undefined') continue;\n\n\t\t\tswitch (attrloc.slots) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttype = 'FLOAT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttype = 'VEC2';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttype = 'VEC3';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\ttype = 'VEC4';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('addAttributeGeometry. Unknown type', attrloc.slots);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tformat[storedname] = type;\n\t\t\tnslots += attrloc.slots;\n\t\t}\n\n\t\tif (!name || Object.keys(format).length == 0) return;\n\n\t\t//console.log('***************addAttributeGeometry******************');\n\t\t//console.log(attrlocs);\n\t\t//console.log('*****************************************************');\n\n\t\tvar arr = shader_headless[name];\n\n\t\tvar data = [];\n\n\t\tif (arr && arr.array) {\n\t\t\t// Do not take all the (allocated) array. Take only length elements.\n\t\t\t// There can be gaps in the stored array, so only the first nslots\n\t\t\t// are used.\n\t\t\tvar offset = 0;\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tfor (var j = 0; j < nslots; j++) {\n\t\t\t\t\tvar val = parseFloat(arr.array[offset++]);\n\t\t\t\t\tdata.push(val);\n\t\t\t\t}\n\t\t\t\toffset += arr.slots - nslots;\n\t\t\t}\n\t\t}\n\n\t\t// Add or update a vertex buffer\n\t\tif (data.length > 0) this.updateVertexBuffer('attribgeom', data, format, nslots);\n\t};\n\n\t/**\n  * @method updateVertexBuffer\n  * Add, or update a vertex buffer.\n  * @param {string} name Cached name\n  * @param {Object} data Object containing data to write\n  * @param {Object} format Hash of format information to write.\n  * @param {Number} nitems Number of items per record\n  */\n\tthis.updateVertexBuffer = function (name, data, format, nitems) {\n\t\tvar format_hash = HeadlessApi.getHash(format);\n\t\tvar data_hash = HeadlessApi.getHash(data);\n\n\t\t// index, buffer, and bufferindex are either built or come from cache\n\t\tvar index;\n\t\tvar buffer;\n\t\tvar bufferindex;\n\n\t\tvar cache = this.vertex_buffers[name];\n\t\tif (cache) {\n\t\t\tvar oformathash = cache[0];\n\t\t\tvar odatahash = cache[1];\n\t\t\tif (format_hash == oformathash) {\n\t\t\t\tif (data_hash == odatahash) {\n\t\t\t\t\t// No change to the value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reuse the vertex buffer\n\t\t\t\tindex = cache[2];\n\t\t\t\tbuffer = cache[3];\n\t\t\t\tbufferindex = cache[4];\n\t\t\t} else {\n\t\t\t\tindex = cache[2];\n\t\t\t\tconsole.log('addGeometry: vertex buffer already exists: ', name, index, '. Removing');\n\n\t\t\t\t//TODO headlesswrite\n\t\t\t\t//this.headlessgeometry.removeVertexBuffer(index);\n\t\t\t\tdelete this.vertex_buffers[name];\n\t\t\t}\n\t\t}\n\n\t\t// Generate the buffer\n\t\tif (!buffer) {\n\t\t\tvar ret = HeadlessApi.headlessBuffer(data, format, data.length / nitems);\n\t\t\tvar buffer = ret[0];\n\t\t\tbufferindex = ret[1];\n\t\t\t//index = this.headlessgeometry.addVertexBuffer(buffer);\n\t\t\tindex = 0;\n\n\t\t\t// Store the index so it can be removed later\n\t\t\tthis.vertex_buffers[name] = [format_hash, data_hash, index, buffer, bufferindex];\n\t\t} else {\n\t\t\t// Update an existing buffer using setData\n\t\t\tHeadlessApi.writeHeadlessBuffer(buffer, bufferindex, data);\n\t\t}\n\t};\n\n\t/**\n  * @method addVertices\n  * Add vertex attributes array to a headless Geometry. Format is very close\n  * to gl.vertexAttribPointer. Assumes float data\n  * @param {Object} array Buffer array\n  * @param {Number} index Index of attribute in the buffer\n  * @param {Number} size Number of components per attribute (1,2,3,4)\n  * @param {Number} stride Offset (bytes) between consecutive attributes\n  * @param {Number} offset Offset (bytes) to first attribute\n  * @param {Number} index Index of attribute in the buffer\n  * @return {Object} Index of vertex buffer\n  */\n\tthis.addVertices = function (name, array, slots, stride, offset) {\n\t\tconsole.log('addVertices IS NOT IMPLEMENTED');\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlessgeometry' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\n\t\tvar states = [];\n\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\t// Sort the vertex_buffers \n\t\t\tvar vertex_data = [];\n\t\t\tvar keys = Object.keys(this.vertex_buffers).sort();\n\n\t\t\tfor (var i in keys) {\n\t\t\t\t// Decompose the stored vertex_buffer data\n\t\t\t\tvar obj = this.vertex_buffers[keys[i]];\n\t\t\t\tvar buffer = obj[3];\n\t\t\t\tvar type = buffer.format;\n\n\t\t\t\tvar data = buffer.data;\n\t\t\t\tvar values = [];\n\t\t\t\tfor (var j in data) {\n\t\t\t\t\t// No more than 4 decimal places\n\t\t\t\t\tvalues.push(parseFloat(data[j].toFixed(4)));\n\t\t\t\t}\n\n\t\t\t\tvar vertex = [type, values];\n\t\t\t\tvertex_data.push(vertex);\n\t\t\t}\n\n\t\t\tvar state = [{ name: this.name() }, { type: this.geometryType }, { vertex_buffers: vertex_data }];\n\n\t\t\tstates = [state];\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\t//HACK\n\t\tthis.currentstate();\n\t\tvar obj = { headlessGeometry: this.id };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_geometry.js\n// module id = 167\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_geometry.js?");

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessLayer\n * Simulate a layer (an array of actors or layouts)\n * Modeled from DALi platform.\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessactor object\n\tvar HeadlessLayer = exports;\n\tHeadlessLayer.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a layout object with default parameters\n  * @param {Object} parent The layer object to add this layer to. If this\n  * is not defined, the layer is added to the top-level layer. If null,\n  * the layer is not added. The null case is used to initialize the\n  * root layer.\n  * @param {Number} width The width of the layer, in pixels.\n  * @param {Number} height The height of the layer, in pixels.\n  */\n\tthis.atConstructor = function (parent, width, height) {\n\t\tthis.object_type = 'HeadlessLayer';\n\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tthis.id = ++HeadlessLayer.GlobalId;\n\t\tthis.onstage = false;\n\t\tif (width && height) this.size = [width, height, 0];\n\n\t\t// The list of objects (actors or layers) belonging to this layer.\n\t\tthis.actors = [];\n\n\t\t// Add to another layer unless parent is null (root layer)\n\t\tif (typeof parent === 'undefined') parent = HeadlessApi.currentlayer;\n\t\tif (parent) {\n\t\t\tHeadlessApi.rootlayer.add(this);\n\t\t}\n\t};\n\n\t/**\n  * @method add\n  * Add an actor to this layer.\n  * @param {object} actor HeadlessActor or HeadlessLayer object\n  */\n\tthis.add = function (actor) {\n\t\tthis.actors.push(actor);\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlesslayer' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\t\tvar states = [];\n\t\tvar actors = [];\n\t\tfor (var i in this.actors) {\n\t\t\tactors.push(this.actors[i].name());\n\t\t\tstates = states.concat(this.actors[i].currentstate(verbose));\n\t\t}\n\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\tvar state = [{ name: this.name() }, { actors: actors }];\n\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t\tstates.push(state);\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { headlesslayer: this.id, actors: this.actors };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_layer.js\n// module id = 168\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_layer.js?");

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessMaterial\n * Simulate a materital (an array of textures with blending)\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessmaterial object\n\tvar HeadlessMaterial = exports;\n\tHeadlessMaterial.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a headless.Material object.\n  * You can access the headless.Material object as this.headlessmaterial.\n  * The passed shader object is available as this.headlessshader.\n  * @param {object} shader HeadlessShader object\n  */\n\tthis.atConstructor = function (shader) {\n\t\tthis.object_type = 'HeadlessMaterial';\n\n\t\t// Current values\n\t\tthis.props = {};\n\t\tthis.textures = [];\n\n\t\t// Cache the property values (blend-related)\n\t\tthis.property_cache = {};\n\n\t\tthis.id = ++HeadlessMaterial.GlobalId;\n\t\tthis.headlessshader = shader;\n\t};\n\n\t/**\n  * @method addTexture\n  * Forward request to headless.Material object\n  * @param {object} texture Texture object\n  * @param {object} name Uniform name\n  * @param {object} sampler Headless.Sampler object\n  */\n\tthis.addTexture = function (texture, name, sampler) {\n\t\tvar tex = { texture: texture.image, name: name, sampler: sampler };\n\t\tthis.textures.push(tex);\n\t\treturn this.textures.length - 1;\n\t};\n\n\t/**\n  * @method removeTexture\n  * Forward request to headless.Material object\n  * @param {number} index Index of texture to remove\n  */\n\tthis.removeTexture = function (index) {\n\t\tthis.textures[index] = null;\n\t};\n\n\t/**\n  * @method setBlendMode\n  * Forward request to headless.Material object. headless enumerations match webgl.\n  * @param {number} mode Set the blending mode\n  */\n\tthis.setBlendMode = function (mode) {\n\t\tvar val = this.property_cache['blendmode'];\n\t\tif (val && val == mode) return;\n\n\t\tthis.props['blendmode'] = mode;\n\t\tthis.property_cache['blendmode'] = mode;\n\t};\n\n\t/**\n  * @method setBlendEquation\n  * Forward request to headless.Material object\n  * @param {number} equationRgb Equation for combining rgb components\n  * @param {number} equationAlpha Equation for combining alpha component\n  */\n\tthis.setBlendEquation = function (equationRgb, equationAlpha) {\n\t\tvar hash = HeadlessApi.getHash([equationRgb, equationAlpha]);\n\n\t\tvar val = this.property_cache['blendequation'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.props['blendequation'] = { equationRgb: equationRgb, equationAlpha: equationAlpha };\n\t\tthis.property_cache['blendequation'] = hash;\n\t};\n\n\t/**\n  * @method setBlendFunc\n  * Forward request to headless.Material object\n  * @param {number} srcFactorRgb Source blending rgb\n  * @param {number} dstFactorRgb Destination blending rgb\n  * @param {number} srcFactorAlpha Source blending alpha\n  * @param {number} dstFactorAlpha Destination blending alpha\n  */\n\tthis.setBlendFunc = function (srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha) {\n\t\tvar hash = HeadlessApi.getHash([srcFactorRgb, dstFactorRgb, srcFactorAlpha, dstFactorAlpha]);\n\n\t\tvar val = this.property_cache['blendfunc'];\n\t\tif (val && val == hash) return;\n\n\t\tthis.props['blendfunc'] = { srcFactorRgb: srcFactorRgb, datFactorRgb: dstFactorRgb, srcFactorAlpha: srcFactorAlpha, dstFactorAlpha: dstFactorAlpha };\n\t\tthis.property_cache['blendfunc'] = hash;\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlessmaterial' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\t\tvar states = [];\n\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\tstates = this.headlessshader.currentstate(verbose);\n\n\t\t\tvar state = [{ name: this.name() }, { shader: this.headlessshader.name() }];\n\n\t\t\t// Add textures\n\t\t\tvar textures = [];\n\t\t\tfor (var i in this.textures) {\n\t\t\t\tvar tex = this.textures[i];\n\t\t\t\tvar texture = [{ name: tex.name }, { texture: tex.texture }, { sampler: tex.sampler }];\n\t\t\t\ttextures.push(texture);\n\t\t\t}\n\t\t\tif (textures.length) state.push({ textures: textures });\n\n\t\t\tstates.push(state);\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\t//HACK\n\t\tthis.currentstate();\n\t\tvar obj = { headlessMaterial: this.id, obj: [this.headlessshader.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_material.js\n// module id = 169\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_material.js?");

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessRenderer\n * Simulate a renderer (shader + material)\n * Modeled from DALi platform.\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessrenderer object\n\tvar HeadlessRenderer = exports;\n\tHeadlessRenderer.GlobalId = 0;\n\n\t// Like DALi, auto-increment the depthindex. Child layers should have a\n\t// larger value than parent so child actors are rendered after parent.\n\tHeadlessRenderer.DepthIndex = 5;\n\n\t/**\n  * @method constructor\n  * Create a headless.Renderer object by specifying a geometry and material\n  * @param {object} geometry HeadlessGeometry object\n  * @param {object} material HeadlessMaterial object\n  * You can access the headless.Renderer object as this.headlessrenderer\n  */\n\tthis.atConstructor = function (geometry, material) {\n\t\tthis.object_type = 'HeadlessRenderer';\n\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tthis.id = ++HeadlessRenderer.GlobalId;\n\t\tthis.headlessgeometry = geometry;\n\t\tthis.headlessmaterial = material;\n\t\tHeadlessRenderer.DepthIndex += 5;\n\t\tthis.depthindex = HeadlessRenderer.DepthIndex;\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlessrenderer' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\t\tvar states = [];\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\tstates = this.headlessgeometry.currentstate(verbose);\n\t\t\tstates.push(this.headlessmaterial.currentstate(verbose));\n\n\t\t\tvar state = [{ name: this.name() }, { geometry: this.headlessgeometry.name() }, { material: this.headlessmaterial.name() }];\n\t\t\tstates.push(state);\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\t//HACK\n\t\tthis.currentstate();\n\t\tvar obj = { headlessRenderer: this.id, obj: [this.headlessgeometry.inspect(depth), this.headlessmaterial.inspect(depth)] };\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_renderer.js\n// module id = 170\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_renderer.js?");

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n/**\n * @class HeadlessShader\n * Simulate a shader\n * Modeled from DALi platform.\n */\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// Assign a unique id to each headlessshader object\n\tvar HeadlessShader = exports;\n\tHeadlessShader.GlobalId = 0;\n\n\t/**\n  * @method constructor\n  * Create a headless.Shader object\n  * You can access the headless.Shader object as this.headlessshader\n  * @param {string} vertexShader VertexShader code\n  * @param {string} fragmentShader FragmentShader code\n  */\n\tthis.atConstructor = function (vertexShader, fragmentShader) {\n\t\tthis.object_type = 'HeadlessShader';\n\n\t\t// Simplify the shader by removing comments and empty lines\n\t\tvar vs = this.trimShader(vertexShader);\n\t\tvar fs = this.trimShader(fragmentShader);\n\n\t\tvar shaderOptions = {\n\t\t\tvertexShader: vs,\n\t\t\tfragmentShader: fs\n\t\t};\n\n\t\tvar headless = HeadlessApi.headless;\n\t\tthis.id = ++HeadlessShader.GlobalId;\n\t\tthis.vertexshader = vertexShader;\n\t\tthis.fragmentshader = fragmentShader;\n\t};\n\n\t// Internal method to remove comments and empty lines from a shader. This\n\t// is to prevent issues when the headlesscode is replayed.\n\tthis.trimShader = function (code) {\n\t\tvar str = code;\n\n\t\t// Remove blank lines\n\t\tstr = str.replace(/\\n\\n/g, \"\\\\n\");\n\n\t\t// Remove comments\n\t\t//var str = code.replace(//*.+?*/|//.*(?=[nr])/g, '');\n\t\tstr = str.replace(/\\/\\/.*\\n/g, '');\n\n\t\t// Remove trailing new line\n\t\tif (str[str.length - 1] == \"\\n\") str = str.substring(0, str.length - 1);\n\n\t\t// Remove new lines\n\t\tstr = str.replace(/\\n/g, \"\\\\n\");\n\n\t\t// Create a multi-line string\n\t\tstr = str.replace(/\\\\n/g, \"\\\\\\n\");\n\n\t\treturn str;\n\t};\n\n\tthis.name = function () {\n\t\treturn 'headlessshader' + this.id;\n\t};\n\n\tthis.currentstate = function (verbose) {\n\t\tvar states = [];\n\t\tif (!HeadlessApi.isShown(this.name())) {\n\t\t\tvar state = [{ name: this.name() },, { vertexshader: verbose ? this.vertexshader : HeadlessApi.getHash(this.vertexshader) }, { fragmentShader: verbose ? this.fragmentshader : HeadlessApi.getHash(this.fragmentshader) }];\n\n\t\t\tstates = [state];\n\t\t\tHeadlessApi.shownObject(this.name());\n\t\t}\n\n\t\treturn states;\n\t};\n\n\tthis.inspect = function (depth) {\n\t\tvar obj = { headlessShader: this.id, vertex: this.vertexshader.length, fragment: this.fragmentshader.length };\n\n\t\tvar util = requireDreem('util');\n\t\treturn util.inspect(obj, { depth: null });\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/headless_shader.js\n// module id = 171\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/headless_shader.js?");

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/keyboard', function (requireDreem, exports) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/keyboardheadless.js\n// module id = 172\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/keyboardheadless.js?");

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Pointerwebgl adds mouse and touch listeners and connectes them pointer.js API.\n\ndefineDreem.class('$system/base/pointer', function (require, exports) {\n\n\tthis._cursor = 'arrow';\n\tthis._tooltip = 'Application';\n\n\tObject.defineProperty(this, 'cursor', {\n\t\tget: function get() {\n\t\t\treturn this._cursor;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._cursor = value;\n\t\t\tif (value === 'arrow') value = 'default';\n\t\t\tthis.device.keyboard.textarea.style.cursor = document.body.style.cursor = value;\n\t\t}\n\t});\n\n\tthis.atConstructor = function (device) {\n\n\t\tthis.device = device;\n\n\t\t// Internal: creates pointer array with a single pointer from mouse event data.\n\t\tvar mouseToPointers = function (event) {\n\t\t\treturn [{\n\t\t\t\tposition: vec2(event.pageX, event.pageY),\n\t\t\t\tmovement: vec2(event.movementX, event.movementY),\n\t\t\t\tbutton: event.button === 0 ? 1 : event.button === 1 ? 3 : 2,\n\t\t\t\tshift: event.shiftKey,\n\t\t\t\talt: event.altKey,\n\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\tmeta: event.metaKey,\n\t\t\t\twheel: vec2(event.deltaX, event.deltaY),\n\t\t\t\ttouch: false\n\t\t\t}];\n\t\t}.bind(this);\n\n\t\t// Internal: creates pointer array from touch event.\n\t\tvar touchToPointers = function (event) {\n\t\t\tvar array = [];\n\t\t\tfor (var i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tarray.push({\n\t\t\t\t\tposition: vec2(event.changedTouches[i].pageX, event.changedTouches[i].pageY),\n\t\t\t\t\tmovement: vec2(event.changedTouches[i].movementX, event.changedTouches[i].movementY),\n\t\t\t\t\tbutton: 1,\n\t\t\t\t\tshift: event.shiftKey,\n\t\t\t\t\talt: event.altKey,\n\t\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\t\tmeta: event.metaKey,\n\t\t\t\t\ttouch: true\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn array;\n\t\t}.bind(this);\n\n\t\t// Internal: handler for `mousedown` event starts `mousemove` listening.\n\t\tthis.mousedown = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setstart(mouseToPointers(e));\n\t\t\t// window.addEventListener('mousemove', this._mousemove)\n\t\t\t// window.addEventListener('mouseup', this._mouseup)\n\t\t\t// window.removeEventListener('mousemove', this._mousehover)\n\t\t};\n\t\t// window.addEventListener('mousedown', this.mousedown.bind(this))\n\n\t\t// Internal: handler for `mousemove` event.\n\t\tthis.mousemove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setmove(mouseToPointers(e));\n\t\t};\n\t\tthis._mousemove = this.mousemove.bind(this);\n\n\t\t// Internal: handler for `mousedown` event stops `mousemove` listening.\n\t\tthis.mouseup = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setend(mouseToPointers(e));\n\t\t\t// window.removeEventListener('mousemove', this._mousemove)\n\t\t\t// window.removeEventListener('mouseup', this._mouseup)\n\t\t\t// window.addEventListener('mousemove', this._mousehover)\n\t\t};\n\t\tthis._mouseup = this.mouseup.bind(this);\n\n\t\t// Internal: handler for `mousemove` for the purpose of hover tracking.\n\t\tthis.mousehover = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.sethover(mouseToPointers(e));\n\t\t};\n\t\tthis._mousehover = this.mousehover.bind(this);\n\t\t// window.addEventListener('mousemove', this._mousehover)\n\n\t\t// Internal: handler for `touchstart` event.\n\t\tthis.touchstart = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setstart(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchstart', this.touchstart.bind(this))\n\n\t\t// Internal: handler for `touchmove` event.\n\t\tthis.touchmove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setmove(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchmove', this.touchmove.bind(this))\n\n\t\t// Internal: handler for `touchend` event.\n\t\tthis.touchend = function (e) {\n\t\t\tthis.setend(touchToPointers(e));\n\t\t};\n\t\t// window.addEventListener('touchend', this.touchend.bind(this))\n\t\t// window.addEventListener('touchcancel', this.touchend.bind(this))\n\t\t// window.addEventListener('touchleave', this.touchend.bind(this))\n\n\t\t// Internal: handler for `wheel` event. Sets the wheel or zoom attribute/event.\n\t\tthis.wheelmove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.setwheel(mouseToPointers(e));\n\t\t};\n\t\t// document.addEventListener('wheel', this.wheelmove.bind(this))\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/pointerheadless.js\n// module id = 173\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/pointerheadless.js?");

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/shader', function (requireDreem, exports) {\n\n\tvar gltypes = requireDreem('$system/base/gltypes');\n\n\texports.Texture = this.Texture = requireDreem('./textureheadless');\n\n\tutil = requireDreem('util');\n\n\t// HeadlessApi is a static object to access the headless api\n\tHeadlessApi = requireDreem('./headless_api');\n\n\t// HeadlessDreemgl is the interface between dreemgl and headless.\n\tHeadlessShader = requireDreem('./headless_shader');\n\tHeadlessActor = requireDreem('./headless_actor');\n\n\t/**\n  * @method compileShader\n  * Compiles the shader, or use the cached version.\n  * Construct a mesh actor if necessary and attach to the view\n  * The 'this' pointer is an object like border or hardrect\n  * @param {Object} gldevice Instance of DeviceHeadless\n  * @return {Object} shader Object containing compiled shader information.\n  *\t\t\t\t\t\t\t\t\tIn webgl this is an object returned by gl.createProgram\n  *\t\t\t\t\t\t\t\t\tIn headless, this is a hash containing a headless_shader object\n  */\n\tthis.compileShader = function (gldevice) {\n\t\t//console.log('*#*#*#*# compileShader', this.view ? this.view.id : '<SCREEN>');\n\t\tvar vtx_state = this.vtx_state;\n\t\tvar pix_state = this.pix_state;\n\t\tvar vtx_code = vtx_state.code;\n\n\t\t//console.log('vtx_code', vtx_code);\n\t\t//console.log('pix_code', pix_state.code_color);\n\t\t//console.log('====== vtx_state call', vtx_state.call);\n\n\t\tvar pix_color = pix_state.code_color;\n\t\tvar pix_pick = pix_state.code_pick;\n\t\tvar pix_debug = pix_state.code_debug;\n\n\t\tvar gl = gldevice.gl;\n\t\tvar cache_id = vtx_code + pix_color + this.has_pick;\n\n\t\t// Get the HeadlessShader object from a cache, or build one\n\t\tshader = gldevice.shadercache[cache_id];\n\t\t//if(shader) return this.headlessshader\n\n\t\tif (!shader) {\n\t\t\t// shader is a hash of compiled information and headless objects\n\t\t\tshader = {\n\t\t\t\tobject_type: '(compiled_shader_data)',\n\n\t\t\t\tdebug: {},\n\t\t\t\tpick: {},\n\n\t\t\t\tuniset: {},\n\t\t\t\tunilocks: {},\n\t\t\t\trefattr: {},\n\n\t\t\t\ttexlocs: {}\n\t\t\t};\n\n\t\t\t// Build a HeadlessShader object and attach to shader\n\t\t\tvar shadercode = vtx_state.code;\n\t\t\tvar fragcode = pix_state.code_color;\n\t\t\tshader.headlessshader = new HeadlessShader(shadercode, fragcode);\n\n\t\t\t// Build information on uniforms, textures, and attributes\n\t\t\tthis.getLocations(gl, shader, vtx_state, pix_state);\n\n\t\t\t//console.log('*** COMPILED ***');\n\t\t\t//console.log('unilocks', shader.unilocks);\n\t\t\t//console.log('uniset', shader.uniset);\n\t\t\t//console.log('refattr', shader.refattr);\n\t\t\t//console.log('texlocs', shader.texlocs);\n\n\t\t\t//TODO. Remove?\n\t\t\tthis.compile_use = true;\n\n\t\t\tif (this.compile_use) this.compileUse(shader);\n\t\t\tgldevice.shadercache[cache_id] = shader;\n\n\t\t\t//Not supported by Headless (Yet)\n\t\t\t//\t\tif(pix_debug){\n\t\t\t//\t\t\t// compile the pick shader\n\t\t\t//\t\t\tvar pix_debug_shader = gl.createShader(gl.FRAGMENT_SHADER)\n\t\t\t//\t\t\tgl.shaderSource(pix_debug_shader, pix_debug)\n\t\t\t//\t\t\tgl.compileShader(pix_debug_shader)\n\t\t\t//\t\t\tif (!gl.getShaderParameter(pix_debug_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\t\tvar err = gl.getShaderInfoLog(pix_debug_shader)\n\t\t\t//\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix_debug))\n\t\t\t//\t\t\t\tthrow new Error(err)\n\t\t\t//\t\t\t}\n\t\t\t//\n\t\t\t//\t\t\tshader.debug = gl.createProgram()\n\t\t\t//\t\t\tgl.attachShader(shader.debug, vtx_shader)\n\t\t\t//\t\t\tgl.attachShader(shader.debug, pix_debug_shader)\n\t\t\t//\t\t\tgl.linkProgram(shader.debug)\n\t\t\t//\t\t\t// add our pick uniform\n\t\t\t//\t\t\tthis.getLocations(gl, shader.debug, vtx_state, pix_state)\n\t\t\t//\t\t\tif(this.compile_use) this.compileUse(shader.debug)\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\t//\t\tif(this.has_pick){\n\t\t\t//\t\t\t// compile the pick shader\n\t\t\t//\t\t\tvar pix_pick_shader = gl.createShader(gl.FRAGMENT_SHADER)\n\t\t\t//\t\t\tgl.shaderSource(pix_pick_shader, pix_pick)\n\t\t\t//\t\t\tgl.compileShader(pix_pick_shader)\n\t\t\t//\t\t\tif (!gl.getShaderParameter(pix_pick_shader, gl.COMPILE_STATUS)){\n\t\t\t//\t\t\t\tvar err = gl.getShaderInfoLog(pix_pick_shader)\n\t\t\t//\n\t\t\t//\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix))\n\t\t\t//\t\t\t\tthrow new Error(err)\n\t\t\t//\t\t\t}\n\t\t\t//\n\t\t\t//\t\t\tshader.pick = gl.createProgram()\n\t\t\t//\t\t\tgl.attachShader(shader.pick, vtx_shader)\n\t\t\t//\t\t\tgl.attachShader(shader.pick, pix_pick_shader)\n\t\t\t//\t\t\tgl.linkProgram(shader.pick)\n\t\t\t//\t\t\t// add our pick uniform\n\t\t\t//\t\t\tpix_state.uniforms['pickguid'] = vec3\n\t\t\t//\n\t\t\t//\t\t\tthis.getLocations(gl, shader.pick, vtx_state, pix_state)\n\t\t\t//\n\t\t\t//\t\t\tif(this.compile_use) this.compileUse(shader.pick)\n\t\t\t//\t\t}\n\t\t} // if (!this.headlessshader) {\n\n\n\t\t// Build missing headless objects (if they don't exist)\n\t\t//console.log('shader', shader.object_type, shader);\n\n\t\tHeadlessApi.createHeadlessObjects(shader, this); //\t shader);\n\n\t\treturn shader;\n\t};\n\n\tthis.useShader = function (gl, shader) {\n\t\tif (shader.use) return shader.use(gl, shader, this);\n\n\t\tconsole.log('***************************************************************************************************OLD CODE RUNNING');\n\t};\n\n\tthis.compile_use = true;\n\n\t// Override from shader.js (HEADLESS)\n\tthis.mapUniforms = function (gl, shader, uniforms, uniset, unilocs) {\n\t\t// headless uses registerAnimatableProperty to set a uniform\n\t\tfor (var key in uniforms) {\n\t\t\tif (!uniset[key]) {\n\t\t\t\tvar type = gltypes.getType(uniforms[key]);\n\t\t\t\t//uniset[key] = gltypes.uniforms[type]\n\t\t\t\tuniset[key] = gltypes.uniforms[type];\n\t\t\t\tvar loc = unilocs[key] = {\n\t\t\t\t\ttype: type,\n\t\t\t\t\tloc: key // Store the name, not the location\n\t\t\t\t};\n\t\t\t\tif (key.indexOf('_DOT_') !== -1) loc.split = key.split(/_DOT_/);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.mapTextures = function (gl, shader, textures, texlocs) {\n\t\tfor (var key in textures) {\n\t\t\tvar tex = textures[key];\n\t\t\tvar loc = texlocs[key] = {\n\t\t\t\tloc: key, // Store the name, not the location\n\t\t\t\tsamplerdef: tex.samplerdef,\n\t\t\t\tsamplerid: tex.samplerid,\n\t\t\t\tname: tex.name\n\t\t\t};\n\t\t\tif (tex.name.indexOf('_DOT_') !== -1) loc.split = tex.name.split(/_DOT_/);\n\t\t}\n\t};\n\n\t// Template for generated code\n\t//\t {object} gl stubbed out gl object\n\t//\t {object} shader compiled shader object, containing headlessshader\n\t//\t\t\t\t\t\t\t\t\t and headlessgeometry. (see compileShader in this file)\n\t//\t {object} root display object (ex. border, hardrect), containing\n\t//\t\t\t\t\t\t\t\t\t\t\t\theadlessmaterial, headlessrenderer, headlessactor.\n\tthis.useShaderTemplate = function (gl, shader, root) {\n\n\t\t// Create headless objects when first used\n\t\tif (root && !root.headlessactor) {\n\t\t\tHeadlessApi.createHeadlessActor(root, shader);\n\t\t}\n\n\t\t//console.log('useShader', root.view ? root.view.id : 'screen', 'shader', shader.object_type, 'root', root.object_type)\n\n\t\t// use the shader\n\t\tgl.useProgram(shader);\n\t\tvar headless = HeadlessApi.headless;\n\t\tvar headlessactor = root ? root.headlessactor : undefined;\n\t\tvar headlessmaterial = root ? root.headlessmaterial : undefined;\n\t\tvar headlessgeometry = root.headlessgeometry;\n\n\t\t//console.log('headlessactor', headlessactor.id, 'shader', shader.headlessshader.id, 'geometry', headlessgeometry.id);\n\n\t\t// set uniforms\n\t\t//shader.addUniforms(shader.dreem_shader);\n\t\tSET_UNIFORMS;\n\n\t\t// textures\n\t\tTEXTURE_START;\n\t\tvar texture = TEXTURE_VALUE;\n\t\t// lets fetch the sampler\n\t\tvar gltex = texture.TEXTURE_SAMPLER;\n\t\t// lets do the texture slots correct\n\t\tif (!gltex) {\n\t\t\tif (!texture.createGLTexture) texture = TEXTURE_VALUE = root.Texture.fromStub(texture);\n\t\t\tgltex = texture.createGLTexture(gl, TEXTURE_ID, TEXTURE_INFO);\n\t\t\tif (texture.image) {\n\t\t\t\tvar ti = TEXTURE_INFO;\n\n\t\t\t\t// Simulate the DALi Sampler\n\t\t\t\tvar sampler = {};\n\n\t\t\t\t//FIX\n\t\t\t\tif (headlessmaterial) {\n\t\t\t\t\tvar index = headlessmaterial.addTexture(texture, ti.loc, sampler);\n\t\t\t\t\tgltex.texture_index = index;\n\t\t\t\t\t//console.log('**** **** **** headless.addTexture', ti.loc, texture.image.getWidth(), texture.image.getHeight(), 'return index', index);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!gltex) return 0;\n\t\t} else {\n\t\t\tgl.activeTexture(TEXTUREGL_ID); // gl.TEXTURE0 + TEXTURE_ID\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\tif (texture.updateid !== gltex.updateid) {\n\t\t\t\ttexture.updateGLTexture(gl, gltex);\n\t\t\t\tif (gltex.texture_index) {\n\t\t\t\t\tvar headlessmaterial = root.headlessmaterial;\n\t\t\t\t\theadlessmaterial.removeTexture(gltex.texture_index);\n\t\t\t\t\tgltex.texture_index = undefined;\n\t\t\t\t\tif (texture.image) {\n\t\t\t\t\t\tvar ti = TEXTURE_INFO;\n\n\t\t\t\t\t\t// Simulate the DALi Sampler\n\t\t\t\t\t\tvar sampler = {};\n\n\t\t\t\t\t\tvar index = headlessmaterial.addTexture(texture.image, ti.loc, sampler);\n\t\t\t\t\t\tgltex.texture_index = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgl.uniform1i(TEXTURE_LOC, TEXTURE_ID);\n\t\tTEXTURE_END;\n\n\t\t// attributes\n\t\t//shader.compileShader(this);\n\t\t//console.log('---- ---- ---- addAttributeGeometry');\n\t\t//shader.headlessgeometry.addAttributeGeometry(shader, shader.attrlocs);\n\n\n\t\tvar len = 0; // pull the length out of the buffers\n\t\tvar lastbuf;\n\t\tATTRLOC_START;\n\t\tvar buf = ATTRLOC_BUF;\n\t\tif (lastbuf !== buf) {\n\t\t\tlastbuf = buf;\n\t\t\tif (!buf.glvb) buf.glvb = gl.createBuffer();\n\t\t\tif (buf.length > len) len = buf.length;\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf.glvb);\n\t\t\tif (!buf.clean) {\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, buf.array, gl.STATIC_DRAW);\n\t\t\t\tbuf.clean = true;\n\t\t\t}\n\t\t}\n\t\tvar loc = ATTRLOC_LOC;\n\t\tgl.enableVertexAttribArray(loc);\n\t\tATTRLOC_ATTRIBPTR;\n\t\tATTRLOC_END;\n\n\t\tvar headlessmaterial = root.headlessmaterial;\n\n\t\t// set up blend mode\n\t\tif (root.alpha_blend_eq.op) {\n\t\t\t//console.log('==== alpha_blend_eq.op');\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) {\n\t\t\t\t//console.log('CONSTANT', constant[0], constant[1], constant[2], constant[3], 'Not implemented');\n\t\t\t\tgl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\t}\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquationSeparate(root.color_blend_eq.op, root.alpha_blend_eq.op);\n\t\t\tgl.blendFuncSeparate(root.color_blend_eq.src, root.color_blend_eq.dst, root.alpha_blend_eq.src, root.alpha_blend_eq.dst);\n\n\t\t\t// HEADLESS\n\t\t\t//console.log('*** full blend');\n\t\t\theadlessmaterial.setBlendMode('BLENDING_ON');\n\t\t\theadlessmaterial.setBlendEquation(root.color_blend_eq.op, root.color_blend_eq.op);\n\t\t\theadlessmaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, root.alpha_blend_eq.src, root.alpha_blend_eq.dst);\n\t\t} else if (root.color_blend_eq.op) {\n\t\t\t//console.log('BLEND', root.color_blend_eq);\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) {\n\t\t\t\t//console.log('CONSTANT 2', constant[0], constant[1], constant[2], constant[3], 'Not implemented');\n\t\t\t\tgl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\t}\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquation(root.color_blend_eq.op);\n\t\t\tgl.blendFunc(root.color_blend_eq.src, root.color_blend_eq.dst);\n\n\t\t\theadlessmaterial.setBlendMode('BLENDING_ON');\n\t\t\theadlessmaterial.setBlendEquation(root.color_blend_eq.op, root.color_blend_eq.op);\n\n\t\t\t//TODO Check this. What are the last two args?\n\t\t\theadlessmaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, root.color_blend_eq.src, root.color_blend_eq.dst);\n\t\t\t//headlessmaterial.setBlendFunc(headless.BLEND_FACTOR_SRC_COLOR, headless.BLEND_FACTOR_DST_COLOR, root.color_blend_eq.src, root.color_blend_eq.dst);\n\t\t\t//headlessmaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, headless.BLEND_FACTOR_ONE, headless.BLEND_FACTOR_ZERO);\n\t\t\t//headlessmaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, headless.BLEND_FACTOR_SRC_ALPHA, headless.BLEND_FACTOR_ONE_MINUS_SRC_ALPHA);\n\n\t\t\t//headlessmaterial.setBlendFunc(root.color_blend_eq.src, root.color_blend_eq.dst, headless.BLEND_FACTOR_CONSTANT_ALPHA, headless.BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA);\n\t\t} else {\n\t\t\t//console.log('==== blend disabled');\n\t\t\tgl.disable(gl.BLEND);\n\t\t\t//HEADLESS\n\t\t\theadlessmaterial.setBlendMode('BLENDING_OFF');\n\t\t}\n\n\t\t// set up depth test\n\t\tif (root.depth_test_eq.func) {\n\t\t\tconsole.log('***Depth test enabled. NOT IMPLEMENTED');\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tgl.depthFunc(root.depth_test_eq.func);\n\t\t} else {\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t}\n\n\t\treturn len;\n\t};\n\n\t// {object} shader HeadlessShader object, amended with location information\n\t//\t\t\t\t\t\t\t\t (see getLocations call above)\n\t// The 'this' pointer is a view\n\tthis.compileUse = function (shader) {\n\t\t// Make sure the object has headless\n\t\t//HeadlessApi.createHeadlessObjects(this.shader);\n\n\t\t//console.log('*****compileUse', shader.object_type, this.object_type);\n\t\t// alright lets compile our useShader from \n\t\tvar tpl = this.useShaderTemplate.toString();\n\t\ttpl = tpl.replace(/^function/, \"function useshader_\" + (this.view ? this.view.constructor.name : 'anonymous') + '_shader_' + this.constructor.name);\n\t\t// ok lets replace shit.\n\t\t// set uniforms\n\n\t\tvar uniset = shader.uniset;\n\t\tvar unilocs = shader.unilocs;\n\t\tvar refattr = shader.refattr;\n\n\t\tvar out = 'var loc, uni\\n';\n\t\tout += 'var actor = root.headlessactor\\n';\n\t\tout += 'if (shader && actor) {\\n';\n\n\t\tfor (var key in uniset) {\n\t\t\tvar loc = unilocs[key];\n\t\t\tvar split = loc.split;\n\t\t\tvar isattr = key in refattr;\n\t\t\tif (split) {\n\t\t\t\tvar name = '';\n\t\t\t\tfor (var i = 0; i < split.length; i++) {\n\t\t\t\t\tif (i) name += '.';\n\t\t\t\t\tvar part = split[i];\n\t\t\t\t\tif (part === 'layout' || isattr && i === split.length - 1) name += '_';\n\t\t\t\t\tname += part;\n\t\t\t\t}\n\t\t\t\tout += '\\t\\tuni = root.' + name + '\\n';\n\t\t\t} else {\n\t\t\t\tout += '\\t\\tuni = root.';\n\t\t\t\tif (isattr) out += '_';\n\t\t\t\tout += key + '\\n';\n\t\t\t}\n\t\t\tout += '\\t\\tloc = shader.unilocs.' + key + '\\n';\n\t\t\tvar gen = gltypes.uniform_gen[loc.type];\n\t\t\t//if(gen.args == 1){\n\n\t\t\tvar call = gen.call;\n\n\t\t\tout += '\\t\\tvar val = actor.setUniformValue(\\'' + key + '\\',uni)\\n';\n\t\t}\n\t\tout += '}\\n';\n\n\t\ttpl = tpl.replace(/SET\\_UNIFORMS/, out);\n\n\t\ttpl = tpl.replace(/TEXTURE\\_START([\\S\\s]*)TEXTURE\\_END/, function (m) {\n\t\t\tvar out = '';\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar texlocs = shader.texlocs;\n\t\t\tvar texid = 0;\n\t\t\tfor (var key in texlocs) {\n\t\t\t\tvar texinfo = texlocs[key];\n\t\t\t\tvar split = texinfo.split;\n\n\t\t\t\tvar TEXTURE_VALUE = '';\n\t\t\t\tif (split) {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + split.join('.');\n\t\t\t\t} else {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + texinfo.name;\n\t\t\t\t}\n\n\t\t\t\tout += body.replace(/TEXTURE_VALUE/g, TEXTURE_VALUE).replace(/TEXTURE_SAMPLER/g, texinfo.samplerid).replace(/TEXTURE_ID/g, texid).replace(/TEXTURE_LOC/g, 'shader.texlocs.' + key + '.loc').replace(/TEXTURE_INFO/g, 'shader.texlocs.' + key).replace(/TEXTUREGL_ID/g, gltypes.gl.TEXTURE0 + texid);\n\t\t\t}\n\t\t\t//console.log('=-=-=-=-=- texlocs', out);\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/ATTRLOC\\_START([\\S\\s]*)ATTRLOC\\_END/, function (m) {\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar out = '';\n\t\t\tvar attrlocs = shader.attrlocs;\n\t\t\tvar len = 0; // pull the length out of the buffers\n\t\t\tvar lastbuf;\n\t\t\tif (Object.keys(attrlocs).length > 0) {\n\t\t\t\t//console.log('*************************** attrlocs ***********************');\n\t\t\t\t//console.log(attrlocs);\n\t\t\t\t//console.log('************************************************************');\n\t\t\t\tout += 'root.headlessgeometry.addAttributeGeometry(root, shader.attrlocs)\\n';\n\t\t\t}\n\n\t\t\tfor (var key in attrlocs) {\n\t\t\t\tvar attrloc = attrlocs[key];\n\t\t\t\tvar ATTRLOC_BUF;\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + attrloc.name;\n\t\t\t\t\tvar buf = this[attrloc.name];\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + key;\n\t\t\t\t}\n\t\t\t\tvar ATTRLOC_LOC = 'shader.attrlocs.' + key + '.loc';\n\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'gl.vertexAttribPointer(loc, ' + attrloc.slots + ', gl.FLOAT, false, buf.stride, ' + attrloc.offset + ')';\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'if(buf.slots>4)debugger;gl.vertexAttribPointer(loc, buf.slots, gl.FLOAT, false, buf.stride, 0)';\n\t\t\t\t}\n\n\t\t\t\t//HACK. Setting this for text causes problems with image display\n\t\t\t\tATTRLOC_ATTRIBPTR = '';\n\n\t\t\t\tout += body.replace(/ATTRLOC_BUF/, ATTRLOC_BUF).replace(/ATTRLOC_LOC/, ATTRLOC_LOC).replace(/ATTRLOC_ATTRIBPTR/, ATTRLOC_ATTRIBPTR);\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/gl.[A-Z][A-Z0-9_]+/g, function (m) {\n\t\t\treturn gltypes.gl[m.slice(3)];\n\t\t});\n\n\t\tshader.use = new Function('return ' + tpl)();\n\t};\n\n\t// all draw types\n\tthis.drawtype = HeadlessApi.Geometry.TRIANGLES;\n\n\t// lets draw ourselves.\n\t// A view (the this pointer) makes one call to drawArrays for each shader.\n\t// A typical number is two (one for border and one for hardimage\n\tthis.drawArrays = function (devicegl, sub, start, end) {\n\t\t//if (this.texture) {\n\t\t//\tconsole.trace('drawArrays');\n\t\t//}\n\t\t//console.trace('*****drawArrays', (this.view? this.view.id : '<screen>'));\n\t\t// console.log('PROG', this.vtx_state.code);\n\t\t//if(this.mydbg) debugger\n\t\tif (!this.hasOwnProperty('shader') || this.shader === undefined) this.compile(devicegl);\n\t\tvar gl = devicegl.gl;\n\t\tvar shader = sub ? this.shader[sub] : this.shader;\n\t\t// Attach the headless_obj to the shader.shader object (HEADLESS)\n\t\tvar len = this.useShader(gl, shader);\n\t\tif (len) gl.drawArrays(this.drawtype, start || 0, end === undefined ? len : end);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/shaderheadless.js\n// module id = 174\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/shaderheadless.js?");

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// \"Image\"-like class for Header that retains the path to the image.\n// Texture.Image is another name for this class.\n\nfunction HeadlessImage(path) {\n\tthis.path = path;\n}\n\ndefineDreem.class('$system/base/texture', function (exports, require) {\n\tvar Texture = exports;\n\n\tTexture.GlobalId = 0;\n\tTexture.Image = HeadlessImage;\n\n\t// Map hash of texture to an existing texture\n\tTexture.Cache = {};\n\n\tHeadlessApi = requireDreem('./headless_api');\n\tHeadlessUtil = requireDreem('./headless_util');\n\tfs = requireDreem('fs');\n\n\tthis.atConstructor = function (type, w, h, device) {\n\t\tthis.id = ++Texture.GlobalId;\n\t\tthis.device = device;\n\t\tthis.type = type;\n\t\tthis.size = vec2(w, h);\n\t};\n\n\tthis.ratio = 1;\n\tthis.frame_buf = null;\n\n\tTexture.fromStub = function (stub) {\n\t\treturn Texture.buildHeadlessTexture(stub.array, stub.size[0], stub.size[1]);\n\t};\n\n\tTexture.fromType = function (type) {\n\t\t//console.log('********** fromType', type);\n\t\treturn new Texture(type, 0, 0);\n\t};\n\n\t// imagedata is an instance of HeadlessImage\n\tTexture.fromImage = function (imagedata) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\t// With headless, the references should either be absolute, or relative\n\t\t// to the path where headless runs.\n\t\tvar fullpath = imagedata.path;\n\t\tif (imagedata.path[0] !== '/') fullpath = defineDreem.$example + fullpath;\n\n\t\tvar img = new headless.ResourceImage({ url: fullpath });\n\n\t\tvar tex = new Texture('rgba', img.getWidth(), img.getHeight());\n\t\t//console.log('********** fromImage', img.getWidth(), img.getHeight());\n\t\ttex.image = img;\n\n\t\treturn tex;\n\t};\n\n\tTexture.fromArray = function (array, w, h) {\n\t\treturn Texture.buildHeadlessTexture(array, w, h);\n\t};\n\n\t// Construct a texture from a ArrayBuffer, with a width/height (HEADLESS)\n\tTexture.buildHeadlessTexture = function (array, w, h) {\n\t\tvar headless = HeadlessApi.headless;\n\n\t\tvar texture_key = HeadlessApi.getHash(array);\n\t\tvar tex = Texture.Cache[texture_key];\n\t\tif (tex) return tex;\n\n\t\ttex = new Texture('rgba', w, h);\n\t\ttex.array = array;\n\n\t\t// Simulate an image\n\t\tvar uint8 = new Uint8Array(array);\n\t\ttex.image = { width: w, height: h, uint8: uint8 };\n\n\t\tTexture.Cache[texture_key] = tex;\n\n\t\treturn tex;\n\t};\n\n\tTexture.createRenderTarget = function (type, width, height, device) {\n\t\tvar tex = new Texture(type, width, height, device);\n\t\ttex.initAsRendertarget();\n\t\treturn tex;\n\t};\n\n\t// type flags\n\tTexture.RGB = 1 << 0;\n\tTexture.RGBA = 1 << 1;\n\tTexture.ALPHA = 1 << 3;\n\tTexture.DEPTH = 1 << 4;\n\tTexture.STENCIL = 1 << 5;\n\tTexture.LUMINANCE = 1 << 6;\n\n\tTexture.FLOAT = 1 << 10;\n\tTexture.HALF_FLOAT = 1 << 11;\n\tTexture.FLOAT_LINEAR = 1 << 12;\n\tTexture.HALF_FLOAT_LINEAR = 1 << 13;\n\n\tthis.typeString = function () {\n\t\tvar str = '';\n\t\tfor (var key in Texture) {\n\t\t\tvar value = Texture[key];\n\t\t\tif (typeof value === 'number' && value & this.type) {\n\t\t\t\tif (str) str += '|';\n\t\t\t\tstr += 'Texture.' + key;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t};\n\n\tthis.initAsRendertarget = function () {\n\t\tvar gl = this.device.gl;\n\n\t\tif (!this.type) this.type = Texture.RGBA | Texture.DEPTH | Texture.STENCIL;\n\t\tvar type = this.type;\n\n\t\tthis.glframe_buf = gl.createFramebuffer();\n\t\tthis.gltex = this.IL_AL_SC_TC = gl.createTexture();\n\n\t\t// our normal render to texture thing\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.gltex);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\t\tthis.glbuf_type = gl.RGB;\n\t\tif (type & Texture.LUMINANCE) {\n\t\t\tthis.glbuf_type = gl.LUMINANCE;\n\t\t\tif (type & TEXTURE.ALPHA) this.glbuf_type = gl.LUMINANCE_ALPHA;\n\t\t} else if (type & Texture.ALPHA) this.glbuf_type = gl.ALPHA;else if (type & Texture.RGBA) this.glbuf_type = gl.RGBA;\n\n\t\tthis.gldata_type = gl.UNSIGNED_BYTE;\n\t\tif (type & Texture.HALF_FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float_linear');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_float_linear');\n\t\t\tthis.gldata_type = ext.FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.HALF_FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_OES;\n\t\t} else if (type & Texture.HALF_FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_float');\n\t\t\tthis.gldata_type = gl.FLOAT;\n\t\t}\n\n\t\t// Create a layer object and attach to the texture. This will be\n\t\t// activated when headlessdevice#bindFramebuffer is called. The layer's\n\t\t// parent will be the current layer\n\t\tHeadlessLayer = requireDreem('./headless_layer');\n\t\tthis.headless_layer = new HeadlessLayer(HeadlessApi.currentlayer, this.size[0], this.size[1]);\n\n\t\tconsole.log('textureheadless.initAsRendertarget texture NOT implemented');\n\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.glbuf_type, this.size[0], this.size[1], 0, this.glbuf_type, this.gldata_type, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glframe_buf);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.gltex, 0);\n\n\t\tif (type & Texture.DEPTH || type & Texture.STENCIL) {\n\t\t\tthis.gldepth_buf = gl.createRenderbuffer();\n\n\t\t\tthis.gldepth_type = gl.DEPTH_COMPONENT16;\n\t\t\tthis.glattach_type = gl.DEPTH_ATTACHMENT;\n\n\t\t\tif (type & Texture.DEPTH && type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.DEPTH_STENCIL;\n\t\t\t\tthis.glattach_type = gl.DEPTH_STENCIL_ATTACHMENT;\n\t\t\t} else if (type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.STENCIL_INDEX;\n\t\t\t\tthis.glattach_type = gl.STENCIL_ATTACHMENT;\n\t\t\t}\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.gldepth_buf);\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, this.gldepth_type, this.size[0], this.size[1]);\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, this.glattach_type, gl.RENDERBUFFER, this.gldepth_buf);\n\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t};\n\n\tthis.delete = function () {\n\t\tif (!this.device) return;\n\t\tvar gl = this.device.gl;\n\t\tif (this.glframe_buf) {\n\t\t\tgl.deleteFramebuffer(this.glframe_buf);\n\t\t\tthis.glframe_buf = undefined;\n\t\t}\n\t\tif (this.gltex) {\n\t\t\tgl.deleteTexture(this.gltex);\n\t\t\tthis.gltex = undefined;\n\t\t}\n\t\tif (this.depth_buf) {\n\t\t\tgl.deleteRenderbuffer(this.gldepth_buf);\n\t\t}\n\t};\n\n\tthis.resize = function (width, height) {\n\t\tthis.delete;\n\t\tthis.size = vec2(width, height);\n\t\tthis.initAsRendertarget();\n\t};\n\n\tthis.size = vec2(0, 0);\n\n\tthis.createGLTexture = function (gl, texid, texinfo) {\n\t\tvar samplerid = texinfo.samplerid;\n\t\t//console.log('**** createGLTexture', samplerid)\n\n\t\tif (this.image && this.image[samplerid]) {\n\t\t\tthis[samplerid] = this.image[samplerid];\n\t\t}\n\n\t\tvar gltex = this[samplerid];\n\t\tif (gltex) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\treturn gltex;\n\t\t}\n\n\t\t// Add to material\n\t\t//TODO\n\n\t\tvar samplerdef = texinfo.samplerdef;\n\t\tvar gltex = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, samplerdef.UNPACK_FLIP_Y_WEBGL || false);\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, samplerdef.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n\n\t\tif (this.array) {\n\t\t\t//console.log('textureheadless.createGLTexture texture NOT implemented from array', this.size[0], this.size[1]);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.size[0], this.size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.array));\n\t\t} else if (this.image) {\n\t\t\t//console.log('textureheadless.createGLTexture texture NOT implemented from image', this.size[0], this.size[1]);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\n\t\t\tthis.image[samplerid] = gltex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgltex.updateid = this.updateid;\n\t\t// set up sampler parameters\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[samplerdef.MIN_FILTER]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[samplerdef.MAG_FILTER]);\n\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[samplerdef.WRAP_S]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[samplerdef.WRAP_T]);\n\n\t\tthis[samplerid] = gltex;\n\t\treturn gltex;\n\t};\n\n\tthis.updateGLTexture = function (gl, gltex) {\n\t\t//console.log('+++++updateGLTexture');\n\t\tif (this.array) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.size[0], this.size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.data));\n\t\t} else if (this.image) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\n\t\t}\n\t\tgltex.updateid = this.updateid;\n\t};\n\n\t// Shders\n\tthis.sample2 = function (x, y) {\n\t\treturn sample(vec2(x, y));\n\t};\n\tthis.sample = function (v) {\n\t\treturn texture2D(this, v, {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.flipped2 = function (x, y) {\n\t\treturn flipped(vec2(x, y));\n\t};\n\tthis.flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point2 = function (x, y) {\n\t\treturn point(vec2(x, y));\n\t};\n\tthis.point = function (v) {\n\t\treturn texture2D(this, vec2(v.x, v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point_flipped2 = function (x, y) {\n\t\treturn point_flipped(vec2(x, y));\n\t};\n\tthis.point_flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/textureheadless.js\n// module id = 175\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/textureheadless.js?");

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/worker', function (exports) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/headless/workerheadless.js\n// module id = 176\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/headless/workerheadless.js?");

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.atConstructor = function (args) {\n\t\t// allright lets fire up \n\t\tdefineDreem.$platform = 'nodegl';\n\n\t\tvar Image = requireDreem('node-webgl/lib/image');\n\n\t\tdefineDreem.loadImage = function (name) {\n\t\t\tvar img = new Image();\n\t\t\timg.src = name;\n\t\t\treturn img;\n\t\t};\n\t\tconsole.log(args['-nodegl']);\n\t\tconsole.log('Downloading nodegl');\n\t\t// lets make the math library requireable\n\n\t\trequireDreem.async(args['-nodegl']).then(function (composition) {\n\t\t\tconsole.log('Booting nodegl');\n\t\t\tthis.comp = new composition(undefined, undefined, args['-nodegl']);\n\t\t}).catch(function (error) {\n\t\t\tconsole.log(error.stack);\n\t\t});\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/bootnodegl.js\n// module id = 177\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/bootnodegl.js?");

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// this class\n\ndefineDreem.class('$system/base/compositionclient', function (requireDreem, baseclass) {\n\n\tvar Device = this.Device = requireDreem('$system/platform/$platform/device$platform');\n\tvar BusClient = requireDreem('$system/rpc/busclient');\n\tvar NodeWebSocket = requireDreem('$system/server/nodewebsocket');\n\n\tthis.atConstructor = function (previous, parent, baseurl) {\n\t\tthis.baseurl = baseurl;\n\t\tif (previous) {\n\t\t\tthis.reload = (previous.reload || 0) + 1;\n\t\t\tthis.device = new Device(previous.device); //previous.device\n\t\t\tconsole.log(\"Reload \" + this.reload);\n\t\t} else {\n\t\t\t// lets spawn up a webGL device\n\t\t\tthis.device = new Device();\n\t\t}\n\n\t\tbaseclass.atConstructor.call(this);\n\t\tthis.screen._size = this.device.size;\n\t};\n\n\tthis.createBus = function () {\n\t\tthis.bus = new BusClient(this.baseurl, NodeWebSocket);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/compositionnodegl.js\n// module id = 178\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/compositionnodegl.js?");

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"../webgl/devicewebgl\", function (requireDreem, exports, baseclass) {\n\n\tthis.Keyboard = requireDreem('./keyboardnodegl');\n\tthis.Pointer = requireDreem('./pointernodegl');\n\n\t// require embedded classes\n\tthis.Shader = requireDreem('./shadernodegl');\n\tthis.Texture = requireDreem('./texturenodegl');\n\tthis.DrawPass = requireDreem('./drawpassnodegl');\n\n\tvar WebGL = requireDreem('node-webgl/lib/webgl');\n\tvar Image = this.Image = requireDreem('node-webgl/lib/image');\n\tvar GLFW = requireDreem('node-glfw');\n\n\tthis.atConstructor = function () {\n\t\tthis.window = this.document = this;\n\t\tbaseclass.atConstructor.call(this);\n\t};\n\n\t// make a fake window/document interface\n\tthis.addEventListener = function (name, callback) {\n\t\tif (!callback) throw new Error('invalid listener');\n\t\tthis['on' + name] = callback;\n\t};\n\n\tthis.removeEventListener = function (name, callback) {\n\t\tif (callback && typeof callback === \"function\") {\n\t\t\tthis['on' + name] = undefined;\n\t\t}\n\t};\n\n\tthis.requestAnimationFrame = function (callback, delay) {\n\t\tthis.req_anim_frame = callback;\n\t};\n\n\tthis.Texture.Image = Image;\n\n\t// create nodegl context\n\tthis.createContext = function () {\n\n\t\tvar width = 800,\n\t\t    height = 600;\n\n\t\tif (process.platform !== 'win32') process.on('SIGINT', function () {\n\t\t\tprocess.exit(0);\n\t\t});\n\n\t\tGLFW.Init();\n\n\t\tGLFW.events.on('mousemove', function (event) {\n\t\t\tevent.pageX = event.x, event.pageY = event.y;\n\t\t\tif (this.onmousemove) this.onmousemove(event);\n\t\t}.bind(this));\n\n\t\tGLFW.events.on('mousedown', function (event) {\n\t\t\tevent.pageX = event.x, event.pageY = event.y;\n\t\t\tif (this.onmousedown) this.onmousedown(event);\n\t\t}.bind(this));\n\n\t\tGLFW.events.on('mouseup', function (event) {\n\t\t\tevent.pageX = event.x, event.pageY = event.y;\n\t\t\tif (this.onmouseup) this.onmouseup(event);\n\t\t}.bind(this));\n\n\t\tGLFW.events.on('keydown', function (event) {\n\t\t\tif (this.onkeydown) this.onkeydown(event);\n\t\t}.bind(this));\n\n\t\tGLFW.events.on('keyup', function (event) {\n\t\t\tif (this.onkeyup) this.onkeyup(event);\n\t\t}.bind(this));\n\n\t\tGLFW.events.on('quit', function () {\n\t\t\tprocess.exit(0);\n\t\t});\n\n\t\tGLFW.events.on(\"keydown\", function (evt) {\n\t\t\tif (evt.keyCode === 'C'.charCodeAt(0) && evt.ctrlKey) {\n\t\t\t\tprocess.exit(0);\n\t\t\t} // Control+C\n\t\t\tif (evt.keyCode === 27) process.exit(0); // ESC\n\t\t});\n\n\t\tGLFW.DefaultWindowHints();\n\t\tGLFW.WindowHint(GLFW.RESIZABLE, 1);\n\t\tGLFW.WindowHint(GLFW.VISIBLE, 1);\n\t\tGLFW.WindowHint(GLFW.DECORATED, 1);\n\t\tGLFW.WindowHint(GLFW.RED_BITS, 8);\n\t\tGLFW.WindowHint(GLFW.GREEN_BITS, 8);\n\t\tGLFW.WindowHint(GLFW.BLUE_BITS, 8);\n\t\tGLFW.WindowHint(GLFW.DEPTH_BITS, 24);\n\t\tGLFW.WindowHint(GLFW.REFRESH_RATE, 0);\n\n\t\tif (!(this.glfwindow = GLFW.CreateWindow(width, height))) {\n\t\t\tGLFW.Terminate();\n\t\t\tthrow \"Can't initialize GL surface\";\n\t\t}\n\n\t\tGLFW.MakeContextCurrent(this.glfwindow);\n\n\t\tGLFW.SetWindowTitle(this.glfwindow, \"WebGL\");\n\n\t\t// make sure GLEW is initialized\n\t\tWebGL.Init();\n\t\tthis.gl = WebGL;\n\n\t\tthis.clear(0, 0, 0, 1.);\n\t\tGLFW.SwapBuffers(this.glfwindow);\n\n\t\tGLFW.SwapInterval(1);\n\n\t\t//for (var l = 0, ln = resizeListeners.length; l < ln; ++l)\n\t\tGLFW.events.addListener(\"framebuffer_resize\", function () {\n\t\t\tthis.doSize();\n\t\t\t//this.redrawCall()\n\t\t}.bind(this));\n\n\t\tthis.getExtension('OES_standard_derivatives');\n\n\t\tthis.doSize();\n\t\tvar last_anim, last_time;\n\t\tthis.redrawCall = function () {\n\t\t\tif (last_anim) GLFW.SwapBuffers(this.glfwindow);\n\t\t\tGLFW.PollEvents();\n\t\t\t// renderloop\t        \n\t\t\tvar anim_frame = last_anim = this.req_anim_frame;\n\t\t\tif (anim_frame) {\n\t\t\t\tthis.req_anim_frame = undefined;\n\t\t\t\tvar time = GLFW.GetTime();\n\t\t\t\t//console.log((last_time - time)*1000)\n\t\t\t\tlast_time = time;\n\t\t\t\tanim_frame(time * 1000);\n\t\t\t}\n\t\t};\n\n\t\tsetInterval(function () {\n\t\t\tthis.redrawCall();\n\t\t}.bind(this), 0);\n\t};\n\n\tthis.doSize = function (width, height) {\n\t\tvar sizeWin = GLFW.GetWindowSize(this.glfwindow);\n\t\tvar sizeFB = GLFW.GetFramebufferSize(this.glfwindow);\n\n\t\tthis.ratio = sizeFB.width / sizeWin.width;\n\t\tthis.width = sizeWin.width;\n\t\tthis.height = sizeWin.height;\n\t\t//var sw = width\n\t\t//var sh = height\n\t\tthis.gl.viewport(0, 0, sizeFB.width, sizeFB.height);\n\t\t// store our w/h and pixelratio on our frame\n\t\tthis.main_frame.ratio = this.ratio;\n\t\tthis.size = vec2(sizeWin.width, sizeWin.height);\n\t\tthis.main_frame.size = vec2(sizeFB.width, sizeFB.height); // actual size\n\t\t//this.ratio = this.main_frame.ratio\n\t\tthis.atResize();\n\t};\n\n\tthis.initResize = function () {};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/devicenodegl.js\n// module id = 179\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/devicenodegl.js?");

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(\"../webgl/drawpasswebgl\", function (requireDreem, baseclass) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/drawpassnodegl.js\n// module id = 180\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/drawpassnodegl.js?");

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/keyboard', function (require, exports) {\n\n\tthis.toKey = { // slap a usable name on keys\n\t\t8: 'backspace',\n\t\t259: 'backspace', 9: 'tab',\n\t\t257: 'enter',\n\t\t13: 'enter', 340: 'shift', 344: 'shift', 341: 'ctrl', 345: 'ctrl', 342: 'alt', 346: 'alt',\n\t\t19: 'pause', 20: 'caps', 27: 'escape',\n\t\t32: 'space', 266: 'pgup', 267: 'pgdn',\n\t\t269: 'end', 268: 'home', 263: 'leftarrow', 265: 'uparrow', 262: 'rightarrow', 264: 'downarrow',\n\t\t45: 'insert', 261: 'delete',\n\t\t48: 'num0', 49: 'num1', 50: 'num2', 51: 'num3', 52: 'num4',\n\t\t53: 'num5', 54: 'num6', 55: 'num7', 56: 'num8', 57: 'num9',\n\t\t65: 'a', 66: 'b', 67: 'c', 68: 'd', 69: 'e', 70: 'f', 71: 'g',\n\t\t72: 'h', 73: 'i', 74: 'j', 75: 'k', 76: 'l', 77: 'm', 78: 'n',\n\t\t79: 'o', 80: 'p', 81: 'q', 82: 'r', 83: 's', 84: 't', 85: 'u',\n\t\t86: 'v', 87: 'w', 88: 'x', 89: 'y', 90: 'z',\n\n\t\t343: 'leftmeta', 348: 'rightmeta',\n\t\t96: 'pad0', 97: 'pad1', 98: 'pad2', 99: 'pad3', 100: 'pad4', 101: 'pad5',\n\t\t102: 'pad6', 103: 'pad7', 104: 'pad8', 105: 'pad9',\n\t\t106: 'multiply', 107: 'add', 109: 'subtract', 110: 'decimal', 111: 'divide',\n\n\t\t290: 'f1', 291: 'f2', 292: 'f3', 293: 'f4', 294: 'f5', 295: 'f6',\n\t\t296: 'f7', 297: 'f8', 298: 'f9', 299: 'f10', 300: 'f11', 301: 'f12',\n\n\t\t144: 'numlock', 145: 'scrollock', 186: 'semicolon', 187: 'equals', 188: 'comma',\n\t\t189: 'dash', 190: 'period', 191: 'slash', 192: 'accent', 219: 'openbracket',\n\t\t220: 'backslash', 221: 'closebracket', 222: 'singlequote'\n\t};\n\tthis.toCode = {};\n\tfor (var k in this.toKey) {\n\t\tvar key = this.toKey[k];\n\t\tthis.toCode[key] = k;\n\t\tif (!this.isAttribute(key)) this.defineAttribute(key, Config({ type: int }));\n\t}\n\n\tthis.textareaFocus = function () {};\n\n\tthis.textAreaRespondToMouse = function () {};\n\n\tthis.checkSpecialKeys = function () {};\n\n\tthis.atConstructor = function (device) {\n\t\tvar document = device.document;\n\n\t\tdocument.addEventListener('keydown', function (e) {\n\t\t\tvar code = e.which > 255 ? e.which : e.keyCode;\n\t\t\tvar keyname = this.toKey[code];\n\t\t\tif (keyname) this[keyname] = 1;\n\t\t\tvar msg = {\n\t\t\t\trepeat: e.repeat,\n\t\t\t\tcode: code,\n\t\t\t\tname: keyname\n\t\t\t};\n\t\t\tmsg[msg.name] = 1;\n\n\t\t\tthis.emit('down', msg);\n\t\t}.bind(this));\n\n\t\tdocument.addEventListener('keypress', function (e) {});\n\n\t\tdocument.addEventListener('keyup', function (e) {\n\t\t\tvar code = e.which > 255 ? e.which : e.keyCode;\n\t\t\tvar keyname = this.toKey[code];\n\n\t\t\tif (keyname) this[keyname] = 0;\n\t\t\tvar msg = {\n\t\t\t\trepeat: e.repeat,\n\t\t\t\tcode: code,\n\t\t\t\tname: keyname\n\t\t\t};\n\t\t\tmsg[msg.name] = 1;\n\n\t\t\tthis.emit('up', msg);\n\t\t}.bind(this));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/keyboardnodegl.js\n// module id = 181\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/keyboardnodegl.js?");

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('../webgl/pointerwebgl', function (requireDreem, exports) {\n\n\tObject.defineProperty(this, 'cursor', {\n\t\tget: function get() {\n\t\t\treturn this._cursor;\n\t\t},\n\t\tset: function set(value) {\n\t\t\t// todo\n\t\t}\n\t});\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/pointernodegl.js\n// module id = 182\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/pointernodegl.js?");

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('../webgl/shaderwebgl', function (requireDreem, exports) {\n   exports.Texture = this.Texture = requireDreem('./texturenodegl');\n   this.set_precision = \"\";\n   this.set_extensions = \"\"; //'#extension GL_OES_standard_derivatives : enable\\n'\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/shadernodegl.js\n// module id = 183\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/shadernodegl.js?");

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('../webgl/texturewebgl', function (requireDreem) {\n   //internal\n\n   // copy base class static methods\n   var parent = Object.getPrototypeOf(this);\n   for (var key in parent.constructor) {\n      this.constructor[key] = parent.constructor[key];\n   }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/texturenodegl.js\n// module id = 184\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/texturenodegl.js?");

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/platform/webgl/workerwebgl', function (requireDreem, exports) {\n\tvar rpchub = requireDreem('$system/rpc/rpchub');\n\tvar NodeWebsocket = requireDreem('$system/server/nodewebsocket');\n\n\tvar child_process = requireDreem('child_process');\n\tvar crypto = requireDreem('crypto');\n\tvar fs = requireDreem('fs');\n\n\tthis._startWorkers = function (head, tail, count) {\n\n\t\tif (!count) count = 1;\n\t\tvar source = head + '\\n\\n\\n;// Worker includes \\nglobal.define = {packaged:true,$platform:\"nodegl\"};(' + defineDreem.inner.toString() + ')();\\n';\n\t\tsource += '(' + defineDreem.getModule('$system/base/math.js').factory.toString() + ')();\\n';\n\t\tvar paths = '';\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tpaths += 'defineDreem.$' + key + ' = \"' + __webpack_require__(0)['$' + key] + '\";\\n';\n\t\t}\n\t\t//console.log(paths)\n\t\tsource += paths;\n\t\tsource += tail;\n\n\t\tvar shasum = crypto.createHash('sha1').update(source).digest('hex');\n\n\t\tvar path = defineDreem.mapToCacheDir('/' + shasum);\n\n\t\tfs.writeFileSync(path, source);\n\n\t\t// lets startup a worker process\n\t\tvar workers = [];\n\t\tfor (var i = 0; i < count; i++) {\n\n\t\t\tvar subarg = [path];\n\t\t\tvar stdio = [process.stdin, process.stdout, process.stderr, 'pipe'];\n\t\t\tvar child = child_process.spawn(process.execPath, subarg, {\n\t\t\t\tstdio: stdio\n\t\t\t});\n\n\t\t\tvar sock = new NodeWebsocket(child.stdio[3]);\n\t\t\tsock.makeJSONSocket();\n\n\t\t\tchild.on('close', function (code) {}.bind(this));\n\n\t\t\tsock.child_process = child;\n\n\t\t\tworkers.push(sock);\n\t\t}\n\t\treturn workers;\n\t};\n\n\tthis._atConstructor = function (cores) {\n\t\tif (cores === undefined) cores = 1;else if (cores < 1) {\n\t\t\tif (defineDreem.cputhreads === 2) cores = 1;else cores = defineDreem.cputhreads - 2;\n\t\t}\n\t\t//var sockets = requireDreem('$system/server/nodewebsocket').module.factory\n\t\t//console.log(sockets)\n\t\tvar deps = this._collectDeps(this.constructor.module.factory, [defineDreem.expandVariables('$system/server/nodewebsocket'), defineDreem.expandVariables(\"$system/base/worker\")]);\n\t\tvar head = 'var _myworker = ' + this.constructor.body.toString() + ';\\n';\n\t\tvar tail = '';\n\n\t\ttail += 'defineDreem.packagedClass(\"/myworker.js\",[\"$system/base/worker\",_myworker]);\\n';\n\t\t//tail += '_worker.postMessage = function(msg,transfer){self.postMessage({message:msg,workerid:_worker.workerid},transfer)};\\n'\n\t\tfor (var key in deps) {\n\t\t\ttail += deps[key];\n\t\t}\n\t\t//\ttail += 'var _worker = defineDreem.require(\\'/myworker\\')();\\n'\n\t\ttail += ';(' + worker_boot.toString() + ')();\\n';\n\t\t// start all workers\n\t\tthis._workers = this._startWorkers(head, tail, 1);\n\n\t\tthis._transformThisToRPC();\n\n\t\tfunction worker_boot() {\n\t\t\tvar net = requireDreem('net');\n\t\t\tvar worker = defineDreem.requireDreem('/myworker')();\n\t\t\tvar NodeWebsocket = defineDreem.requireDreem(\"$system/server/nodewebsocket\");\n\t\t\tvar io = new net.Socket({ fd: 3 });\n\t\t\tvar sock = worker._socket = new NodeWebsocket(io);\n\t\t\tsock.makeJSONSocket();\n\n\t\t\tworker.postMessage = function (msg) {\n\t\t\t\tsock.sendJSON({ message: msg });\n\t\t\t};\n\n\t\t\tsock.atJSONMessage = function (msg) {\n\t\t\t\tif (msg.initid) {\n\t\t\t\t\tworker.workerid = msg.workerid;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (msg.message) {\n\t\t\t\t\tworker.onmessage(msg.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar ret = worker[msg.name].apply(worker, msg.args);\n\t\t\t\tif (ret && ret.then) ret.then(function (value) {\n\t\t\t\t\tsock.sendJSON({ value: value, uid: msg.uid, workerid: msg.workerid });\n\t\t\t\t});else sock.sendJSON({ value: ret, uid: msg.uid, workerid: msg.workerid });\n\t\t\t};\n\t\t}\n\n\t\tfor (var i = 0; i < this._workers.length; i++) {\n\t\t\t// incoming messages\n\t\t\tthis._workers[i].postMessage = function (msg) {\n\t\t\t\tthis.sendJSON(msg);\n\t\t\t};\n\n\t\t\tthis._workers[i].atJSONMessage = function (data) {\n\t\t\t\tif (data.message) {\n\t\t\t\t\treturn this.onmessage(data.message);\n\t\t\t\t}\n\t\t\t\tvar workerid = data.workerid;\n\n\t\t\t\tthis._workers[workerid].stack--;\n\t\t\t\tthis._resolveReturn(data);\n\t\t\t}.bind(this);\n\t\t}\n\n\t\tthis.postMessage = function (msg, transfer, tgtid) {\n\t\t\t// post to a worker\n\t\t\tvar workerid = tgtid || 0;\n\t\t\tthis._workers[workerid].postMessage({ message: msg });\n\t\t};\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodegl/workernodegl.js\n// module id = 185\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodegl/workernodegl.js?");

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/compositionbase', function (requireDreem, exports, baseclass) {\n\n\tvar Node = requireDreem('$system/base/node');\n\tvar RpcProxy = requireDreem('$system/rpc/rpcproxy');\n\tvar RpcHub = requireDreem('$system/rpc/rpchub');\n\n\tvar Render = requireDreem('$system/base/render');\n\tvar screen = requireDreem('$ui/screen');\n\n\tvar path = requireDreem('path');\n\tvar fs = requireDreem('fs');\n\n\t// ok now what. well we need to build our RPC interface\n\tthis.postAPI = function (msg, response) {\n\t\tif (msg.type == 'attribute') {\n\t\t\tif (!msg.get) {\n\t\t\t\t//setter\n\t\t\t\tthis.setRpcAttribute(msg, response);\n\t\t\t\tresponse.send({ type: 'return', attribute: msg.attribute, value: 'OK' });\n\t\t\t} else {\n\t\t\t\t//getter\n\t\t\t\tvar parts = msg.rpcid.split('.');\n\t\t\t\tvar obj;\n\t\t\t\tobj = this.names[parts[0]];\n\n\t\t\t\tif (!obj) {\n\t\t\t\t\tresponse.send({ type: 'error', message: \"Cannot find object\" });\n\t\t\t\t} else {\n\t\t\t\t\tresponse.send({ type: 'return', attribute: msg.attribute, value: obj[msg.attribute] });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type == 'method') {\n\t\t\tthis.callRpcMethod(msg).then(function (ret) {\n\t\t\t\tvar value = ret.value;\n\t\t\t\tresponse.send({ type: 'return', method: msg.method, value: value });\n\t\t\t}, function (ret) {\n\t\t\t\tresponse.send({ type: 'error', message: ret });\n\t\t\t});\n\t\t} else response.send({ type: 'error', message: 'please set \"msg.type\" to \"attribute\" or \"method\"' });\n\t};\n\n\tthis.handleRpcMethod = function (msg) {\n\t\t// lets make a promise\n\t\treturn new defineDreem.Promise(function (resolve, reject) {\n\t\t\tvar parts = msg.rpcid.split('.');\n\t\t\t//! TODO fix this up to be multi role capable\n\t\t\tvar part = parts[0];\n\n\t\t\tvar obj = this.names[part];\n\t\t\tif (obj instanceof screen) {\n\t\t\t\tvar scr = this.connected_screens[parts[0]];\n\n\t\t\t\tvar res = [];\n\t\t\t\tvar uid = msg.uid;\n\t\t\t\tif (scr) for (var i = 0; i < scr.length; i++) {\n\t\t\t\t\tvar screensock = scr[i];\n\t\t\t\t\t// socket open\n\t\t\t\t\tif (screensock.readyState === 1) {\n\t\t\t\t\t\t// lets send our message\n\t\t\t\t\t\tvar prom = this.rpc.allocPromise();\n\t\t\t\t\t\tres.push(prom);\n\t\t\t\t\t\tprom.origuid = msg.uid;\n\t\t\t\t\t\tmsg.uid = prom.uid;\n\t\t\t\t\t\tscreensock.sendJSON(msg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// lets wait for all screens of this name\n\t\t\t\tPromise.all(res).then(function (results) {\n\t\t\t\t\t// walk over promises and results\n\t\t\t\t\tvar rmsg = { type: 'return', uid: uid, value: results.length ? results[0].value : null, other: [] };\n\t\t\t\t\tfor (var i = 1; i < results.length; i++) {\n\t\t\t\t\t\trmsg.other.push(results[i].value);\n\t\t\t\t\t} // lets return the result\n\t\t\t\t\tresolve(rmsg);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// its a local thing, call it directly on our composition\n\t\t\t\tvar obj;\n\t\t\t\tif (part === 'this') {\n\t\t\t\t\tobj = this;\n\t\t\t\t} else {\n\t\t\t\t\tobj = this.names;\n\t\t\t\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\t\t\t\tobj = obj[parts[i]];\n\t\t\t\t\t\tif (!obj) return console.log(\"Error parsing rpc name \" + msg.rpcid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar exception;\n\t\t\t\ttry {\n\t\t\t\t\tvar ret = obj[msg.method].apply(obj, msg.args);\n\t\t\t\t} catch (exc) {\n\t\t\t\t\texception = exc;\n\t\t\t\t\tconsole.log(\"Exception while calling \" + msg.rpcid + \".\" + msg.method + \" \", exc.stack);\n\t\t\t\t}\n\t\t\t\tif (exception) var rmsg = { type: 'exception', uid: msg.uid, value: exception.message };else var rmsg = { type: 'return', uid: msg.uid, value: ret };\n\n\t\t\t\tif (ret && (typeof ret === 'undefined' ? 'undefined' : _typeof(ret)) === 'object' && ret.then) {\n\t\t\t\t\t// its a promise.\n\t\t\t\t\tret.then(function (result) {\n\t\t\t\t\t\trmsg.value = result;\n\t\t\t\t\t\tresolve(rmsg);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t//if(!defineDreem.isSafeJSON(ret)){\n\t\t\t\t\t//\trmsg.error = 'Result not json safe'\n\t\t\t\t\t//\trmsg.ret = undefined\n\t\t\t\t\t//\tconsole.log(\"Rpc result is not json safe \"+msg.rpcid+\".\"+msg.method)\n\t\t\t\t\t//}\n\t\t\t\t\tresolve(rmsg);\n\t\t\t\t\t//socket.sendJSON(rmsg)\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tthis.callRpcMethod = function (msg) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tthis.handleRpcMethod(msg).then(function (result) {\n\t\t\t\tresolve(result);\n\t\t\t}).catch(reject);\n\t\t}.bind(this));\n\t};\n\n\tthis.setRpcAttribute = function (msg, socket, real) {\n\t\tvar parts = msg.rpcid.split('.');\n\t\t// keep it around for new joins\n\t\tthis.server_attributes[msg.rpcid + '_' + msg.attribute] = msg;\n\n\t\tif (socket) {\n\t\t\t//make sure we set it on the rpc object\n\t\t\tvar cls = this.names[parts[0]];\n\t\t\tif (cls instanceof screen) {\n\t\t\t\tvar obj = this.rpc[parts[0]];\n\t\t\t\tvar last_set = obj.atAttributeSet;\n\t\t\t\tobj.atAttributeSet = undefined;\n\t\t\t\tobj[msg.attribute] = msg.value;\n\t\t\t\tobj.atAttributeSet = last_set;\n\t\t\t} else {\n\t\t\t\t// set it on self\n\t\t\t\tvar obj = this.names[parts[0]];\n\t\t\t\tif (obj) {\n\t\t\t\t\tobj[msg.attribute] = msg.value;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (real) {\n\t\t\t// write it on the rpc system for local loopback\n\t\t\tvar obj = this.rpc[parts[0]];\n\t\t\tvar last_set = obj.atAttributeSet;\n\t\t\tobj.atAttributeSet = undefined;\n\t\t\tobj[msg.attribute] = msg.value;\n\t\t\tobj.atAttributeSet = last_set;\n\t\t}\n\n\t\t// lets send this attribute to everyone except socket\n\t\tfor (var scrkey in this.connected_screens) {\n\t\t\tvar array = this.connected_screens[scrkey];\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar sock = array[i];\n\t\t\t\tif (sock === socket) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (sock.readyState === 1) {\n\t\t\t\t\tsock.sendJSON(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.atConstructor = function (bus, session, previous) {\n\n\t\tbaseclass.atConstructor.call(this);\n\n\t\tthis.bus = bus;\n\t\tthis.session = session;\n\t\tthis.rpc = new RpcHub(this);\n\t\tthis.connected_screens = previous && previous.connected_screens || {};\n\t\tthis.server_attributes = previous && previous.server_attributes || {};\n\n\t\tbus.atConnect = function (socket) {\n\t\t\tsocket.sendJSON({ type: 'sessionCheck', session: this.session });\n\t\t}.bind(this);\n\n\t\tbus.atClose = function (socket) {\n\t\t\tfor (var key in this.connected_screens) {\n\t\t\t\tvar screens = this.connected_screens[key];\n\t\t\t\tvar id = screens.indexOf(socket);\n\t\t\t\tif (id != -1) {\n\t\t\t\t\tscreens.splice(id, 1);\n\t\t\t\t\tif (screens.length == 0) {\n\t\t\t\t\t\tdelete this.connected_screens[key];\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tbus.atMessage = function (msg, socket) {\n\t\t\t// we will get messages from the clients\n\t\t\tif (msg.type == 'connectScreen') {\n\t\t\t\t// lets add a screen connection\n\t\t\t\tvar arr = this.connected_screens[msg.name] || (this.connected_screens[msg.name] = []);\n\t\t\t\tvar index = arr.push(socket) - 1;\n\n\t\t\t\t// lets let everyone know a new screen joined, for what its worth\n\t\t\t\tthis.bus.broadcast({ type: 'connectScreen', name: msg.name, index: index }, socket);\n\t\t\t\t// and send the OK back to the screen\n\t\t\t\tsocket.sendJSON({ type: 'connectScreenOK', attributes: this.server_attributes, index: index });\n\t\t\t} else if (msg.type == 'attribute') {\n\t\t\t\tthis.setRpcAttribute(msg, socket);\n\t\t\t} else if (msg.type == 'method') {\n\t\t\t\tthis.handleRpcMethod(msg).then(function (result) {\n\t\t\t\t\tsocket.sendJSON(result);\n\t\t\t\t});\n\t\t\t} else if (msg.type == 'return') {\n\t\t\t\t// lets resolve this return\n\t\t\t\tthis.rpc.resolveReturn(msg);\n\t\t\t} else if (msg.type == 'webrtcOffer') {\n\t\t\t\tbus.broadcast(msg);\n\t\t\t} else if (msg.type == 'webrtcAnswer') {\n\t\t\t\tbus.broadcast(msg);\n\t\t\t} else if (msg.type == 'webrtcOfferCandidate') {\n\t\t\t\tbus.broadcast(msg);\n\t\t\t} else if (msg.type == 'webrtcAnswerCandidate') {\n\t\t\t\tbus.broadcast(msg);\n\t\t\t} else if (msg.type == 'log') {\n\t\t\t\tconsole.log.apply(console, msg.args);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tbus.broadcast({ type: 'sessionCheck', session: this.session });\n\n\t\tthis.renderComposition();\n\n\t\t// call init on the classes which are in our environment\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\t// create child name shortcut\n\t\t\tvar child = this.children[i];\n\t\t\tchild.rpc = this.rpc;\n\t\t\tchild.composition = this;\n\t\t\tif (child instanceof screen) continue;\n\t\t\tif (!child.environment || child.environment === defineDreem.$environment) {\n\t\t\t\tvar init = [];\n\t\t\t\tchild.connectWires(init);\n\t\t\t\tfor (var j = 0; j < init.length; j++) {\n\t\t\t\t\tinit[j]();\n\t\t\t\t}child.emit('init');\n\t\t\t}\n\t\t}\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/compositionnodejs.js\n// module id = 186\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/compositionnodejs.js?");

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/device', function () {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/devicenodejs.js\n// module id = 187\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/devicenodejs.js?");

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/midi', function (require, exports) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/midinodejs.js\n// module id = 188\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/midinodejs.js?");

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/shader', function (requireDreem, exports) {\n   exports.Texture = this.Texture = requireDreem('./texturenodejs');\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/shadernodejs.js\n// module id = 189\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/shadernodejs.js?");

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/texture', function (exports) {\n   exports.fromType = function () {\n      return new exports();\n   };\n   exports.fromArray = function () {\n      return new exports();\n   };\n   exports.Image = function () {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/texturenodejs.js\n// module id = 190\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/texturenodejs.js?");

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/worker', function (require, exports) {});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/nodejs/workernodejs.js\n// module id = 191\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/nodejs/workernodejs.js?");

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// this class\n\ndefineDreem.class('$system/base/compositionclient', function (requireDreem, baseclass) {\n\n\tvar Device = requireDreem('$system/platform/$platform/device$platform');\n\tvar WebRTC = requireDreem('$system/rpc/webrtc');\n\tvar BusClient = requireDreem('$system/rpc/busclient');\n\n\tthis.atConstructor = function (previous, parent, precached, canvas) {\n\t\twindow.composition = this;\n\t\tif (previous) {\n\t\t\tthis.reload = (previous.reload || 0) + 1;\n\t\t\tthis.device = previous.device; // new Device(previous.device) //previous.device\n\t\t\tthis.device.reload = this.reload;\n\t\t\tconsole.log(\"Reload \" + this.reload);\n\t\t} else {\n\t\t\t// lets spawn up a webGL device\n\t\t\tthis.device = new Device(undefined, canvas);\n\t\t}\n\n\t\tbaseclass.atConstructor.call(this, previous, parent, precached);\n\t\tthis.screen._size = this.device.size;\n\t};\n\n\tthis.createBus = function () {\n\t\tthis.bus = new BusClient((location.href.indexOf('https') === 0 ? 'wss://' : 'ws://') + location.host + location.pathname);\n\t};\n\n\tthis.doRender = function (previous, parent) {\n\t\tbaseclass.doRender.call(this, previous, parent);\n\n\t\tthis.screen.addListener('locationhash', function (event) {\n\t\t\tvar obj = event.value;\n\t\t\tvar str = '';\n\t\t\tfor (var key in obj) {\n\t\t\t\tvar value = obj[key];\n\t\t\t\tif (str.length) str += '&';\n\t\t\t\tif (value === true) str += key;else str += key + '=' + value;\n\t\t\t}\n\t\t\tlocation.hash = '#' + str;\n\t\t});\n\n\t\tthis.decodeLocationHash = function () {\n\t\t\t// lets split it on & into a=b pairs,\n\t\t\tvar obj = {};\n\t\t\tvar parts = location.hash.slice(1).split(/\\&/);\n\t\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\t\tvar part = parts[i];\n\t\t\t\tvar kv = part.split(/=/);\n\t\t\t\tif (kv.length === 1) obj[kv[0]] = true;else {\n\t\t\t\t\tobj[kv[0]] = kv[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.screen.locationhash = obj;\n\t\t};\n\n\t\twindow.onhashchange = function () {\n\t\t\tthis.decodeLocationHash();\n\t\t}.bind(this);\n\n\t\tthis.decodeLocationHash();\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/compositionwebgl.js\n// module id = 192\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/compositionwebgl.js?");

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Parts copyright 2012 Google, Inc. All Rights Reserved. (APACHE 2.0 license)\n\ndefineDreem.class('./shaderwebgl', function (requireDreem, exports) {\n\tthis.matrix = mat4();\n\n\tthis.position = function () {\n\t\treturn mesh.pos * matrix;\n\t};\n\n\tthis.color = function () {\n\t\tif (mesh.debug == 0.) return 'red';\n\t\tif (mesh.debug == 1.) return 'green';\n\t\tif (mesh.debug == 2.) return 'blue';\n\t\treturn 'white';\n\t};\n\n\tthis.debuggeom = defineDreem.struct({\n\t\tpos: vec2,\n\t\tdebug: float\n\t}).extend(function () {\n\n\t\tthis.add = function (x, y, w, h, dbg) {\n\t\t\tthis.pushQuad(x, y, dbg, x + w, y, dbg, x, y + h, dbg, x + w, y + h, dbg);\n\t\t};\n\t});\n\n\tthis.mesh = this.debuggeom.array();\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/debugwebgl.js\n// module id = 193\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/debugwebgl.js?");

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.Keyboard = requireDreem('./keyboardwebgl');\n\tthis.Pointer = requireDreem('./pointerwebgl');\n\tthis.Midi = requireDreem('./midiwebgl');\n\n\t// require embedded classes\n\tthis.Shader = requireDreem('./shaderwebgl');\n\tthis.Texture = requireDreem('./texturewebgl');\n\tthis.DrawPass = requireDreem('./drawpasswebgl');\n\n\tthis.preserveDrawingBuffer = false;\n\tthis.premultipliedAlpha = false;\n\tthis.antialias = false;\n\tthis.debug_pick = false;\n\n\tthis.window = this.document = typeof window !== 'undefined' ? window : null;\n\n\tthis.atConstructor = function (previous, canvas) {\n\n\t\tthis.extensions = previous && previous.extensions || {};\n\t\tthis.shadercache = previous && previous.shadercache || {};\n\t\tthis.drawpass_list = previous && previous.drawpass_list || [];\n\t\tthis.layout_list = previous && previous.layout_list || [];\n\t\tthis.pick_resolve = [];\n\t\tthis.anim_redraws = [];\n\t\tthis.animate_hooks = [];\n\t\tthis.doPick = this.doPick.bind(this);\n\n\t\tthis.animFrame = function (time) {\n\t\t\tif (this.doColor(time)) {\n\t\t\t\tthis.anim_req = true;\n\t\t\t\tthis.document.requestAnimationFrame(this.animFrame);\n\t\t\t} else this.anim_req = false;\n\t\t\t//if(this.pick_resolve.length) this.doPick()\n\t\t}.bind(this);\n\n\t\tif (previous) {\n\t\t\tthis.canvas = previous.canvas;\n\t\t\tthis.gl = previous.gl;\n\t\t\tthis.keyboard = previous.keyboard;\n\t\t\tthis.pointer = previous.pointer;\n\t\t\tthis.midi = previous.midi;\n\t\t\tthis.parent = previous.parent;\n\t\t\tthis.drawtarget_pools = previous.drawtarget_pools;\n\t\t\tthis.frame = this.main_frame = previous.main_frame;\n\t\t} else {\n\t\t\tthis.frame = this.main_frame = this.Texture.fromType('rgb_depth');\n\n\t\t\tthis.keyboard = new this.Keyboard(this);\n\t\t\tthis.pointer = new this.Pointer(this);\n\t\t\tthis.midi = new this.Midi(this);\n\t\t\tthis.drawtarget_pools = {};\n\n\t\t\tthis.createContext(canvas);\n\t\t\tthis.createWakeupWatcher();\n\t\t}\n\n\t\tthis.initResize();\n\t};\n\n\tthis.createWakeupWatcher = function () {\n\t\tvar last = Date.now();\n\t\tsetInterval(function () {\n\t\t\tvar now = Date.now();\n\t\t\tif (now - last > 1000 && this.screen) {\n\t\t\t\tthis.doSize();\n\t\t\t\tthis.redraw();\n\t\t\t\tthis.screen.emit('wakeup');\n\t\t\t}\n\t\t\tlast = now;\n\t\t}.bind(this), 200);\n\t};\n\n\tthis.createContext = function (canvas) {\n\t\tif (!this.parent) this.parent = document.body;\n\n\t\tif (canvas) {\n\t\t\tif (typeof canvas === \"string\") {\n\t\t\t\tcanvas = document.getElementById(canvas);\n\t\t\t}\n\t\t\tthis.canvas = canvas;\n\t\t\tthis.canvas.className = 'unselectable';\n\t\t} else {\n\t\t\tthis.canvas = document.createElement(\"canvas\");\n\t\t\tthis.canvas.className = 'unselectable';\n\t\t\tthis.parent.appendChild(this.canvas);\n\t\t}\n\n\t\tvar options = {\n\t\t\talpha: this.frame.type.indexOf('rgba') != -1,\n\t\t\tdepth: this.frame.type.indexOf('depth') != -1,\n\t\t\tstencil: this.frame.type.indexOf('stencil') != -1,\n\t\t\tantialias: this.antialias,\n\t\t\tpremultipliedAlpha: this.premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: this.preserveDrawingBuffer,\n\t\t\tpreferLowPowerToHighPerformance: this.preferLowPowerToHighPerformance\n\t\t};\n\n\t\tthis.gl = this.canvas.getContext('webgl', options) || this.canvas.getContext('webgl-experimental', options) || this.canvas.getContext('experimental-webgl', options);\n\n\t\tif (!this.gl) {\n\t\t\tconsole.log(this.canvas);\n\t\t\tconsole.log(\"Could not get webGL context!\");\n\t\t}\n\n\t\t// require derivatives\n\t\tthis.getExtension('OES_standard_derivatives');\n\t};\n\n\tthis.initResize = function () {\n\t\t//canvas.webkitRequestFullscreen()\n\n\t\tvar resize = this.doSize = function () {\n\t\t\tvar pixelRatio = window.devicePixelRatio;\n\n\t\t\tvar w = this.parent.offsetWidth;\n\t\t\tvar h = this.parent.offsetHeight;\n\n\t\t\tvar sw = w * pixelRatio;\n\t\t\tvar sh = h * pixelRatio;\n\n\t\t\tthis.canvas.width = sw;\n\t\t\tthis.canvas.height = sh;\n\t\t\tthis.canvas.style.width = w + 'px';\n\t\t\tthis.canvas.style.height = h + 'px';\n\n\t\t\tthis.gl.viewport(0, 0, sw, sh);\n\t\t\t// store our w/h and pixelratio on our frame\n\n\t\t\tthis.main_frame.ratio = pixelRatio;\n\t\t\tthis.main_frame.size = vec2(sw, sh); // actual size\n\n\t\t\tthis.size = vec2(w, h);\n\t\t\tthis.ratio = this.main_frame.ratio;\n\t\t}.bind(this);\n\n\t\twindow.onresize = function () {\n\t\t\tresize();\n\t\t\tthis.atResize();\n\t\t\tthis.redraw();\n\t\t}.bind(this);\n\n\t\tresize();\n\t};\n\n\tthis.clear = function (r, g, b, a) {\n\t\tif (arguments.length === 1) {\n\t\t\ta = r.length === 4 ? r[3] : 1, b = r[2], g = r[1], r = r[0];\n\t\t}\n\t\tif (arguments.length === 3) a = 1;\n\t\tthis.gl.clearColor(r, g, b, a);\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\t};\n\n\tthis.getExtension = function (name) {\n\t\tvar ext = this.extensions[name];\n\t\tif (ext) return ext;\n\t\text = this.extensions[name] = this.gl.getExtension(name);\n\t\treturn ext;\n\t};\n\n\tthis.redraw = function () {\n\t\tif (this.anim_req) return;\n\t\tthis.anim_req = true;\n\t\tthis.document.requestAnimationFrame(this.animFrame);\n\t};\n\n\tthis.bindFramebuffer = function (frame) {\n\t\tif (!frame) frame = this.main_frame;\n\n\t\tthis.frame = frame;\n\t\t//this.size = vec2(frame.size[0]/frame.ratio, frame.size[1]/frame.ratio)\n\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frame.glframe_buf || null);\n\t\tthis.gl.viewport(0, 0, frame.size[0], frame.size[1]);\n\t};\n\n\tthis.readPixels = function (x, y, w, h) {\n\t\tvar buf = new Uint8Array(w * h * 4);\n\t\tthis.gl.readPixels(x, y, w, h, this.gl.RGBA, this.gl.UNSIGNED_BYTE, buf);\n\t\treturn buf;\n\t};\n\n\tthis.doPick = function (resolve) {\n\t\tthis.pick_timer = 0;\n\t\tvar x = this.pick_x,\n\t\t    y = this.pick_y;\n\n\t\tif (!this.first_draw_done) {\n\t\t\tthis.doColor(this.last_time);\n\t\t}\n\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\t\t\tvar last = i === len - 1;\n\t\t\t//var skip = false\n\t\t\tvar view = this.drawpass_list[i];\n\n\t\t\t// little hack to dont use rtt if you only use a single view\n\t\t\t//if(view.parent == this.screen && view.flex ==1 && this.screen.children.length ===1){\n\t\t\t//\tskip = last = true\n\t\t\t//}\n\t\t\t// lets set up glscissor on last\n\t\t\t// and then read the goddamn pixel\n\t\t\tif (last || view.draw_dirty & 2) {\n\t\t\t\tview.draw_dirty &= 1;\n\t\t\t\tview.drawpass.drawPick(last, i + 1, x, y, this.debug_pick);\n\t\t\t}\n\t\t\t//if(skip){\n\t\t\t//\tthis.screen.draw_dirty &= 1\n\t\t\t//\tbreak\n\t\t\t//}\n\t\t}\n\t\t// now lets read the pixel under the pointer\n\t\tvar pick_resolve = this.pick_resolve;\n\t\tthis.pick_resolve = [];\n\n\t\tif (this.debug_pick) {\n\n\t\t\tvar data = this.readPixels(x * this.ratio, this.main_frame.size[1] - y * this.ratio, 1, 1);\n\t\t} else {\n\t\t\tvar data = this.readPixels(0, 0, 1, 1);\n\t\t}\n\n\t\t// decode the pass and drawid\n\t\tvar passid = data[0]; //(data[0]*43)%256\n\t\tvar drawid = data[2] << 8 | data[1]; //*60777)%65536\n\t\t// lets find the view.\n\n\t\tvar passview = this.drawpass_list[passid - 1];\n\t\tvar drawpass = passview && passview.drawpass;\n\t\tvar view = drawpass && drawpass.getDrawID(drawid);\n\n\t\twhile (view && view.nopick) {\n\t\t\tview = view.parent;\n\t\t}\n\n\t\tif (resolve) {\n\t\t\tresolve(view);\n\t\t} else {\n\t\t\tfor (var i = 0; i < pick_resolve.length; i++) {\n\t\t\t\tpick_resolve[i](view);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.pickScreen = function (pos, resolve, immediate) {\n\t\tthis.pick_x = pos[0];\n\t\tthis.pick_y = pos[1];\n\n\t\tvar callback = function () {\n\t\t\tthis.doPick(resolve);\n\t\t\tdelete this.pick_timer;\n\t\t}.bind(this);\n\n\t\t// TODO(aki): remove sync picking\n\t\tif (immediate) {\n\t\t\tcallback(resolve);\n\t\t\treturn;\n\t\t}\n\n\t\t// Throttle picking at 15 fps\n\t\tif (!this.pick_timer) {\n\t\t\tthis.pick_timer = setTimeout(callback, 1000 / 15);\n\t\t\tthis.pick_timer.time = this.last_time;\n\t\t}\n\t};\n\n\tthis.doColor = function (time) {\n\n\t\tif (!this.first_time) this.first_time = time;\n\t\tthis.last_time = time;\n\n\t\tif (!this.screen) return;\n\n\t\tthis.first_draw_done = true;\n\n\t\tvar stime = (time - this.first_time) / 1000;\n\t\t//console.log(this.last_time - stime)\n\n\t\t// lets layout shit that needs layouting.\n\t\tvar anim_redraw = this.anim_redraws;\n\t\tanim_redraw.length = 0;\n\t\tthis.screen.doAnimation(stime, anim_redraw);\n\n\t\tthis.screen._maxsize = this.screen._size = vec2(this.main_frame.size[0] / this.ratio, this.main_frame.size[1] / this.ratio);\n\n\t\t// do all the animate hooks\n\t\tvar animate_hooks = this.animate_hooks;\n\t\tfor (var i = 0; i < animate_hooks.length; i++) {\n\t\t\tvar item = animate_hooks[i];\n\t\t\t//console.log(item)\n\t\t\tif (item.atAnimate(stime)) {\n\t\t\t\tanim_redraw.push(item);\n\t\t\t}\n\t\t}\n\n\t\t// do the dirty layouts\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.layout_dirty) {\n\t\t\t\tview.doLayout();\n\t\t\t\tview.layout_dirty = false;\n\t\t\t}\n\t\t}\n\n\t\t// do the dirty matrix regen\n\t\tfor (var i = 0; i < this.layout_list.length; i++) {\n\t\t\t// lets do a layout?\n\t\t\tvar view = this.layout_list[i];\n\t\t\tif (view.matrix_dirty) {\n\t\t\t\tview.updateMatrices(view.parent ? view.parent.totalmatrix : undefined, view._viewport);\n\t\t\t}\n\t\t}\n\n\t\tvar clipview = undefined;\n\t\t// lets draw draw all dirty passes.\n\t\tfor (var i = 0, len = this.drawpass_list.length; i < len; i++) {\n\n\t\t\tvar view = this.drawpass_list[i];\n\t\t\t//var skip = false\n\t\t\tvar last = i === len - 1;\n\t\t\t//if(view.parent == this.screen && view.flex == 1 && this.screen.children.length ===1){\n\t\t\t//\tskip = last = true\n\t\t\t//}\n\n\t\t\tif (view.draw_dirty & 1 || last) {\n\n\t\t\t\tif (!last) {\n\t\t\t\t\tif (clipview === undefined) clipview = view;else clipview = null;\n\t\t\t\t}\n\t\t\t\tvar hastime = view.drawpass.drawColor(last, stime, clipview);\n\t\t\t\tview.draw_dirty &= 2;\n\t\t\t\tif (hastime) {\n\t\t\t\t\tanim_redraw.push(view);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if(skip){\n\t\t\t//\tthis.screen.drawpass.calculateDrawMatrices(false, this.screen.drawpass.colormatrices);\n\t\t\t//\tthis.screen.draw_dirty &= 2\n\t\t\t//\tbreak\n\t\t\t//}\n\t\t}\n\n\t\tif (anim_redraw.length) {\n\t\t\t//console.log(\"REDRAWIN\", this.draw_hooks)\n\t\t\tvar redraw = false;\n\t\t\tfor (var i = 0; i < anim_redraw.length; i++) {\n\t\t\t\tvar aredraw = anim_redraw[i];\n\t\t\t\tif (!aredraw.atAfterDraw || aredraw.atAfterDraw()) {\n\t\t\t\t\tredraw = true;\n\t\t\t\t\taredraw.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn redraw;\n\t\t}\n\t\treturn hastime;\n\t};\n\n\tthis.atNewlyRendered = function (view) {\n\n\t\t// if view is not a layer we have to find the layer, and regenerate that whole layer.\n\t\tif (!view.parent) this.screen = view; // its the screen\n\t\t// alright lets do this.\n\t\tvar node = view;\n\t\twhile (!node._viewport) {\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (!node.parent) {\n\t\t\t// fast path to chuck the whole setc\n\n\n\t\t\tfor (var j = 0; j < this.pointer.hover.length; j++) {\n\t\t\t\tvar p = this.pointer.hover[j];\n\t\t\t\t//console.log(\"Removing dangling hover pointer\", p)\n\t\t\t\tthis.pointer.hover.removePointer(p);\n\t\t\t}\n\n\t\t\t// lets put all the drawpasses in a pool for reuse\n\t\t\tfor (var i = 0; i < this.drawpass_list.length; i++) {\n\t\t\t\tvar draw = this.drawpass_list[i];\n\t\t\t\tdraw.drawpass.poolDrawTargets();\n\t\t\t\tdraw.layout_dirty = true;\n\t\t\t\tdraw.draw_dirty = 3;\n\t\t\t}\n\t\t\tthis.drawpass_list = [];\n\t\t\tthis.layout_list = [];\n\t\t\tthis.drawpass_idx = 0;\n\t\t\tthis.layout_idx_first = 0;\n\t\t\tthis.layout_idx = 0;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t\tthis.first_draw_done = false;\n\t\t\tthis.redraw();\n\t\t} else {\n\t\t\t// else we remove drawpasses first then re-add them\n\t\t\tthis.removeDrawPasses(node);\n\t\t\tthis.layout_idx_first = this.layout_idx;\n\t\t\tthis.addDrawPassRecursive(node);\n\t\t}\n\t\tnode.relayout();\n\t};\n\n\t// remove drawpasses related to a view\n\tthis.removeDrawPasses = function (view) {\n\t\t// we have to remove all the nodes which have view as their parent layer\n\t\tvar drawpass_list = this.drawpass_list;\n\t\tthis.drawpass_idx = Infinity;\n\t\tfor (var i = 0; i < drawpass_list.length; i++) {\n\t\t\tvar node = drawpass_list[i];\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.drawpass_idx) this.drawpass_idx = i;\n\t\t\t\tnode.drawpass.poolDrawTargets();\n\t\t\t\tdrawpass_list.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.drawpass_idx === Infinity) this.drawpass_idx = 0;\n\t\t// now remove all layouts too\n\t\tthis.layout_idx = Infinity;\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tvar pass = layout_list[i];\n\t\t\tvar node = pass;\n\t\t\twhile (node.parent && node !== view) {\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node === view) {\n\t\t\t\tif (i < this.layout_idx) this.layout_idx = i;\n\t\t\t\tlayout_list.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif (this.layout_idx === Infinity) this.layout_idx = 0;\n\t};\n\n\t// add drawpasses and layouts recursively from a view\n\tthis.addDrawPassRecursive = function (view) {\n\t\t// lets first walk our children( depth first)\n\t\tvar children = view.children;\n\t\tif (children) for (var i = 0; i < children.length; i++) {\n\t\t\tthis.addDrawPassRecursive(children[i]);\n\t\t}\n\n\t\t// lets create a drawpass\n\t\tif (view._viewport) {\n\t\t\tvar pass = new this.DrawPass(this, view);\n\t\t\tthis.drawpass_list.splice(this.drawpass_idx, 0, view);\n\t\t\tthis.drawpass_idx++;\n\t\t\t// lets also add a layout pass\n\t\t\tif (isNaN(view._flex)) {\n\t\t\t\t// if not flex, make sure layout runs before the rest\n\t\t\t\t// we are self contained\n\t\t\t\tthis.layout_list.splice(this.layout_idx_first, 0, view);\n\t\t\t} else {\n\t\t\t\t// we are flex, make sure we layout after\n\t\t\t\tthis.layout_list.splice(this.layout_idx, 0, view);\n\t\t\t}\n\t\t\t//this.layout_idx++\n\t\t}\n\t};\n\n\tthis.relayout = function () {\n\t\tvar layout_list = this.layout_list;\n\t\tfor (var i = 0; i < layout_list.length; i++) {\n\t\t\tview = layout_list[i];\n\t\t\tif (!isNaN(view._flex) || view == this.screen) {\n\t\t\t\tview.relayout();\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.atResize = function () {\n\t\t// lets relayout the whole fucker\n\t\tthis.relayout();\n\t\tthis.redraw();\n\t\t// do stuff\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/devicewebgl.js\n// module id = 194\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/devicewebgl.js?");

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, baseclass) {\n\t// internal, drawing\n\tvar Shader = requireDreem('./shaderwebgl');\n\n\tthis.atConstructor = function (gldevice, view) {\n\t\tthis.device = gldevice;\n\t\tthis.view = view;\n\t\tthis.drawcount = 0;\n\t\tview.drawpass = this;\n\n\t\t// lets do the flatten\n\t\tthis.pickmatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\n\t\tthis.colormatrices = {\n\t\t\tviewmatrix: mat4.identity(),\n\t\t\tnoscrollmatrix: mat4.identity()\n\t\t};\n\t};\n\n\tthis.atDestroy = function () {\n\t\tthis.releaseTexture();\n\t};\n\n\tthis.poolDrawTargets = function () {\n\t\tvar pools = this.device.drawtarget_pools;\n\t\tif (!this.drawtargets) return;\n\t\tfor (var i = 0; i < this.drawtargets.length; i++) {\n\t\t\tvar dt = this.drawtargets[i];\n\t\t\tif (!pools[dt]) pools[dt] = [];\n\t\t\tpools[dt].push(this[dt]);\n\t\t\tthis[dt] = null;\n\t\t}\n\t};\n\n\tthis.allocDrawTarget = function (width, height, view, drawtarget, passid, ratio, isfloat) {\n\t\twidth = floor(width);\n\t\theight = floor(height);\n\t\tvar Texture = this.device.Texture;\n\t\tif (!this.drawtargets) this.drawtargets = [];\n\t\tif (this.drawtargets.indexOf(drawtarget) === -1) this.drawtargets.push(drawtarget);\n\t\ttexturetype = Texture.RGBA | Texture.DEPTH | Texture.STENCIL;\n\t\tif (isfloat) {\n\t\t\ttexturetype |= Texture.FLOAT;\n\t\t}\n\t\tvar dt = this[drawtarget];\n\t\t//var twidth = this.nextPowerTwo(layout.width* main_ratio), theight = this.nextPowerTwo(layout.height* main_ratio)\n\t\tif (!dt) {\n\t\t\t// lets scan the pools for a suitable drawtarget, otherwise create it\n\t\t\tvar pool = this.device.drawtarget_pools[drawtarget];\n\t\t\tif (pool && pool.length) {\n\t\t\t\t// first find a drawtarget with the same size\n\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\tvar size = tgt.size;\n\t\t\t\t\tif (size[0] === width && size[1] === height) {\n\t\t\t\t\t\t// lets remove it from the pool\n\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// then we find a drawtarget with the same passid as last time\n\t\t\t\tif (!dt) {\n\t\t\t\t\tfor (var i = 0; i < pool.length; i++) {\n\t\t\t\t\t\tvar tgt = pool[i];\n\t\t\t\t\t\tif (!tgt) continue;\n\t\t\t\t\t\tif (passid === tgt.passid) {\n\t\t\t\t\t\t\tdt = tgt;\n\t\t\t\t\t\t\tpool.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// otherwise we create a new one\n\t\t\tif (!dt) {\n\t\t\t\tdt = this[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : texturetype, width, height, this.device);\n\t\t\t} else this[drawtarget] = dt;\n\t\t\tdt.passid = passid;\n\t\t}\n\t\t// make sure the drawtarget has the right size\n\t\tvar tsize = this[drawtarget].size;\n\t\tif (width !== tsize[0] || height !== tsize[1]) {\n\t\t\t// reset drawcount\n\t\t\tthis.drawcount = 0;\n\t\t\tthis[drawtarget].delete();\n\t\t\tthis[drawtarget] = Texture.createRenderTarget(view._viewport === '2d' ? Texture.RGB : texturetype, width, height, this.device);\n\t\t}\n\t\tthis[drawtarget].ratio = ratio;\n\t};\n\n\tthis.calculateDrawMatrices = function (isroot, storage, pointerx, pointery) {\n\t\tvar view = this.view;\n\t\tvar scroll = view._scroll;\n\t\tvar layout = view._layout;\n\n\t\tif (view._viewport === '2d') {\n\t\t\tif (isroot && pointerx !== undefined) {\n\t\t\t\tvar sizel = 0;\n\t\t\t\tvar sizer = 1;\n\t\t\t\tmat4.ortho(scroll[0] + pointerx - sizel, scroll[0] + pointerx + sizer, scroll[1] + pointery - sizer, scroll[1] + pointery + sizel, -100, 100, storage.viewmatrix);\n\t\t\t\tmat4.ortho(pointerx - sizel, pointerx + sizer, pointery - sizer, pointery + sizel, -100, 100, storage.noscrollmatrix);\n\t\t\t} else {\n\t\t\t\tvar zoom = view._zoom;\n\t\t\t\tif (isroot) {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], scroll[1], layout.height * zoom + scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, 0, layout.height, -100, 100, storage.noscrollmatrix);\n\t\t\t\t} else {\n\t\t\t\t\tmat4.ortho(scroll[0], layout.width * zoom + scroll[0], layout.height * zoom + scroll[1], scroll[1], -100, 100, storage.viewmatrix);\n\t\t\t\t\tmat4.ortho(0, layout.width, layout.height, 0, -100, 100, storage.noscrollmatrix);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (view._viewport === '3d') {\n\t\t\tstorage.perspectivematrix = mat4.perspective(view._fov * PI * 2 / 360.0, layout.width / layout.height, view._nearplane, view._farplane);\n\t\t\tstorage.lookatmatrix = mat4.lookAt(view._camera, view._lookat, view._up);\n\t\t\tstorage.viewmatrix = mat4.mat4_mul_mat4(storage.lookatmatrix, storage.perspectivematrix);\n\t\t}\n\t};\n\n\tfunction isInBounds2D(view, draw) {\n\t\tif (draw.noboundscheck) return true;\n\t\tvar height = view._layout.height;\n\t\tvar width = view._layout.width;\n\t\tvar drawlayout = draw._layout;\n\n\t\tif (draw.parent && draw.parent !== view) {\n\t\t\tdrawlayout.absx = draw.parent._layout.absx + drawlayout.left;\n\t\t\tdrawlayout.absy = draw.parent._layout.absy + drawlayout.top;\n\t\t} else {\n\t\t\tdrawlayout.absx = drawlayout.left;\n\t\t\tdrawlayout.absy = drawlayout.top;\n\t\t}\n\n\t\t// if(draw === view && view.sublayout){\n\t\t// \twidth = view.sublayout.width\n\t\t// \theight = view.sublayout.height\n\t\t// }\n\n\t\t// // early out check\n\t\t// if(draw !== view && !draw.noscroll){\n\t\t// \tvar scroll = view._scroll\n\t\t// \tvar zoom = view._zoom\n\t\t// \tif( drawlayout.absy - scroll[1] > height * zoom || drawlayout.absy + drawlayout.height - scroll[1] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// \tif(drawlayout.absx - scroll[0] > width * zoom || drawlayout.absx + drawlayout.width - scroll[0] < 0){\n\t\t// \t\treturn false\n\t\t// \t}\n\t\t// }\n\t\treturn true;\n\t}\n\n\tthis.nextItem = function (draw, nottype) {\n\t\tvar view = this.view;\n\t\tvar next = (draw === view || !draw._viewport && draw._visible && draw._drawtarget !== nottype) && draw.children[0],\n\t\t    next_index = 0;\n\t\twhile (!next) {\n\t\t\t// skip to parent next\n\t\t\tif (draw === view) break;\n\t\t\tnext_index = draw.draw_index + 1;\n\t\t\tdraw = draw.parent;\n\t\t\tnext = draw.children[next_index];\n\t\t}\n\t\tif (next === view) return undefined;\n\t\tif (next) next.draw_index = next_index;\n\t\treturn next;\n\t};\n\n\tthis.drawPick = function (isroot, passid, pointerx, pointery, debug) {\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\tif (isroot) {\n\t\t\tif (!debug) this.allocDrawTarget(1, 1, this.view, 'pick_buffer', passid);\n\t\t} else {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tratio = 1;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'pick_buffer', passid);\n\t\t}\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t\tdevice.bindFramebuffer(this.pick_buffer || null);\n\t\tdevice.clear(0, 0, 0, 0);\n\n\t\tvar matrices = this.pickmatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices, debug ? undefined : pointerx, pointery);\n\t\t// calculate the colormatrices too\n\t\t//if(!this.colormatrices.initialized){\n\t\t//\tthis.calculateDrawMatrices(isroot, this.colormatrices)\n\t\t//}\n\n\t\tvar pickguid = vec3();\n\t\tpickguid[0] = passid / 255; //(((passid)*131)%256)/255\n\n\t\t// modulo inverse: http://www.wolframalpha.com/input/?i=multiplicative+inverse+of+31+mod+256\n\t\tvar pick_id = 0;\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 1;\n\n\t\t\tpick_id += draw.pickrange;\n\t\t\tif (!draw._visible || draw._drawtarget === 'color' || draw._first_draw_pick && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_pick = 1;\n\n\t\t\t\tvar id = pick_id; //(pick_id*29401)%65536\n\t\t\t\tpickguid[1] = (id & 255) / 255;\n\t\t\t\tpickguid[2] = (id >> 8) / 255;\n\n\t\t\t\tdraw.pickguid = pickguid[0] * 255 << 16 | pickguid[1] * 255 << 8 | pickguid[2] * 255;\n\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (!draw._visible) continue;\n\t\t\t\tif (draw._viewport && draw.drawpass !== this && draw.drawpass.pick_buffer) {\n\t\t\t\t\t// ok so the pick pass needs the alpha from the color buffer\n\t\t\t\t\t// and then hard forward the color\n\t\t\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\t\t\tif (view._viewport === '3d') {\n\t\t\t\t\t\t// dont do this!\n\t\t\t\t\t\tif (shader.depth_test_eq.func === 0) shader.depth_test = 'src_depth <= dst_depth';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblendshader.depth_test = '';\n\t\t\t\t\t}\n\t\t\t\t\tblendshader.texture = draw.drawpass.pick_buffer;\n\t\t\t\t\tblendshader._width = draw.layout.width;\n\t\t\t\t\tblendshader._height = draw.layout.height;\n\t\t\t\t\tblendshader.drawArrays(this.device);\n\t\t\t\t} else {\n\t\t\t\t\t//draw.updateShaders()\n\t\t\t\t\t// alright lets iterate the shaders and call em\n\t\t\t\t\tvar shaders = draw.shader_draw_list;\n\t\t\t\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t\t\t\tvar shader = shaders[j];\n\n\t\t\t\t\t\tif (view._viewport === '3d') {\n\t\t\t\t\t\t\tif (shader.depth_test_eq.func == 0) shader.depth_test = 'src_depth <= dst_depth';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshader.pickguid = pickguid;\n\n\t\t\t\t\t\tif (!shader.visible) continue;\n\t\t\t\t\t\tif (draw.pickalpha !== undefined) shader.pickalpha = draw.pickalpha;\n\t\t\t\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\t\t\tshader.drawArrays(this.device, 'pick');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw, 'color');\n\t\t}\n\t};\n\n\tthis.getDrawID = function (id) {\n\t\tvar view = this.view;\n\t\tvar draw = view;\n\t\tvar pick_id = 0;\n\t\twhile (draw) {\n\n\t\t\tif (id > pick_id && id <= pick_id + draw.pickrange) {\n\t\t\t\tdraw.last_pick_id = pick_id + draw.pickrange - id;\n\t\t\t\treturn draw;\n\t\t\t}\n\n\t\t\tpick_id += draw.pickrange;\n\n\t\t\tdraw = this.nextItem(draw);\n\t\t}\n\t};\n\n\t// accepts a view reference and takes the viewportblend shader\n\tthis.drawBlend = function (draw) {\n\t\tif (!draw.drawpass.color_buffer) {\n\t\t\tconsole.error(\"Null color_buffer detected, did you forget sizing/flex:1 on your 3D viewport?\", draw);\n\t\t} else {\n\t\t\t// ok so when we are drawing a pick pass, we just need to 1 on 1 forward the color data\n\t\t\t// lets render the view as a layer\n\n\t\t\tvar blendshader = draw.shaders.viewportblend;\n\t\t\tif (this.view._viewport === '3d') {\n\t\t\t\tblendshader.depth_test = 'src_depth <= dst_depth';\n\t\t\t} else {\n\t\t\t\tblendshader.depth_test = '';\n\t\t\t}\n\n\t\t\tblendshader.texture = draw.drawpass.blendbuffer;\n\t\t\tblendshader.width = draw._layout.width;\n\t\t\tblendshader.height = draw._layout.height;\n\t\t\tblendshader.drawArrays(this.device);\n\t\t}\n\t};\n\n\tthis.drawNormal = function (draw, view, matrices) {\n\t\tdraw.updateShaders();\n\t\tvar vtx_count = 0;\n\t\t// alright lets iterate the shaders and call em\n\t\tvar shaders = draw.shader_draw_list;\n\t\tfor (var j = 0; j < shaders.length; j++) {\n\t\t\t// lets draw em\n\t\t\tvar shader = shaders[j];\n\t\t\tif (view._viewport === '3d') {\n\t\t\t\tif (shader.depth_test_eq.func === 0) shader.depth_test = 'src_depth < dst_depth';\n\t\t\t}\n\n\t\t\tif (shader.pickonly || !shader.visible) continue; // was pick only\n\t\t\tshader.view = draw;\n\t\t\tif (shader.atDraw) shader.atDraw(draw);\n\t\t\t// we have to set our guid.\n\t\t\tif (shader.noscroll) draw.viewmatrix = matrices.noscrollmatrix;else draw.viewmatrix = matrices.viewmatrix;\n\n\t\t\tvtx_count += shader.drawArrays(this.device);\n\t\t}\n\t\treturn vtx_count;\n\t};\n\n\t// currently renders into color_buffer\n\tthis.drawColor = function (isroot, time, clipview) {\n\t\tvar view = this.view;\n\t\tvar device = this.device;\n\t\tvar layout = view._layout;\n\t\tvar gl = device.gl;\n\t\tvar dom_count = 0;\n\t\tvar vtx_count = 0;\n\t\tif (!layout || layout.width === 0 || isNaN(layout.width) || layout.height === 0 || isNaN(layout.height)) return;\n\n\t\t// lets see if we need to allocate our framebuffer..\n\t\tif (!isroot) {\n\t\t\tvar ratio = view._pixelratio;\n\t\t\tif (isNaN(ratio)) ratio = device.main_frame.ratio;\n\t\t\tvar twidth = layout.width * ratio,\n\t\t\t    theight = layout.height * ratio;\n\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'color_buffer', null, ratio);\n\t\t\tif (view.passes > 0) {\n\t\t\t\tvar buffers = view.passes;\n\t\t\t\tfor (var i = 0; i < view.passes; i++) {\n\t\t\t\t\tvar usefloat = view.shaders['pass' + i].usefloat;\n\t\t\t\t\t// allocate a framebuffer for each pass\n\t\t\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'framebuffer' + i, null, ratio, usefloat);\n\t\t\t\t\tif (view.shaders['pass' + i].doublebuffer) {\n\t\t\t\t\t\t// allocate twice as many buffers\n\t\t\t\t\t\tthis.allocDrawTarget(twidth, theight, this.view, 'framebuffera' + i, null, ratio, usefloat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.device.bindFramebuffer(this.color_buffer || null);\n\n\t\tif (layout.width === 0 || layout.height === 0) return false;\n\n\t\tvar hastime = false;\n\t\tvar zoom = view._zoom;\n\n\t\tvar matrices = this.colormatrices;\n\t\tthis.calculateDrawMatrices(isroot, matrices);\n\t\tview.colormatrices = matrices;\n\n\t\tgl.disable(gl.SCISSOR_TEST);\n\n\t\tif (isroot) {}\n\t\t/*\n  if(clipview){\n  \tvar ratio = this.device.frame.ratio\n  \tvar xs = this.device.frame.size[0] / ratio\n  \tvar ys = this.device.frame.size[1] / ratio\n  \tvar clayout = clipview._layout\n  \tvar c1 = vec2.mul_mat4(vec2(0, 0),clipview.viewportmatrix)\n  \tvar c2 = vec2.mul_mat4(vec2(clayout.width, clayout.height),clipview.viewportmatrix)\n  \tvar x1 = c1[0], y1 = c1[1], x2 = c2[0] - x1, y2 = c2[1] - y1\n  \tgl.enable(gl.SCISSOR_TEST)\n  \tgl.scissor((x1)*ratio, (ys - y2 - y1)*ratio, x2 * ratio, (y2)*ratio)//x1*2, y1*2, x2*2, y2*2)\n  }\n  */\n\n\t\t//console.log(matrices.viewmatrix)\n\t\tdevice.clear(view._clearcolor);\n\n\t\t// this is a tree walk down a view port tree. Every viewport that is 2d/3d is a render-to-texture pass.\n\t\tvar draw = view;\n\t\twhile (draw) {\n\t\t\tdraw.draw_dirty &= 2;\n\n\t\t\t//}\n\t\t\t//for(var dl = this.draw_list, i = 0; i < dl.length; i++){\n\t\t\t//\tvar draw = dl[i]\n\t\t\tif (!draw._visible || draw._drawtarget === 'pick' || draw._first_draw_color && view._viewport === '2d' && draw.boundscheck && !isInBounds2D(view, draw)) {// do early out check using bounding boxes\n\t\t\t} else {\n\t\t\t\tdraw._first_draw_color = 1;\n\n\t\t\t\t//if(view.constructor.name === 'slideviewer')console.log('here',draw.constructor.name, draw.text)\n\t\t\t\tdraw._time = time;\n\n\t\t\t\tif (draw._listen_time || draw.ontime) hastime = true;\n\n\t\t\t\tdraw.viewmatrix = matrices.viewmatrix;\n\n\t\t\t\tif (draw.atDraw && draw.atDraw(this)) hastime = true;\n\n\t\t\t\t// if we are hitting child node that is a 2d/3d viewport,\n\t\t\t\t// and we aren't the root/canvas.\n\t\t\t\tif (draw._viewport && draw.drawpass !== this) {\n\t\t\t\t\t// blend the already rendered child texture into the parent viewport.\n\t\t\t\t\tthis.drawBlend(draw);\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise, just draw all the shaders into the parent viewport.\n\t\t\t\t\tvtx_count += this.drawNormal(draw, view, matrices);\n\t\t\t\t}\n\n\t\t\t\tif (draw.debug_view) {\n\t\t\t\t\tthis.debugrect.view = draw;\n\t\t\t\t\tthis.debugrect.drawArrays(this.device);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdraw = this.nextItem(draw, 'pick');\n\t\t}\n\n\t\tif (view.passes > 0) {\n\t\t\t// TODO: we have multiple passes, ignore pick_buffer it won't work.\n\t\t\tfor (var i = 0; i < view.passes; i++) {\n\t\t\t\tvar shader = view.shaders['pass' + i];\n\t\t\t\t// pass in the draw count so the shader can behave differently on the first draw\n\t\t\t\tshader.drawcount = view.drawpass.drawcount;\n\n\t\t\t\t// decide which buffers to use\n\t\t\t\tvar writebuffername = 'framebuffer';\n\t\t\t\tvar readbuffername = 'framebuffer';\n\t\t\t\tif (shader.doublebuffer) {\n\t\t\t\t\tvar readbuffername = 'framebuffera';\n\t\t\t\t\tif (shader.drawcount % 2) {\n\t\t\t\t\t\t// Alternate buffer every other draw\n\t\t\t\t\t\twritebuffername = 'framebuffera';\n\t\t\t\t\t\treadbuffername = 'framebuffer';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdevice.bindFramebuffer(this[writebuffername + i]);\n\t\t\t\tdevice.clear(view._clearcolor);\n\n\t\t\t\t// Add references so they work inside the shader\n\t\t\t\tshader.framebuffer = this.color_buffer;\n\t\t\t\tfor (var j = 0; j < 10; j++) {\n\t\t\t\t\t// add pass0..9 references to corresponding buffers\n\t\t\t\t\tshader['pass' + j] = this[readbuffername + j];\n\t\t\t\t}\n\t\t\t\t// set the texture to use its own framebuffer\n\t\t\t\tshader.texture = this[writebuffername + i];\n\t\t\t\tshader.width = view._layout.width;\n\t\t\t\tshader.height = view._layout.height;\n\t\t\t\t// draw it into the framebuffer\n\t\t\t\tshader.drawArrays(this.device);\n\t\t\t}\n\t\t\t// draw the final pass\n\t\t\tthis.blendbuffer = shader.texture;\n\t\t} else {\n\t\t\t// draw the ordinary color buffer\n\t\t\tthis.blendbuffer = this.color_buffer;\n\t\t}\n\t\tview.drawpass.drawcount++;\n\t\treturn hastime;\n\t};\n\t/*\n \tvar DebugRect = defineDreem.class(Shader, function(){\n \t\tthis.view = {totalmatrix:mat4(), viewmatrix:mat4(), layout:{width:0, height:0}}\n \n \t\tthis.mesh = vec2.array()\n \t\tthis.mesh.pushQuad(0,0,1,0,0,1,1,1)\n \n \t\tthis.position = function(){\n \t\t\treturn vec4(vec2(mesh.x * view.layout.width, mesh.y * view.layout.height), 0, 1) * view.totalmatrix * view.viewmatrix\n \t\t}\n \t\tthis.color = function(){\n \t\t\treturn vec4(1,0,0,0.5)\n \t\t}\n \t})\n */\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/drawpasswebgl.js\n// module id = 195\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/drawpasswebgl.js?");

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/keyboard', function (require, exports) {\n\n\tthis.toKey = { // slap a usable name on keys\n\t\t8: 'backspace', 9: 'tab', 13: 'enter', 16: 'shift', 17: 'ctrl', 18: 'alt',\n\t\t19: 'pause', 20: 'caps', 27: 'escape',\n\t\t32: 'space', 33: 'pgup', 34: 'pgdn',\n\t\t35: 'end', 36: 'home', 37: 'leftarrow', 38: 'uparrow', 39: 'rightarrow', 40: 'downarrow',\n\t\t45: 'insert', 46: 'delete',\n\t\t48: 'num0', 49: 'num1', 50: 'num2', 51: 'num3', 52: 'num4',\n\t\t53: 'num5', 54: 'num6', 55: 'num7', 56: 'num8', 57: 'num9',\n\t\t65: 'a', 66: 'b', 67: 'c', 68: 'd', 69: 'e', 70: 'f', 71: 'g',\n\t\t72: 'h', 73: 'i', 74: 'j', 75: 'k', 76: 'l', 77: 'm', 78: 'n',\n\t\t79: 'o', 80: 'p', 81: 'q', 82: 'r', 83: 's', 84: 't', 85: 'u',\n\t\t86: 'v', 87: 'w', 88: 'x', 89: 'y', 90: 'z',\n\t\t93: 'meta',\n\t\t96: 'pad0', 97: 'pad1', 98: 'pad2', 99: 'pad3', 100: 'pad4', 101: 'pad5',\n\t\t102: 'pad6', 103: 'pad7', 104: 'pad8', 105: 'pad9',\n\t\t106: 'multiply', 107: 'add', 109: 'subtract', 110: 'decimal', 111: 'divide',\n\t\t112: 'f1', 113: 'f2', 114: 'f3', 115: 'f4', 116: 'f5', 117: 'f6',\n\t\t118: 'f7', 119: 'f8', 120: 'f9', 121: 'f10', 122: 'f11', 123: 'f12',\n\t\t144: 'numlock', 145: 'scrollock', 186: 'semicolon', 187: 'equals', 188: 'comma',\n\t\t189: 'dash', 190: 'period', 191: 'slash', 192: 'accent', 219: 'openbracket',\n\t\t220: 'backslash', 221: 'closebracket', 222: 'singlequote'\n\t};\n\tthis.toCode = {};\n\tfor (var k in this.toKey) {\n\t\tvar key = this.toKey[k];\n\t\tthis.toCode[key] = k;\n\t\tthis.defineAttribute(key, Config({ type: int, value: 0 }));\n\t}\n\n\tvar fireFoxTable = {\n\t\t91: 93,\n\t\t92: 93,\n\t\t224: 93, // right meta\n\t\t61: 187, // equals\n\t\t173: 189, // minus\n\t\t59: 186 // semicolon\n\t};\n\n\tthis.textAreaRespondToMouse = function (pos) {\n\t\tthis.textarea.focus();\n\t\t//this.textarea.style.left = pos[0] - parseFloat(this.textarea.style.width) * 0.5\n\t\t//this.textarea.style.top = pos[1] - parseFloat(this.textarea.style.height) * 0.5\n\t};\n\n\tthis.textareaFocus = function () {\n\t\tthis.textarea.focus();\n\t};\n\n\tthis.atConstructor = function () {\n\n\t\tvar special_key_hack = false;\n\n\t\tthis.checkSpecialKeys = function (e) {\n\t\t\tif (e.shift !== this._shift ? true : false) this.shift = e.shiftKey ? 1 : 0;\n\t\t\tif (e.altKey !== this._alt ? true : false) this.alt = e.altKey ? 1 : 0;\n\t\t\tif (e.ctrlKey !== this._ctrl ? true : false) this.ctrl = e.ctrlKey ? 1 : 0;\n\t\t\tif (e.metaKey !== this._meta ? true : false) this.meta = e.metaKey ? 1 : 0;\n\t\t};\n\t\tvar is_keyboard_cut = false;\n\t\tvar is_keyboard_all = false;\n\t\tvar keydown = function (e) {\n\t\t\tvar code = fireFoxTable[e.keyCode] || e.keyCode;\n\t\t\t// we go into special mode\n\t\t\tif (e.keyCode == 229) {\n\t\t\t\tspecial_key_hack = true;\n\t\t\t\treturn e.preventDefault();\n\t\t\t}\n\t\t\tvar keyname = this.toKey[code];\n\n\t\t\tis_keyboard_cut = keyname === 'x' && (this._meta || this._ctrl);\n\t\t\tis_keyboard_all = keyname === 'a' && (this._meta || this._ctrl);\n\n\t\t\tif (keyname) this[keyname] = 1;\n\n\t\t\tthis.checkSpecialKeys(e);\n\n\t\t\tvar msg = {\n\t\t\t\trepeat: e.repeat,\n\t\t\t\tcode: code,\n\t\t\t\tname: keyname,\n\t\t\t\tshift: this._shift,\n\t\t\t\tmeta: this._meta,\n\t\t\t\tctrl: this._ctrl,\n\t\t\t\talt: this._alt\n\t\t\t};\n\n\t\t\tthis.emit('down', msg);\n\t\t\tif ((this._ctrl || this._meta) && this._y || this._tab || this._leftarrow || this._rightarrow || this._uparrow || this._downarrow || this._backspace || this._delete) {\n\t\t\t\tif (e.preventDefault) e.preventDefault();\n\t\t\t}\n\t\t\tis_keyboard_cut = false;\n\t\t\tis_keyboard_all = false;\n\t\t}.bind(this);\n\n\t\tvar keyup = function (e) {\n\t\t\tvar code = fireFoxTable[e.keyCode] || e.keyCode;\n\t\t\tvar keyname = this.toKey[code];\n\n\t\t\tif (keyname) this[keyname] = 0;\n\n\t\t\tthis.checkSpecialKeys(e);\n\n\t\t\tvar msg = {\n\t\t\t\trepeat: e.repeat,\n\t\t\t\tcode: code,\n\t\t\t\tname: keyname,\n\t\t\t\tshift: this._shift,\n\t\t\t\tmeta: this._meta,\n\t\t\t\tctrl: this._ctrl,\n\t\t\t\talt: this._alt\n\t\t\t};\n\n\t\t\tif (special_key_hack) {\n\t\t\t\tspecial_key_hack = false;\n\t\t\t\tthis.emit('down', msg);\n\t\t\t}\n\n\t\t\tthis.emit('up', msg);\n\t\t}.bind(this);\n\t\t//window.addEventListener('keyup',\n\t\t//window.addEventListener('keypress',\n\t\tvar keypress = function (e) {\n\t\t\tif (e.metaKey || e.altKey || e.ctrlKey) return;\n\n\t\t\tvar code = e.charCode;\n\t\t\tif (code == 13 || e.keyCode == 13) code = 10; // make newlines unix defaults\n\t\t\telse if (e.charCode == 0) return;\n\t\t\tvar msg = {\n\t\t\t\trepeat: e.repeat,\n\t\t\t\tvalue: String.fromCharCode(code),\n\t\t\t\tcode: code\n\t\t\t};\n\t\t\tthis.emit('press', msg);\n\t\t\te.preventDefault();\n\t\t}.bind(this);\n\t\t// lets output a css\n\n\n\t\tthis.textarea = document.createElement('textarea');\n\t\tthis.textarea.style.width = '1';\n\t\tthis.textarea.style.height = '1';\n\t\tthis.textarea.style.position = 'absolute';\n\t\t// this.textarea.style.pointerEvents = 'none'\n\t\t// this.textarea.style.display = 'none'\n\t\t//this.textarea.style.background = 'red'\n\t\tthis.textarea.setAttribute('autocomplete', \"off\");\n\t\tthis.textarea.setAttribute('autocorrect', \"off\");\n\t\tthis.textarea.setAttribute('autocapitalize', \"off\");\n\t\tthis.textarea.setAttribute('spellcheck', \"false\");\n\n\t\tthis.textarea.addEventListener('keyup', keyup);\n\t\tthis.textarea.addEventListener('keypress', keypress);\n\t\tthis.textarea.addEventListener('keydown', keydown);\n\t\tthis.textarea.focus();\n\t\tthis.textarea.style.zIndex = 10000000;\n\n\t\tvar style = document.createElement('style');\n\t\tstyle.innerHTML = \"\\n\\\n    \t::selection { background:transparent; color:transparent; }\\n\\\n    \ttextarea{\\n\\\n    \t  \topacity: 0;\\n\\\n\t\t    background: transparent;\\n\\\n\t\t    -moz-appearance: none;\\n\\\n\t\t    appearance: none;\\n\\\n\t\t    border: none;\\n\\\n\t\t    resize: none;\\n\\\n\t\t    outline: none;\\n\\\n\t\t    overflow: hidden;\\n\\\n\t\t    font: inherit;\\n\\\n\t\t    padding: 0 1px;\\n\\\n\t\t    margin: 0 -1px;\\n\\\n\t\t    text-indent: 1em;\\n\\\n\t\t    -ms-user-select: text;\\n\\\n\t\t    -moz-user-select: text;\\n\\\n\t\t    -webkit-user-select: text;\\n\\\n\t\t    user-select: text;\\n\\\n\t\t    white-space: pre!important;\\n\\\n    \t\t\\n\\\n    \t}\\n\\\n    \ttextarea:focus{\\n\\\n    \t\toutline:0px !important;\\n\\\n    \t\t-webkit-appearance:none;\\n\\\n    \t}\";\n\t\tdocument.body.appendChild(style);\n\n\t\tdocument.body.appendChild(this.textarea);\n\n\t\t// put together a fake keypress on cut\n\t\tthis.textarea.oncut = function (e) {\n\t\t\tif (!is_keyboard_cut) {\n\t\t\t\t// lets send a keyboard cut event\n\t\t\t\tkeydown({\n\t\t\t\t\tkeyCode: 88,\n\t\t\t\t\tmetaKey: true\n\t\t\t\t});\n\t\t\t\tkeyup({\n\t\t\t\t\tkeyCode: 88,\n\t\t\t\t\tmetaKey: true\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.textarea.addEventListener('select', function (e) {\n\t\t\tif (!is_keyboard_all && this.textarea.selectionEnd === this.textarea.value.length) {\n\t\t\t\tkeydown({\n\t\t\t\t\tkeyCode: 65,\n\t\t\t\t\tmetaKey: true\n\t\t\t\t});\n\t\t\t\tkeyup({\n\t\t\t\t\tkeyCode: 65,\n\t\t\t\t\tmetaKey: true\n\t\t\t\t});\n\t\t\t}\n\t\t}.bind(this));\n\n\t\tthis.textarea.onpaste = function (e) {\n\t\t\tvar text = e.clipboardData.getData('text/plain');\n\t\t\tthis._clipboard = text;\n\t\t\tthis.emit('paste', { text: text });\n\t\t}.bind(this);\n\n\t\tObject.defineProperty(this, 'clipboard', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._clipboard;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._clipboard = value;\n\t\t\t\tthis.textarea.value = value + ' ';\n\t\t\t\tthis.textarea.selectionStart = 0;\n\t\t\t\tthis.textarea.selectionEnd = value.length;\n\t\t\t\tthis.textarea.focus();\n\t\t\t}\n\t\t});\n\t\tthis.textarea.focus();\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/keyboardwebgl.js\n// module id = 196\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/keyboardwebgl.js?");

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/midi', function (require, exports) {\n\n\texports.midiAttributes = {\n\t\tmessage: Config({ type: Event }),\n\t\tnoteoff: Config({ type: Event }),\n\t\tnoteon: Config({ type: Event }),\n\t\tpolypressure: Config({ type: Event }),\n\t\tcontrolchange: Config({ type: Event }),\n\t\tprogramchange: Config({ type: Event }),\n\t\taftertouch: Config({ type: Event }),\n\t\tpitchbend: Config({ type: Event })\n\t};\n\n\tthis.Input = defineDreem.class(function midiInput($system$base$node) {\n\n\t\tthis.atMidiData = function (data) {\n\t\t\tvar ch = data[0] & 16;\n\t\t\tvar hi = data[0] >> 4;\n\t\t\tif (hi === 0x8) return this.noteoff = this.message = { ch: ch, type: 'noteoff', key: data[1], value: data[2] };\n\t\t\tif (hi === 0x9) return this.noteon = this.message = { ch: ch, type: 'noteon', key: data[1], value: data[2] };\n\t\t\tif (hi === 0xa) return this.polypressure = this.message = { ch: ch, type: 'polypressure', key: data[1], value: data[2] };\n\t\t\tif (hi === 0xb) return this.controlchange = this.message = { ch: ch, type: 'controlchange', ctrl: data[1], value: data[2] };\n\t\t\tif (hi === 0xc) return this.programchange = this.message = { ch: ch, type: 'programchange', value: data[1] };\n\t\t\tif (hi === 0xd) return this.aftertouch = this.message = { ch: ch, type: 'aftertouch', value: data[1] };\n\t\t\tif (hi === 0xe) return this.pitchbend = this.message = { ch: ch, type: 'pitchbend', value: (data[2] << 7) + data[1] };\n\t\t};\n\n\t\tthis.attributes = exports.midiAttributes;\n\t});\n\n\tthis.Output = defineDreem.class(function midiOutput($system$base$node) {\n\t\tthis.atConstructor = function (send) {\n\t\t\tthis.send = send;\n\t\t};\n\n\t\tthis.attributes = exports.midiAttributes;\n\n\t\tthis.alloff = function (ch) {\n\t\t\tif (!ch) ch = 0;\n\t\t\tthis.send([0xb << 4 | ch, 121, 0]);\n\t\t\tthis.send([0xb << 4 | ch, 120, 0]);\n\t\t};\n\n\t\tfor (var key in exports.midiAttributes) {\n\t\t\tthis[key] = function (event) {\n\t\t\t\tvar ev = event.value;\n\t\t\t\tev.type = event.key;\n\t\t\t\tthis.message = ev;\n\t\t\t};\n\t\t}\n\n\t\tthis.message = function (event) {\n\t\t\tvar m = event.value;\n\t\t\tvar ch = m.ch || 0;\n\t\t\tif (m.type === 'noteoff') return this.send([0x8 << 4 | ch, m.key, m.value]);\n\t\t\tif (m.type === 'noteon') return this.send([0x9 << 4 | ch, m.key, m.value]);\n\t\t\tif (m.type === 'polypressure') return this.send([0xa << 4 | ch, m.key, m.value]);\n\t\t\tif (m.type === 'controlchange') return this.send([0xb << 4 | ch, m.ctrl, m.value]);\n\t\t\tif (m.type === 'programchange') return this.send([0xc << 4 | ch, m.value]);\n\t\t\tif (m.type === 'aftertouch') return this.send([0xd << 4 | ch, m.value]);\n\t\t\tif (m.type === 'pitchbend') return this.send([0xe << 4 | ch, m.value & 127, m.value >> 7]);\n\t\t};\n\t});\n\n\tfunction iterIO(slot, id, cb) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tnavigator.requestMIDIAccess().then(function (result) {\n\t\t\t\tvar i = 0;\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = result[slot][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t\tif (typeof id === 'number' && id === i || typeof id === 'string' && item[1].name === id || (typeof id === 'undefined' ? 'undefined' : _typeof(id)) === 'object' && id.match && item[1].name.match(id)) {\n\t\t\t\t\t\t\treturn resolve(cb(item[1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tthis.openInput = function (id) {\n\t\treturn iterIO('inputs', id, function (input) {\n\t\t\tvar inp = new this.Input();\n\t\t\tinp._midi_ = input;\n\t\t\tinp.close = function () {\n\t\t\t\tthis._midi_.close();\n\t\t\t};\n\n\t\t\tinput.onmidimessage = function (message) {\n\t\t\t\tinp.atMidiData(message.data);\n\t\t\t};\n\t\t\treturn inp;\n\t\t}.bind(this));\n\t};\n\n\tthis.openOutput = function (id) {\n\t\treturn iterIO('outputs', id, function (output) {\n\t\t\tvar out = this.Output(function (buf) {\n\t\t\t\toutput.send(buf);\n\t\t\t});\n\t\t\tout._midi_ = output;\n\t\t\tout.close = function () {\n\t\t\t\tthis._midi_.close();\n\t\t\t};\n\n\t\t\treturn out;\n\t\t}.bind(this));\n\t};\n\n\tthis.getIO = function () {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tnavigator.requestMIDIAccess().then(function (result) {\n\t\t\t\tvar res = { inputs: [], outputs: [] };\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = result.inputs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar item = _step2.value;\n\t\t\t\t\t\tres.inputs.push(item[1].name);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = result.outputs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar item = _step3.value;\n\t\t\t\t\t\tres.outputs.push(item[1].name);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(res);\n\t\t\t});\n\t\t});\n\t};\n\n\tthis.atConstructor = function () {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/midiwebgl.js\n// module id = 197\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/midiwebgl.js?");

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// Pointerwebgl adds mouse and touch listeners and connectes them pointer.js API.\n\ndefineDreem.class('$system/base/pointer', function (require, exports) {\n\n\tthis._cursor = 'arrow';\n\tthis._tooltip = 'Application';\n\n\tObject.defineProperty(this, 'cursor', {\n\t\tconfigurable: true,\n\t\tget: function get() {\n\t\t\treturn this._cursor;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._cursor = value;\n\t\t\tif (value === 'arrow') value = 'default';\n\n\t\t\tthis.device.keyboard.textarea.style.cursor = document.body.style.cursor = value;\n\t\t}\n\t});\n\n\tthis.atConstructor = function (device) {\n\t\tthis.device = device;\n\t\tvar window = this.device.window;\n\t\t// Internal: creates pointer array with a single pointer from mouse event data.\n\t\tvar mouseToPointers = function (event, wheelx, wheely) {\n\t\t\treturn [{\n\t\t\t\tvalue: vec2(event.pageX, event.pageY),\n\t\t\t\tposition: vec2(event.pageX, event.pageY),\n\t\t\t\tbutton: event.button === 0 ? 1 : event.button === 1 ? 3 : 2,\n\t\t\t\tshift: event.shiftKey,\n\t\t\t\talt: event.altKey,\n\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\tmeta: event.metaKey,\n\t\t\t\twheel: vec2(wheelx, wheely),\n\t\t\t\ttouch: false\n\t\t\t}];\n\t\t}.bind(this);\n\n\t\t// Internal: creates pointer array from touch event.\n\t\tvar touchToPointers = function (event) {\n\t\t\tvar array = [];\n\t\t\tfor (var i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tarray.push({\n\t\t\t\t\tvalue: vec2(event.changedTouches[i].pageX, event.changedTouches[i].pageY),\n\t\t\t\t\tposition: vec2(event.changedTouches[i].pageX, event.changedTouches[i].pageY),\n\t\t\t\t\tbutton: 1,\n\t\t\t\t\tshift: event.shiftKey,\n\t\t\t\t\talt: event.altKey,\n\t\t\t\t\tctrl: event.ctrlKey,\n\t\t\t\t\tmeta: event.metaKey,\n\t\t\t\t\ttouch: true\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn array;\n\t\t}.bind(this);\n\n\t\t// Internal: handler for `mousedown` event starts `mousemove` listening.\n\t\tthis.mousedown = function (e) {\n\n\t\t\tthis.device.keyboard.checkSpecialKeys(e);\n\n\t\t\te.preventDefault();\n\t\t\tthis.setstart(mouseToPointers(e));\n\t\t\twindow.removeEventListener('mousemove', this._mousehover);\n\t\t\twindow.removeEventListener('mousedown', this._mousedown);\n\t\t\twindow.addEventListener('mousemove', this._mousemove);\n\t\t\twindow.addEventListener('mouseup', this._mouseup);\n\t\t\twindow.addEventListener('contextmenu', this._mouseup);\n\t\t\t// Hack to capture mouse up outside iframe\n\t\t\tif (typeof parent !== 'undefined') {\n\t\t\t\tif (parent.window) parent.window.addEventListener('mouseup', this._mouseup);\n\t\t\t\tif (parent.window) parent.window.addEventListener('contextmenu', this._mouseup);\n\t\t\t}\n\t\t};\n\t\tthis._mousedown = this.mousedown.bind(this);\n\n\t\twindow.addEventListener('mousedown', this._mousedown);\n\n\t\t// Internal: handler for `mousemove` event.\n\t\tthis.mousemove = function (e) {\n\t\t\tthis.device.keyboard.checkSpecialKeys(e);\n\t\t\te.preventDefault();\n\t\t\tthis.setmove(mouseToPointers(e));\n\t\t};\n\t\tthis._mousemove = this.mousemove.bind(this);\n\n\t\t// Internal: handler for `mousedown` event stops `mousemove` listening.\n\t\tthis.mouseup = function (e) {\n\n\t\t\t//console.log(e.button)\n\t\t\tif (e.button === 2) this.device.keyboard.textAreaRespondToMouse(e.pageX, e.pageY);\n\t\t\t//this.device.keyboard.checkSpecialKeys(e)\n\t\t\te.preventDefault();\n\t\t\tthis.setend(mouseToPointers(e));\n\n\t\t\twindow.removeEventListener('mousemove', this._mousemove);\n\t\t\twindow.removeEventListener('mouseup', this._mouseup);\n\t\t\twindow.removeEventListener('contextmenu', this._mouseup);\n\t\t\twindow.addEventListener('mousemove', this._mousehover);\n\t\t\twindow.addEventListener('mousedown', this._mousedown);\n\t\t\t// Hack to capture mouse up outside iframe\n\t\t\tif (typeof parent !== 'undefined') {\n\t\t\t\tif (parent.window) parent.window.removeEventListener('mouseup', this._mouseup);\n\t\t\t\tif (parent.window) parent.window.removeEventListener('contextmenu', this._mouseup);\n\t\t\t}\n\t\t};\n\t\tthis._mouseup = this.mouseup.bind(this);\n\n\t\t// Internal: handler for `mousemove` for the purpose of hover tracking.\n\t\tthis.mousehover = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.sethover(mouseToPointers(e));\n\t\t};\n\t\tthis._mousehover = this.mousehover.bind(this);\n\t\twindow.addEventListener('mousemove', this._mousehover);\n\n\t\t// Internal: handler for `touchstart` event.\n\t\tthis.touchstart = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.touchwheelstart(touchToPointers(e));\n\t\t\tthis.setstart(touchToPointers(e));\n\t\t};\n\t\twindow.addEventListener('touchstart', this.touchstart.bind(this));\n\n\t\t// Internal: handler for `touchmove` event.\n\t\tthis.touchmove = function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.touchwheel(touchToPointers(e));\n\t\t\tthis.setmove(touchToPointers(e));\n\t\t};\n\t\twindow.addEventListener('touchmove', this.touchmove.bind(this));\n\n\t\t// Internal: handler for `touchend` event.\n\t\tthis.touchend = function (e) {\n\t\t\tthis.touchwheelend(touchToPointers(e));\n\t\t\tthis.setend(touchToPointers(e));\n\t\t};\n\t\twindow.addEventListener('touchend', this.touchend.bind(this));\n\t\twindow.addEventListener('touchcancel', this.touchend.bind(this));\n\t\twindow.addEventListener('touchleave', this.touchend.bind(this));\n\n\t\tthis.touchwheelstart = function (e) {\n\t\t\tvar touch = e[0];\n\t\t\tthis._preventInertia = true;\n\t\t\tthis._touchwheelpos = vec2(touch.position.x, touch.position.y);\n\t\t};\n\n\t\tthis.touchwheel = function (e) {\n\t\t\tvar touch = e[0];\n\t\t\tthis._preventInertia = true;\n\t\t\ttouch.wheel = vec2(this._touchwheelpos.x - touch.position.x, this._touchwheelpos.y - touch.position.y);\n\t\t\tthis._touchwheelpos = vec2(touch.position.x, touch.position.y);\n\t\t\tthis.setwheel([touch]);\n\t\t\tthis._lasttouchwheel = touch;\n\t\t};\n\n\t\tthis.touchwheelend = function (e) {\n\t\t\tvar touch = e[0];\n\t\t\tthis._preventInertia = false;\n\t\t\tthis.touchwheelanim();\n\t\t};\n\n\t\tthis.touchwheelanim = function () {\n\t\t\tif (this._lasttouchwheel) {\n\t\t\t\tif (!this._preventInertia) {\n\t\t\t\t\tvec2.mul_float32(this._lasttouchwheel.wheel, 0.95, this._lasttouchwheel.wheel);\n\t\t\t\t\tthis.setwheel([this._lasttouchwheel]);\n\t\t\t\t\trequestAnimationFrame(this.touchwheelanim.bind(this));\n\t\t\t\t}\n\t\t\t\tthis._preventInertia = vec2.distance(this._lasttouchwheel.wheel, vec2()) < 0.5 ? true : false;\n\t\t\t}\n\t\t};\n\n\t\t// scrollwheel fun\n\t\t// the different platforms\n\t\t//var is_osx = navigator.userAgent.indexOf(\"Macintosh\") > -1\n\t\tvar is_windows = typeof navigator !== 'undefined' && navigator.appVersion.indexOf(\"Win\") > -1;\n\t\t//var is_gecko = 'MozAppearance' in document.documentElement.style\n\t\t//var is_chrome = navigator.userAgent.indexOf('Chrome') > -1\n\n\t\twindow.addEventListener('wheel', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tvar d = vec2(e.deltaX, e.deltaY);\n\n\t\t\t// line scroll\n\t\t\tif (e.deltaMode === 1) {\n\t\t\t\tvec2.mul_float32(d, 6, d);\n\t\t\t}\n\n\t\t\t// page scroll\n\t\t\telse if (e.deltaMode === 2) {\n\t\t\t\t\tvec2.mul_float32(d, 400, d);\n\t\t\t\t} else if (is_windows) {\n\t\t\t\t\tvec2.mul_float32(d, 0.125, d);\n\t\t\t\t}\n\n\t\t\tthis.setwheel(mouseToPointers(e, d[0], d[1]));\n\t\t}.bind(this));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/pointerwebgl.js\n// module id = 198\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/pointerwebgl.js?");

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/shader', function (requireDreem, exports) {\n\n\tvar gltypes = requireDreem('$system/base/gltypes');\n\n\texports.Texture = this.Texture = requireDreem('./texturewebgl');\n\n\tthis.compileShader = function (gldevice) {\n\t\tvar vtx_state = this.vtx_state;\n\t\tvar pix_state = this.pix_state;\n\t\tvar vtx_code = vtx_state.code;\n\n\t\tvar pix_color = pix_state.code_color;\n\t\tvar pix_pick = pix_state.code_pick;\n\t\tvar pix_debug = pix_state.code_debug;\n\n\t\tvar gl = gldevice.gl;\n\t\tvar cache_id = vtx_code + pix_color + this.has_pick;\n\n\t\tvar shader = gldevice.shadercache[cache_id];\n\n\t\tif (shader) return shader;\n\n\t\tvar vtx_shader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource(vtx_shader, vtx_code);\n\t\tgl.compileShader(vtx_shader);\n\t\tif (!gl.getShaderParameter(vtx_shader, gl.COMPILE_STATUS)) {\n\t\t\tvar err = gl.getShaderInfoLog(vtx_shader);\n\t\t\tconsole.error(err.toString(), this.annotateLines(vtx_code));\n\t\t\treturn;\n\t\t\t//throw new Error(err)\n\t\t}\n\n\t\t// compile the shader\n\t\tvar pix_color_shader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource(pix_color_shader, pix_color);\n\t\tgl.compileShader(pix_color_shader);\n\t\tif (!gl.getShaderParameter(pix_color_shader, gl.COMPILE_STATUS)) {\n\t\t\tvar err = gl.getShaderInfoLog(pix_color_shader);\n\n\t\t\tconsole.error(err.toString(), this.annotateLines(pix_color));\n\t\t\treturn;\n\t\t\t//throw new Error(err)\n\t\t}\n\n\t\tshader = gldevice.shadercache[cache_id] = gl.createProgram();\n\t\tgl.attachShader(shader, vtx_shader);\n\t\tgl.attachShader(shader, pix_color_shader);\n\t\tgl.linkProgram(shader);\n\t\tif (!gl.getProgramParameter(shader, gl.LINK_STATUS)) {\n\t\t\tvar err = gl.getProgramInfoLog(shader);\n\n\t\t\tconsole.error(err.toString(), this.annotateLines(pix_color));\n\t\t\treturn;\n\t\t\t//throw new Error(err)\n\t\t}\n\n\t\tthis.getLocations(gl, shader, vtx_state, pix_state);\n\n\t\tif (this.compile_use) this.compileUse(shader);\n\n\t\tif (pix_debug) {\n\t\t\t// compile the pick shader\n\t\t\tvar pix_debug_shader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(pix_debug_shader, pix_debug);\n\t\t\tgl.compileShader(pix_debug_shader);\n\t\t\tif (!gl.getShaderParameter(pix_debug_shader, gl.COMPILE_STATUS)) {\n\t\t\t\tvar err = gl.getShaderInfoLog(pix_debug_shader);\n\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix_debug));\n\t\t\t\tthrow new Error(err);\n\t\t\t}\n\n\t\t\tshader.debug = gl.createProgram();\n\t\t\tgl.attachShader(shader.debug, vtx_shader);\n\t\t\tgl.attachShader(shader.debug, pix_debug_shader);\n\t\t\tgl.linkProgram(shader.debug);\n\t\t\t// add our pick uniform\n\t\t\tthis.getLocations(gl, shader.debug, vtx_state, pix_state);\n\t\t\tif (this.compile_use) this.compileUse(shader.debug);\n\t\t}\n\n\t\tif (this.has_pick) {\n\t\t\t// compile the pick shader\n\t\t\tvar pix_pick_shader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(pix_pick_shader, pix_pick);\n\t\t\tgl.compileShader(pix_pick_shader);\n\t\t\tif (!gl.getShaderParameter(pix_pick_shader, gl.COMPILE_STATUS)) {\n\t\t\t\tvar err = gl.getShaderInfoLog(pix_pick_shader);\n\n\t\t\t\tconsole.log(err.toString(), this.annotateLines(pix_pick));\n\t\t\t\tthrow new Error(err);\n\t\t\t}\n\n\t\t\tshader.pick = gl.createProgram();\n\t\t\tgl.attachShader(shader.pick, vtx_shader);\n\t\t\tgl.attachShader(shader.pick, pix_pick_shader);\n\t\t\tgl.linkProgram(shader.pick);\n\t\t\t// add our pick uniform\n\t\t\tpix_state.uniforms['pickguid'] = vec3;\n\t\t\tpix_state.uniforms['pickalpha'] = float;\n\n\t\t\tthis.getLocations(gl, shader.pick, vtx_state, pix_state);\n\n\t\t\tif (this.compile_use) this.compileUse(shader.pick);\n\t\t}\n\n\t\treturn shader;\n\t};\n\n\tthis.useShader = function (gl, shader) {\n\t\tif (!shader) return;\n\t\tif (shader.use) return shader.use(gl, shader, this);\n\t\t// use the shader\n\t\tgl.useProgram(shader);\n\n\t\t// set uniforms\n\t\tvar uniset = shader.uniset;\n\t\tvar unilocs = shader.unilocs;\n\t\tfor (var key in uniset) {\n\t\t\tvar loc = unilocs[key];\n\t\t\tvar split = loc.split;\n\t\t\tif (split) {\n\t\t\t\tfor (var i = 0, prop = this; i < split.length; i++) {\n\t\t\t\t\tprop = prop[split[i]];\n\t\t\t\t}if (loc.last !== prop) {\n\t\t\t\t\tloc.last = prop;\n\t\t\t\t\tuniset[key](gl, loc.loc, prop);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar prop = this['_' + key];\n\t\t\t\t//if(this.dbg) console.log(key, prop)\n\t\t\t\tif (loc.last !== prop) {\n\t\t\t\t\tloc.last = prop;\n\t\t\t\t\tuniset[key](gl, loc.loc, prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// textures\n\t\tvar texlocs = shader.texlocs;\n\t\tvar texid = 0;\n\t\tfor (var key in texlocs) {\n\t\t\tvar texinfo = texlocs[key];\n\t\t\tvar split = texinfo.split;\n\t\t\tif (split) {\n\t\t\t\tfor (var texture = this, i = 0; i < split.length; i++) {\n\t\t\t\t\ttexture = texture[split[i]];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar texture = this['_' + texinfo.name] || this[texinfo.name];\n\t\t\t}\n\t\t\t// lets fetch the sampler\n\t\t\tvar gltex = texture[texinfo.samplerid];\n\t\t\t// lets do the texture slots correct\n\t\t\tif (!gltex) {\n\t\t\t\tgltex = texture.createGLTexture(gl, texid, texinfo);\n\t\t\t\tif (!gltex) {\n\t\t\t\t\tgltex = this.default_texture.createGLTexture(gl, texid, texinfo);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\t\tif (texture.updateid !== gltex.updateid) {\n\t\t\t\t\ttexture.updateGLTexture(gl, gltex);\n\t\t\t\t}\n\t\t\t}\n\t\t\tgl.uniform1i(texinfo.loc, texid);\n\t\t\ttexid++;\n\t\t}\n\n\t\t// set attributes\n\t\tvar attrlocs = shader.attrlocs;\n\t\tvar len = 0; // pull the length out of the buffers\n\t\tvar lastbuf;\n\t\tfor (var key in attrlocs) {\n\t\t\tvar attrloc = attrlocs[key];\n\n\t\t\tif (attrloc.name) {\n\t\t\t\tvar buf = this['_' + attrloc.name];\n\t\t\t} else {\n\t\t\t\tvar buf = this['_' + key];\n\t\t\t}\n\n\t\t\tif (lastbuf !== buf) {\n\t\t\t\tlastbuf = buf;\n\t\t\t\tif (!buf.glvb) buf.glvb = gl.createBuffer();\n\t\t\t\tif (buf.length > len) len = buf.length;\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf.glvb);\n\t\t\t\tif (!buf.clean) {\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, buf.array.buffer, gl.STREAM_DRAW);\n\t\t\t\t\tbuf.clean = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar loc = attrloc.loc;\n\t\t\tgl.enableVertexAttribArray(loc);\n\n\t\t\tif (attrloc.name) {\n\t\t\t\t// ok so. lets set the vertexAttribPointer\n\t\t\t\tgl.vertexAttribPointer(loc, attrloc.slots, gl.FLOAT, false, buf.stride, attrloc.offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(loc, buf.slots, gl.FLOAT, false, buf.stride, 0);\n\t\t\t}\n\t\t}\n\n\t\t// set up blend mode\n\t\tif (this.alpha_blend_eq.op) {\n\t\t\tvar constant = this.constant;\n\t\t\tif (constant) gl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquationSeparate(this.color_blend_eq.op, this.alpha_blend_eq.op);\n\t\t\tgl.blendFuncSeparate(this.color_blend_eq.src, this.color_blend_eq.dst, this.alpha_blend_eq.src, this.alpha_blend_eq.dst);\n\t\t} else if (this.color_blend_eq.op) {\n\t\t\tvar constant = this.constant;\n\t\t\tif (constant) gl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquation(this.color_blend_eq.op);\n\t\t\tgl.blendFunc(this.color_blend_eq.src, this.color_blend_eq.dst);\n\t\t} else {\n\t\t\tgl.disable(gl.BLEND);\n\t\t}\n\t\t// set up depth test\n\t\tif (this.depth_test_eq.func > 1) {\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tgl.depthFunc(this.depth_test_eq.func);\n\t\t} else {\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t}\n\n\t\treturn len;\n\t};\n\n\tthis.compile_use = true;\n\n\tthis.useShaderTemplate = function (gl, shader, root) {\n\t\t// use the shader\n\t\tgl.useProgram(shader);\n\n\t\t// set uniforms\n\t\tSET_UNIFORMS;\n\n\t\t// textures\n\t\tTEXTURE_START;\n\t\tvar texture = TEXTURE_VALUE;\n\t\t// lets fetch the sampler\n\t\tvar gltex = texture.TEXTURE_SAMPLER;\n\t\t// lets do the texture slots correct\n\t\tif (!gltex) {\n\t\t\tif (!texture.createGLTexture) texture = TEXTURE_VALUE = root.Texture.fromStub(texture);\n\t\t\tgltex = texture.createGLTexture(gl, TEXTURE_ID, TEXTURE_INFO);\n\t\t\tif (!gltex) return 0;\n\t\t\tgltex.updateid = texture.updateid;\n\t\t} else {\n\t\t\tgl.activeTexture(TEXTUREGL_ID); // gl.TEXTURE0 + TEXTURE_ID\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\tif (texture.updateid !== gltex.updateid) {\n\t\t\t\ttexture.updateGLTexture(gl, gltex);\n\t\t\t}\n\t\t}\n\t\tgl.uniform1i(TEXTURE_LOC, TEXTURE_ID);\n\t\tTEXTURE_END;\n\n\t\t// attributes\n\t\tvar len = 0; // pull the length out of the buffers\n\t\tvar lastbuf;\n\t\tATTRLOC_START;\n\t\tvar buf = ATTRLOC_BUF;\n\t\tif (!buf) return 0;\n\t\tif (lastbuf !== buf) {\n\t\t\tlastbuf = buf;\n\t\t\tif (buf.length > len) len = buf.length;\n\t\t\tif (len === 0) return 0;\n\t\t\tif (!buf.glvb) {\n\t\t\t\tbuf.glvb = gl.createBuffer();\n\t\t\t\tbuf.clean = false;\n\t\t\t}\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf.glvb);\n\t\t\tif (!buf.clean) {\n\t\t\t\tvar dt = Date.now();\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, buf.array, gl.STATIC_DRAW);\n\t\t\t\tbuf.clean = true;\n\t\t\t}\n\t\t}\n\t\tvar loc = ATTRLOC_LOC;\n\t\tgl.enableVertexAttribArray(loc);\n\t\tATTRLOC_ATTRIBPTR;\n\t\tATTRLOC_END;\n\n\t\t// set up blend mode\n\t\tif (root.alpha_blend_eq.op) {\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) gl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquationSeparate(root.color_blend_eq.op, root.alpha_blend_eq.op);\n\t\t\tgl.blendFuncSeparate(root.color_blend_eq.src, root.color_blend_eq.dst, root.alpha_blend_eq.src, root.alpha_blend_eq.dst);\n\t\t} else if (root.color_blend_eq.op) {\n\t\t\tvar constant = root.constant;\n\t\t\tif (constant) gl.blendColor(constant[0], constant[1], constant[2], constant.length > 3 ? constant[3] : 1);\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquation(root.color_blend_eq.op);\n\t\t\tgl.blendFunc(root.color_blend_eq.src, root.color_blend_eq.dst);\n\t\t} else {\n\t\t\tgl.disable(gl.BLEND);\n\t\t}\n\n\t\t// set up depth test\n\t\tif (root.depth_test_eq.func > 1) {\n\t\t\t//console.log(root.depth_test_eq)\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tgl.depthFunc(root.depth_test_eq.func);\n\t\t} else {\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t}\n\n\t\t// set up depth mask\n\t\tif (root.depth_mask === false) {\n\t\t\tgl.depthMask(false);\n\t\t} else {\n\t\t\tgl.depthMask(true);\n\t\t}\n\n\t\treturn len;\n\t};\n\n\tthis.compileUse = function (shader) {\n\t\t// alright lets compile our useShader from\n\t\tvar tpl = this.useShaderTemplate.toString();\n\t\ttpl = tpl.replace(/^function/, \"function useshader_\" + (this.view ? this.view.constructor.name : 'anonymous') + '_shader_' + this.constructor.name);\n\t\t// ok lets replace shit.\n\t\t// set uniforms\n\t\tvar out = 'var loc, uni\\n';\n\t\tvar uniset = shader.uniset;\n\t\tvar unilocs = shader.unilocs;\n\t\tvar refattr = shader.refattr;\n\n\t\tfor (var key in uniset) {\n\t\t\tvar loc = unilocs[key];\n\t\t\tvar split = loc.split;\n\t\t\tvar isattr = key in refattr;\n\t\t\tif (split) {\n\t\t\t\tvar name = '';\n\t\t\t\tfor (var i = 0; i < split.length; i++) {\n\t\t\t\t\tif (i) name += '.';\n\t\t\t\t\tvar part = split[i];\n\t\t\t\t\tif (part === 'layout' || isattr && i === split.length - 1) name += '_';\n\t\t\t\t\tname += part;\n\t\t\t\t}\n\t\t\t\tout += '\\t\\tuni = root.' + name + '\\n';\n\t\t\t} else {\n\t\t\t\tout += '\\t\\tuni = root.';\n\t\t\t\tif (isattr) out += '_';\n\t\t\t\tout += key + '\\n';\n\t\t\t}\n\t\t\tout += '\\t\\tloc = shader.unilocs.' + key + '\\n';\n\t\t\tvar gen = gltypes.uniform_gen[loc.type];\n\n\t\t\tvar call = gen.call;\n\n\t\t\tout += 'gl.' + gen.call + '(loc.loc';\n\n\t\t\tif (gen.mat) out += ', false';\n\n\t\t\tif (gen.args == 1) out += ',uni)\\n';\n\t\t\tif (gen.args == 2) out += ',uni[0], uni[1])\\n';\n\t\t\tif (gen.args == 3) out += ',uni[0], uni[1], uni[2])\\n';\n\t\t\tif (gen.args == 4) out += ',uni[0], uni[1], uni[2], uni[3])\\n';\n\t\t\tif (gen.args === this.loguni) out += 'if(typeof uni === \"number\")console.log(uni)\\n';\n\t\t}\n\t\ttpl = tpl.replace(/SET\\_UNIFORMS/, out);\n\n\t\ttpl = tpl.replace(/TEXTURE\\_START([\\S\\s]*)TEXTURE\\_END/, function (m) {\n\t\t\tvar out = '';\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar texlocs = shader.texlocs;\n\t\t\tvar texid = 0;\n\t\t\tfor (var key in texlocs) {\n\t\t\t\tvar texinfo = texlocs[key];\n\t\t\t\tvar split = texinfo.split;\n\n\t\t\t\tvar TEXTURE_VALUE = '';\n\t\t\t\tif (split) {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + split.join('.');\n\t\t\t\t} else {\n\t\t\t\t\tTEXTURE_VALUE = 'root.' + texinfo.name;\n\t\t\t\t}\n\n\t\t\t\tout += body.replace(/TEXTURE_VALUE/g, TEXTURE_VALUE).replace(/TEXTURE_SAMPLER/, texinfo.samplerid).replace(/TEXTURE_ID/g, texid).replace(/TEXTURE_LOC/, 'shader.texlocs.' + key + '.loc').replace(/TEXTURE_INFO/, 'shader.texlocs.' + key).replace(/TEXTUREGL_ID/g, gltypes.gl.TEXTURE0 + texid);\n\n\t\t\t\ttexid++;\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/ATTRLOC\\_START([\\S\\s]*)ATTRLOC\\_END/, function (m) {\n\t\t\tvar body = m.slice(13, -11);\n\t\t\tvar out = '';\n\t\t\tvar attrlocs = shader.attrlocs;\n\t\t\tvar len = 0; // pull the length out of the buffers\n\t\t\tvar lastbuf;\n\t\t\tfor (var key in attrlocs) {\n\t\t\t\tvar attrloc = attrlocs[key];\n\t\t\t\tvar ATTRLOC_BUF;\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + attrloc.name;\n\t\t\t\t\tvar buf = this[attrloc.name];\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_BUF = 'root.' + key;\n\t\t\t\t}\n\t\t\t\tvar ATTRLOC_LOC = 'shader.attrlocs.' + key + '.loc';\n\n\t\t\t\tif (attrloc.name) {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'gl.vertexAttribPointer(loc, ' + attrloc.slots + ', gl.FLOAT, false, buf.stride, ' + attrloc.offset + ')';\n\t\t\t\t} else {\n\t\t\t\t\tATTRLOC_ATTRIBPTR = 'if(buf.slots>4)debugger;gl.vertexAttribPointer(loc, buf.slots, gl.FLOAT, false, buf.stride, 0)';\n\t\t\t\t}\n\t\t\t\tout += body.replace(/ATTRLOC_BUF/, ATTRLOC_BUF).replace(/ATTRLOC_LOC/, ATTRLOC_LOC).replace(/ATTRLOC_ATTRIBPTR/, ATTRLOC_ATTRIBPTR);\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\n\t\ttpl = tpl.replace(/gl.[A-Z][A-Z0-9_]+/g, function (m) {\n\t\t\treturn gltypes.gl[m.slice(3)];\n\t\t});\n\t\tshader.use = new Function('return ' + tpl)();\n\t};\n\n\t// all draw types\n\texports.TRIANGLES = this.TRIANGLES = 0x4;\n\texports.LINES = this.LINES = 0x1;\n\texports.LINE_LOOP = this.LINE_LOOP = 0x2;\n\texports.LINE_STRIP = this.LINE_STRIP = 0x3;\n\texports.TRIANGLE_STRIP = this.TRIANGLE_STRIP = 0x5;\n\texports.TRIANGLE_FAN = this.TRIANGLE_FAN = 0x6;\n\n\tthis.drawtype_enum = this.TRIANGLES;\n\tObject.defineProperty(this, 'drawtype', { set: function set(v) {\n\t\t\tif (typeof v === 'string') this.drawtype_enum = this[v];else this.drawtype_enum = v;\n\t\t} });\n\n\t// lets draw ourselves\n\tthis.drawArrays = function (devicewebgl, sub, start, end) {\n\t\t//if(this.mydbg) debugger\n\t\tif (!this.hasOwnProperty('shader') || this.shader === undefined) this.compile(devicewebgl);\n\t\tif (!this.shader) return;\n\t\tvar gl = devicewebgl.gl;\n\t\tvar len = this.useShader(gl, sub ? this.shader[sub] : this.shader);\n\t\tif (len) gl.drawArrays(this.drawtype_enum, start || 0, end === undefined ? len : end);\n\t\treturn len;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/shaderwebgl.js\n// module id = 199\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/shaderwebgl.js?");

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/texture', function (exports) {\n\tvar Texture = exports;\n\tTexture.Image = typeof window !== 'undefined' ? window.Image : function () {};\n\n\tthis.atConstructor = function (type, w, h, device) {\n\t\tthis.device = device;\n\t\tthis.type = type;\n\t\tthis.size = vec2(w, h);\n\t};\n\n\tthis.ratio = 1;\n\tthis.frame_buf = null;\n\n\tTexture.fromStub = function (stub) {\n\t\tvar tex = new Texture(stub.type || Texture.RGBA, stub.size[0], stub.size[1]);\n\t\ttex.array = stub.array;\n\t\ttex.image = stub.image;\n\t\treturn tex;\n\t};\n\n\tTexture.fromType = function (type) {\n\t\treturn new Texture(type, 0, 0);\n\t};\n\n\tTexture.fromImage = function (img) {\n\t\tvar tex = new Texture(Texture.RGBA, img.width, img.height);\n\t\ttex.image = img;\n\t\treturn tex;\n\t};\n\n\tTexture.fromArray = function (array, w, h) {\n\t\tvar tex = new Texture(Texture.RGBA, w, h);\n\t\ttex.array = array;\n\t\treturn tex;\n\t};\n\n\tTexture.createRenderTarget = function (type, width, height, device) {\n\t\tvar tex = new Texture(type, width, height, device);\n\t\ttex.initAsRendertarget();\n\t\treturn tex;\n\t};\n\n\t// type flags\n\tTexture.RGB = 1 << 0;\n\tTexture.RGBA = 1 << 1;\n\tTexture.ALPHA = 1 << 3;\n\tTexture.DEPTH = 1 << 4;\n\tTexture.STENCIL = 1 << 5;\n\tTexture.LUMINANCE = 1 << 6;\n\n\tTexture.FLOAT = 1 << 10;\n\tTexture.HALF_FLOAT = 1 << 11;\n\tTexture.FLOAT_LINEAR = 1 << 12;\n\tTexture.HALF_FLOAT_LINEAR = 1 << 13;\n\n\tthis.typeString = function () {\n\t\tvar str = '';\n\t\tfor (var key in Texture) {\n\t\t\tvar value = Texture[key];\n\t\t\tif (typeof value === 'number' && value & this.type) {\n\t\t\t\tif (str) str += '|';\n\t\t\t\tstr += 'Texture.' + key;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t};\n\n\tthis.typeFlagsToGLType = function (gl, type) {\n\t\tthis.glbuf_type = gl.RGB;\n\t\tif (type & Texture.LUMINANCE) {\n\t\t\tthis.glbuf_type = gl.LUMINANCE;\n\t\t\tif (type & Texture.ALPHA) this.glbuf_type = gl.LUMINANCE_ALPHA;\n\t\t} else if (type & Texture.ALPHA) this.glbuf_type = gl.ALPHA;else if (type & Texture.RGBA) this.glbuf_type = gl.RGBA;\n\n\t\tthis.gldata_type = gl.UNSIGNED_BYTE;\n\t\tif (type & Texture.HALF_FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float_linear');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.FLOAT_LINEAR) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float_linear');\n\t\t\tif (!ext) throw new Error('No OES_texture_float_linear');\n\t\t\tthis.gldata_type = ext.FLOAT_LINEAR_OES;\n\t\t} else if (type & Texture.HALF_FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_half_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_half_float');\n\t\t\tthis.gldata_type = ext.HALF_FLOAT_OES;\n\t\t} else if (type & Texture.FLOAT) {\n\t\t\tvar ext = gl._getExtension('OES_texture_float');\n\t\t\tif (!ext) throw new Error('No OES_texture_float');\n\t\t\tthis.gldata_type = gl.FLOAT;\n\t\t}\n\t};\n\n\tthis.initAsRendertarget = function () {\n\t\tvar gl = this.device.gl;\n\n\t\tif (!this.type) this.type = Texture.RGBA | Texture.DEPTH | Texture.STENCIL;\n\n\t\tthis.glframe_buf = gl.createFramebuffer();\n\t\tthis.gltex = this.IL_AL_SC_TC = gl.createTexture();\n\n\t\t// our normal render to texture thing\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.gltex);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\t\tthis.typeFlagsToGLType(gl, this.type);\n\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.glbuf_type, this.size[0], this.size[1], 0, this.glbuf_type, this.gldata_type, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glframe_buf);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.gltex, 0);\n\n\t\tif (this.type & Texture.DEPTH || this.type & Texture.STENCIL) {\n\t\t\tthis.gldepth_buf = gl.createRenderbuffer();\n\n\t\t\tthis.gldepth_type = gl.DEPTH_COMPONENT16;\n\t\t\tthis.glattach_type = gl.DEPTH_ATTACHMENT;\n\n\t\t\tif (this.type & Texture.DEPTH && this.type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.DEPTH_STENCIL;\n\t\t\t\tthis.glattach_type = gl.DEPTH_STENCIL_ATTACHMENT;\n\t\t\t} else if (this.type & Texture.STENCIL) {\n\t\t\t\tthis.gldepth_type = gl.STENCIL_INDEX;\n\t\t\t\tthis.glattach_type = gl.STENCIL_ATTACHMENT;\n\t\t\t}\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.gldepth_buf);\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, this.gldepth_type, this.size[0], this.size[1]);\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, this.glattach_type, gl.RENDERBUFFER, this.gldepth_buf);\n\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t}\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t};\n\n\tthis.delete = function () {\n\t\tif (!this.device) return;\n\t\tvar gl = this.device.gl;\n\t\tif (this.glframe_buf) {\n\t\t\tgl.deleteFramebuffer(this.glframe_buf);\n\t\t\tthis.glframe_buf = undefined;\n\t\t}\n\t\tif (this.gltex) {\n\t\t\tgl.deleteTexture(this.gltex);\n\t\t\tthis.gltex = undefined;\n\t\t}\n\t\tif (this.depth_buf) {\n\t\t\tgl.deleteRenderbuffer(this.gldepth_buf);\n\t\t}\n\t};\n\n\tthis.resize = function (width, height) {\n\t\tthis.delete;\n\t\tthis.size = vec2(width, height);\n\t\tthis.initAsRendertarget();\n\t};\n\n\tthis.size = vec2(0, 0);\n\n\tthis.createGLTexture = function (gl, texid, texinfo) {\n\t\tvar samplerid = texinfo.samplerid;\n\n\t\tif (this.image && this.image[samplerid]) {\n\t\t\tthis[samplerid] = this.image[samplerid];\n\t\t}\n\n\t\tvar gltex = this[samplerid];\n\t\tif (gltex) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\t\treturn gltex;\n\t\t}\n\n\t\tvar samplerdef = texinfo.samplerdef;\n\t\tvar gltex = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + texid);\n\t\tgl.bindTexture(gl.TEXTURE_2D, gltex);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, samplerdef.UNPACK_FLIP_Y_WEBGL || false);\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, samplerdef.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n\n\t\tif (this.array) {\n\t\t\tthis.typeFlagsToGLType(gl, this.type);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.glbuf_type, this.size[0], this.size[1], 0, this.glbuf_type, this.gldata_type, new Uint8Array(this.array));\n\t\t} else if (this.image) {\n\t\t\tvar image = this.image;\n\t\t\t// lets do a power of two\n\t\t\tif (samplerdef.MIN_FILTER === 'LINEAR_MIPMAP_NEAREST') {\n\t\t\t\tif (!int.isPowerOfTwo(image.width) || !int.isPowerOfTwo(image.height)) {\n\t\t\t\t\t// Scale up the texture to the next highest power of two dimensions.\n\t\t\t\t\tvar canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = int.nextHighestPowerOfTwo(image.width);\n\t\t\t\t\tcanvas.height = int.nextHighestPowerOfTwo(image.height);\n\t\t\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\t\t\tctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\t\t\t\t\timage = canvas;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\t\t\tthis.image[samplerid] = gltex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgltex.updateid = this.updateid;\n\t\t// set up sampler parameters\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[samplerdef.MIN_FILTER]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[samplerdef.MAG_FILTER]);\n\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[samplerdef.WRAP_S]);\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[samplerdef.WRAP_T]);\n\n\t\tif (samplerdef.MIN_FILTER === 'LINEAR_MIPMAP_NEAREST') {\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t}\n\n\t\tthis[samplerid] = gltex;\n\t\treturn gltex;\n\t};\n\n\tthis.updateGLTexture = function (gl, gltex) {\n\t\tif (this.array) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.size[0], this.size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.data));\n\t\t} else if (this.image) {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.image);\n\t\t}\n\t\tgltex.updateid = this.updateid;\n\t};\n\n\t// Shders\n\tthis.sample2 = function (x, y) {\n\t\treturn sample(vec2(x, y));\n\t};\n\tthis.sample = function (v) {\n\t\treturn texture2D(this, v, {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\tthis.pixel2 = function (x, y) {\n\t\treturn pixel(vec2(x, y));\n\t};\n\tthis.pixel = function (v) {\n\t\treturn texture2D(this, v / size, {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.samplemip = function (v) {\n\t\treturn texture2D(this, v, {\n\t\t\tMIN_FILTER: 'LINEAR_MIPMAP_NEAREST',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.flipped2 = function (x, y) {\n\t\treturn flipped(vec2(x, y));\n\t};\n\tthis.flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point2 = function (x, y) {\n\t\treturn point(vec2(x, y));\n\t};\n\tthis.point = function (v) {\n\t\treturn texture2D(this, vec2(v.x, v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.point_flipped2 = function (x, y) {\n\t\treturn point_flipped(vec2(x, y));\n\t};\n\tthis.point_flipped = function (v) {\n\t\treturn texture2D(this, vec2(v.x, 1. - v.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.array1d = function (index) {\n\t\treturn texture2D(this, vec2(mod(index, this.size.x), floor(index / this.size.x)), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.array2d = function (v) {\n\t\treturn texture2D(this, vec2(v.x * this.size.x, v.y * this.size.y), {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\t// 1-D convolution with a kernel.\n\t// 21 kernel weights are arranged 0, +1, -1, +2, -2, ... away from center.\n\t// ksize is the size of the kernel (odd)\n\t// scale is a scaling factor to multiple the result by\n\t// direction is 'x' or 'y'.\n\t// spacing is the vec2 pixel spacing (fractional) between pixels. Typically\n\t// this will be vec2(px,0) or vec2(0,py)\n\tthis.conv1d = function (v, ksize, scale, spacing, k0, kp1, km1, kp2, km2, kp3, km3, kp4, km4, kp5, km5, kp6, km6, kp7, km7, kp8, km8, kp9, km9, kp10, km10) {\n\n\t\t// Convert pixels spacing to fractional\n\t\tspacing = vec2(spacing.x / this.size.x, spacing.y / this.size.y);\n\n\t\t// Start with center pixel\n\t\tvar sum = texture2D(this, v) * k0;\n\n\t\tif (ksize > 1.) {\n\t\t\tsum += texture2D(this, v + spacing) * kp1;\n\t\t\tsum += texture2D(this, v - spacing) * km1;\n\n\t\t\tif (ksize > 3.) {\n\t\t\t\tsum += texture2D(this, v + 2 * spacing) * kp2;\n\t\t\t\tsum += texture2D(this, v - 2 * spacing) * km2;\n\n\t\t\t\tif (ksize > 5.) {\n\t\t\t\t\tsum += texture2D(this, v + 3 * spacing) * kp3;\n\t\t\t\t\tsum += texture2D(this, v - 3 * spacing) * km3;\n\n\t\t\t\t\tif (ksize > 7.) {\n\t\t\t\t\t\tsum += texture2D(this, v + 4 * spacing) * kp4;\n\t\t\t\t\t\tsum += texture2D(this, v - 4 * spacing) * km4;\n\n\t\t\t\t\t\tif (ksize > 9.) {\n\t\t\t\t\t\t\tsum += texture2D(this, v + 5 * spacing) * kp5;\n\t\t\t\t\t\t\tsum += texture2D(this, v - 5 * spacing) * km5;\n\n\t\t\t\t\t\t\tif (ksize > 11.) {\n\t\t\t\t\t\t\t\tsum += texture2D(this, v + 6 * spacing) * kp6;\n\t\t\t\t\t\t\t\tsum += texture2D(this, v - 6 * spacing) * km6;\n\n\t\t\t\t\t\t\t\tif (ksize > 13.) {\n\t\t\t\t\t\t\t\t\tsum += texture2D(this, v + 7 * spacing) * kp7;\n\t\t\t\t\t\t\t\t\tsum += texture2D(this, v - 7 * spacing) * km7;\n\n\t\t\t\t\t\t\t\t\tif (ksize > 15.) {\n\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v + 8 * spacing) * kp8;\n\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v - 8 * spacing) * km8;\n\n\t\t\t\t\t\t\t\t\t\tif (ksize > 17.) {\n\t\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v + 9 * spacing) * kp9;\n\t\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v - 9 * spacing) * km9;\n\n\t\t\t\t\t\t\t\t\t\t\tif (ksize > 19.) {\n\t\t\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v + 10 * spacing) * kp10;\n\t\t\t\t\t\t\t\t\t\t\t\tsum += texture2D(this, v - 10 * spacing) * km10;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsum = scale * sum;\n\t\treturn sum;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/texturewebgl.js\n// module id = 200\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/texturewebgl.js?");

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class('$system/base/worker', function (requireDreem, exports) {\n\tvar rpchub = requireDreem('$system/rpc/rpchub');\n\n\tthis._allocPromise = rpchub.allocPromise;\n\tthis._resolveReturn = rpchub.resolveReturn;\n\n\tthis._startWorkers = function (head, tail, count) {\n\t\tif (!count) count = 1;\n\t\tvar source = head + '\\n\\n\\n;// Worker includes \\nself.define = {packaged:true,$platform:\"webgl\"};(' + defineDreem.inner.toString() + ')();\\n';\n\t\tsource += '(' + defineDreem.getModule('$system/base/math.js').factory.toString() + ')();\\n';\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tsource += 'defineDreem.$' + key + ' = \"' + __webpack_require__(0)['$' + key] + '\";\\n';\n\t\t}\n\t\tsource += tail;\n\t\tvar blob = new Blob([source], { type: \"text/javascript\" });\n\t\tvar worker_url = URL.createObjectURL(blob);\n\t\tvar workers = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar worker = new Worker(worker_url);\n\t\t\tworker.postMessage({ initid: true, workerid: i });\n\t\t\tworker.source = source;\n\t\t\tworker.stack = 0;\n\t\t\tworkers.push(worker);\n\t\t}\n\t\treturn workers;\n\t};\n\n\tthis._collectDeps = function (factory, extradeps) {\n\n\t\t// lets serialize our module system into a worker\n\t\tvar outdeps = {};\n\n\t\tfunction collectBodyDeps(body) {\n\t\t\tvar intreq = defineDreem.findRequiresInFactory(body);\n\t\t\tfor (var j = 0; j < intreq.length; j++) {\n\t\t\t\tintreq[j] = defineDreem.expandVariables(intreq[j]);\n\t\t\t}\n\t\t\tif (intreq.length) collectDeps(intreq);\n\t\t}\n\n\t\tfunction collectDeps(deps) {\n\t\t\tif (!deps) return;\n\t\t\tfor (var i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (outdeps[dep] || outdeps[dep + '.js']) continue;\n\t\t\t\tvar module = defineDreem.getModule(dep); //module[dep]\n\t\t\t\tif (!module) module = defineDreem.getModule(dep + '.js'), dep += '.js';\n\t\t\t\tif (!module || !module.factory || typeof module.factory !== 'function') continue;\n\n\t\t\t\t// alright so lets recur on deps\n\t\t\t\toutdeps[dep] = 1;\n\n\t\t\t\tif (module.factory.body) {\n\t\t\t\t\tcollectBodyDeps(module.factory.body);\n\t\t\t\t}\n\t\t\t\t//console.log(\"COLLECTING\", module.factory.deps)\n\n\t\t\t\tcollectDeps(module.factory.deps);\n\n\t\t\t\t// and now add our module\n\t\t\t\tif (module.factory.body) {\n\t\t\t\t\tvar str = 'defineDreem.packagedClass(\"' + dep + '\",[';\n\t\t\t\t\tif (module.factory.baseclass) str += '\"' + module.factory.baseclass + '\",';\n\t\t\t\t\tstr += module.factory.body.toString() + ']);\\n';\n\t\t\t\t\toutdeps[dep] = str;\n\t\t\t\t} else {\n\t\t\t\t\toutdeps[dep] = 'defineDreem(' + module.factory.toString() + ',\"' + dep + '\");\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcollectDeps(factory.deps);\n\t\tcollectDeps(extradeps);\n\t\tcollectBodyDeps(factory.body);\n\n\t\treturn outdeps;\n\t};\n\n\tthis._transformThisToRPC = function () {\n\t\tfor (var key in this) {\n\t\t\tvar prop = this[key];\n\t\t\tif (key === 'onmessage') {} else if (key === 'atConstructor') {\n\t\t\t\tthis[key] = undefined;\n\t\t\t} else if (typeof prop === 'function' && key[0] !== '_') {\n\t\t\t\tthis[key] = function (key) {\n\t\t\t\t\t// alright lets pick the lowest-queue worker from the set\n\t\t\t\t\tvar min = Infinity,\n\t\t\t\t\t    tgtid = 0;\n\t\t\t\t\tfor (var i = 0; i < this._workers.length; i++) {\n\t\t\t\t\t\tvar stack = this._workers[i].stack;\n\t\t\t\t\t\tif (stack < min) min = stack, tgtid = i;\n\t\t\t\t\t}\n\t\t\t\t\tvar msg = { type: 'call', name: key, args: [], workerid: tgtid };\n\t\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tmsg.args[i - 1] = arguments[i];\n\t\t\t\t\t\t//!TODO add typed array transfer feature\n\t\t\t\t\t}\n\t\t\t\t\tvar worker = this._workers[tgtid];\n\t\t\t\t\tif (!worker) return new defineDreem.Promise(function (resolve) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\n\t\t\t\t\tvar prom = this._allocPromise();\n\t\t\t\t\tmsg.uid = prom.uid;\n\t\t\t\t\tthis._workers[tgtid].stack++;\n\t\t\t\t\tthis._workers[tgtid].postMessage(msg);\n\t\t\t\t\treturn prom;\n\t\t\t\t}.bind(this, key);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis._atConstructor = function (cores) {\n\t\tif (cores === undefined) cores = 1;else if (cores < 1) {\n\t\t\tif (defineDreem.cputhreads === 2) cores = 1;else cores = defineDreem.cputhreads - 2;\n\t\t}\n\n\t\tvar deps = this._collectDeps(this.constructor.module.factory);\n\n\t\tvar head = 'var _myworker = ' + this.constructor.body.toString() + ';\\n';\n\t\tvar tail = '';\n\t\tfor (var key in deps) {\n\t\t\t//console.log(key)\n\t\t\ttail += deps[key];\n\t\t}\n\n\t\ttail += 'defineDreem.packagedClass(\"/myworker.js\",[\"$system/base/worker\",_myworker]);\\n';\n\t\t// lets start with requiring /myworker\n\n\t\ttail += 'var _worker = defineDreem.require(\\'/myworker\\')();\\n';\n\t\ttail += '_worker.postMessage = function(msg,transfer){self.postMessage({message:msg,workerid:_worker.workerid},transfer)};\\n';\n\t\ttail += _worker_return.toString() + ';\\n';\n\n\t\tfunction workermsg(event) {\n\t\t\tvar msg = event.data;\n\t\t\tif (msg.initid) {\n\t\t\t\t_worker.workerid = msg.workerid;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (msg.message) {\n\t\t\t\t_worker.onmessage(msg.message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret = _worker[msg.name].apply(_worker, msg.args);\n\t\t\tif (ret && ret.then) ret.then(function (value) {\n\t\t\t\t_worker_return(value, msg.uid, msg.workerid);\n\t\t\t});else _worker_return(ret, msg.uid, msg.workerid);\n\t\t}\n\n\t\tfunction _worker_return(ret, uid, workerid) {\n\t\t\t// fix the typed object handling\n\t\t\tvar transfer;\n\t\t\tif (ret && ((typeof ret === 'undefined' ? 'undefined' : _typeof(ret)) === 'object' || Array.isArray(ret))) {\n\t\t\t\tfor (var key in ret) {\n\t\t\t\t\tvar prop = ret[key];\n\t\t\t\t\tif (prop && typeof prop.struct === 'function' && prop.array) {\n\t\t\t\t\t\ttransfer = transfer || [];\n\t\t\t\t\t\ttransfer.push(prop.array.buffer);\n\t\t\t\t\t\tret[key] = {\n\t\t\t\t\t\t\tallocated: prop.allocated,\n\t\t\t\t\t\t\tarray: prop.array,\n\t\t\t\t\t\t\tlength: prop.length,\n\t\t\t\t\t\t\tslots: prop.slots,\n\t\t\t\t\t\t\tstride: prop.stride,\n\t\t\t\t\t\t\t__structarray__: prop.struct.name\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.postMessage({ value: ret, uid: uid, workerid: workerid }, transfer);\n\t\t}\n\n\t\ttail += 'self.onmessage = ' + workermsg.toString() + '\\n';\n\n\t\tvar onmessage = function (event) {\n\t\t\t// lets plug the struct arrays\n\t\t\tvar dt = Date.now();\n\t\t\tvar data = event.data;\n\t\t\tif (data.message) {\n\t\t\t\treturn this.onmessage(data.message);\n\t\t\t}\n\t\t\t//if(Date.now() - dt > 50) console.log(data)\n\n\t\t\tvar workerid = data.workerid;\n\n\t\t\tthis._workers[workerid].stack--;\n\n\t\t\tthis._resolveReturn(data);\n\t\t}.bind(this);\n\n\t\tthis._workers = this._startWorkers(head, tail, cores);\n\n\t\tfor (var i = 0; i < this._workers.length; i++) {\n\t\t\tthis._workers[i].onmessage = onmessage;\n\t\t}\n\n\t\tthis._transformThisToRPC();\n\n\t\tthis.postMessage = function (msg, transfer, tgtid) {\n\t\t\t// post to a worker\n\t\t\tvar workerid = tgtid || 0;\n\t\t\tthis._workers[workerid].postMessage({ message: msg }, transfer);\n\t\t};\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/platform/webgl/workerwebgl.js\n// module id = 201\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/platform/webgl/workerwebgl.js?");

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// BusClient class, always available auto reconnecting socket\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.atConstructor = function (url, websocketclass) {\n\t\tthis.websocketclass = websocketclass || WebSocket;\n\t\tthis.url = url || '';\n\t\tthis.backoff = 1;\n\t\tthis.reconnect();\n\t};\n\n\tthis.use_xhr_fallback_for_binary = true;\n\tthis.socket_use_blob_send = true;\n\n\tthis.disconnect = function () {\n\t\tif (this.socket) {\n\t\t\tthis.socket.onclose = undefined;\n\t\t\tthis.socket.onerror = undefined;\n\t\t\tthis.socket.onmessage = undefined;\n\t\t\tthis.socket.onopen = undefined;\n\t\t\tthis.socket.close();\n\t\t\tthis.socket = undefined;\n\t\t}\n\t};\n\n\t// Reconnect to server (used internally and automatically)\n\tthis.reconnect = function () {\n\t\tthis.disconnect();\n\t\tif (!this.queue) this.queue = [];\n\t\treturn; // SETH: we don't want RPC, no server yo\n\t\tthis.socket = new this.websocketclass(this.url);\n\n\t\tthis.socket.binaryType = 'arraybuffer';\n\n\t\tthis.socket.onopen = function () {\n\t\t\tthis.backoff = 1;\n\t\t\tfor (var i = 0; i < this.queue.length; i++) {\n\t\t\t\tthis.socket.send(this.queue[i]);\n\t\t\t}\n\t\t\tthis.queue = undefined;\n\t\t}.bind(this);\n\n\t\tthis.socket.onerror = function (event) {\n\t\t\tthis.backoff = 500;\n\t\t}.bind(this);\n\n\t\tthis.socket.onclose = function () {\n\t\t\tthis.backoff *= 2;\n\t\t\tif (this.backoff > 1000) this.backoff = 1000;\n\t\t\tsetTimeout(function () {\n\t\t\t\tthis.reconnect();\n\t\t\t}.bind(this), this.backoff);\n\t\t}.bind(this);\n\n\t\tif (this.use_xhr_fallback_for_binary) {\n\t\t\tvar rndhex4 = function rndhex4() {\n\t\t\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t\t\t};\n\n\t\t\tvar binary_xhr = [];\n\n\t\t\tthis.socket.onmessage = function (event) {\n\t\t\t\t// if its huuuge and value has escaped json, dont parse it\n\t\t\t\tvar data = event.data;\n\t\t\t\tif (data.charAt(0) === '$') {\n\t\t\t\t\tbinary_xhr.push(new defineDreem.Promise(function (resolve, reject) {\n\t\t\t\t\t\t// lets XHR download it\n\t\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\t\t\t\txhr.open('GET', '/binrpc?' + data.slice(1), true);\n\t\t\t\t\t\txhr.responseType = 'arraybuffer';\n\t\t\t\t\t\txhr.onload = function (e) {\n\t\t\t\t\t\t\tresolve(xhr);\n\t\t\t\t\t\t};\n\t\t\t\t\t\txhr.upload.onprogress = function (e) {};\n\t\t\t\t\t\txhr.send();\n\t\t\t\t\t}));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar bin_xhr = binary_xhr;\n\t\t\t\tbinary_xhr = [];\n\n\t\t\t\tvar msg = JSON.parse(data);\n\t\t\t\tif (bin_xhr.length) {\n\t\t\t\t\tdefineDreem.Promise.all(bin_xhr).then(function (results) {\n\t\t\t\t\t\tvar out = [];\n\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\tout[i] = results[i].response;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmsg = defineDreem.structFromJSON(msg, out);\n\t\t\t\t\t\tthis.atMessage(msg, this);\n\t\t\t\t\t}.bind(this));\n\t\t\t\t} else {\n\t\t\t\t\t// lets retrieve the missing binary blobs via XHR\n\t\t\t\t\tmsg = defineDreem.structFromJSON(msg);\n\t\t\t\t\tconsole.log(\"this.socket.onmessage\", msg);\n\n\t\t\t\t\tthis.atMessage(msg, this);\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tthis.send = function (msg) {\n\t\t\t\tvar binary = [];\n\t\t\t\tvar newmsg = defineDreem.makeJSONSafe(msg, binary);\n\t\t\t\tvar allbin = [];\n\n\t\t\t\tfor (var i = 0; i < binary.length; i++) {\n\t\t\t\t\tvar data = binary[i].data;\n\t\t\t\t\tvar blobmsg = new Blob([data.buffer], { type: 'application/octet-binary' });\n\n\t\t\t\t\tvar rpcrandom = rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4();\n\t\t\t\t\tallbin.push(new defineDreem.Promise(function (resolve, reject) {\n\t\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\t\t\t\txhr.open('POST', '/binrpc?' + rpcrandom, true);\n\t\t\t\t\t\txhr.onload = function (e) {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t};\n\t\t\t\t\t\t//xhr.upload.onprogress = function(e){\n\t\t\t\t\t\t//}\n\t\t\t\t\t\txhr.send(blobmsg);\n\t\t\t\t\t}));\n\t\t\t\t\tif (this.queue) this.queue.push('$' + rpcrandom);else this.socket.send('$' + rpcrandom);\n\t\t\t\t}\n\n\t\t\t\tvar jsonmsg = JSON.stringify(newmsg);\n\n\t\t\t\tif (this.queue) this.queue.push(jsonmsg);else {\n\t\t\t\t\tdefineDreem.Promise.all(allbin).then(function () {\n\t\t\t\t\t\tthis.socket.send(jsonmsg);\n\t\t\t\t\t}.bind(this));\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tvar binary_buf = [];\n\t\t\tthis.socket.onmessage = function (event) {\n\t\t\t\t// if its huuuge and value has escaped json, dont parse it\n\t\t\t\tvar data = event.data;\n\t\t\t\tif (data instanceof ArrayBuffer) {\n\t\t\t\t\tbinary_buf.push(event.data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// lets retrieve the missing binary blobs via XHR\n\t\t\t\tvar msg = defineDreem.structFromJSON(JSON.parse(data), binary_buf);\n\t\t\t\tthis.atMessage(msg, this);\n\t\t\t}.bind(this);\n\n\t\t\tthis.send = function (msg) {\n\t\t\t\tvar binary = [];\n\t\t\t\tvar newmsg = defineDreem.makeJSONSafe(msg, binary);\n\n\t\t\t\tfor (var i = 0; i < binary.length; i++) {\n\t\t\t\t\tvar data = binary[i].data;\n\t\t\t\t\tvar datamsg = this.socket_use_blob_send ? new Blob([data.buffer], { type: 'application/octet-binary' }) : data.buffer;\n\n\t\t\t\t\t//var binmsg = binary[i+1]\n\t\t\t\t\tif (this.queue) this.queue.push(datamsg);else this.socket.send(datamsg);\n\t\t\t\t}\n\n\t\t\t\tvar jsonmsg = JSON.stringify(newmsg);\n\t\t\t\tif (this.queue) this.queue.push(jsonmsg);else this.socket.send(jsonmsg);\n\t\t\t};\n\t\t}\n\t};\n\n\t// Called when a message is received\n\tthis.atMessage = function (message) {};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/busclient.js\n// module id = 202\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/busclient.js?");

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// BusServer class, a package of websockets you can broadcast on (server side)\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tthis.atConstructor = function () {\n\t\tthis.sockets = [];\n\t\tthis.binrpc_waiting = [];\n\t};\n\n\tthis.use_xhr_fallback_for_binary = true;\n\n\tthis.binRpcIncoming = function (binrpc) {};\n\n\t// adds a WebSocket to the BusServer\n\tthis.addWebSocket = function (sock, req, binrpc_outgoing, binrpc_incoming) {\n\t\tthis.sockets.push(sock);\n\t\tvar origin = req.headers.origin;\n\t\tvar referer = req.headers.origin + req.url;\n\t\tvar remoteAddress = req.connection.remoteAddress;\n\n\t\tsock.onclose = function () {\n\t\t\tthis.sockets.splice(this.sockets.indexOf(sock), 1);\n\t\t\tsock.onclose = undefined;\n\t\t\tthis.atClose(sock);\n\t\t}.bind(this);\n\n\t\tif (this.use_xhr_fallback_for_binary) {\n\t\t\tvar rndhex4 = function rndhex4() {\n\t\t\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t\t\t};\n\n\t\t\tvar binary_xhr = [];\n\n\t\t\tsock.onmessage = function (event) {\n\t\t\t\tvar message = event.data;\n\t\t\t\tif (message.charAt(0) === '$') {\n\t\t\t\t\tbinary_xhr.push(message.slice(1));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < binary_xhr.length; i++) {\n\t\t\t\t\tvar id = binary_xhr[i];\n\t\t\t\t\tbinary_xhr[i] = binrpc_incoming[id];\n\t\t\t\t\tbinrpc_incoming[id] = undefined;\n\t\t\t\t}\n\t\t\t\tvar jsonmsg = JSON.parse(message);\n\t\t\t\tjsonmsg = defineDreem.structFromJSON(jsonmsg, binary_xhr);\n\t\t\t\tbinary_xhr.length = 0;\n\t\t\t\tjsonmsg.origin = origin;\n\t\t\t\tthis.atMessage(jsonmsg, sock);\n\t\t\t}.bind(this);\n\n\t\t\tsock.sendJSON = function (msg) {\n\t\t\t\tvar binary = [];\n\t\t\t\tvar newmsg = defineDreem.makeJSONSafe(msg, binary);\n\t\t\t\tfor (var i = 0; i < binary.length; i++) {\n\t\t\t\t\tvar data = binary[i].data;\n\n\t\t\t\t\tvar rpcrandom = rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4() + rndhex4();\n\t\t\t\t\tbinrpc_outgoing[rpcrandom] = {\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tremoteAddress: remoteAddress\n\t\t\t\t\t};\n\n\t\t\t\t\tsock.send(\"$\" + rpcrandom);\n\t\t\t\t}\n\t\t\t\tvar jsonmsg = JSON.stringify(newmsg);\n\t\t\t\tsock.send(jsonmsg);\n\t\t\t};\n\t\t} else {\n\t\t\tsock.makeJSONSocket();\n\t\t\tsock.atJSONMessage = function (jsonmsg) {\n\t\t\t\tjsonmsg.origin = origin;\n\t\t\t\tthis.atMessage(jsonmsg, sock);\n\t\t\t}.bind(this);\n\t\t}\n\n\t\tthis.atConnect(sock);\n\t};\n\n\t// called when a new message arrives\n\tthis.atMessage = function (message, socket) {};\n\n\t// called when a client disconnects\n\tthis.atClose = function (socket) {};\n\n\t// Called when a new socket appears on the bus\n\tthis.atConnect = function (message, socket) {};\n\n\t// Send a message to all connected sockets\n\tthis.broadcast = function (message, ignore) {\n\t\tfor (var i = 0; i < this.sockets.length; i++) {\n\t\t\tvar socket = this.sockets[i];\n\t\t\tif (socket !== ignore) socket.sendJSON(message);\n\t\t}\n\t};\n\n\t// close all sockets\n\tthis.closeAll = function () {\n\t\tfor (var i = 0; i < this.sockets.length; i++) {\n\t\t\tthis.sockets[i].close();\n\t\t}\n\t\tthis.sockets = [];\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/busserver.js\n// module id = 203\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/busserver.js?");

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Rpc Promise handler object\n\ndefineDreem.class(function (requireDreem, exports) {\n\n\tvar rpcproxy = requireDreem('./rpcproxy');\n\n\tthis.atConstructor = function (host) {\n\t\tthis.__host = host;\n\t};\n\n\tthis.methodRpc = function (name, msg) {\n\t\tmsg.rpcid = name;\n\n\t\treturn this.__host.callRpcMethod(msg);\n\t};\n\n\tthis.attributeRpc = function (name, msg, real) {\n\t\tmsg.rpcid = name;\n\t\treturn this.__host.setRpcAttribute(msg, null, real);\n\t};\n\n\t// lets disconnect all listeners\n\tthis.disconnectAll = function () {\n\t\tfor (var key in this) {\n\t\t\tvar obj = this[key];\n\t\t\tif (obj instanceof rpcproxy) {\n\t\t\t\tobj.disconnectAll();\n\t\t\t}\n\t\t}\n\t};\n\n\texports.resolveReturn = this.resolveReturn = function (msg) {\n\t\tif (!this.__promises) return;\n\t\tvar promise = this.__promises[msg.uid];\n\t\tif (!promise) return console.log('Error resolving RPC promise id ' + msg.uid);\n\t\tthis.__uid_free.push(msg.uid);\n\t\tthis.__promises[msg.uid] = undefined;\n\t\tif (msg.error) {\n\t\t\tpromise.reject(msg);\n\t\t} else {\n\t\t\tpromise.resolve(msg);\n\t\t}\n\t};\n\n\texports.allocPromise = this.allocPromise = function () {\n\t\tvar uid;\n\t\tif (this.__uid === undefined) this.__uid = 0;\n\t\tif (!this.__promises) this.__promises = {};\n\t\tif (!this.__uid_free) this.__uid_free = [];\n\t\tif (this.__uid_free.length) {\n\t\t\tuid = this.__uid_free.pop();\n\t\t} else uid = this.__uid++;\n\n\t\tif (this.__uid > 500) {\n\t\t\t// TODO make a promise timeout cleanup\n\t\t\tconsole.log('Warning, we have an RPC promise leak');\n\t\t\tfor (var i = 0; i < 100; i++) {\n\t\t\t\tconsole.log(this.promises[i].msg);\n\t\t\t}\n\t\t}\n\n\t\tvar resolve, reject;\n\t\tvar prom = new defineDreem.Promise(function (_resolve, _reject) {\n\t\t\tresolve = _resolve, reject = _reject;\n\t\t});\n\t\tprom.resolve = resolve;\n\t\tprom.reject = reject;\n\t\tprom.uid = uid;\n\t\tthis.__promises[uid] = prom;\n\n\t\treturn prom;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/rpchub.js\n// module id = 204\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/rpchub.js?");

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Rpc single proxy\n\ndefineDreem.class('$system/base/node', function (requireDreem, exports) {\n\tvar RpcProxy = exports;\n\n\t// disconnect all listeners to this rpc object\n\tthis.disconnectAll = function () {\n\t\tfor (var key in this._attributes) {\n\t\t\tvar listen = this['_listen_' + key];\n\t\t\tif (listen && listen.length) {\n\t\t\t\tlisten.length = 0;\n\t\t\t}\n\t\t}\n\t};\n\n\tRpcProxy.defineProp = function (obj, key, value) {\n\t\tvar store = '__' + key;\n\t\tObject.defineProperty(obj, key, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[store];\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\t// maybe error here?\n\t\t\t\tthrow new Error('Please dont set key ' + key + ' on an rpc object, its readonly');\n\t\t\t}\n\t\t});\n\t};\n\n\tRpcProxy.defineMethod = function (obj, key) {\n\t\tobj[key] = function () {\n\t\t\tvar msg = { type: 'method', method: key, args: Array.prototype.slice.apply(arguments) };\n\t\t\treturn this.parent.methodRpc(this.name, msg);\n\t\t};\n\t};\n\n\tRpcProxy.verifyRpc = function (rpcdef, component, prop, kind) {\n\t\t// lets rip off the array index\n\t\tvar def = rpcdef[component];\n\t\tif (!def) {\n\t\t\tconsole.log('Illegal RPC ' + kind + ' on ' + component);\n\t\t\treturn false;\n\t\t}\n\t\tvar prop = def[prop];\n\t\tif (!prop || prop.kind !== kind) {\n\t\t\tconsole.log('Illegal RPC ' + kind + ' on ' + component + '.' + prop);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tRpcProxy.createFromObject = function (object, parent) {\n\t\tvar proxy = new RpcProxy();\n\t\tproxy.parent = parent;\n\t\tproxy.name = object.name || object.constructor.name;\n\n\t\tvar proto = object;\n\t\twhile (proto && proto.isAttribute) {\n\t\t\tif (proto.hasOwnProperty('rpcproxy') && proto.rpcproxy === false) break;\n\n\t\t\tvar keys = Object.keys(proto);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (key in proxy || key.charAt(0) === '_') continue;\n\t\t\t\t//console.log(\"RPC\"+key, proto.__lookupSetter__(key))\n\n\t\t\t\tif (proto.isAttribute(key)) {\n\t\t\t\t\t// we iz attribute\n\t\t\t\t\t// we have to ignore property binds\n\t\t\t\t\tvar props = proto.getAttributeConfig(key);\n\t\t\t\t\tvar value = object['_' + key];\n\t\t\t\t\tif (!props) props = {};\n\t\t\t\t\tif (typeof value === 'function' && value.is_wired || typeof value === 'string' && value.charAt(0) == '$' && value.charAt(1) === '{' && value.charAt(value.length - 1) === '}') {\n\t\t\t\t\t\tprops.value = undefined;\n\t\t\t\t\t} else props.value = value;\n\t\t\t\t\tproxy.defineAttribute(key, Config(props));\n\t\t\t\t} else {\n\t\t\t\t\tvar prop = proto[key];\n\n\t\t\t\t\tif (typeof prop == 'function' && key.indexOf('on') !== 0) {\n\t\t\t\t\t\tRpcProxy.defineMethod(proxy, key);\n\t\t\t\t\t} else if (Array.isArray(prop)) {\n\t\t\t\t\t\t// its an array!\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t}\n\n\t\tobject.atAttributeSet = function (key, value) {\n\t\t\t// lets call set attribute\n\t\t\tif (!(key in proxy)) return;\n\t\t\tvar msg = { type: 'attribute', attribute: key, value: value };\n\t\t\tproxy.parent.attributeRpc(proxy.name, msg, true);\n\t\t};\n\n\t\tproxy.atAttributeSet = function (key, value) {\n\t\t\tif (!(key in proxy)) return;\n\t\t\tvar msg = { type: 'attribute', attribute: key, value: value };\n\t\t\tthis.parent.attributeRpc(this.name, msg);\n\t\t};\n\n\t\treturn proxy;\n\t};\n\n\tvar RpcChildSet = defineDreem.class(function RpcChildSet() {\n\t\tthis.methodRpc = function (rpcid, message) {\n\t\t\treturn this.parent.methodRpc(this.name + '.' + rpcid, message);\n\t\t};\n\n\t\tthis.attributeRpc = function (rpcid, message, recur) {\n\t\t\treturn this.parent.attributeRpc(this.name + '.' + rpcid, message, recur);\n\t\t};\n\t});\n\n\t// we create a set of RPC forwards for the child nodes\n\tRpcProxy.createChildSet = function (object, parent) {\n\t\tvar childset = new RpcChildSet();\n\t\tchildset.parent = parent;\n\t\tchildset.name = object.name || object.constructor.name;\n\n\t\tfor (var i = 0; i < object.constructor_children.length; i++) {\n\t\t\tvar child = object.constructor_children[i];\n\t\t\tchildset[child.name || child.constructor.name] = child.createRpcProxy(childset);\n\t\t}\n\t\treturn childset;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/rpcproxy.js\n// module id = 205\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/rpcproxy.js?");

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// WebRTC class\n\ndefineDreem.class(function (requireDreem, exports) {\n\tvar WebRTCData = exports;\n\n\tWebRTCData.createOffer = function () {\n\t\tvar obj = new WebRTCData();\n\n\t\tif (typeof webkitRTCPeerConnection === 'undefined') return obj;\n\n\t\tobj.pc = new webkitRTCPeerConnection({ \"iceServers\": [{ \"url\": \"stun:stun.l.google.com:19302\" }]\n\t\t}, { optional: [{ RtpDataChannels: true }] });\n\n\t\tobj.pc.onicecandidate = function (event) {\n\t\t\tif (!event || !event.candidate) return;\n\t\t\tthis.atIceCandidate(event.candidate);\n\t\t}.bind(obj);\n\n\t\tobj.setChannel(obj.pc.createDataChannel('RTCDataChannel', { reliable: false }));\n\n\t\tobj.pc.createOffer(function (desc) {\n\t\t\tthis.pc.setLocalDescription(desc);\n\t\t\tthis.atOffer(desc);\n\t\t}.bind(obj), null, obj.media_constraints);\n\n\t\treturn obj;\n\t};\n\n\tWebRTCData.acceptOffer = function (offer) {\n\t\tvar obj = new WebRTCData();\n\n\t\tobj.pc = new webkitRTCPeerConnection({ \"iceServers\": [{ \"url\": \"stun:stun.l.google.com:19302\" }] }, { optional: [{ RtpDataChannels: true }] });\n\n\t\tobj.setChannel(obj.pc.createDataChannel('RTCDataChannel', { reliable: false }));\n\n\t\tobj.pc.onicecandidate = function (event) {\n\t\t\tif (!event || !event.candidate) return;\n\t\t\tthis.atIceCandidate(event.candidate);\n\t\t\t//this.pc.addIceCandidate(event.candidate)\n\t\t}.bind(obj);\n\n\t\tobj.pc.setRemoteDescription(new RTCSessionDescription(offer));\n\n\t\tobj.pc.createAnswer(function (session) {\n\t\t\tthis.pc.setLocalDescription(session);\n\t\t\tthis.atAnswer(session);\n\t\t}.bind(obj), null, obj.media_constraints);\n\n\t\treturn obj;\n\t};\n\n\tthis.media_constraints = {\n\t\toptional: [],\n\t\tmandatory: {\n\t\t\tOfferToReceiveAudio: false, // Hmm!!\n\t\t\tOfferToReceiveVideo: false // Hmm!!\n\t\t}\n\t};\n\n\tthis.addCandidate = function (candidate) {\n\t\tthis.pc.addIceCandidate(new RTCIceCandidate(candidate));\n\t};\n\n\tthis.acceptAnswer = function (desc) {\n\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(desc));\n\t};\n\n\tthis.send = function (msg) {\n\t\tif (!this.open) {\n\t\t\tif (!this.queue) this.queue = [];\n\t\t\tthis.queue.push(msg);\n\t\t} else this.channel.send(msg);\n\t};\n\n\t// hooks\n\tthis.atOffer = function () {};\n\n\tthis.atAnswer = function () {};\n\n\tthis.atIceCandidate = function () {};\n\n\tthis.atOpen = function () {};\n\n\tthis.atClose = function () {\n\t\tconsole.log('webRTC onClose');\n\t};\n\tthis.atError = function () {\n\t\tconsole.log('webRTC on Error');\n\t};\n\tthis.atMessage = function () {};\n\n\tthis.setChannel = function (channel) {\n\t\tthis.channel = channel;\n\t\tchannel.onmessage = function (event) {\n\t\t\tthis.atMessage(event.data, event.timeStamp);\n\t\t}.bind(this);\n\t\tchannel.onopen = function () {\n\t\t\tthis.open = true;\n\t\t\tthis.atOpen.apply(this, arguments);\n\t\t}.bind(this);\n\t\tchannel.onclose = function () {\n\t\t\tthis.open = false;\n\t\t\tthis.atClose.apply(this, arguments);\n\t\t}.bind(this);\n\t\tchannel.onerror = function () {\n\t\t\tthis.atError.apply(this, arguments);\n\t\t}.bind(this);\n\t};\n\n\tthis.acceptOffer = function (offer) {\n\t\tthis.pc.acceptOffer(offer);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/webrtc.js\n// module id = 206\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/webrtc.js?");

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\ndefineDreem(function (requireDreem, exports, module) {\n\tmodule.exports = requireDreem('$system/platform/$platform/worker$platform');\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/rpc/worker.js\n// module id = 207\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/rpc/worker.js?");

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// childPromise turns a childprocess into a promise that resolves with the output of the process\n\ndefineDreem(function (requireDreem) {\n\tvar child_process = requireDreem('child_process');\n\n\treturn function childPromise(execpath, args) {\n\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\tvar child = child_process.spawn(execpath, args);\n\n\t\t\tvar result = { stdout: '', stderr: '', code: 0 };\n\t\t\tchild.stdout.on('data', function (buf) {\n\t\t\t\tresult.stdout += buf.toString();\n\t\t\t});\n\n\t\t\tchild.stderr.on('data', function (buf) {\n\t\t\t\tresult.stderr += buf.toString();\n\t\t\t});\n\n\t\t\tchild.on('close', function (code) {\n\t\t\t\tresult.code = 0;\n\t\t\t\tresolve(result);\n\t\t\t});\n\n\t\t\tchild.on('error', function (error) {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/childpromise.js\n// module id = 208\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/childpromise.js?");

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// parse a color string into a [r,g,b] 0-1 float array\n\ndefineDreem.class(function (requireDreem) {\n\n\tvar fs = requireDreem('fs');\n\n\tvar FileWatcher = requireDreem('./filewatcher');\n\n\tvar BusServer = requireDreem('$system/rpc/busserver');\n\n\tthis.atConstructor = function (args, //Object: Process arguments\n\tcompname, //String: name of the composition\n\trootserver) {\n\t\t//TeemServer: teem server object\n\n\t\tthis.rootserver = rootserver;\n\t\tthis.args = args;\n\t\tthis.compname = compname;\n\n\t\tthis.busserver = new BusServer();\n\n\t\tthis.slow_watcher = new FileWatcher();\n\n\t\t// lets give it a session\n\t\tthis.session = Math.random() * 1000000;\n\n\t\tthis.slow_watcher.atChange = function () {\n\t\t\t// lets reload this app\n\t\t\tthis.reload();\n\t\t}.bind(this);\n\n\t\tthis.components = {};\n\n\t\tthis.paths = \"\";\n\t\tthis.pathset = '{';\n\n\t\tfor (var key in defineDreem.paths) {\n\t\t\tif (this.paths) this.paths += ',\\n\\t\\t', this.pathset += ',';\n\t\t\tthis.paths += '$' + key + ':\"$root/' + key + '\"';\n\t\t\tthis.pathset += '\"' + key + '\":1';\n\t\t}\n\t\tthis.pathset += '}';\n\n\t\t// lets compile and run the dreem composition\n\t\tdefineDreem.atRequire = function (filename) {\n\t\t\tthis.slow_watcher.watch(filename);\n\t\t}.bind(this);\n\t\t//\n\t\tthis.reload();\n\t};\n\n\t// Called when any of the dependent files change for this composition\n\tthis.atChange = function () {};\n\n\t// Destroys all objects maintained by the composition\n\tthis.destroy = function () {\n\t\tif (this.mycomposition && this.mycomposition.destroy) this.mycomposition.destroy();\n\t\tthis.mycomposition = undefined;\n\t};\n\n\tthis.loadComposition = function () {\n\t\tconsole.log(\"Reloading composition \" + this.filename);\n\t\trequireDreem.clearCache();\n\t\tvar Composition = requireDreem(defineDreem.expandVariables(this.filename));\n\t\tthis.composition = new Composition(this.busserver, this.session, this.composition);\n\t};\n\n\tthis.reload = function () {\n\t\tthis.destroy();\n\n\t\t// lets fill\n\t\trequireDreem.clearCache();\n\n\t\tthis.title = defineDreem.fileName(this.compname);\n\t\t// lets see if our composition is a dir or a jsfile\n\t\tvar jsname = this.compname + '.js';\n\t\ttry {\n\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\tthis.filename = jsname;\n\t\t\t\treturn this.loadComposition();\n\t\t\t} else {\n\t\t\t\tvar jsname = this.compname + '/index.js';\n\t\t\t\tif (fs.existsSync(defineDreem.expandVariables(jsname))) {\n\t\t\t\t\tthis.filename = jsname;\n\t\t\t\t\treturn this.loadComposition();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e.stack);\n\t\t} finally {}\n\t};\n\n\tthis.loadHTML = function (title, boot, paths, pathset) {\n\n\t\t// These rpc attributes we will write directly into the header so that they are available even before the screen connects\n\t\tvar preloadattrs = {};\n\n\t\tvar additionalHeader = \"\";\n\n\t\tif (this.composition) {\n\n\t\t\t// preload_rpc_attributes can be `true` to include everything or an array of `rpcobj_rpcattr` identifiers\n\t\t\tvar preload = this.composition.preload_rpc_attributes;\n\t\t\tif (preload === true) {\n\t\t\t\tpreloadattrs = this.composition.server_attributes;\n\t\t\t} else if (Array.isArray(preload)) {\n\t\t\t\tfor (var i = 0; i < preload.length; i++) {\n\t\t\t\t\tvar key = preload[i];\n\t\t\t\t\tvar attr = this.composition.server_attributes[key];\n\t\t\t\t\tif (attr) {\n\t\t\t\t\t\tpreloadattrs[key] = attr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tadditionalHeader = this.composition.headHTML || \"\";\n\t\t}\n\n\t\treturn '<html lang=\"en\">\\n' + ' <head>\\n' + '  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\\n' + '  <meta name=\"viewport\" content=\"width=device-width,user-scalable=no,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0\">\\n' + '  <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\\n' + '  <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\\n' + '  <meta name=\"format-detection\" content=\"telephone=no\">\\n' + '  <title>' + title + '</title>\\n' + '  <style>\\n' + '    .unselectable{\\n' + ' \t\t-webkit-user-select: none;\\n' + '\t\t-moz-user-select: none;\\n' + '\t\t-user-select: none;\\n' + '    }\\n' + '    body {background-color:white;margin:0;padding:0;height:100%;overflow:hidden;}\\n' + '  </style>' + '  <script type=\"text/javascript\">\\n' + '    window.define = {\\n' + '\t   $platform:\"webgl\",\\n' + '      paths:' + pathset + ',\\n' + '     ' + paths + ',\\n' + '      main:[\"$system/base/math\", \"' + boot + '\"],\\n' + '      atMain:function(requireDreem, modules){\\n' + '        defineDreem.endLoader()\\n' + '\t\t require(modules[0])\\n' + '\t\t var Composition = require(modules[1])\\n' + '\t\t var serverattrs = ' + JSON.stringify(preloadattrs) + '\\n' + '\t\t var renderTarget;' + '\\n' + '        defineDreem.rootComposition = new Composition(defineDreem.rootComposition, undefined, serverattrs, renderTarget)\\n' + '      },\\n' + '\t   atEnd:function(){\\n' + '         defineDreem.startLoader()\\n' + '      }\\n' + '    }\\n' + '  </script>\\n' + '  <script type=\"text/javascript\" src=\"/system/base/defineDreem.js\"></script>\\n' + additionalHeader + ' </head>\\n' + ' <body class=\"unselectable\">\\n' + ' </body>\\n' + '</html>\\n';\n\t};\n\n\tthis.request = function (req, res) {\n\t\tvar base = req.url.split('?')[0];\n\t\tvar app = base.split('/')[2] || 'browser';\n\t\t// ok lets serve our Composition device\n\n\t\tif (req.method == 'POST') {\n\t\t\t// lets do an RPC call\n\n\t\t\tif (!defineDreem.$unsafeorigin && this.rootserver.addresses.indexOf(req.headers.origin) === -1) {\n\t\t\t\tconsole.log(\"WRONG ORIGIN POST API RECEIVED\" + req.headers.origin);\n\t\t\t\tres.end();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar boundary;\n\t\t\tif (req.headers && req.headers['content-type']) {\n\t\t\t\tvar type = req.headers['content-type'];\n\t\t\t\tif (type) {\n\t\t\t\t\tvar m = /^multipart\\/form-data; boundary=(.*)$/.exec(type);\n\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\tboundary = m[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar buffer;\n\t\t\treq.on('data', function (data) {\n\t\t\t\tif (boundary) {\n\t\t\t\t\tif (!buffer) {\n\t\t\t\t\t\tbuffer = new Buffer(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuffer = Buffer.concat([buffer, data]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treq.on('end', function () {\n\n\t\t\t\tif (boundary && buffer && buffer.indexOf) {\n\n\t\t\t\t\tvar cursor = buffer.indexOf(boundary) + boundary.length;\n\n\t\t\t\t\tcursor = buffer.indexOf(\"filename=\", cursor) + \"filename=\".length;\n\t\t\t\t\tvar q = buffer[cursor];\n\t\t\t\t\tvar filename = buffer.slice(cursor + 1, buffer.indexOf(q, cursor + 1)).toString();\n\t\t\t\t\tcursor = buffer.indexOf(\"\\r\\n\\r\\n\", cursor) + \"\\r\\n\\r\\n\".length;\n\n\t\t\t\t\tvar filedata = buffer.slice(cursor, buffer.indexOf(\"\\r\\n--\" + boundary));\n\n\t\t\t\t\tvar compfile = this.composition.constructor.module.filename;\n\t\t\t\t\tvar compdir = compfile.substring(0, compfile.lastIndexOf('/'));\n\n\t\t\t\t\tfilename = compdir + \"/\" + filename.replace(/[^A-Za-z0-9_.-]/g, '');\n\n\t\t\t\t\tif (!defineDreem.$writefile) {\n\t\t\t\t\t\tconsole.log(\"writefile api disabled, use -writefile to turn it on. Writefile api is always limited to localhost origins.\");\n\t\t\t\t\t\tres.writeHead(501);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar fullname = defineDreem.expandVariables(filename);\n\t\t\t\t\t\t\tfs.writeFile(fullname, filedata);\n\t\t\t\t\t\t\tconsole.log(\"[UPLOAD] Wrote\", filedata.length, \"bytes to\", fullname);\n\t\t\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tres.writeHead(503);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t} else if (buffer) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar json = JSON.parse(buffer.toString());\n\t\t\t\t\t\tthis.composition.postAPI(json, { send: function send(msg) {\n\t\t\t\t\t\t\t\tres.writeHead(200, { \"Content-Type\": \"text/json\" });\n\t\t\t\t\t\t\t\tres.write(JSON.stringify(msg));\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t} });\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tres.writeHead(500, { \"Content-Type\": \"text/html\" });\n\t\t\t\t\t\tres.write('FAIL');\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.writeHead(500, { \"Content-Type\": \"text/html\" });\n\t\t\t\t\tres.write('FAIL');\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t\treturn;\n\t\t}\n\n\t\tvar header = {\n\t\t\t\"Cache-control\": \"max-age=0\",\n\t\t\t\"Content-Type\": \"text/html\"\n\t\t\t//var screen = this.screens[app]\n\n\t\t\t// nodejs root\n\t\t};if (req.headers['client-type'] === 'nodejs') {\n\t\t\tres.writeHead(200, { \"Content-type\": \"text/json\" });\n\t\t\tres.write(JSON.stringify({ title: this.title, boot: this.filename, paths: defineDreem.paths }));\n\t\t\tres.end();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.filename) {\n\t\t\tres.writeHead(404, header);\n\t\t\tres.write('<body>Sorry, we could not find an application at that URL. <a href=\"/docs/api/index.html\">Try reading the documentation?</a></body>');\n\t\t\tres.end();\n\t\t\treturn;\n\t\t}\n\t\tvar html = this.loadHTML(this.title, this.filename, this.paths, this.pathset);\n\t\tres.writeHead(200, header);\n\t\tres.write(html);\n\t\tres.end();\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/compositionserver.js\n// module id = 209\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/compositionserver.js?");

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n    // internal, Prints documentation\n\n    var path = requireDreem('path');\n    var fs = requireDreem('fs');\n\n    this.atConstructor = function (args) {\n        var tree = this.readAllPaths(['resources', 'server.js', 'resources', 'cache', '@/\\\\.', '.git', '.gitignore']);\n        function wlk(obj, paths) {\n            if (!paths) {\n                paths = [];\n            }\n            if (!obj.parent) {\n                obj.parent = { name: '' };\n            }\n            var fullname = obj.name || '';\n            var p = obj.parent;\n            while (p) {\n                if (p.name) {\n                    fullname = p.name + '/' + fullname;\n                }\n                p = p.parent;\n            }\n            if (/\\.js$/.test(fullname) && fullname.indexOf('node_modules') < 0 && fullname.indexOf('docs/api') < 0) {\n                paths.push(fullname);\n            }\n\n            if (obj.children) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var child = obj.children[i];\n                    child.parent = obj;\n                    wlk(child, paths);\n                }\n            }\n\n            return paths;\n        }\n        var extracted = wlk(tree).sort();\n\n        function fetch(path) {\n            console.log('Fetch Path:', path);\n            var expandedPath = defineDreem.expandVariables('$' + path);\n            var module = requireDreem(expandedPath);\n            var class_doc = this.parseDoc(module);\n            class_doc.sourcePath = path;\n            var out = this.printJSDuck(class_doc).join('\\n');\n            if (out) {\n                this.writeToPath(path, out);\n            } else {\n                console.log('No comments for', path);\n            }\n        }\n\n        for (var i = 0; i < extracted.length; i++) {\n            var path = extracted[i];\n            try {\n                fetch.bind(this)(path);\n            } catch (err) {\n                console.log('Error loading:', path, err);\n            }\n        }\n    };\n\n    function readRecurDir(base, inname, ignoreset) {\n        var local = path.join(base, inname);\n        var dir = fs.readdirSync(local);\n        var out = { name: inname, collapsed: 1, children: [] };\n        for (var i = 0; i < dir.length; i++) {\n            var name = dir[i];\n            var mypath = path.join(local, name);\n            if (ignoreset) {\n                for (var j = 0; j < ignoreset.length; j++) {\n                    var item = ignoreset[j];\n                    if (typeof item === 'string') {\n                        if (mypath.indexOf(item) !== -1) break;\n                    } else {\n                        if (mypath.match(item)) break;\n                    }\n                }\n                if (j < ignoreset.length) continue;\n            }\n            var stat = fs.statSync(mypath);\n            if (stat.isDirectory()) {\n                out.children.push(readRecurDir(local, name, ignoreset));\n            } else {\n                out.children.push({ name: name, size: stat.size });\n            }\n        }\n        return out;\n    }\n\n    // recursively read all directories starting from a base path\n    this.readAllPaths = function (ignoreset // files and directories to ignore while recursively expanding\n    ) {\n        // lets read all paths.\n        // lets read the directory and return it\n        var root = { collapsed: 0, children: [] };\n\n        if (ignoreset) ignoreset = ignoreset.map(function (value) {\n            if (value.indexOf('@') == 0) return new RegExp(value.slice(1));\n            return value;\n        });\n\n        for (var key in defineDreem.paths) {\n            if (ignoreset.indexOf(key) !== -1) continue;\n            var ret = readRecurDir(defineDreem.expandVariables(__webpack_require__(0)['$' + key]), '', ignoreset);\n            ret.name = key;\n            root.children.push(ret);\n        }\n        return root;\n    };\n\n    this.writeToPath = function (topath, data) {\n        var fullpath = defineDreem.expandVariables('$root/docs/.classdoc/' + topath);\n\n        function ensureDirectoryExistence(filePath) {\n            var dirname = path.dirname(filePath);\n            if (fs.existsSync(dirname)) {\n                return true;\n            }\n            ensureDirectoryExistence(dirname);\n            fs.mkdirSync(dirname);\n        }\n\n        ensureDirectoryExistence(fullpath);\n\n        fs.writeFile(fullpath, data);\n\n        console.log('Write complete:', fullpath);\n    };\n\n    // Build a documentation structure for a given constructor function\n    this.parseDoc = requireDreem('$system/parse/jsdocgen').parseDoc;\n\n    this.printJSDuck = function (class_doc, parentclass) {\n        var i, j, str, firstline;\n        var internal = 'internal';\n        var output = [];\n\n        if (!class_doc) {\n            return output;\n        }\n\n        var exampleFunctions = {};\n\n        if (class_doc.body_text && class_doc.body_text.length) {\n            firstline = class_doc.body_text[0];\n            if (firstline && firstline.startsWith(internal)) {\n                return output;\n            }\n\n            output.push('/**');\n            var classname = class_doc.class_name;\n            if (parentclass) {\n                classname = parentclass + '.' + classname;\n            }\n            output.push(' * @class ' + classname);\n            if (class_doc.base_class_chain) {\n                var base = class_doc.base_class_chain[0];\n                if (base && base.name) {\n                    output.push(' * @extends ' + base.name);\n                }\n            }\n            if (class_doc.body_text) {\n                for (i = 0; i < class_doc.body_text.length; i++) {\n                    var body = class_doc.body_text[i];\n                    body = body.replace(/not-supported\\s*[:]?\\s*/, \"@unsupported \");\n                    output.push(' * ' + body);\n                }\n            }\n\n            if (class_doc.examples && class_doc.examples.length) {\n                // console.log(\"\\n\\n\\nclass_doc>>>>\", class_doc.base_class_chain)\n                var ext = \"\";\n                if (defineDreem.$disableserver === true) {\n                    ext = \".html\";\n                }\n                var url = '/apps/docs/example' + ext + '#path=$' + class_doc.sourcePath;\n                var s = \"border:0;\";\n                var w = 900;\n                var h = 300 * class_doc.examples.length;\n                output.push(' * ');\n                output.push(' * <iframe style=\"' + s + 'width:' + w + 'px;height:' + h + 'px\" src=\"' + url + '\"></iframe>');\n                output.push(' * <a target=\"blank\" href=\"' + url + '\">open example in new tab &raquo;</a>');\n                output.push(' * ');\n            }\n\n            output.push(' */');\n            var attrs = [];\n            if (class_doc.attributes) {\n                for (i = 0; i < class_doc.attributes.length; i++) {\n                    var attr = class_doc.attributes[i];\n                    if (attr.name && attr.name.startsWith('_')) {\n                        continue;\n                    }\n                    if (attr.body_text && attr.body_text.length) {\n                        firstline = attr.body_text[0];\n                        if (firstline && firstline.startsWith(internal)) {\n                            continue;\n                        }\n\n                        attrs.push(attr.name);\n                        output.push('/**');\n                        var defval = attr.defvalue;\n                        if (typeof defval === 'function') {\n                            output.push(' * @attribute {' + attr.type + '} ' + attr.name);\n                        } else {\n                            output.push(' * @attribute {' + attr.type + '} [' + attr.name + '=\"' + defval + '\"]');\n                        }\n                        for (j = 0; j < attr.body_text.length; j++) {\n                            str = attr.body_text[j];\n                            str = str.replace(/not-supported\\s*[:]?\\s*/, \"@unsupported \");\n\n                            output.push(' * ' + str);\n                        }\n                        output.push(' */');\n                    }\n                }\n            }\n\n            if (class_doc.methods) {\n                for (i = 0; i < class_doc.methods.length; i++) {\n                    var meth = class_doc.methods[i];\n                    if (meth.name && meth.name.startsWith('_')) {\n                        continue;\n                    }\n\n                    if (meth.body_text && meth.body_text.length) {\n                        firstline = meth.body_text[0];\n                        if (firstline && firstline.startsWith(internal)) {\n                            continue;\n                        }\n\n                        if (meth && meth.name) {\n                            output.push('/**');\n                            output.push(' * @method ' + meth.name);\n                            //if (meth.name.startsWith('on')) {\n                            //\toutput.push(' * @event ' + meth.name);\n                            //} else {\n                            //\toutput.push(' * @method ' + meth.name);\n                            //}\n\n                            for (j = 0; j < meth.body_text.length; j++) {\n                                str = meth.body_text[j];\n                                str = str.replace(/not-supported\\s*[:]?\\s*/, \"@unsupported \");\n                                output.push(' * ' + str);\n                            }\n\n                            if (meth.params) {\n                                for (j = 0; j < meth.params.length; j++) {\n                                    var param = meth.params[j];\n\n                                    var pbody = '';\n                                    if (param.body_text && param.body_text.length) {\n                                        pbody = param.body_text.join('; ');\n                                    }\n                                    var typegrabber = /^([^\\{}]*)(\\{[^\\}]+\\})\\s+(.*)$/;\n                                    var result = typegrabber.exec(pbody);\n                                    var ptype = ' ';\n                                    if (result) {\n                                        ptype = ' ' + result[2] + ' ';\n                                        pbody = (result[1] + result[3]).trim();\n                                    }\n\n                                    output.push(' * @param' + ptype + param.name);\n                                    if (pbody.length) {\n                                        output.push(' * ' + pbody);\n                                    }\n                                }\n                            }\n\n                            output.push(' */');\n                        }\n                    }\n                }\n            }\n\n            if (class_doc.events && class_doc.events.length) {\n                for (i = 0; i < class_doc.events.length; i++) {\n                    var event = class_doc.events[i];\n                    if (event.name && event.name.startsWith('_')) {\n                        continue;\n                    }\n                    if (event.body_text && event.body_text.length) {\n                        firstline = event.body_text[0];\n                        if (firstline && firstline.startsWith(internal)) {\n                            continue;\n                        }\n\n                        output.push('/**');\n                        output.push(' * @event ' + event.name);\n                        for (j = 0; j < event.body_text.length; j++) {\n                            str = event.body_text[j];\n                            str = str.replace(/not-supported\\s*[:]?\\s*/, \"@unsupported \");\n                            output.push(' * ' + str);\n                        }\n                        output.push(' */');\n                    }\n                }\n            }\n            // TODO: JSDuck doesn't handle inner classes in the right way yet, so don't add them\n            //if (class_doc.inner_classes && class_doc.inner_classes.length) {\n            //    for (i = 0; i < class_doc.inner_classes.length; i++) {\n            //        var inner = class_doc.inner_classes[i];\n            //        if (inner.class_name && inner.class_name.startsWith('_')) {\n            //            continue;\n            //        }\n            //        output = output.concat(this.printJSDuck(inner, classname));\n            //    }\n            //}\n            if (class_doc.state_attributes && class_doc.state_attributes.length) {\n                console.log('STATE', class_doc.state_attributes);\n            }\n        }\n\n        console.log(output.join('\\n'));\n\n        return output;\n    };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/docbuilder.js\n// module id = 210\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/docbuilder.js?");

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\t// controls external applications\n\n\tvar child_process = requireDreem('child_process');\n\n\t// Opens a webbrowser on the specified url \n\texports.browser = function (url, withdevtools) {\n\t\tif (false) {\n\t\t\t//process.platform == 'darwin'){\n\t\t\tchild_process.exec('osascript -e \\'tell application \"Safari\" to open location \"' + url + '\"\\'');\n\t\t\tif (withdevtools) {\n\t\t\t\tchild_process.exec('osascript -e \\'tell application \"Safari\"\\n\\treopen\\nend tell\\ntell application \"System Events\" to keystroke \"c\" using {option down, command down}\\'');\n\t\t\t}\n\t\t} else if (process.platform == 'darwin') {\n\t\t\t// can we spawn safari?\n\n\t\t\t// Spawn google chrome\n\t\t\tchild_process.spawn(\"/Applications/Google chrome.app/Contents/MacOS/Google Chrome\", [\"--incognito\", url]);\n\t\t\t// open the devtools \n\t\t\tif (withdevtools) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tchild_process.exec('osascript -e \\'tell application \"Chrome\"\\n\\treopen\\nend tell\\ntell application \"System Events\" to keystroke \"j\" using {option down, command down}\\'');\n\t\t\t\t}, 200);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"Sorry your platform \" + process.platform + \" is not supported for browser spawn\");\n\t\t}\n\t};\n\n\t// Opens a code editor on the file / line / column\n\texports.editor = function (file, line, col) {\n\t\tif (process.platform == 'darwin') {\n\t\t\t// Only support sublime for now\n\t\t\tchild_process.spawn(\"/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\", [file + ':' + line + (col !== undefined ? ':' + col : '')]);\n\t\t} else {\n\t\t\tconsole.log(\"Sorry your platform \" + process.platform + \" is not supported for editor spawn\");\n\t\t}\n\t};\n\n\t// Opens a tray notification\n\texports.notify = function (body, title, subtitle) {\n\t\tif (process.platform == 'darwin') {\n\t\t\tchild_process.spawn(\"osascript\", [\"-e\", 'display notification \\\"' + body.replace(/\"/g, '\\\\\"') + '\\\" ' + (title ? 'with title \\\"' + title.replace(/\"/g, '\\\\\"') + '\\\" ' : '') + (subtitle ? 'subtitle \\\"' + subtitle.replace(/\"/g, '\\\\\"') + '\\\"' : '')]);\n\t\t} else {\n\t\t\tconsole.log(\"Sorry your platform \" + process.platform + \" is not supported for notify spawn\");\n\t\t}\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/externalapps.js\n// module id = 211\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/externalapps.js?");

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports) {\n\t// internal, Watch file changes\n\n\tvar fs = requireDreem('fs');\n\tvar promisify = requireDreem('$system/lib/promisify');\n\n\tif (fs) {\n\t\tfs.statPromise = promisify(fs.stat);\n\t}\n\n\tvar uid = 0;\n\tthis.__trace__ = 2;\n\tthis.atConstructor = function (delay) {\n\t\tthis.files = {};\n\t\tthis.timeout = delay || 500;\n\t\tthis.poll = this.poll.bind(this);\n\t\tthis.itv = setTimeout(this.poll, 0);\n\t\tthis.lastfire = 0;\n\t\tthis.firelimit = 1000;\n\t\tthis.uid = uid++;\n\t};\n\n\tthis.atChange = function (changed_file) {};\n\n\tthis.poll = function (file) {\n\t\tvar stats = [];\n\t\tvar names = [];\n\t\tfor (var k in this.files) {\n\t\t\tnames.push(k);\n\t\t\tstats.push(fs.statPromise(defineDreem.expandVariables(k)));\n\t\t}\n\t\tPromise.all(stats).then(function (results) {\n\t\t\tsetTimeout(this.poll, this.timeout);\n\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\tvar file = names[i];\n\t\t\t\tvar res = results[i];\n\t\t\t\tres.atime = null;\n\t\t\t\tvar str = JSON.stringify(res);\n\t\t\t\t// lets make sure we dont fire too often\n\t\t\t\tif (this.files[file] !== null && this.files[file] !== str) {\n\n\t\t\t\t\tvar now = Date.now();\n\t\t\t\t\tif (now - this.lastfire > this.firelimit) {\n\t\t\t\t\t\tthis.lastfire = now;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.atChange(file);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t//console.log('WATCH EXCEPTION', e, e.stack)\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.files[file] = str;\n\t\t\t}\n\t\t}.bind(this)).catch(function (err) {\n\t\t\t// TODO lets unwatch the files that errored?\n\t\t\tconsole.log(\"WATCH ERROR\", err.stack);\n\t\t});\n\t};\n\n\tthis.watch = function (file /*String:path of file to watch*/) {\n\t\tif (!(file in this.files)) this.files[file] = null;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/filewatcher.js\n// module id = 212\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/filewatcher.js?");

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem, exports, self) {\n\t// Git synchronize your project automatically\n\n\tvar childPromise = requireDreem('./childpromise');\n\tvar async = requireDreem('$system/lib/async');\n\tvar promisify = requireDreem('$system/lib/promisify');\n\n\tself.atConstructor = function (args) {\n\t\tthis.run();\n\t};\n\n\tself.run = async( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t\tvar result, items, modified, i, item, file;\n\t\treturn regeneratorRuntime.wrap(function _callee$(_context) {\n\t\t\twhile (1) {\n\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t_context.next = 2;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"pull\", \"origin\"]);\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tresult = _context.sent;\n\n\t\t\t\t\t\t// check result!\n\t\t\t\t\t\tif (result.stdout.indexOf('Already up-to-date') == 0) {} else {\n\t\t\t\t\t\t\tconsole.color(\"\\n~bm~Synchronizing git repo:               \");\n\t\t\t\t\t\t\tconsole.log(result.stdout);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.color(\".\");\n\t\t\t\t\t\t_context.next = 7;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"status\", \"--porcelain\"]);\n\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tresult = _context.sent;\n\n\t\t\t\t\t\t// ok lets split stdout in newlines\n\t\t\t\t\t\titems = result.stdout.split('\\n');\n\t\t\t\t\t\tmodified = false;\n\t\t\t\t\t\ti = 0;\n\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tif (!(i < items.length)) {\n\t\t\t\t\t\t\t_context.next = 36;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titem = items[i];\n\t\t\t\t\t\tfile = item.slice(3);\n\n\t\t\t\t\t\tif (!(item.indexOf('??') == 0)) {\n\t\t\t\t\t\t\t_context.next = 21;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log((modified == true ? \"\" : \"\\n\") + 'A ' + file);\n\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"add\", file]);\n\n\t\t\t\t\tcase 18:\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t\t_context.next = 33;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 21:\n\t\t\t\t\t\tif (!(item.indexOf(' D') == 0)) {\n\t\t\t\t\t\t\t_context.next = 28;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log((modified ? \"\" : \"\\n\") + 'D ' + file);\n\t\t\t\t\t\t_context.next = 25;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"rm\", file]);\n\n\t\t\t\t\tcase 25:\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t\t_context.next = 33;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 28:\n\t\t\t\t\t\tif (!(item.indexOf(' U') == 0 || item.indexOf(' M') == 0)) {\n\t\t\t\t\t\t\t_context.next = 33;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log((modified ? \"\" : \"\\n\") + 'M ' + file);\n\t\t\t\t\t\t_context.next = 32;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"add\", file]);\n\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\tmodified = true;\n\n\t\t\t\t\tcase 33:\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t_context.next = 11;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 36:\n\t\t\t\t\t\tif (!modified) {\n\t\t\t\t\t\t\t_context.next = 46;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_context.next = 39;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"commit\", \"-m\", \"work\"]);\n\n\t\t\t\t\tcase 39:\n\t\t\t\t\t\tconsole.color('~br~Pushing: ');\n\t\t\t\t\t\t_context.next = 42;\n\t\t\t\t\t\treturn childPromise(\"git\", [\"push\", \"origin\"]);\n\n\t\t\t\t\tcase 42:\n\t\t\t\t\t\tresult = _context.sent;\n\n\t\t\t\t\t\tconsole.color(\"~bg~OK!\\n\");\n\t\t\t\t\t\t_context.next = 48;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 46:\n\t\t\t\t\t\t_context.next = 48;\n\t\t\t\t\t\treturn promisify.timeout(5000);\n\n\t\t\t\t\tcase 48:\n\t\t\t\t\tcase 'end':\n\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}, _callee, this);\n\t}));\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/gitsync.js\n// module id = 213\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/gitsync.js?");

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function () {\n\t// Basic set of mime types\n\n\tvar mimeTypes = {\n\t\thtm: \"text/html\",\n\t\thtml: \"text/html\",\n\t\tjs: \"application/javascript\",\n\t\tjpg: \"image/jpeg\",\n\t\tjpeg: \"image/jpeg\",\n\t\ttxt: \"text/plain\",\n\t\tcss: \"text/css\",\n\t\tico: \"image/x-icon\",\n\t\tpng: \"image/png\",\n\t\tgif: \"image/gif\"\n\t};\n\n\tvar regex = RegExp(\"\\\\.(\" + Object.keys(mimeTypes).join(\"|\") + \")$\");\n\n\tfunction mimeFromFile(name) {\n\t\tvar ext = name.match(regex);\n\t\treturn ext && mimeTypes[ext[1]] || \"text/plain\";\n\t}\n\n\tmimeFromFile.__trace__ = 3;\n\n\treturn mimeFromFile;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/mimefromfile.js\n// module id = 214\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/mimefromfile.js?");

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports, module) {\n\t// promisified node http api\n\n\tvar http = requireDreem('http');\n\tvar url = requireDreem('url');\n\n\texports.get = function nodehttp(httpurl) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (url && http) {\n\t\t\t\tvar myurl = url.parse(httpurl);\n\n\t\t\t\thttp.get({\n\t\t\t\t\thost: myurl.hostname,\n\t\t\t\t\tport: myurl.port,\n\t\t\t\t\tpath: myurl.path\n\t\t\t\t}, function (res) {\n\t\t\t\t\tvar data = '';\n\t\t\t\t\tres.on('data', function (buf) {\n\t\t\t\t\t\tdata += buf;\n\t\t\t\t\t});\n\t\t\t\t\tres.on('end', function () {\n\t\t\t\t\t\t// write it and restart it.\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t});\n\t\t\t\t\tres.on('error', function (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject('NOT ON SERVER SIDE');\n\t\t\t}\n\t\t});\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/nodehttp.js\n// module id = 215\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/nodehttp.js?");

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\t// internal, node websocket\n\n\tvar crypto = requireDreem('crypto');\n\tvar url = requireDreem('url');\n\tvar http = requireDreem('http');\n\n\tthis.atConstructor = function (req, socket, head) {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof req === 'string') {\n\t\t\t\tthis.initClient(req);\n\t\t\t} else {\n\t\t\t\tthis.initBare(req);\n\t\t\t}\n\t\t}\n\t\tif (arguments.length === 3) this.initServer(req, socket, head);\n\t};\n\n\t// events (looks just like browser websocket)\n\tthis.onmessage = function (event) {};\n\n\tthis.onclose = function () {};\n\n\tthis.onerror = function (error) {};\n\n\t// turn the socket into a socket that can send json with binary data\n\tthis.makeJSONSocket = function () {\n\n\t\tvar binary_buf = [];\n\t\tthis.onmessage = function (event) {\n\t\t\tvar message = event.data;\n\t\t\tif (message instanceof ArrayBuffer) {\n\t\t\t\tbinary_buf.push(message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar jsonmsg = JSON.parse(message);\n\t\t\tjsonmsg = defineDreem.structFromJSON(jsonmsg, binary_buf);\n\t\t\tbinary_buf.length = 0;\n\t\t\tthis.atJSONMessage(jsonmsg);\n\t\t};\n\n\t\tthis.sendJSON = function (msg) {\n\t\t\tvar binary = [];\n\t\t\tvar newmsg = defineDreem.makeJSONSafe(msg, binary);\n\t\t\tfor (var i = 0; i < binary.length; i++) {\n\t\t\t\tvar bin = binary[i];\n\t\t\t\tthis.send(bin.data.buffer); //data.buffer)\n\t\t\t}\n\t\t\tvar jsonmsg = JSON.stringify(newmsg);\n\t\t\tthis.send(jsonmsg);\n\t\t};\n\t};\n\n\t// us it as a communication pipe over any socket\n\tthis.initBare = function (socket) {\n\t\tthis.socket = socket;\n\t\tthis.initState();\n\t};\n\n\tthis.initClient = function (server_url) {\n\t\tthis.url = url.parse(server_url);\n\t\t// ok lets connect to a server\n\t\tvar host = this.url.hostname + ':' + this.url.port;\n\t\t// begin handshake\n\t\tvar key = new Buffer(13 + '-' + Date.now()).toString('base64');\n\t\tvar shasum = crypto.createHash('sha1');\n\t\tshasum.update(key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n\t\tthis.expectedServerKey = shasum.digest('base64');\n\n\t\t//var origin =  host + this.url.path\n\t\tvar opt = {\n\t\t\tport: this.url.port,\n\t\t\thost: this.url.hostname,\n\t\t\tpath: this.url.path,\n\t\t\theaders: {\n\t\t\t\t'connection': 'Upgrade',\n\t\t\t\t'upgrade': 'websocket',\n\t\t\t\t'pragma': 'no-cache',\n\t\t\t\t'host': host,\n\t\t\t\t'origin': 'http://' + host,\n\t\t\t\t'sec-websocket-version': 13,\n\t\t\t\t'sec-websocket-key': key\n\t\t\t}\n\t\t};\n\t\tvar req = http.request(opt);\n\n\t\treq.on('error', function (err) {\n\t\t\tconsole.log(\"WebSocket client \" + err);\n\t\t\tif (this.onError) this.onError(err);\n\t\t}.bind(this));\n\n\t\treq.once('response', function () {\n\t\t\tconsole.log('WebSocket unexpected response');\n\t\t}.bind(this));\n\n\t\treq.once('upgrade', function (res, socket, upgradehead) {\n\t\t\tif (res.headers['sec-websocket-accept'] != this.expectedServerKey) {\n\t\t\t\tconsole.log('WebSocket unexpected server key');\n\t\t\t}\n\t\t\tthis.socket = socket;\n\t\t\tthis.initState();\n\t\t\tif (this.onopen) this.onopen();\n\t\t}.bind(this));\n\n\t\treq.end();\n\t};\n\n\tthis.initServer = function (req, socket) {\n\t\tvar version = req.headers['sec-websocket-version'];\n\t\tif (version != 13) {\n\t\t\tconsole.log(\"Incompatible websocket version requested (need 13) \" + version);\n\t\t\treturn socket.destroy();\n\t\t}\n\n\t\tthis.socket = socket;\n\n\t\t// calc key\n\t\tvar key = req.headers['sec-websocket-key'];\n\t\tvar sha1 = crypto.createHash('sha1');\n\t\tsha1.update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\");\n\t\tvar ack = 'HTTP/1.1 101 Switching Protocols\\r\\n' + 'Upgrade: websocket\\r\\n' + 'Connection: Upgrade\\r\\n' + 'Sec-WebSocket-Accept: ' + sha1.digest('base64') + '\\r\\n\\r\\n';\n\n\t\tthis.socket.write(ack);\n\t\tthis.is_server = true;\n\t\tthis.initState();\n\t\tthis.first_queue = [];\n\t};\n\n\tthis.initState = function () {\n\n\t\tthis.max = 500000000; // maximum receive buffer size (10 megs)\n\t\tthis.header = new Buffer(14); // header\n\t\tthis.output = new Buffer(50000000); // output\n\t\tthis.state = this.opcode; // start in the opcode state\n\t\tthis.expected = 1; // the bytes expected for the next state\n\t\tthis.written = 0; // how much we have written in the output buffers\n\t\tthis.read = 0; // the bytes we've read\n\t\tthis.input = 0; // the input buffer received from the socket\n\t\tthis.maskoff = 0; // the offset in the mask\n\t\tthis.maskcount = 0; // mask counter\n\t\tthis.paylen = 0; // payload length\n\t\tthis.readyState = 1;\n\t\tthis.partial_msg = '';\n\t\tthis.partial_binary = [];\n\t\tthis.partial_binary_bytes = 0;\n\t\t// 10 second ping frames\n\t\tthis.pingframe = new Buffer(2);\n\t\tthis.pingframe[0] = 9 | 128;\n\t\tthis.pingframe[1] = 0;\n\n\t\tthis.pongframe = new Buffer(2);\n\t\tthis.pongframe[0] = 10 | 128;\n\t\tthis.pongframe[1] = 0;\n\n\t\tif (this.is_server) {\n\t\t\tthis.ping_interval = setInterval(function () {\n\t\t\t\tif (!this.socket) clearInterval(this.ping_interval);else this.socket.write(this.pingframe);\n\t\t\t}.bind(this), 10000);\n\t\t}\n\n\t\t// Main socket data loop, uses state function to parse\n\t\tthis.socket.on('data', function (data) {\n\t\t\tthis.input = data;\n\t\t\tthis.read = 0;\n\t\t\twhile (this.state()) {}\n\t\t}.bind(this));\n\n\t\tthis.socket.on('close', function () {\n\t\t\tthis.close();\n\t\t}.bind(this));\n\t};\n\n\tthis.error = function (t) {\n\t\tconsole.log(\"Error on websocket \" + t);\n\t\tthis.onerror(t);\n\t\tthis.close();\n\t};\n\n\tthis.send = function (data, ispartial, iscontinuation, domask) {\n\t\tif (this.first_queue) {\n\t\t\t// put a tiny gap between a server connect and first data send\n\t\t\tif (!this.first_queue.length) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tvar q = this.first_queue;\n\t\t\t\t\tthis.first_queue = undefined;\n\t\t\t\t\tfor (var i = 0; i < q.length; i++) {\n\t\t\t\t\t\tthis.send(q[i]);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this), 10);\n\t\t\t}\n\t\t\tthis.first_queue.push(data);\n\t\t\treturn;\n\t\t}\n\t\t//if(typeof data !== 'string' && !(data instanceof Buffer)){\n\t\t//\tvar msg = defineDreem.\n\t\t//\tdata = JSON.stringify(data)\n\t\t//}\n\t\tif (!this.socket) return;\n\t\tvar head;\n\t\tvar buf = new Buffer(data);\n\t\tif (buf.length < 126) {\n\t\t\thead = new Buffer(2);\n\t\t\thead[1] = buf.length;\n\t\t} else if (buf.length <= 65535) {\n\t\t\thead = new Buffer(4);\n\t\t\thead[1] = 126;\n\t\t\thead.writeUInt16BE(buf.length, 2);\n\t\t} else {\n\t\t\thead = new Buffer(10);\n\t\t\thead[1] = 127;\n\t\t\thead[2] = head[3] = head[4] = head[5] = 0;\n\t\t\thead.writeUInt32BE(buf.length, 6);\n\t\t}\n\t\tvar type = 1;\n\t\tif (data instanceof Buffer || data instanceof ArrayBuffer) type = 2;\n\t\tif (iscontinuation) type = 0;\n\t\thead[0] = (ispartial ? 0 : 128) | type;\n\n\t\tthis.socket.write(head);\n\n\t\t// lets mask the data\n\t\tif (domask) {\n\t\t\thead[1] |= 128;\n\t\t\tvar mask = new Buffer(4);\n\t\t\tmask[0] = 0x7f;\n\t\t\tmask[1] = 0x7f;\n\t\t\tmask[2] = 0x7f;\n\t\t\tmask[3] = 0x7f;\n\t\t\tthis.socket.write(mask);\n\t\t\tfor (var i = 0; i < buf.length; i++) {\n\t\t\t\tbuf[i] ^= mask[i & 3];\n\t\t\t}\n\t\t}\n\n\t\tthis.socket.write(buf);\n\t};\n\n\tthis.close = function () {\n\t\tif (this.socket) {\n\t\t\tthis.onclose();\n\t\t\tthis.socket.destroy();\n\t\t\tclearInterval(this.ping_interval);\n\t\t\tthis.readyState = 3;\n\t\t}\n\t\tthis.socket = undefined;\n\t};\n\n\tthis.head = function () {\n\t\tvar se = this.expected;\n\t\twhile (this.expected > 0 && this.read < this.input.length && this.written < this.header.length) {\n\t\t\tthis.header[this.written++] = this.input[this.read++], this.expected--;\n\t\t}\n\t\tif (this.written > this.header.length) return this.err(\"unexpected data in header\" + se + s.toString());\n\t\treturn this.expected != 0;\n\t};\n\tvar total = 0;\n\tthis.data = function () {\n\n\t\tif (this.masked) {\n\t\t\twhile (this.expected > 0 && this.read < this.input.length) {\n\t\t\t\tthis.output[this.written++] = this.input[this.read++] ^ this.header[this.maskoff + (this.maskcount++ & 3)];\n\t\t\t\tthis.expected--;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.written > this.output.length) console.log(\"NodeWebSocket output buffer overflow \" + this.written);\n\t\t\t//console.log(this.expected)////console.log(\"i iz here\",this.input.length - this.read, this.expected, this.written)\n\t\t\twhile (this.expected > 0 && this.read < this.input.length) {\n\t\t\t\tthis.output[this.written++] = this.input[this.read++];\n\t\t\t\tthis.expected--;\n\t\t\t}\n\t\t}\n\n\t\tif (this.expected) return false;\n\t\tif (this.binary) {\n\t\t\t// single message binary\n\t\t\tif (!this.partial && !this.partial_binary_bytes) {\n\t\t\t\tvar msg = new Uint8Array(this.written);\n\t\t\t\tfor (var i = 0; i < this.written; i++) {\n\t\t\t\t\tmsg[i] = this.output[i];\n\t\t\t\t}this.onmessage({ data: msg.buffer });\n\t\t\t} else {\n\t\t\t\t// multi message binary\n\t\t\t\tvar store = new Uint8Array(this.written);\n\t\t\t\tthis.partial_binary.push(store);\n\t\t\t\tfor (var i = 0; i < this.written; i++) {\n\t\t\t\t\tstore[i] = this.output[i];\n\t\t\t\t}\n\t\t\t\tthis.partial_binary_bytes += i;\n\t\t\t\tif (!this.partial) {\n\t\t\t\t\tvar msg = new Uint8Array(this.partial_binary_bytes);\n\t\t\t\t\tvar off = 0;\n\t\t\t\t\tfor (var i = 0; i < this.partial_binary.length; i++) {\n\t\t\t\t\t\tvar item = this.partial_binary[i];\n\t\t\t\t\t\tfor (var j = 0; j < item.length; j++, off++) {\n\t\t\t\t\t\t\tmsg[off] = item[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.partial_binary.length = 0;\n\t\t\t\t\tthis.partial_binary_bytes = 0;\n\t\t\t\t\tthis.onmessage({ data: msg.buffer });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!this.partial) {\n\t\t\tthis.onmessage({ data: this.partial_msg + this.output.toString('utf8', 0, this.written) });\n\t\t\tthis.partial_msg = '';\n\t\t} else {\n\t\t\tthis.partial_msg += this.output.toString('utf8', 0, this.written);\n\t\t}\n\t\tthis.written = 0;\n\t\tthis.expected = 1;\n\t\tthis.state = this.opcode;\n\t\treturn true;\n\t};\n\n\tthis.mask = function () {\n\t\tif (this.head()) return false;\n\t\tif (!this.paylen) {\n\t\t\tthis.expected = 1;\n\t\t\tthis.written = 0;\n\t\t\tthis.state = this.opcode;\n\t\t\treturn true;\n\t\t}\n\t\tthis.maskoff = this.written - 4;\n\t\tthis.written = this.maskcount = 0;\n\t\tthis.expected = this.paylen;\n\t\tif (this.paylen > this.max) return this.error(\"buffer size request too large \" + l + \" > \" + max);\n\t\tif (this.paylen > this.output.length) this.output = new Buffer(this.paylen);\n\t\tthis.state = this.data;\n\t\treturn true;\n\t};\n\n\tthis.len8 = function () {\n\t\tif (this.head()) return false;\n\t\tthis.paylen = this.header.readUInt32BE(this.written - 4);\n\t\tif (this.masked) {\n\t\t\tthis.expected = 4;\n\t\t\tthis.state = this.mask;\n\t\t} else {\n\t\t\tthis.expected = this.paylen;\n\t\t\tthis.state = this.data;\n\t\t\tthis.written = 0;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.len2 = function () {\n\t\tif (this.head()) return;\n\t\tthis.paylen = this.header.readUInt16BE(this.written - 2);\n\n\t\tif (this.masked) {\n\t\t\tthis.expected = 4;\n\t\t\tthis.state = this.mask;\n\t\t} else {\n\t\t\tthis.expected = this.paylen;\n\t\t\tthis.state = this.data;\n\t\t\tthis.written = 0;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tthis.len1 = function () {\n\t\tif (this.head()) return false;\n\t\t// set masked flag\n\n\t\tif (!(this.header[this.written - 1] & 128)) {\n\t\t\tthis.masked = false;\n\t\t} else {\n\t\t\tthis.masked = true;\n\t\t}\n\n\t\tvar type = this.header[this.written - 1] & 127;\n\n\t\tif (type < 126) {\n\t\t\tthis.paylen = type;\n\t\t\tif (!this.masked) {\n\t\t\t\tthis.expected = this.paylen;\n\t\t\t\tthis.state = this.data;\n\t\t\t\tthis.written = 0;\n\t\t\t} else {\n\t\t\t\tthis.expected = 4;\n\t\t\t\tthis.state = this.mask;\n\t\t\t}\n\t\t} else if (type == 126) {\n\t\t\tthis.expected = 2;\n\t\t\tthis.state = this.len2;\n\t\t} else if (type == 127) {\n\t\t\tthis.expected = 8;\n\t\t\tthis.state = this.len8;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.ping = function () {\n\t\tif (this.head()) return false;\n\t\tif (this.header[this.written - 1] & 128) {\n\t\t\tthis.expected = 4;\n\t\t\tthis.paylen = 0;\n\t\t\tthis.state = this.mask;\n\t\t\treturn true;\n\t\t}\n\t\tthis.expected = 1;\n\t\tthis.written = 0;\n\t\tthis.state = this.opcode;\n\t\tthis.socket.write(this.pongframe);\n\t\treturn true;\n\t};\n\n\tthis.pong = function () {\n\t\tif (this.head()) return false;\n\t\tif (this.header[this.written - 1] & 128) {\n\t\t\tthis.expected = 4;\n\t\t\tthis.paylen = 0;\n\t\t\tthis.state = this.mask;\n\t\t\treturn true;\n\t\t}\n\t\tthis.expected = 1;\n\t\tthis.written = 0;\n\t\tthis.state = this.opcode;\n\t\treturn true;\n\t};\n\n\tthis.opcode = function () {\n\t\tif (this.head()) return;\n\t\tvar frame = this.header[0] & 128;\n\t\tvar type = this.header[0] & 15;\n\t\tif (type === 0 || type == 1 || type == 2) {\n\t\t\tif (!frame) {\n\t\t\t\tthis.partial = true;\n\t\t\t} else {\n\t\t\t\tthis.partial = false;\n\t\t\t}\n\t\t\tthis.binary = type === 2 || type === 0 && this.last_type === 2;\n\t\t\tthis.expected = 1;\n\t\t\tthis.state = this.len1;\n\t\t\tif (type) this.last_type = type;\n\t\t\treturn true;\n\t\t}\n\t\tif (type == 8) return this.close();\n\t\tif (type == 9) {\n\t\t\t// ping frame\n\t\t\tthis.expected = 1;\n\t\t\tthis.state = this.ping;\n\t\t\treturn true;\n\t\t}\n\t\tif (type == 10) {\n\t\t\tthis.expected = 1;\n\t\t\tthis.state = this.pong;\n\t\t\treturn true;\n\t\t}\n\t\treturn this.error(\"opcode not supported \" + type);\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/nodewebsocket.js\n// module id = 216\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/nodewebsocket.js?");

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, Buffer) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\t// Teem server\n\n\tvar http = requireDreem('http');\n\tvar os = requireDreem('os');\n\tvar path = requireDreem('path');\n\tvar fs = requireDreem('fs');\n\tvar url = requireDreem('url');\n\tvar zlib = requireDreem('zlib');\n\n\tvar FileWatcher = requireDreem('./filewatcher');\n\tvar ExternalApps = requireDreem('./externalapps');\n\tvar NodeWebSocket = requireDreem('./nodewebsocket');\n\tvar mimeFromFile = requireDreem('./mimefromfile');\n\tvar CompositionServer = requireDreem('./compositionserver');\n\tvar XMLConverter = requireDreem('./xmlconverter');\n\n\tvar BusServer = requireDreem('$system/rpc/busserver');\n\n\t// Doccumentation\n\tthis.atConstructor = function (args) {\n\t\tthis.compositions = {};\n\t\tthis.binrpc_incoming = {};\n\t\tthis.binrpc_outgoing = {};\n\n\t\tthis.args = args;\n\t\tvar port = this.args['-port'] || process.env.PORT || 2000;\n\t\tvar iface = this.args['-iface'] || process.env.IP || '127.0.0.1';\n\n\t\tthis.cache_gzip = defineDreem.makeCacheDir('gzip');\n\n\t\tthis.server = http.createServer(this.request.bind(this));\n\t\tthis.server.listen(port, iface);\n\t\tthis.server.on('upgrade', this.upgrade.bind(this));\n\t\tthis.addresses = [];\n\t\tif (iface == '0.0.0.0') {\n\t\t\tvar ifaces = os.networkInterfaces();\n\t\t\tvar txt = '';\n\t\t\tObject.keys(ifaces).forEach(function (ifname) {\n\t\t\t\tvar alias = 0;\n\t\t\t\tifaces[ifname].forEach(function (iface) {\n\t\t\t\t\tif ('IPv4' !== iface.family) return;\n\t\t\t\t\tvar addr = 'http://' + iface.address + ':' + port + '/';\n\t\t\t\t\tif (!this.address) this.address = addr;\n\t\t\t\t\tthis.addresses.push('http://' + iface.address + ':' + port);\n\t\t\t\t\tif (iface.address == '127.0.0.1') {\n\t\t\t\t\t\tthis.addresses.push('http://localhost:' + port);\n\t\t\t\t\t}\n\t\t\t\t\ttxt += ' ~~on ~c~' + addr;\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\t\t\tconsole.color('Server running' + txt + '~~ Ready to go!\\n');\n\t\t} else {\n\t\t\tthis.address = 'http://' + iface + ':' + port + '/';\n\t\t\tthis.addresses.push('http://' + iface + ':' + port);\n\t\t\tif (iface == '127.0.0.1') {\n\t\t\t\tthis.addresses.push('http://localhost:' + port);\n\t\t\t}\n\n\t\t\tconsole.color('Server running on ~c~' + this.address + \"~~\\n\");\n\t\t}\n\t\tif (iface === '127.0.0.1') {\n\t\t\tObject.defineProperty(__webpack_require__(0), \"$localbound\", {\n\t\t\t\tvalue: true,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(__webpack_require__(0), \"$localbound\", {\n\t\t\t\tvalue: false,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t}\n\t\t// use the browser spawner\n\t\tvar browser = this.args['-browser'];\n\t\tif (browser && (!this.args['-delay'] || this.args['-count'] == 0)) {\n\t\t\tExternalApps.browser(this.address + (browser === true ? '' : browser), this.args['-devtools']);\n\t\t}\n\n\t\tthis.watcher = new FileWatcher();\n\t\tthis.watcher.atChange = function (ifile) {\n\t\t\t// ok lets get the original path\n\t\t\tvar file = ifile.replace(/\\\\/g, \"/\");\n\t\t\tfor (var key in defineDreem.paths) {\n\t\t\t\tvar match = defineDreem.expandVariables(__webpack_require__(0)['$' + key]);\n\t\t\t\tif (file.indexOf(match) === 0) {\n\t\t\t\t\tvar sliced = file.slice(match.length);\n\t\t\t\t\tif (sliced[0] !== '/') {\n\t\t\t\t\t\tsliced = '/' + sliced;\n\t\t\t\t\t}\n\t\t\t\t\tfile = '/' + key + sliced;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//file = file.slice(defineDreem.expandVariables(defineDreem.$root).length).replace(/\\\\/g, \"/\")\n\t\t\t// ok lets rip off our\n\t\t\tthis.broadcast({\n\t\t\t\ttype: 'filechange',\n\t\t\t\tfile: file\n\t\t\t});\n\t\t}.bind(this);\n\n\t\tthis.busserver = new BusServer();\n\n\t\tprocess.on('SIGHUP', function () {\n\t\t\tif (this.args['-close']) this.broadcast({ type: 'close' });\n\t\t\tif (this.args['-delay']) this.broadcast({ type: 'delay' });\n\t\t}.bind(this));\n\n\t\tif (this.args['-web']) this.getComposition(this.args['-web']);\n\t};\n\n\tthis.COMP_DIR = 'compositions';\n\n\tthis.broadcast = function (msg) {\n\t\tthis.busserver.broadcast(msg);\n\t\tfor (var k in this.compositions) {\n\t\t\tthis.compositions[k].busserver.broadcast(msg);\n\t\t}\n\t};\n\n\tthis.default_composition = null;\n\n\tthis.getComposition = function (file) {\n\t\t// lets find the composition either in defineDreem.COMPOSITIONS\n\t\tif (!this.compositions[file]) this.compositions[file] = new CompositionServer(this.args, file, this);\n\t\treturn this.compositions[file];\n\t};\n\n\tthis.upgrade = function (req, sock, head) {\n\n\t\tif (!defineDreem.$unsafeorigin && this.addresses.indexOf(req.headers.origin) === -1) {\n\t\t\tconsole.log(\"WRONG ORIGIN SOCKET CONNECTION RECEIVED\" + req.headers.origin + ' -> ' + this.address);\n\t\t\treturn false;\n\t\t}\n\t\t// lets connect the sockets to the app\n\t\tvar sock = new NodeWebSocket(req, sock, head);\n\t\tsock.url = req.url;\n\t\tvar mypath = req.url.slice(1);\n\t\tvar busserver;\n\t\tif (mypath) busserver = this.getComposition('$' + decodeURIComponent(mypath)).busserver;else busserver = this.busserver;\n\t\tbusserver.addWebSocket(sock, req, this.binrpc_outgoing, this.binrpc_incoming);\n\t};\n\n\t// maps an input path into our files\n\tthis.mapPath = function (input) {\n\t\tvar reqparts = input.split(/\\//);\n\t\t// lets do the filename lookup\n\t\tvar mypath = defineDreem.paths[reqparts[1]];\n\t\tif (!mypath) return false;\n\n\t\t// combine it\n\t\tvar file = path.join(defineDreem.expandVariables(mypath), reqparts.slice(2).join('/'));\n\t\treturn file;\n\t};\n\n\tthis.searchPath = function (basedir, match) {\n\t\t// lets recur our path\n\t\tvar dir = fs.readdirSync(defineDreem.expandVariables(basedir));\n\t\tfor (var i = 0; i < dir.length; i++) {\n\t\t\tvar subitem = basedir + '/' + dir[i];\n\t\t\tif (subitem.toLowerCase().indexOf(match) !== -1) return subitem;\n\t\t\tvar stat = fs.statSync(defineDreem.expandVariables(subitem));\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tvar file = this.searchPath(subitem, match);\n\t\t\t\tif (file) return file;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.request = function (req, res) {\n\t\t// lets delegate to\n\t\tvar host = req.headers.host;\n\t\tvar requrl = req.url;\n\n\t\tif (requrl.indexOf('/binrpc?') === 0) {\n\t\t\tvar where = decodeURIComponent(requrl.slice(8));\n\t\t\tif (req.method == 'POST') {\n\t\t\t\t// alright lets store this somewhere\n\t\t\t\tvar buf = new Uint8Array(req.headers['content-length']);\n\t\t\t\tvar off = 0;\n\n\t\t\t\treq.on('data', function (data) {\n\t\t\t\t\tfor (var i = 0; i < data.length; i++, off++) {\n\t\t\t\t\t\tbuf[off] = data[i];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treq.on('end', function () {\n\t\t\t\t\tthis.binrpc_incoming[where] = buf;\n\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\tres.end();\n\t\t\t\t}.bind(this));\n\t\t\t} else {\n\t\t\t\tif (!this.binrpc_outgoing[where]) {\n\t\t\t\t\tres.writeHead(404);\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar out = this.binrpc_outgoing[where];\n\t\t\t\tif (out.remoteAddress !== req.connection.remoteAddress) {\n\t\t\t\t\tres.writeHead(404);\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar buf = new Buffer(out.data);\n\t\t\t\tres.writeHead(200, { 'content-length': buf.length, 'content-type': 'application/octet-binary' });\n\t\t\t\tres.write(buf);\n\t\t\t\tthis.binrpc_outgoing[where] = undefined;\n\t\t\t\tres.end();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// otherwise handle as static file\n\t\tif (requrl.indexOf('/proxy?') === 0) {\n\t\t\t// lets connect a http request and forward it back!\n\t\t\tvar tgt_url = url.parse(decodeURIComponent(requrl.slice(7)));\n\t\t\tvar tgtpath = tgt_url.path;\n\t\t\tif (tgt_url.search) {\n\t\t\t\ttgtpath = tgtpath + tgt_url.search;\n\t\t\t}\n\t\t\tvar proxy_req = http.request({\n\t\t\t\thostname: tgt_url.hostname,\n\t\t\t\tpath: tgtpath,\n\t\t\t\theaders: {\n\t\t\t\t\taccept: req.headers.accept,\n\t\t\t\t\t'user-agent': req.headers['user-agent'],\n\t\t\t\t\t'accept-encoding': req.headers['accept-encoding'],\n\t\t\t\t\t'accept-language': req.headers['accept-language']\n\t\t\t\t}\n\t\t\t}, function (proxy_res) {\n\t\t\t\tres.writeHead(proxy_res.statusCode, proxy_res.headers);\n\t\t\t\tproxy_res.pipe(res);\n\t\t\t});\n\n\t\t\tproxy_req.end();\n\t\t\treturn;\n\t\t}\n\n\t\tif (requrl == '/favicon.ico') {\n\t\t\tres.writeHead(200);\n\t\t\tres.end();\n\t\t\treturn;\n\t\t}\n\n\t\t// block use of relative paths in the entire url.\n\t\tif (decodeURIComponent(requrl).indexOf('..') !== -1) {\n\t\t\tres.writeHead(404);\n\t\t\tres.end();\n\t\t\treturn;\n\t\t}\n\n\t\tvar reqquery = requrl.split('?');\n\n\t\t// ok if we are a /single fetch\n\t\tvar file = decodeURIComponent(this.mapPath(reqquery[0]));\n\n\t\tvar urlext = defineDreem.fileExt(reqquery[0]);\n\t\t// write .dre to .dre.js files\n\t\tif (urlext === 'dre') {\n\t\t\tvar dreurl = reqquery[0];\n\t\t\tvar filepath = defineDreem.expandVariables('$root' + dreurl);\n\t\t\tvar dre = fs.readFileSync(filepath);\n\t\t\tvar js = XMLConverter(dre);\n\t\t\t// TODO: warn for overwrites to changed file, e.g. check hash of file versus old version\n\t\t\tfs.writeFileSync(filepath + '.js', js);\n\t\t\tthis.watcher.watch(file);\n\t\t}\n\n\t\tif (file === false) {\n\t\t\t// file is a search\n\t\t\t// what are we looking for\n\t\t\t// a directory named x or file or anything\n\t\t\t// we will just 302 to it\n\t\t\tfor (var key in defineDreem.paths) {\n\t\t\t\tvar mypath = defineDreem.paths[key];\n\t\t\t\tvar fwdfile = this.searchPath(mypath, reqquery[0].slice(1));\n\t\t\t\tif (fwdfile) {\n\t\t\t\t\tvar urlpath = '/' + key + '/' + defineDreem.fileBase(fwdfile.slice(mypath.length));\n\t\t\t\t\tres.writeHead(307, { location: urlpath });\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.writeHead(404);\n\t\t\tres.end(\"File not found: \" + reqquery[0]);\n\t\t\treturn;\n\t\t}\n\n\t\tvar fileext = defineDreem.fileExt(file);\n\n\t\tif (!fileext || fileext === 'dre') {\n\t\t\tvar composition = this.getComposition('$' + decodeURIComponent(reqquery[0].slice(1)));\n\t\t\tif (composition) return composition.request(req, res);\n\t\t}\n\n\t\tfs.stat(file, function (err, stat) {\n\t\t\tif (err || !stat.isFile()) {\n\t\t\t\t// see if we can find the index.js, otherwise skip it\n\t\t\t\tfile = file.slice(0, file.lastIndexOf('.')) + '/index.js';\n\t\t\t\tfs.stat(file, function (err, stat) {\n\t\t\t\t\tif (err || !stat.isFile()) {\n\t\t\t\t\t\tres.writeHead(404);\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t\tconsole.color('~br~Error~y~ ' + file + '~~ File not found, returning 404\\n');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tprocessFile(stat);\n\t\t\t\t});\n\t\t\t} else processFile(stat);\n\t\t});\n\n\t\tvar processFile = function (stat) {\n\t\t\tvar header = {\n\t\t\t\t\"Connection\": \"Close\",\n\t\t\t\t\"Cache-control\": \"max-age=0\",\n\t\t\t\t\"Content-Type\": mimeFromFile(file),\n\t\t\t\t\"etag\": stat.mtime.getTime() + '_' + stat.size,\n\t\t\t\t\"mtime\": stat.mtime.getTime()\n\t\t\t};\n\t\t\tthis.watcher.watch(file);\n\t\t\tif (req.headers['if-none-match'] == header.etag) {\n\t\t\t\tres.writeHead(304, header);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// lets add a gzip cache\n\t\t\tvar type = header[\"Content-Type\"];\n\t\t\tif (type !== 'image/jpeg' && type !== 'image/png') {\n\t\t\t\t// see if we accept gzip\n\t\t\t\tif (req.headers['accept-encoding'] && req.headers['accept-encoding'].toLowerCase().indexOf('gzip') !== -1) {\n\t\t\t\t\t//header[\"Content-Type\"]+=\"; utf8\"\n\t\t\t\t\theader[\"Content-encoding\"] = \"gzip\";\n\t\t\t\t\theader[\"Transfer-Encoding\"] = \"gzip\";\n\t\t\t\t\tvar gzip_file = path.join(this.cache_gzip, requrl.replace(/\\//g, '_') + header.etag);\n\t\t\t\t\tfs.stat(gzip_file, function (err, stat) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t// make it\n\t\t\t\t\t\t\tfs.readFile(file, function (err, data) {\n\t\t\t\t\t\t\t\tzlib.gzip(data, function (err, compr) {\n\t\t\t\t\t\t\t\t\t//header[\"Content-length\"] = compr.length\n\t\t\t\t\t\t\t\t\t//console.log(compr.length)\n\t\t\t\t\t\t\t\t\tres.writeHead(200, header);\n\t\t\t\t\t\t\t\t\tres.write(compr);\n\t\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\t\tfs.writeFile(gzip_file, compr, function (err) {});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar stream = fs.createReadStream(gzip_file);\n\t\t\t\t\t\t\tres.writeHead(200, header);\n\t\t\t\t\t\t\tstream.pipe(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar stream = fs.createReadStream(file);\n\t\t\t\t\tres.writeHead(200, header);\n\t\t\t\t\tstream.pipe(res);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar stream = fs.createReadStream(file);\n\t\t\t\tres.writeHead(200, header);\n\t\t\t\tstream.pipe(res);\n\t\t\t}\n\t\t\t// ok so we get a filechange right?\n\t\t}.bind(this);\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(3).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/rootserver.js\n// module id = 217\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/rootserver.js?");

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\t// internal, RunMonitor class executes ourselves as a subprocess, receives the dependency file names\n\t// from the child process and manages restart/killing when files change\n\n\tvar FileWatcher = requireDreem('./filewatcher');\n\tvar ExternalApps = requireDreem('./externalapps');\n\tvar child_process = requireDreem('child_process');\n\n\tthis.atConstructor = function (args) {\n\n\t\tthis.args = args;\n\t\tthis.restart_count = 0;\n\n\t\tthis.watcher = new FileWatcher();\n\t\tthis.only_when_down = {};\n\n\t\tthis.watcher.atChange = function (file) {\n\t\t\t//if(args['-nodreem'] && file.indexOf('dreem.js') != -1) return\n\n\t\t\t// lets restart this.child\n\t\t\tif (this.child) {\n\t\t\t\tif (this.only_when_down[file]) return;\n\t\t\t\tconsole.color('~g~Got filechange: ~y~' + file + '~~ killing and restarting server\\n');\n\t\t\t\tthis.child.kill('SIGHUP');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (this.child) this.child.kill('SIGTERM');\n\t\t\t\t}.bind(this), 50);\n\t\t\t} else {\n\t\t\t\tconsole.color('~g~Got filechange: ~y~' + file + '~~ starting server\\n');\n\t\t\t\tthis.start();\n\t\t\t}\n\t\t}.bind(this);\n\t\tthis.start();\n\t};\n\n\t// When in infinite restart loop, wait atleast this long (ms)\n\tthis.restart_delay = 1000;\n\n\tthis.start = function () {\n\t\tvar subarg = process.argv.slice(1);\n\t\tsubarg.push('-nomoni');\n\t\tsubarg.push('-count');\n\t\tsubarg.push(this.restart_count++);\n\t\tsubarg.unshift('--harmony');\n\n\t\tvar stdio = [process.stdin, process.stdout, 'pipe'];\n\t\tthis.was_exception = false;\n\t\tthis.watcher.watch(subarg[1]);\n\n\t\tthis.child = child_process.spawn(process.execPath, subarg, {\n\t\t\tstdio: stdio\n\t\t});\n\n\t\tthis.child.stderr.on('data', function (buf) {\n\t\t\t// we haz exception, wait for filechange\n\t\t\tvar data = buf.toString();\n\t\t\tif (data.indexOf('\\x0F') != -1) {\n\t\t\t\tvar files = data.split('\\x0F');\n\t\t\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\t\t\tvar file = files[i].replace(/\\n/, '');\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tif (file.charAt(0) == '!') {\n\t\t\t\t\t\t\tfile = file.slice(1);\n\t\t\t\t\t\t\tthis.only_when_down[file] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.watcher.watch(file);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.was_exception = data.indexOf('\\0xE') != -1 ? false : true;\n\t\t\tvar m = data.match(/(\\/[^\\:]+)\\:(\\d+)\\n/);\n\t\t\tvar ln = data.split(/\\n/);\n\t\t\tif (m) {\n\t\t\t\t// open error in code editor\n\t\t\t\tif (this.args['-notify']) ExternalApps.notify(ln[1] + '\\n' + ln[2], ln[3]);\n\t\t\t\tif (this.args['-edit']) ExternalApps.editor(m[1], m[2]);\n\t\t\t}\n\t\t\tprocess.stdout.write(data);\n\t\t}.bind(this));\n\n\t\tthis.child.on('close', function (code) {\n\t\t\t// lets have a start per second\n\t\t\tthis.child = undefined;\n\t\t\tif (this.was_exception && !this.args['-restart']) return console.log(\"Exception detected, not restarting\");\n\t\t\tif (Date.now() - this.last >= this.restart_delay) {\n\t\t\t\tthis.start();\n\t\t\t} else {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis.start();\n\t\t\t\t}.bind(this), this.restart_delay);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/runmonitor.js\n// module id = 218\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/runmonitor.js?");

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// converts .dre xml into dreemgl-compliant javascript. Supports methods, attributes, attribute declarations and handlers.\ndefineDreem(function (requireDreem) {\n\tvar fs = requireDreem('fs');\n\tvar HTMLParser = requireDreem('$system/parse/htmlparser');\n\n\tvar makeSpace = function makeSpace(indent) {\n\t\tvar out = '';\n\t\tfor (var i = 0; i < indent; i++) {\n\t\t\tout += '\\t';\n\t\t}\n\t\treturn out;\n\t};\n\t// filter out methods attributes and handlers\n\tvar filterSpecial = function filterSpecial(child) {\n\t\tvar name = child.tag;\n\t\treturn name.indexOf('$') !== 0 && !filterMethods(child) && !filterAttributes(child) && !filterHandlers(child);\n\t};\n\tvar filterMethods = function filterMethods(child) {\n\t\treturn child.tag === 'method';\n\t};\n\t// compile methods to JS function bodies\n\tvar toMethod = function toMethod(child) {\n\t\tvar body = HTMLParser.reserialize(child.child[0]);\n\t\tvar args = child.attr.args || '';\n\t\tvar fn = 'function(' + args + ') {' + body + '}';\n\t\treturn { attr: child.attr, body: fn };\n\t};\n\tvar filterAttributes = function filterAttributes(child) {\n\t\treturn child.tag === 'attribute';\n\t};\n\tvar filterHandlers = function filterHandlers(child) {\n\t\treturn child.tag === 'handler';\n\t};\n\tvar capitalize = function capitalize(string) {\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\n\t};\n\t// like JSON.stringify, but preserves function( and Config( declarations\n\tvar objToString = function objToString(obj) {\n\t\tvar out = '{';\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar val = obj[key];\n\n\t\t\tout += key + ': ';\n\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n\t\t\t\tout += objToString(val);\n\t\t\t} else if (val.indexOf('function(') === 0 || val.indexOf('Config({') === 0) {\n\t\t\t\t// don't wrap Config or function(...) in quotes\n\t\t\t\tout += val;\n\t\t\t} else {\n\t\t\t\t// fall back to string values\n\t\t\t\tout += '\"' + val + '\"';\n\t\t\t}\n\t\t\tif (i < keys.length - 1) out += ', ';\n\t\t}\n\t\tout += '}';\n\t\treturn out;\n\t};\n\n\t// convert a parsed tag and its children to nested function calls,\n\t// accumulating tag names\n\tvar tagToFunc = function tagToFunc(child, indent, tagnames) {\n\t\t// console.log('tagToFunc', indent, child, child.attr)\n\t\tvar outputthis = filterSpecial(child);\n\t\tvar out = '';\n\t\tvar attr = child.attr || {};\n\t\tvar i;\n\n\t\t// add methods to attributes hash\n\t\tvar methods = child.child && child.child.filter(filterMethods).map(toMethod);\n\t\tif (methods) {\n\t\t\tfor (i = 0; i < methods.length; i++) {\n\t\t\t\tvar method = methods[i];\n\t\t\t\tattr[method.attr.name] = method.body;\n\t\t\t\t// console.log('found method:', method)\n\t\t\t}\n\t\t}\n\n\t\t// add attribute declarations\n\t\tvar attributes = child.child && child.child.filter(filterAttributes);\n\t\tif (attributes && attributes.length) {\n\t\t\tif (!attr.attributes) {\n\t\t\t\tattr.attributes = {};\n\t\t\t}\n\t\t\tfor (i = 0; i < attributes.length; i++) {\n\t\t\t\tvar attribute = attributes[i].attr;\n\t\t\t\tvar val = attribute.value;\n\t\t\t\tvar type = capitalize(attribute.type);\n\t\t\t\tif (type === 'String') {\n\t\t\t\t\tval = '\"' + val + '\"';\n\t\t\t\t}\n\t\t\t\t// console.log('found attribute:', attribute, val, type)\n\t\t\t\tattr.attributes[attribute.name] = 'Config({type: ' + type + ', value: ' + val + '})';\n\t\t\t}\n\t\t}\n\n\t\t// add handlers\n\t\tvar handlers = child.child && child.child.filter(filterHandlers).map(toMethod);\n\t\tif (handlers && handlers.length) {\n\t\t\tif (!attr.attributes) {\n\t\t\t\tattr.attributes = {};\n\t\t\t}\n\t\t\tvar handlersByEvent = {};\n\t\t\t// write out listener functions for each event\n\t\t\tfor (i = 0; i < handlers.length; i++) {\n\t\t\t\tvar handler = handlers[i];\n\t\t\t\t// chop off leading 'on'\n\t\t\t\tvar attrname = handler.attr.event.substring(2);\n\t\t\t\t// register listener for that event\n\t\t\t\tif (!handlersByEvent[attrname]) handlersByEvent[attrname] = [];\n\t\t\t\thandlersByEvent[attrname].push(handler.body);\n\t\t\t}\n\t\t\tfor (var eventname in handlersByEvent) {\n\t\t\t\tvar listeners = handlersByEvent[eventname].join(', ');\n\t\t\t\tattr.attributes[eventname] = 'Config({listeners: [' + listeners + ']})';\n\t\t\t}\n\t\t}\n\n\t\tvar children = child.child && child.child.filter(filterSpecial);\n\t\tvar hasChildren = children && children.length;\n\t\tif (outputthis) {\n\t\t\tout += makeSpace(indent);\n\t\t\t// name\n\t\t\tvar tagname = child.tag;\n\t\t\tif (!tagnames[tagname]) tagnames[tagname] = 0;\n\t\t\ttagnames[tagname]++;\n\t\t\tout += tagname + '(';\n\t\t\t// attributes\n\t\t\tout += objToString(attr);\n\t\t\tif (hasChildren) out += ',\\n';\n\t\t}\n\t\tif (hasChildren) {\n\t\t\t// children\n\t\t\tindent++;\n\t\t\tfor (i = 0; i < children.length; i++) {\n\t\t\t\tvar newchild = children[i];\n\t\t\t\tout += tagToFunc(newchild, indent, tagnames);\n\t\t\t\tif (i !== children.length - 1) {\n\t\t\t\t\tout += ',';\n\t\t\t\t}\n\t\t\t\tout += '\\n';\n\t\t\t}\n\t\t\tindent--;\n\t\t}\n\t\tif (outputthis) {\n\t\t\tif (hasChildren) out += makeSpace(indent);\n\t\t\tout += ')';\n\t\t}\n\t\treturn out;\n\t};\n\n\t// look for includes by name across server paths\n\tvar findIncludes = function findIncludes(tagnames) {\n\t\tvar tagbypath = {};\n\t\tfor (var i = 0; i < tagnames.length; i++) {\n\t\t\tvar tagname = tagnames[i];\n\t\t\tfor (var key in defineDreem.paths) {\n\t\t\t\tvar filepath = defineDreem.expandVariables('$' + key) + '/' + tagname + '.js';\n\t\t\t\t// look for tagname file in expanded path\n\t\t\t\tif (fs.existsSync(filepath)) {\n\t\t\t\t\t// add to the list of tags at that path\n\t\t\t\t\tif (!tagbypath[key]) {\n\t\t\t\t\t\ttagbypath[key] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttagbypath[key].push(tagname);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// flatten to a list of path declarations and includes\n\t\tvar includes = ['require'];\n\t\tfor (var key in tagbypath) {\n\t\t\tincludes.push('$' + key + '$');\n\t\t\tincludes = includes.concat(tagbypath[key]);\n\t\t}\n\t\treturn includes;\n\t};\n\n\treturn function (dre) {\n\t\t// console.log('parsing .dre', dre);\n\t\tvar parsed = HTMLParser(dre);\n\t\t// console.log('parsed', JSON.stringify(parsed.node));\n\t\tvar tagnames = {};\n\t\tvar body = tagToFunc(parsed.node, 2, tagnames);\n\t\t// find includes based on tags found\n\t\tvar includes = findIncludes(Object.keys(tagnames));\n\t\t// console.log('includes', includes)\n\t\tvar out = 'defineDreem.class(\\'$server/composition\\', function(' + includes.join(', ') + '){\\n';\n\t\tout += '\\tthis.render = function() {\\n';\n\t\tout += '\\t\\treturn [\\n';\n\t\tout += body;\n\t\tout += '\\t\\t];\\n\\t}\\n});';\n\t\t// console.log('result', out, includes)\n\t\treturn out;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/server/xmlconverter.js\n// module id = 219\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/server/xmlconverter.js?");

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\n\texports.hue2rgb = function hue2rgb(p, q, t) {\n\t\tif (t < 0.) {\n\t\t\tt += 1.;\n\t\t} else {\n\t\t\tif (t > 1.) t -= 1.;\n\t\t}\n\n\t\tif (t < 1. / 6.) return p + (q - p) * 6. * t;\n\t\tif (t < 1. / 2.) return q;\n\t\tif (t < 2. / 3.) return p + (q - p) * (2. / 3. - t) * 6.;\n\t\treturn p;\n\t};\n\n\texports.hsla = function (hlsa) {\n\n\t\tvar h = hlsa.x;\n\t\tvar s = hlsa.y;\n\t\tvar l = hlsa.z;\n\n\t\tvar r = 0.0;\n\t\tvar g = 0.0;\n\t\tvar b = 0.0;\n\n\t\tif (s == 0.0) {\n\t\t\tr = g = b = l; // achromatic\n\t\t} else {\n\n\t\t\tvar q = l < 0.5 ? l * (1.0 + s) : l + s - l * s;\n\t\t\tvar p = 2.0 * l - q;\n\t\t\tr = this.hue2rgb(p, q, h + 1. / 3.);\n\t\t\tg = this.hue2rgb(p, q, h);\n\t\t\tb = this.hue2rgb(p, q, h - 1. / 3.);\n\t\t}\n\n\t\treturn vec4(r, g, b, hlsa.w);\n\t};\n\n\texports.hsva = function (hsva) {\n\n\t\tvar h = hsva.x * 360;\n\t\tvar s = hsva.y;\n\t\tvar v = hsva.z;\n\t\tvar r = 0.0;\n\t\tvar g = 0.0;\n\t\tvar b = 0.0;\n\t\tif (h < 0.) h += 360.;\n\t\tif (s == 0.0) {\n\t\t\tr = g = b = v; // achromatic\n\t\t} else {\n\t\t\tvar t1 = v;\n\t\t\tvar t2 = (1. - s) * v;\n\t\t\tvar t3 = (t1 - t2) * mod(h, 60.) / 60.;\n\t\t\tif (h == 360.) h = 0.;\n\t\t\tif (h < 60.) {\n\t\t\t\tr = t1;b = t2;g = t2 + t3;\n\t\t\t} else if (h < 120.) {\n\t\t\t\tg = t1;b = t2;r = t1 - t3;\n\t\t\t} else if (h < 180.) {\n\t\t\t\tg = t1;r = t2;b = t2 + t3;\n\t\t\t} else if (h < 240.) {\n\t\t\t\tb = t1;r = t2;g = t1 - t3;\n\t\t\t} else if (h < 300.) {\n\t\t\t\tb = t1;g = t2;r = t2 + t3;\n\t\t\t} else if (h < 360.) {\n\t\t\t\tr = t1;g = t2;b = t1 - t3;\n\t\t\t} else {\n\t\t\t\tr = 0.;g = 0.;b = 0.;\n\t\t\t}\n\t\t}\n\n\t\treturn vec4(r, g, b, hsva.w);\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/colorlib.js\n// module id = 220\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/colorlib.js?");

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\texports.noise = requireDreem('./noiselib');\n\texports.pal = requireDreem('./palettelib');\n\texports.math = requireDreem('./mathlib');\n\n\texports.kali2d = function (pos, steps, space) {\n\n\t\tvar v = pos;\n\t\tfor (var i = 0; i < 130; i++) {\n\t\t\tif (i > int(steps)) break;\n\t\t\tv = abs(v);\n\n\t\t\tv = v / (v.x * v.x + v.y * v.y) + space;\n\t\t}\n\t\treturn v;\n\t};\n\n\texports.fractzoom = function (pos, time, zoom) {\n\t\tvar dt = sin(80 / 60 * time * math.PI);\n\t\tvar mypos = pos.xy * .01 * sin(0.04 * time + 0.05 * dt);\n\t\tvar dx = 0.01 * sin(0.01 * time);\n\t\tvar dy = -0.01 * sin(0.01 * time);\n\t\tmypos = math.rotate2d(mypos, 0.1 * time);\n\t\tvar kali1 = kali2d(mypos + vec2(0.0001 * time), 30, vec2(-0.8280193310201044, -0.858019331020104 - dx));\n\t\t//var kali2 =  kali2d(mypos+vec2(0.0001*time), 40, vec2(-0.8280193310201044,-0.858019331020104-dy))\n\t\t//var c1 =vec4(d.y, 0. ,sin(0.1*time)*6*kali2.y, 1.)\n\t\tvar c1 = pal.pal2(kali1.y + dt);\n\t\t//var c2 = pal.pal2(kali2.y+dt)\n\t\t//return mix(c1,c2,sin(length(pos-.5)+time))\n\t\tvar mp = highdefblirpy(pos.xy * 0.05 * sin(0.1 * time), time, 1.);\n\t\treturn mix(pal.pal4(mp.r + 0.1 * time), c1, c1.b);\n\t};\n\n\texports.highdefblirpy = function (pos, time, zoom) {\n\t\tvar xs = 20. * zoom;\n\t\tvar ys = 22. * zoom;\n\t\tvar x = pos.x * xs + 0.1 * time;\n\t\tvar y = pos.y * ys;\n\t\tvar ns = noise.snoise3(x, y, 0.1 * time);\n\t\treturn pal.pal0(ns) + 0.5 * (vec4(1.) * sin(-8 * time + (length(pos - .5) - .01 * ns + .0001 * noise.snoise3(x * 10, y * 10, 0.1 * time)) * 2400));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/demolib.js\n// module id = 221\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/demolib.js?");

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\t// Use material-capture \"lit sphere\" texture to approximate material behaviour for a surface.\n\texports.matcap = function (eye, normal) {\n\t\tvar r = reflect(eye, normal);\n\t\treturn r.xy;\n\t\tvar m = 2. * sqrt(pow(r.x, 2.) + pow(r.y, 2.) + pow(r.z + 1., 2.));\n\t\tvar vN = r.xy / m + .5;\n\t\treturn vN;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/materiallib.js\n// module id = 222\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/materiallib.js?");

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports) {\n\tthis.RAD = '1.';\n\tthis.DEG = '0.017453292519943295';\n\tthis.PI = '3.141592653589793';\n\tthis.PI2 = '6.283185307179586';\n\tthis.E = '2.718281828459045';\n\tthis.LN2 = '0.6931471805599453';\n\tthis.LN10 = '2.302585092994046';\n\tthis.LOG2E = '1.4426950408889634';\n\tthis.LOG10E = '0.4342944819032518';\n\tthis.SQRT_1_2 = '0.70710678118654757';\n\tthis.SQRT2 = '1.4142135623730951';\n\n\texports.rotate2d = function (v, angle) {\n\t\tvar cosa = cos(angle);\n\t\tvar sina = sin(angle);\n\t\treturn vec2(v.x * cosa - v.y * sina, v.x * sina + v.y * cosa);\n\t};\n\n\texports.bezier2d = function (p0, p1, p2, p3, t) {\n\t\tvar t2 = t * t;\n\t\tvar t3 = t2 * t;\n\t\tvar it = 1 - t;\n\t\tvar it2 = it * it;\n\t\tvar it3 = it2 * it;\n\t\t//\treturn p0 + t*vec2(1,0);\n\t\tvar pos = p0 * it3 + p1 * 3 * t * it2 + p2 * 3 * it * t2 + p3 * t3;\n\t\tvar deriv = -3.0 * p0 * it2 + 3 * p1 * (it2 - 2 * t * it) + 3 * p2 * (-t2 + it * t * 2) + 3 * p3 * t2;\n\t\tderiv = normalize(deriv);\n\t\treturn vec4(pos.x, pos.y, deriv.x, deriv.y);\n\t};\n\n\texports.odd = function (f) {\n\t\tif (mod(f, 2.0) == 0.0) return true;else return false;\n\t};\n\n\texports.even = function (f) {\n\t\tif (mod(f, 2.0) == 0.0) return false;else return true;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/mathlib.js\n// module id = 223\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/mathlib.js?");

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// inspired by Seriously awesome GLSL noise functions.  Stefan Gustavson, Ian McEwan Ashima Arts\n\ndefineDreem(function (requireDreem, exports) {\n\texports.permute1 = function (x) {\n\t\treturn mod((34.0 * x + 1.0) * x, 289.0);\n\t};\n\texports.permute3 = function (x) {\n\t\treturn mod((34.0 * x + 1.0) * x, 289.0);\n\t};\n\texports.permute4 = function (x) {\n\t\treturn mod((34.0 * x + 1.0) * x, 289.0);\n\t};\n\texports.isqrtT1 = function (r) {\n\t\treturn 1.79284291400159 - 0.85373472095314 * r;\n\t};\n\texports.isqrtT4 = function (r) {\n\t\treturn vec4(1.79284291400159 - 0.85373472095314 * r);\n\t};\n\n\texports.snoise2 = function (x, y) {\n\t\treturn snoise2v(vec2(x, y, z));\n\t};\n\n\texports.cheapnoise = function (inp) {\n\t\treturn fract(sin(dot(inp.xy, vec2(12.9898, 78.233))) * 43758.5453);\n\t};\n\n\texports.noise2d = exports.s2d = exports.snoise2v = function (v) {\n\t\tvar C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\n\t\tvar i = floor(v + dot(v, C.yy));\n\t\tvar x0 = v - i + dot(i, C.xx);\n\n\t\tvar i1 = x0.x > x0.y ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n\t\tvar x12 = x0.xyxy + C.xxzz;\n\t\tx12.xy -= i1;\n\n\t\ti = mod(i, 289.0); // Avoid truncation effects in permutation\n\t\tvar p = permute3(permute3(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));\n\n\t\tvar m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);\n\t\tm = m * m;\n\t\tm = m * m;\n\n\t\tvar x = 2.0 * fract(p * C.www) - 1.0;\n\t\tvar h = abs(x) - 0.5;\n\t\tvar ox = floor(x + 0.5);\n\t\tvar a0 = x - ox;\n\n\t\tm *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);\n\t\tvar g = vec3();\n\t\tg.x = a0.x * x0.x + h.x * x0.y;\n\t\tg.yz = a0.yz * x12.xz + h.yz * x12.yw;\n\t\treturn 130.0 * dot(m, g);\n\t};\n\n\texports.snoise3 = function (x, y, z) {\n\t\treturn snoise3v(vec3(x, y, z));\n\t};\n\texports.noise3d = exports.snoise3v = function (v) {\n\t\tvar C = vec2(1.0 / 6.0, 1.0 / 3.0);\n\t\tvar D = vec4(0.0, 0.5, 1.0, 2.0);\n\n\t\t// First corner\n\t\tvar i = floor(v + dot(v, C.yyy));\n\t\tvar x0 = v - i + dot(i, C.xxx);\n\t\tvar g = step(x0.yzx, x0.xyz);\n\t\tvar l = 1.0 - g;\n\t\tvar i1 = min(g.xyz, l.zxy);\n\t\tvar i2 = max(g.xyz, l.zxy);\n\t\tvar x1 = x0 - i1 + 1.0 * C.xxx;\n\t\tvar x2 = x0 - i2 + 2.0 * C.xxx;\n\t\tvar x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t\t// Permutations\n\t\ti = mod(i, 289.0);\n\t\tvar p = permute4(permute4(permute4(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\n\n\t\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\t\tvar n_ = 1.0 / 7.0;\n\t\tvar ns = n_ * D.wyz - D.xzx;\n\t\tvar j = p - 49.0 * floor(p * ns.z * ns.z);\n\t\tvar x_ = floor(j * ns.z);\n\t\tvar y_ = floor(j - 7.0 * x_);\n\t\tvar x = x_ * ns.x + ns.yyyy;\n\t\tvar y = y_ * ns.x + ns.yyyy;\n\t\tvar h = 1.0 - abs(x) - abs(y);\n\t\tvar b0 = vec4(x.xy, y.xy);\n\t\tvar b1 = vec4(x.zw, y.zw);\n\t\tvar s0 = floor(b0) * 2.0 + 1.0;\n\t\tvar s1 = floor(b1) * 2.0 + 1.0;\n\t\tvar sh = -step(h, vec4(0.0));\n\t\tvar a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\t\tvar a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\t\tvar p0 = vec3(a0.xy, h.x);\n\t\tvar p1 = vec3(a0.zw, h.y);\n\t\tvar p2 = vec3(a1.xy, h.z);\n\t\tvar p3 = vec3(a1.zw, h.w);\n\n\t\t//Normalise gradients\n\t\tvar norm = isqrtT4(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\n\t\tp0 *= norm.x;\n\t\tp1 *= norm.y;\n\t\tp2 *= norm.z;\n\t\tp3 *= norm.w;\n\n\t\t// Mix final noise value\n\t\tvar m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\n\t\tm = m * m;\n\t\treturn 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\n\t};\n\texports.snoise4_g = function (j, ip) {\n\t\tvar p = vec4();\n\t\tp.xyz = floor(fract(vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n\t\tp.w = 1.5 - dot(abs(p.xyz), vec3(1.0, 1.0, 1.0));\n\t\tvar s = vec4(lessThan(p, vec4(0.0)));\n\t\tp.xyz = p.xyz + (s.xyz * 2.0 - 1.0) * s.www;\n\t\treturn p;\n\t};\n\texports.snoise4 = function (x, y, z, w) {\n\t\treturn snoise4v(vec4(x, y, z, w));\n\t};\n\texports.snoise4v = function (v) {\n\n\t\tvar C = vec4(0.138196601125011, 0.276393202250021, 0.414589803375032, -0.447213595499958);\n\t\t// First corner\n\t\tvar i = floor(v + dot(v, vec4(0.309016994374947451)));\n\t\tvar x0 = v - i + dot(i, C.xxxx);\n\t\tvar i0 = vec4();\n\t\tvar isX = step(x0.yzw, x0.xxx);\n\t\tvar isYZ = step(x0.zww, x0.yyz);\n\t\ti0.x = isX.x + isX.y + isX.z;\n\t\ti0.yzw = 1.0 - isX;\n\t\ti0.y += isYZ.x + isYZ.y;\n\t\ti0.zw += 1.0 - isYZ.xy;\n\t\ti0.z += isYZ.z;\n\t\ti0.w += 1.0 - isYZ.z;\n\t\tvar i3 = clamp(i0, 0.0, 1.0);\n\t\tvar i2 = clamp(i0 - 1.0, 0.0, 1.0);\n\t\tvar i1 = clamp(i0 - 2.0, 0.0, 1.0);\n\t\tvar x1 = x0 - i1 + C.xxxx;\n\t\tvar x2 = x0 - i2 + C.yyyy;\n\t\tvar x3 = x0 - i3 + C.zzzz;\n\t\tvar x4 = x0 + C.wwww;\n\t\t// Permutations\n\t\ti = mod(i, 289.0);\n\t\tvar j0 = permute1(permute1(permute1(permute1(i.w) + i.z) + i.y) + i.x);\n\t\tvar j1 = permute4(permute4(permute4(permute4(i.w + vec4(i1.w, i2.w, i3.w, 1.0)) + i.z + vec4(i1.z, i2.z, i3.z, 1.0)) + i.y + vec4(i1.y, i2.y, i3.y, 1.0)) + i.x + vec4(i1.x, i2.x, i3.x, 1.0));\n\t\t// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n\t\t// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n\t\tvar ip = vec4(1.0 / 294.0, 1.0 / 49.0, 1.0 / 7.0, 0.0);\n\t\tvar p0 = snoise4_g(j0, ip);\n\t\tvar p1 = snoise4_g(j1.x, ip);\n\t\tvar p2 = snoise4_g(j1.y, ip);\n\t\tvar p3 = snoise4_g(j1.z, ip);\n\t\tvar p4 = snoise4_g(j1.w, ip);\n\t\t// Normalise gradients\n\t\tvar nr = isqrtT4(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\n\t\tp0 *= nr.x;\n\t\tp1 *= nr.y;\n\t\tp2 *= nr.z;\n\t\tp3 *= nr.w;\n\t\tp4 *= isqrtT1(dot(p4, p4));\n\t\t// Mix contributions from the five corners\n\t\tvar m0 = max(0.6 - vec3(dot(x0, x0), dot(x1, x1), dot(x2, x2)), 0.0);\n\t\tvar m1 = max(0.6 - vec2(dot(x3, x3), dot(x4, x4)), 0.0);\n\t\tm0 = m0 * m0;\n\t\tm1 = m1 * m1;\n\n\t\treturn 49.0 * (dot(m0 * m0, vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2))) + dot(m1 * m1, vec2(dot(p3, x3), dot(p4, x4))));\n\t};\n\texports.cell2v = function (v) {\n\t\treturn cell3v(vec3(v.x, v.y, 0));\n\t};\n\texports.cell3v = function (P) {\n\t\tvar K = 0.142857142857; // 1/7\n\t\tvar Ko = 0.428571428571; // 1/2-K/2\n\t\tvar K2 = 0.020408163265306; // 1/(7*7)\n\t\tvar Kz = 0.166666666667; // 1/6\n\t\tvar Kzo = 0.416666666667; // 1/2-1/6*2\n\t\tvar ji = 0.8; // smaller jitter gives less errors in F2\n\t\tvar Pi = mod(floor(P), 289.0);\n\t\tvar Pf = fract(P);\n\t\tvar Pfx = Pf.x + vec4(0.0, -1.0, 0.0, -1.0);\n\t\tvar Pfy = Pf.y + vec4(0.0, 0.0, -1.0, -1.0);\n\t\tvar p = permute4(Pi.x + vec4(0.0, 1.0, 0.0, 1.0));\n\t\tp = permute4(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0));\n\t\tvar p1 = permute4(p + Pi.z); // z+0\n\t\tvar p2 = permute4(p + Pi.z + vec4(1.0)); // z+1\n\t\tvar ox1 = fract(p1 * K) - Ko;\n\t\tvar oy1 = mod(floor(p1 * K), 7.0) * K - Ko;\n\t\tvar oz1 = floor(p1 * K2) * Kz - Kzo; // p1 < 289 guaranteed\n\t\tvar ox2 = fract(p2 * K) - Ko;\n\t\tvar oy2 = mod(floor(p2 * K), 7.0) * K - Ko;\n\t\tvar oz2 = floor(p2 * K2) * Kz - Kzo;\n\t\tvar dx1 = Pfx + ji * ox1;\n\t\tvar dy1 = Pfy + ji * oy1;\n\t\tvar dz1 = Pf.z + ji * oz1;\n\t\tvar dx2 = Pfx + ji * ox2;\n\t\tvar dy2 = Pfy + ji * oy2;\n\t\tvar dz2 = Pf.z - 1.0 + ji * oz2;\n\t\tvar d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1; // z+0\n\t\tvar d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2; // z+1\n\n\t\tvar d = min(d1, d2); // F1 is now in d\n\t\td2 = max(d1, d2); // Make sure we keep all candidates for F2\n\t\td.xy = d.x < d.y ? d.xy : d.yx; // Swap smallest to d.x\n\t\td.xz = d.x < d.z ? d.xz : d.zx;\n\t\td.xw = d.x < d.w ? d.xw : d.wx; // F1 is now in d.x\n\t\td.yzw = min(d.yzw, d2.yzw); // F2 now not in d2.yzw\n\t\td.y = min(d.y, d.z); // nor in d.z\n\t\td.y = min(d.y, d.w); // nor in d.w\n\t\td.y = min(d.y, d2.x); // F2 is now in d.y\n\t\treturn sqrt(d.xy); // F1 and F2\n\t}, exports.cell3w = function (P) {\n\t\tvar K = 0.142857142857;\n\t\tvar Ko = 0.428571428571; // 1/2-K/2\n\t\tvar K2 = 0.020408163265306; // 1/(7*7)\n\t\tvar Kz = 0.166666666667; // 1/6\n\t\tvar Kzo = 0.416666666667; // 1/2-1/6*2\n\t\tvar ji = 1.0; // smaller jitter gives more regular pattern\n\n\t\tvar Pi = mod(floor(P), 289.0);\n\t\tvar Pf = fract(P) - 0.5;\n\n\t\tvar Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\t\tvar Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\t\tvar Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\t\tvar p = permute3(Pi.x + vec3(-1.0, 0.0, 1.0));\n\t\tvar p1 = permute3(p + Pi.y - 1.0);\n\t\tvar p2 = permute3(p + Pi.y);\n\t\tvar p3 = permute3(p + Pi.y + 1.0);\n\t\tvar p11 = permute3(p1 + Pi.z - 1.0);\n\t\tvar p12 = permute3(p1 + Pi.z);\n\t\tvar p13 = permute3(p1 + Pi.z + 1.0);\n\t\tvar p21 = permute3(p2 + Pi.z - 1.0);\n\t\tvar p22 = permute3(p2 + Pi.z);\n\t\tvar p23 = permute3(p2 + Pi.z + 1.0);\n\t\tvar p31 = permute3(p3 + Pi.z - 1.0);\n\t\tvar p32 = permute3(p3 + Pi.z);\n\t\tvar p33 = permute3(p3 + Pi.z + 1.0);\n\n\t\tvar ox11 = fract(p11 * K) - Ko;\n\t\tvar oy11 = mod(floor(p11 * K), 7.0) * K - Ko;\n\t\tvar oz11 = floor(p11 * K2) * Kz - Kzo; // p11 < 289 guaranteed\n\t\tvar ox12 = fract(p12 * K) - Ko;\n\t\tvar oy12 = mod(floor(p12 * K), 7.0) * K - Ko;\n\t\tvar oz12 = floor(p12 * K2) * Kz - Kzo;\n\t\tvar ox13 = fract(p13 * K) - Ko;\n\t\tvar oy13 = mod(floor(p13 * K), 7.0) * K - Ko;\n\t\tvar oz13 = floor(p13 * K2) * Kz - Kzo;\n\t\tvar ox21 = fract(p21 * K) - Ko;\n\t\tvar oy21 = mod(floor(p21 * K), 7.0) * K - Ko;\n\t\tvar oz21 = floor(p21 * K2) * Kz - Kzo;\n\t\tvar ox22 = fract(p22 * K) - Ko;\n\t\tvar oy22 = mod(floor(p22 * K), 7.0) * K - Ko;\n\t\tvar oz22 = floor(p22 * K2) * Kz - Kzo;\n\t\tvar ox23 = fract(p23 * K) - Ko;\n\t\tvar oy23 = mod(floor(p23 * K), 7.0) * K - Ko;\n\t\tvar oz23 = floor(p23 * K2) * Kz - Kzo;\n\t\tvar ox31 = fract(p31 * K) - Ko;\n\t\tvar oy31 = mod(floor(p31 * K), 7.0) * K - Ko;\n\t\tvar oz31 = floor(p31 * K2) * Kz - Kzo;\n\t\tvar ox32 = fract(p32 * K) - Ko;\n\t\tvar oy32 = mod(floor(p32 * K), 7.0) * K - Ko;\n\t\tvar oz32 = floor(p32 * K2) * Kz - Kzo;\n\t\tvar ox33 = fract(p33 * K) - Ko;\n\t\tvar oy33 = mod(floor(p33 * K), 7.0) * K - Ko;\n\t\tvar oz33 = floor(p33 * K2) * Kz - Kzo;\n\n\t\tvar dx11 = Pfx + ji * ox11;\n\t\tvar dy11 = Pfy.x + ji * oy11;\n\t\tvar dz11 = Pfz.x + ji * oz11;\n\t\tvar dx12 = Pfx + ji * ox12;\n\t\tvar dy12 = Pfy.x + ji * oy12;\n\t\tvar dz12 = Pfz.y + ji * oz12;\n\t\tvar dx13 = Pfx + ji * ox13;\n\t\tvar dy13 = Pfy.x + ji * oy13;\n\t\tvar dz13 = Pfz.z + ji * oz13;\n\t\tvar dx21 = Pfx + ji * ox21;\n\t\tvar dy21 = Pfy.y + ji * oy21;\n\t\tvar dz21 = Pfz.x + ji * oz21;\n\t\tvar dx22 = Pfx + ji * ox22;\n\t\tvar dy22 = Pfy.y + ji * oy22;\n\t\tvar dz22 = Pfz.y + ji * oz22;\n\t\tvar dx23 = Pfx + ji * ox23;\n\t\tvar dy23 = Pfy.y + ji * oy23;\n\t\tvar dz23 = Pfz.z + ji * oz23;\n\t\tvar dx31 = Pfx + ji * ox31;\n\t\tvar dy31 = Pfy.z + ji * oy31;\n\t\tvar dz31 = Pfz.x + ji * oz31;\n\t\tvar dx32 = Pfx + ji * ox32;\n\t\tvar dy32 = Pfy.z + ji * oy32;\n\t\tvar dz32 = Pfz.y + ji * oz32;\n\t\tvar dx33 = Pfx + ji * ox33;\n\t\tvar dy33 = Pfy.z + ji * oy33;\n\t\tvar dz33 = Pfz.z + ji * oz33;\n\n\t\tvar d11 = dx11 * dx11 + dy11 * dy11 + dz11 * dz11;\n\t\tvar d12 = dx12 * dx12 + dy12 * dy12 + dz12 * dz12;\n\t\tvar d13 = dx13 * dx13 + dy13 * dy13 + dz13 * dz13;\n\t\tvar d21 = dx21 * dx21 + dy21 * dy21 + dz21 * dz21;\n\t\tvar d22 = dx22 * dx22 + dy22 * dy22 + dz22 * dz22;\n\t\tvar d23 = dx23 * dx23 + dy23 * dy23 + dz23 * dz23;\n\t\tvar d31 = dx31 * dx31 + dy31 * dy31 + dz31 * dz31;\n\t\tvar d32 = dx32 * dx32 + dy32 * dy32 + dz32 * dz32;\n\t\tvar d33 = dx33 * dx33 + dy33 * dy33 + dz33 * dz33;\n\n\t\tvar d1a = min(d11, d12);\n\t\td12 = max(d11, d12);\n\t\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\t\td13 = max(d1a, d13);\n\t\td12 = min(d12, d13); // 2nd smallest now not in d13\n\t\tvar d2a = min(d21, d22);\n\t\td22 = max(d21, d22);\n\t\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\t\td23 = max(d2a, d23);\n\t\td22 = min(d22, d23); // 2nd smallest now not in d23\n\t\tvar d3a = min(d31, d32);\n\t\td32 = max(d31, d32);\n\t\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\t\td33 = max(d3a, d33);\n\t\td32 = min(d32, d33); // 2nd smallest now not in d33\n\t\tvar da = min(d11, d21);\n\t\td21 = max(d11, d21);\n\t\td11 = min(da, d31); // Smallest now in d11\n\t\td31 = max(da, d31); // 2nd smallest now not in d31\n\t\td11.xy = d11.x < d11.y ? d11.xy : d11.yx;\n\t\td11.xz = d11.x < d11.z ? d11.xz : d11.zx; // d11.x now smallest\n\t\td12 = min(d12, d21); // 2nd smallest now not in d21\n\t\td12 = min(d12, d22); // nor in d22\n\t\td12 = min(d12, d31); // nor in d31\n\t\td12 = min(d12, d32); // nor in d32\n\t\td11.yz = min(d11.yz, d12.xy); // nor in d12.yz\n\t\td11.y = min(d11.y, d12.z); // Only two more to go\n\t\td11.y = min(d11.y, d11.z); // Done! (Phew!)\n\t\treturn sqrt(d11.xy); // F1, F2\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/noiselib.js\n// module id = 224\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/noiselib.js?");

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (require, exports) {\n\texports.pal0 = function (t) {\n\t\treturn vec4(mix(vec3(0), vec3(1), t), 1.);\n\t};\n\texports.pal1 = exports.rainbow = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(1), vec3(0, 0.33, 0.67)), 1.);\n\t};\n\n\texports.pal2 = exports.hotcool = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(1), vec3(0, 0.1, 0.2)), 1.);\n\t};\n\n\texports.pal3 = exports.pinkblue = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(1), vec3(0.3, 0.2, 0.2)), 1.);\n\t};\n\n\texports.pal4 = exports.greenish = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(1., 1., .5), vec3(0.8, 0.9, 0.3)), 1.);\n\t};\n\n\texports.pal5 = exports.dipper = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(1., 0.7, .4), vec3(0, 0.15, 0.20)), 1.);\n\t};\n\n\texports.pal6 = exports.purply = function (t) {\n\t\treturn vec4(pal(t, vec3(.5), vec3(.5), vec3(2., 1.0, 0.), vec3(0.5, 0.2, 0.25)), 1.);\n\t};\n\n\texports.pal7 = exports.reddish = function (t) {\n\t\treturn vec4(pal(t, vec3(.8, .5, .4), vec3(.2, .4, .2), vec3(2., 1.0, 1.0), vec3(0., 0.25, 0.25)), 1.);\n\t};\n\n\texports.pal = function (t, a, b, c, d) {\n\t\treturn a + b * cos(6.28318 * (c * t + d));\n\t};\n\n\texports.texture = requireDreem('$resources/textures/noise.png');\n\texports.checkertex = requireDreem('$resources/textures/checker.png');\n\texports.crystaltex = requireDreem('$resources/textures/hex_tiles.png');\n\n\texports.fetch = function (pos) {\n\t\treturn texture.sample(pos);\n\t};\n\n\texports.band_with_dither = function (y, col) {\n\n\t\tvar f = fract(y);\n\t\tf = pow(f, 0.5);\n\t\tcol.xyz *= smoothstep(0.49, 0.47, abs(f - 0.5));\n\t\tcol.xyz *= 0.5 + 0.5 * sqrt(4.0 * f * (1.0 - f));\n\n\t\t//col += (10.0/255.0)*texture.sample(mod(gl_FragCoord.xy / texture.size.xy,1.0));\n\n\t\tvar texc = mod((vec2(gl_FragCoord.x, 1.0 - gl_FragCoord.y) + vec2(0.5)) / texture.size.xy, 1.0);\n\n\t\tcol.xyz += 0.01 * texture.sample(texc).xyz;\n\n\t\treturn col;\n\t};\n\n\texports.dither = function (col) {\n\t\tvar texc = mod((vec2(gl_FragCoord.x, 1.0 - gl_FragCoord.y) + vec2(0.5)) / texture.size.xy, 1.0);\n\n\t\tcol.xyz += 0.03 * texture.sample(texc).xyz;\n\n\t\treturn col;\n\t};\n\n\texports.dithercrystal = function (col, time) {\n\t\tvar texc = mod((vec2(gl_FragCoord.x, 1.0 - gl_FragCoord.y) + vec2(0.5)) / texture.size.xy, 1.0);\n\t\tvar R = crystaltex.sample(mod(texc * 0.2, 1.0)).x * crystaltex.sample(mod(vec2(0, time * 0.12314) + texc.yx * 0.625123, 1.0)).y;\n\t\tR = 1.0 - R;\n\t\tR = R * R * R;\n\t\tcol.xyz *= 0.6 + R;\n\n\t\treturn col;\n\t};\n\n\texports.checker = function (col) {\n\t\tvar texc = mod((vec2(gl_FragCoord.x, 1.0 - gl_FragCoord.y) + vec2(0.5)) / checkertex.size.xy, 1.0);\n\n\t\tcol.xyz += 0.03 * checkertex.sample(texc).xyz;\n\n\t\treturn col;\n\t};\n\texports.band_no_dither = function (y, col) {\n\t\tvar f = fract(y);\n\t\tcol *= smoothstep(0.49, 0.47, abs(f - 0.5));\n\t\tcol *= 0.5 + 0.5 * sqrt(4.0 * f * (1.0 - f));\n\t\treturn col;\n\t};\n\n\texports.hsv2rgb = function (hsv) {\n\t\treturn hsv.z * (1.0 + 0.5 * hsv.y * (cos(6.2832 * (hsv.x + vec3(0.0, 0.6667, 0.3333))) - 1.0));\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/palettelib.js\n// module id = 225\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/palettelib.js?");

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\n// some shapes based on http://iquilezles.org/www/articles/distfunctions/distfunctions.htm\n\ndefineDreem(function (require, exports) {\n\n\texports.roundedrectdistance = function (sized, width, height, topleftcorner, toprightcorner, bottomleftcorner, bottomrightcorner) {\n\t\tvar c1 = vec2(topleftcorner - 0.5, topleftcorner - 0.5);\n\t\tvar c2 = vec2(bottomleftcorner - 0.5, height - bottomleftcorner - 0.5);\n\t\tvar c3 = vec2(width - bottomrightcorner - .50, height - bottomrightcorner - .5);\n\t\tvar c4 = vec2(width - toprightcorner - .50, toprightcorner - 0.5);\n\n\t\tvar dist = 0.0;\n\n\t\tif (sized.x <= c1.x && sized.y < c1.y) {\n\t\t\tdist = distcircle(sized - c1, topleftcorner);\n\t\t} else {\n\t\t\tif (sized.x >= c3.x && sized.y >= c3.y) {\n\t\t\t\tdist = distcircle(sized - c3, bottomrightcorner);\n\t\t\t} else {\n\t\t\t\tif (sized.x <= c2.x && sized.y >= c2.y) {\n\t\t\t\t\tdist = distcircle(sized - c2, bottomleftcorner);\n\t\t\t\t} else {\n\t\t\t\t\tif (sized.x >= c4.x && sized.y <= c4.y) {\n\t\t\t\t\t\tdist = distcircle(sized - c4, toprightcorner);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdist = max(max(-sized.y, sized.y - height), max(-sized.x, sized.x - width));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dist;\n\t};\n\n\texports.circle = function (texpos, radius) {\n\t\tvar c = texpos - vec2(0.5);\n\t\tvar distance = length(c) - radius;\n\t\tvar sdf = distance < 0. ? 1. : 0.0;\n\t\treturn sdf;\n\t};\n\n\texports.distcircle = function (texpos, radius) {\n\t\tvar c = texpos - vec2(0.5);\n\t\tvar distance = length(c) - radius;\n\t\treturn distance;\n\t};\n\n\t//Sphere - signed\n\texports.sdSphere = function (p, s) {\n\t\treturn length(p) - s;\n\t};\n\n\t//Box - unsigned\n\texports.udBox = function (p, b) {\n\t\treturn length(max(abs(p) - b, 0.0));\n\t};\n\n\t//Round Box - unsigned\n\texports.udRoundBox = function (p, b, r) {\n\t\treturn length(max(abs(p) - b, 0.0)) - r;\n\t};\n\n\t//Box - signed\n\texports.sdBox = function (p, b) {\n\t\tvar d = abs(p) - b;\n\t\treturn min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n\t};\n\n\t//Torus - signed\n\texports.sdTorus = function (p, t) {\n\t\tvar q = vec2(length(p.xz) - t.x, p.y);\n\t\treturn length(q) - t.y;\n\t};\n\n\t//Cylinder - signed\n\texports.sdCylinder = function (p, c) {\n\t\treturn length(p.xz - c.xy) - c.z;\n\t};\n\n\t//Cone - signed\n\texports.sdCone = function (p, c) {\n\t\t// c must be normalized\n\t\tvar q = length(p.xy);\n\t\treturn dot(c, vec2(q, p.z));\n\t};\n\n\t//Plane - signed\n\texports.sdPlane = function (p, n) {\n\t\t// n must be normalized\n\t\treturn dot(p, n.xyz) + n.w;\n\t};\n\n\t//Hexagonal Prism - signed\n\texports.sdHexPrism = function (p, h) {\n\t\tvar q = abs(p);\n\t\treturn max(q.z - h.y, max(q.x * 0.866025 + q.y * 0.5, q.y) - h.x);\n\t};\n\n\t//Triangular Prism - signed\n\texports.sdTriPrism = function (p, h) {\n\t\tvar q = abs(p);\n\t\treturn max(q.z - h.y, max(q.x * 0.866025 + p.y * 0.5, -p.y) - h.x * 0.5);\n\t};\n\n\t//Capsule / Line - signed\n\texports.sdCapsule = function (p, a, b, r) {\n\t\tvar pa = p - a,\n\t\t    ba = b - a;\n\t\tvar h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\t\treturn length(pa - ba * h) - r;\n\t};\n\n\t//Capped cylinder - signed\n\texports.sdCappedCylinder = function (p, h) {\n\t\tvar d = abs(vec2(length(p.xz), p.y)) - h;\n\t\treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\t};\n\n\t//Triangle - unsigned\n\texports.dot2 = function (v) {\n\t\treturn dot(v, v);\n\t};\n\n\texports.udTriangle = function (p, a, b, c) {\n\t\tvar ba = b - a;\n\t\tvar pa = p - a;\n\t\tvar cb = c - b;\n\t\tvar pb = p - b;\n\t\tvar ac = a - c;\n\t\tvar pc = p - c;\n\t\tvar nor = cross(ba, ac);\n\n\t\treturn sqrt(sign(dot(cross(ba, nor), pa)) + sign(dot(cross(cb, nor), pb)) + sign(dot(cross(ac, nor), pc)) < 2.0 ? min(min(dot2(ba * clamp(dot(ba, pa) / dot2(ba), 0.0, 1.0) - pa), dot2(cb * clamp(dot(cb, pb) / dot2(cb), 0.0, 1.0) - pb)), dot2(ac * clamp(dot(ac, pc) / dot2(ac), 0.0, 1.0) - pc)) : dot(nor, pa) * dot(nor, pa) / dot2(nor));\n\t};\n\n\texports.udQuad = function (p, a, b, c, d) {\n\t\tvar ba = b - a;\n\t\tvar pa = p - a;\n\t\tvar cb = c - b;\n\t\tvar pb = p - b;\n\t\tvar dc = d - c;\n\t\tvar pc = p - c;\n\t\tvar ad = a - d;\n\t\tvar pd = p - d;\n\t\tvar nor = cross(ba, ad);\n\n\t\treturn sqrt(sign(dot(cross(ba, nor), pa)) + sign(dot(cross(cb, nor), pb)) + sign(dot(cross(dc, nor), pc)) + sign(dot(cross(ad, nor), pd)) < 3.0 ? min(min(min(dot2(ba * clamp(dot(ba, pa) / dot2(ba), 0.0, 1.0) - pa), dot2(cb * clamp(dot(cb, pb) / dot2(cb), 0.0, 1.0) - pb)), dot2(dc * clamp(dot(dc, pc) / dot2(dc), 0.0, 1.0) - pc)), dot2(ad * clamp(dot(ad, pd) / dot2(ad), 0.0, 1.0) - pd)) : dot(nor, pa) * dot(nor, pa) / dot2(nor));\n\t};\n\n\t//Capped Cone - signed\n\n\texports.sdCappedCone = function (p, c) {\n\t\tvar q = vec2(length(p.xz), p.y);\n\t\tvar v = vec2(c.z * c.y / c.x, -c.z);\n\n\t\tvar w = v - q;\n\n\t\tvar vv = vec2(dot(v, v), v.x * v.x);\n\t\tvar qv = vec2(dot(v, w), v.x * w.x);\n\n\t\tvar d = max(qv, 0.0) * qv / vv;\n\n\t\treturn sqrt(dot(w, w) - max(d.x, d.y)) * sign(max(q.y * v.x - q.x * v.y, w.y));\n\t};\n\n\t//Torus82 - signed\n\n\texports.sdTorus82 = function (p, t) {\n\t\tvar q = vec2(length2(p.xz) - t.x, p.y);\n\t\treturn length8(q) - t.y;\n\t};\n\n\t//Torus88 - signed\n\n\texports.sdTorus88 = function (p, t) {\n\t\tvar q = vec2(length8(p.xz) - t.x, p.y);\n\t\treturn length8(q) - t.y;\n\t};\n\n\t//Union\n\texports.opU = function (d1, d2) {\n\t\treturn min(d1, d2);\n\t};\n\n\t//Substraction\n\texports.opS = function (d1, d2) {\n\t\treturn max(-d1, d2);\n\t};\n\n\t//Intersection\n\texports.opI = function (d1, d2) {\n\t\treturn max(d1, d2);\n\t};\n\n\texports.union = function (d1, d2) {\n\t\treturn min(d1, d2);\n\t};\n\n\texports.intersect = function (d1, d2) {\n\t\treturn max(d1, d2);\n\t};\n\n\texports.subtract = function (d1, d2) {\n\t\treturn max(-d1, d2);\n\t};\n\n\texports.circle = function (p, x, y, radius) {\n\t\treturn distance(p, vec2(x, y)) - radius;\n\t};\n\n\texports.box = function (p, left, top, width, height) {\n\t\tvar xy = vec2(left, top);\n\t\tvar hwh = vec2(.5 * width, .5 * height);\n\t\tvar d = abs(p - xy - hwh) - hwh;\n\t\treturn min(max(d.x, d.y), 0.) + length(max(d, 0.));\n\t};\n\n\texports.roundbox = function (p, left, top, width, height, radius) {\n\t\tvar rad2 = vec2(radius, radius);\n\t\tvar hwh = vec2(.5 * width, .5 * height);\n\t\tvar xy = vec2(left, top);\n\t\treturn length(max(abs(p - xy - hwh) - (hwh - 2. * rad2), 0.)) - 2. * radius;\n\t};\n\n\texports.line = function (p, left, top, right, bottom, radius) {\n\t\tvar a = vec2(left, top);\n\t\tvar b = vec2(right, bottom);\n\t\tvar pa = p - a,\n\t\t    ba = b - a;\n\t\tvar h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\t\treturn length(pa - ba * h) - radius;\n\t};\n\n\texports.drawField = function (coord, field, color) {\n\t\tvar edge = length(vec2(length(dFdx(coord)), length(dFdy(coord)))) * SQRT_1_2;\n\t\treturn vec4(color, smoothstep(-edge, edge, field));\n\t};\n\n\texports.smoothpoly = function (a, b, k) {\n\t\tvar h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n\t\treturn mix(b, a, h) - k * h * (1.0 - h);\n\t};\n\n\texports.smoothpow = function (a, b, k) {\n\t\ta = pow(a, k);b = pow(b, k);\n\t\treturn pow(a * b / (a + b), 1.0 / k);\n\t};\n\n\texports.smoothexp = function (a, b, k) {\n\t\tvar res = exp(-k * a) + exp(-k * b);\n\t\treturn -log(res) / k;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/shaderlib/shapelib.js\n// module id = 226\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/shaderlib/shapelib.js?");

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\tvar Cursor = requireDreem('./singlecursor');\n\n\t// forward the cursor api\n\tfunction makeForward(key, fn) {\n\t\tthis[key] = function () {\n\t\t\tthis.delta = 0;\n\t\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\t\tvar cursor = this.list[i];\n\t\t\t\tcursor[key].apply(cursor, arguments);\n\t\t\t}\n\t\t\tthis.update();\n\t\t};\n\t}\n\n\tfor (var key in Cursor.prototype) {\n\t\tif (typeof Cursor.prototype[key] == 'function') {\n\t\t\tmakeForward.call(this, key, Cursor.prototype[key]);\n\t\t}\n\t}this.atConstructor = function (editor) {\n\t\tthis.editor = editor;\n\t\tthis.list = [this.newCursor()];\n\t\tthis.fusing = true;\n\t};\n\n\tthis.serializeSelection = function () {\n\t\tvar str = '';\n\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\tvar cursor = this.list[i];\n\t\t\tstr += this.editor.textbuf.serializeText(cursor.lo, cursor.hi);\n\t\t}\n\t\treturn str;\n\t};\n\n\tthis.newCursor = function () {\n\t\treturn new Cursor(this);\n\t};\n\n\tthis.toArray = function (inp) {\n\t\tvar out = [];\n\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\tvar cursor = this.list[i];\n\t\t\tout.push(cursor.start, cursor.end);\n\t\t}\n\t\treturn out;\n\t};\n\n\tthis.fromArray = function (inp) {\n\t\tthis.list = [];\n\t\tfor (var i = 0; i < inp.length; i += 2) {\n\t\t\tvar cur = this.newCursor();\n\t\t\tthis.list.push(cur);\n\t\t\tcur.start = inp[i];\n\t\t\tcur.end = inp[i + 1];\n\t\t}\n\t\tthis.update();\n\t};\n\n\tthis.fuse = function () {\n\n\t\tthis.list.sort(function (a, b) {\n\t\t\treturn (a.start < a.end ? a.start : a.end) < (b.start < b.end ? b.start : b.end) ? -1 : 1;\n\t\t});\n\t\t// lets do single pass\n\t\tfor (var i = 0; i < this.list.length - 1;) {\n\t\t\tvar cur = this.list[i];\n\t\t\tvar nxt = this.list[i + 1];\n\t\t\t// lets figure out the different overlap cases\n\t\t\tif (cur.hi >= nxt.lo) {\n\t\t\t\tif (cur.hi <= nxt.hi) {\n\t\t\t\t\t// we fuse it [cur<]nxt>\n\t\t\t\t\tif (nxt.end < nxt.start) {\n\t\t\t\t\t\tcur.end = cur.lo;\n\t\t\t\t\t\tcur.start = nxt.hi;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcur.start = cur.lo;\n\t\t\t\t\t\tcur.end = nxt.hi;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// remove the nxt\n\t\t\t\tthis.list.splice(i + 1, 1);\n\t\t\t} else i++;\n\t\t}\n\t\t// lets communicate the position of our first cursor\n\t};\n\t/*\n this.markDelta = function(){\n \tfor(var i = 0; i < this.list.length; i++){\n \t\tvar cursor = this.list[i]\n \t\tcursor.mark_start = this.editor.textbuf.charCodeAt(cursor.start - 1)\n \t\tcursor.mark_end = this.editor.textbuf.charCodeAt(cursor.end - 1)\n \t}\n }\n \tthis.markSeek = function(pos, delta, mark){\n \tpos += delta\n \tvar count = this.editor.textbuf.char_count\n \tif(pos < 0) pos = 0\n \tif(pos >= count) pos = count - 1\n \t// ignore markers that are volatile\n \tif(mark != 32 && mark != 9 && mark != 10 && mark != 59){\n \t\tpos++\n \t\tvar start = pos\n \t\tvar max = abs(delta)\n \t\twhile(pos > 0 && this.editor.textbuf.charCodeAt(pos - 1) != mark){\n \t\t\tif(start - pos > max)break\n \t\t\tpos--\n \t\t}\n \t}\n \treturn pos\n }\n \tthis.moveDelta = function(beyond, delta){\n \tfor(var i = 0; i < this.list.length; i++){\n \t\tvar cursor = this.list[i]\n \t\t\tif(cursor.start>=beyond)\n \t\t\tcursor.start = this.markSeek(cursor.start, delta, cursor.mark_start)\n \t\tif(cursor.end>=beyond){\n \t\t\tcursor.end = this.markSeek(cursor.end, delta, cursor.mark_end)\n \t\t//\tcursor.max = text_layer.cursorRect(cursor.end).x\n \t\t}\n \t}\n \tthis.update()\n }\n */\n\tthis.update = function () {\n\t\tif (this.editor.cursorsChanged) this.editor.cursorsChanged();\n\t};\n\n\tthis.rectSelect = function (x1, y1, x2, y2, clone) {\n\t\tif (y2 < y1) {\n\t\t\tvar t = y1;\n\t\t\ty1 = y2;\n\t\t\ty2 = t;\n\t\t}\n\t\tvar new_list = Array.prototype.slice.apply(clone);\n\t\tvar height = this.editor.textbuf.line_height;\n\t\tvar y = y1;\n\t\twhile (1) {\n\t\t\tvar cur = this.newCursor();\n\t\t\tnew_list.push(cur);\n\t\t\tcur.start = this.editor.textbuf.offsetFromPos(x1, y);\n\t\t\tcur.end = this.editor.textbuf.offsetFromPos(x2, y);\n\t\t\t//console.log(cur.end, x2)\n\t\t\tif (y >= y2) break;\n\t\t\ty += height;\n\t\t\tif (y > y2) y = y2;\n\t\t}\n\t\tlist = new_list;\n\t\tthis.update();\n\t};\n\n\tthis.addCursor = function () {\n\t\tvar cursor = this.newCursor(this);\n\t\tcursor.start = cursor.end = 0; //this.list.length\n\t\tthis.list.push(cursor);\n\t\treturn cursor;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/textbox/cursorset.js\n// module id = 227\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/textbox/cursorset.js?");

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.class(function (requireDreem) {\n\n\tvar parse = new (requireDreem('$system/parse/onejsparser'))();\n\n\tthis.atConstructor = function (cursorset) {\n\t\tthis.cursorset = cursorset;\n\t\tthis.editor = cursorset.editor;\n\t\tthis.start = 0;\n\t\tthis.end = 0;\n\t\tthis.max = 0;\n\t};\n\n\tObject.defineProperty(this, 'lo', {\n\t\tget: function get() {\n\t\t\treturn this.end > this.start ? this.start : this.end;\n\t\t},\n\t\tset: function set(v) {\n\t\t\tif (this.end > this.start) this.start = v;else this.end = v;\n\t\t}\n\t});\n\n\tObject.defineProperty(this, 'hi', {\n\t\tget: function get() {\n\t\t\treturn this.end > this.start ? this.end : this.start;\n\t\t},\n\t\tset: function set(v) {\n\t\t\tif (this.end > this.start) this.end = v;else this.start = v;\n\t\t}\n\t});\n\n\tObject.defineProperty(this, 'span', {\n\t\tget: function get() {\n\t\t\treturn abs(this.end - this.start);\n\t\t}\n\t});\n\n\tthis.moveToOffset = function (offset) {\n\t\tthis.start = this.end = offset;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveLeft = function (only_end) {\n\t\tthis.end = this.end - 1;\n\t\tif (this.end < 0) this.end = 0;\n\t\tif (!only_end) {\n\t\t\tif (this.editor.atMoveLeft) this.end = this.editor.atMoveLeft(this.end);\n\t\t\tthis.start = this.end;\n\t\t}\n\t\t//\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveRight = function (only_end) {\n\t\tthis.end = this.end + 1;\n\t\tif (this.end > this.editor.textbuf.char_count) this.end = this.editor.textbuf.char_count;\n\t\tif (!only_end) {\n\t\t\tif (this.editor.atMoveRight) this.end = this.editor.atMoveRight(this.end);\n\t\t\tthis.start = this.end;\n\t\t}\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveUp = function (only_end, lines) {\n\t\tif (!lines) lines = 1;\n\t\tvar rect = this.editor.textbuf.cursorRect(this.end);\n\t\t//console.log(max, rect.y + .5*rect.h - lines * cursorset.text_layer.line_height)\n\t\t//cursorset.text_layer.debugChunks()\n\t\tif (this.editor.textbuf.charCodeAt(this.end - 1) === 10 && this.editor.textbuf.charCodeAt(this.end - 2) === 10) this.end--;else this.end = this.editor.textbuf.offsetFromPos(this.max, rect.y + .5 * rect.h - lines * this.editor.textbuf.line_height);\n\n\t\tif (this.end < 0) this.end = 0;\n\t\tif (!only_end) this.start = this.end;\n\t};\n\n\tthis.moveDown = function (only_end, lines) {\n\t\tif (!lines) lines = 1;\n\n\t\tvar rect = this.editor.textbuf.cursorRect(this.end);\n\n\t\t//if(this.editor.textbuf.charCodeAt(this.end+1) === 10 && this.editor.textbuf.charCodeAt(this.end+2) === 10) this.end++\n\t\t//else \n\t\tthis.end = this.editor.textbuf.offsetFromPos(this.max, rect.y + .5 * rect.h + lines * this.editor.textbuf.line_height);\n\n\t\tif (this.end < 0) this.end = this.editor.textbuf.char_count;\n\n\t\tif (!only_end) this.start = this.end;\n\t};\n\n\tthis.moveTo = function (x, y, only_end) {\n\t\tvar off = this.editor.textbuf.offsetFromPos(x, y);\n\n\t\tif (off < 0) {\n\t\t\tif (off === -4 || off === -3) off = this.editor.textbuf.lengthQuad();else off = 0;\n\t\t}\n\t\tvar change = this.end != off;\n\t\tthis.end = off;\n\t\tif (!only_end) change = this.start != this.end || change, this.start = this.end;\n\t\tvar r = this.editor.textbuf.cursorRect(off);\n\t\tthis.max = r.x;\n\t};\n\n\tthis.moveLeftWord = function (only_end) {\n\t\tvar pos = editor.scanLeftWord(this.end);\n\t\tif (pos == this.end) this.end--;else this.end = pos;\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveRightWord = function (only_end) {\n\t\tvar pos = editor.scanRightWord(this.end);\n\t\tif (pos == this.end) this.end++;else this.end = pos;\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveLeftLine = function (only_end) {\n\t\t// if we are a tab we scan to the right.\n\t\tthis.end = this.editor.scanLeftLine(this.end);\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveRightLine = function (only_end) {\n\t\tthis.end = this.editor.scanRightLine(this.end);\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveTop = function (only_end) {\n\t\tthis.end = 0;\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.moveBottom = function (only_end) {\n\t\tthis.end = this.editor.textbuf.char_count;\n\t\tif (!only_end) this.start = this.end;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\t// we need to make a whole bunch of these things.\n\tthis.deleteRange = function (from, to) {\n\t\tthis.editor.addUndoInsert(from, to);\n\t\tthis.editor.textbuf.removeText(from, to);\n\n\t\tthis.cursorset.delta -= to - from;\n\t\tthis.start = this.end = from;\n\n\t\tthis.editor.forkRedo();\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\n\t\tthis.editor.textChanged();\n\t};\n\n\tthis.deleteWord = function () {\n\t\tvar my = this.editor.scanRightWord(hi);\n\t\tif (my == this.lo) return this.delete();\n\t\tthis.deleteRange(this.lo, my);\n\t};\n\n\tthis.deleteLine = function () {\n\t\tthis.deleteRange(this.lo, this.editor.scanRightLine(hi));\n\t};\n\n\tthis.backspaceLine = function () {\n\t\tthis.deleteRange(this.editor.scanLeftLine(this.lo), this.hi);\n\t};\n\n\tthis.backspaceWord = function () {\n\t\tvar my = this.editor.scanLeftWord(this.lo);\n\t\tif (my == this.hi) return this.backspace();\n\t\tthis.deleteRange(my, this.hi);\n\t};\n\n\tthis.selectWord = function () {\n\t\tthis.start = this.editor.scanLeftWord(this.lo);\n\t\tthis.end = this.editor.scanRightWord(this.hi);\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.selectLine = function () {\n\t\tthis.start = this.editor.scanLeftLine(this.lo);\n\t\tthis.end = this.editor.scanRightLine(this.hi);\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.selectAll = function () {\n\t\tthis.start = 0;\n\t\tthis.end = this.editor.textbuf.char_count;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\t};\n\n\tthis.delete = function () {\n\t\tif (this.start != this.end) return this.deleteRange(this.lo, this.hi);\n\t\t// otherwise we have to delete the character upnext\n\t\tthis.editor.addUndoInsert(this.end, this.end + 1);\n\t\tthis.editor.textbuf.removeText(this.end, this.end + 1);\n\t\tthis.cursorset.delta -= 1;\n\t\tthis.editor.forkRedo();\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\n\t\tthis.editor.textChanged();\n\t};\n\n\tthis.backspace = function () {\n\t\tif (this.start != this.end) return this.deleteRange(this.lo, this.hi);\n\n\t\tthis.start += this.cursorset.delta;\n\t\tthis.end += this.cursorset.delta;\n\n\t\tif (this.editor.stripNextOnBackspace) {\n\t\t\tif (this.editor.stripNextOnBackspace(this.lo - 1)) {\n\t\t\t\tthis.hi++;\n\t\t\t}\n\n\t\t\tvar t;\n\t\t\tif (parse.isNonNewlineWhiteSpace(this.editor.textbuf.charCodeAt(this.lo - 1))) {\n\t\t\t\twhile (t = parse.isNonNewlineWhiteSpace(this.editor.textbuf.charCodeAt(this.lo - 1))) {\n\t\t\t\t\tthis.lo = this.lo - 1;\n\t\t\t\t\tif (t == 2) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.lo == 0) return;\n\t\tthis.editor.addUndoInsert(this.lo - 1, this.hi);\n\t\tthis.editor.textbuf.removeText(this.lo - 1, this.hi);\n\t\tthis.cursorset.delta -= this.span;\n\t\tthis.editor.forkRedo();\n\t\tthis.start = this.end = this.lo - 1;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\n\t\tthis.editor.textChanged();\n\t};\n\n\tthis.insert = function (text) {\n\t\tvar cdelta = 0;\n\t\tif (this.editor.processInsert) {\n\t\t\tvar pi = this.editor.processInsert(this.lo, this.hi, text);\n\t\t\ttext = pi[0];\n\t\t\tcdelta = pi[1];\n\t\t}\n\t\tthis.start += this.cursorset.delta;\n\t\tthis.end += this.cursorset.delta;\n\t\tif (this.start != this.end) {\n\t\t\tthis.editor.addUndoInsert(this.lo, this.hi);\n\t\t\tthis.editor.textbuf.removeText(this.lo, this.hi);\n\t\t\tthis.cursorset.delta -= this.span;\n\t\t}\n\t\tif (text.length) {\n\t\t\tvar len = this.editor.textbuf.insertText(this.lo, text);\n\t\t\tthis.cursorset.delta += len;\n\t\t\tthis.editor.addUndoDelete(this.lo, this.lo + len);\n\t\t}\n\t\tthis.editor.forkRedo();\n\t\tthis.start = this.end = this.lo + text.length + cdelta;\n\t\tthis.max = this.editor.textbuf.cursorRect(this.end).x;\n\n\t\tthis.editor.textChanged();\n\t};\n\n\tthis.isSelection = function () {\n\t\treturn this.start !== this.end;\n\t};\n\n\tthis.isCursor = function () {\n\t\treturn this.start === this.end;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/textbox/singlecursor.js\n// module id = 228\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/textbox/singlecursor.js?");

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem.mixin(function (requireDreem) {\n\n\tvar CursorSet = requireDreem('./cursorset');\n\tvar Cursor = requireDreem('./singlecursor');\n\tvar parse = new (requireDreem('$system/parse/onejsparser'))();\n\n\tthis.change = 0;\n\n\tthis.doCursor = function () {\n\t\tvar cursor0 = this.cursorset.list[0];\n\t\tif (this.cursorset.list.length === 1 && cursor0.start === cursor0.end) {\n\t\t\tthis.screen.keyboard.clipboard = '';\n\t\t}\n\t\tvar coord = this.textbuf.charCoords(max(cursor0.start - 1, 0));\n\t\tvar v2 = vec2.mul_mat4(vec2(coord.x - 0.5 * coord.w, coord.y - 0.5 * coord.h), this.totalmatrix);\n\t\tthis.screen.keyboard.textAreaRespondToMouse([floor(v2[0]), floor(v2[1])]);\n\t};\n\n\tthis.addUndoInsert = function (start, end, stack) {\n\t\tif (!stack) stack = this.undo_stack;\n\t\t// merge undo groups if it merges\n\t\tvar last = stack[stack.length - 1];\n\t\tif (last && last.type == 'insert' && last.start == end) {\n\t\t\tvar group = last.group;\n\t\t\tlast.group = this.undo_group;\n\t\t\tfor (var i = stack.length - 2; i >= 0; i--) {\n\t\t\t\tif (stack[i].group == group) stack[i].group = this.undo_group;\n\t\t\t}\n\t\t}\n\t\tstack.push({\n\t\t\tgroup: this.undo_group,\n\t\t\ttype: 'insert',\n\t\t\tstart: start,\n\t\t\tdata: this.textbuf.serializeTags(start, end),\n\t\t\tcursors: this.cursorset.toArray()\n\t\t});\n\t};\n\n\tthis.addUndoDelete = function (start, end, stack) {\n\t\tif (!stack) stack = this.undo_stack;\n\t\t// merge undo objects if it merges\n\t\tvar last = stack[stack.length - 1];\n\t\tif (last && last.type == 'delete' && last.end == start) {\n\t\t\tlast.end += end - start;\n\t\t\treturn;\n\t\t}\n\t\tstack.push({\n\t\t\tgroup: this.undo_group,\n\t\t\ttype: 'delete',\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tcursors: this.cursorset.toArray()\n\t\t});\n\t};\n\n\tthis.forkRedo = function () {\n\t\tif (this.undo_stack.length) {\n\t\t\tthis.undo_stack[this.undo_stack.length - 1].redo = this.redo_stack;\n\t\t}\n\t\tthis.redo_stack = [];\n\t};\n\n\tthis.undoRedo = function (stack1, stack2) {\n\t\t// aight. lets process em undos\n\t\tif (!stack1.length) return;\n\t\tvar last_group = stack1[stack1.length - 1].group;\n\t\tfor (var i = stack1.length - 1; i >= 0; i--) {\n\t\t\tvar item = stack1[i];\n\t\t\tvar last_cursor;\n\t\t\tif (item.group != last_group) break;\n\t\t\t// lets do what it says\n\t\t\tif (item.type == 'insert') {\n\t\t\t\tthis.addUndoDelete(item.start, item.start + item.data.length, stack2);\n\t\t\t\tthis.textbuf.insertText(item.start, item.data);\n\t\t\t\tlast_cursor = item.cursors;\n\t\t\t} else {\n\t\t\t\tthis.addUndoInsert(item.start, item.end, stack2);\n\t\t\t\tthis.textbuf.removeText(item.start, item.end);\n\t\t\t\tlast_cursor = item.cursors;\n\t\t\t}\n\t\t}\n\t\tstack1.splice(i + 1);\n\t\tthis.cursorset.fromArray(last_cursor);\n\t\tthis.textChanged();\n\t};\n\n\t// alright we serialize all ze cursors and concat and send over.\n\tthis.selectionToClipboard = function () {\n\t\t// alright. so. we need to sort the cursors.\n\t\tvar str = this.cursorset.serializeSelection();\n\t\tthis.screen.keyboard.clipboard = str;\n\t};\n\n\tthis.scanLeftWord = function (pos) {\n\t\twhile (pos > 0 && parse.isNonNewlineWhiteSpace(this.textbuf.charCodeAt(pos - 1))) {\n\t\t\tpos--;\n\t\t}\n\t\twhile (pos > 0 && parse.isIdentifierChar(this.textbuf.charCodeAt(pos - 1))) {\n\t\t\tpos--;\n\t\t}\n\t\treturn pos;\n\t};\n\n\tthis.scanRightWord = function (pos) {\n\t\twhile (pos < this.textbuf.char_count && parse.isNonNewlineWhiteSpace(this.textbuf.charCodeAt(pos))) {\n\t\t\tpos++;\n\t\t}\n\t\twhile (pos < this.textbuf.char_count && parse.isIdentifierChar(this.textbuf.charCodeAt(pos))) {\n\t\t\tpos++;\n\t\t}\n\t\treturn pos;\n\t};\n\n\tthis.scanLeftLine = function (pos) {\n\t\tif (this.textbuf.charCodeAt(pos) == 9) {\n\t\t\twhile (pos < this.textbuf.char_count && this.textbuf.charCodeAt(pos) == 9) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t} else {\n\t\t\t// if we are a newline\n\t\t\tif (this.textbuf.charCodeAt(pos - 1) == 9) {\n\t\t\t\twhile (pos > 0 && this.textbuf.charCodeAt(pos - 1) != 10) {\n\t\t\t\t\tpos--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (pos > 0 && this.textbuf.charCodeAt(pos - 1) > 10) {\n\t\t\t\t\tpos--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pos;\n\t};\n\n\tthis.scanRightLine = function (pos) {\n\t\twhile (pos < this.textbuf.char_count && this.textbuf.charCodeAt(pos) != 10) {\n\t\t\tpos++;\n\t\t}\n\t\treturn pos;\n\t};\n\n\t// called after child constructors\n\tthis.initEditImpl = function () {\n\t\tthis.cursorset = new CursorSet(this);\n\t\tthis.undo_stack = [];\n\t\tthis.redo_stack = [];\n\t\tthis.undo_group = 0;\n\t\tthis.cursorset.update();\n\t\t//this.cursorset.moveDown(0, 0)\n\t};\n\n\tthis.keypaste = function (event) {\n\t\tif (this.readonly) return;\n\t\tthis.undo_group++;\n\t\tthis.cursorset.insert(event.text);\n\t\tthis.doCursor();\n\t\tthis.change = 'clipboard'; //enumchange.clipboard\n\t};\n\n\tthis.keypress = function (event) {\n\t\tif (this.readonly) return;\n\t\tthis.undo_group++;\n\t\tthis.cursorset.insert(event.value);\n\t\tthis.doCursor();\n\t\tthis.change_keypress = event.value;\n\t\tthis.change = 'keypress'; //enumchange.keypress\n\t};\n\n\tvar utfmap = {\n\t\taccent: 1, _accent: '`',\n\t\tnum1: '¡', _num1: '⁄',\n\t\tnum2: '™', _num2: '€',\n\t\tnum3: '£', _num3: '‹',\n\t\tnum4: '¢', _num4: '›',\n\t\tnum5: '∞', _num5: 'ﬁ',\n\t\tnum6: '§', _num6: 'ﬂ',\n\t\tnum7: '¶', _num7: '‡',\n\t\tnum8: '•', _num8: '°',\n\t\tnum9: 'ª', _num9: '·',\n\t\tnum0: 'º', _num0: '‚',\n\t\tequals: '≠', _equalt: '±',\n\t\tq: 'œ', _q: 'Œ',\n\t\tw: '∑', _w: '„',\n\t\te: 2, _e: '´',\n\t\tr: '®', _r: '‰',\n\t\tt: '†', _t: 'ˇ', y: '¥',\n\t\tu: 3, _u: '¨',\n\t\ti: 4, _i: 'ˆ',\n\t\to: 'ø', _o: 'Ø',\n\t\tp: 'π', _p: '∏',\n\t\topenbracket: '“', _openbracket: '”',\n\t\tclosebracket: '‘', _closebracket: '’',\n\t\tbackslash: '«', _backslash: '»',\n\t\ta: 'å', _a: 'Å',\n\t\ts: 'ß', _s: 'Í',\n\t\td: '∂', _d: 'Î',\n\t\tf: 'ƒ', _f: 'Ï',\n\t\tg: '©', _g: '˝',\n\t\th: '˙', _h: 'Ó',\n\t\tj: '∆', _j: 'Ô',\n\t\tk: '˚', _k: '',\n\t\tl: '¬', _l: 'Ò',\n\t\tsemicolon: '…', _semicolon: 'Ú',\n\t\tsinglequote: 'æ', _singlequote: 'Æ',\n\t\tz: 'Ω', _z: '¸',\n\t\tx: '≈', _x: '˛',\n\t\tc: 'ç', _c: 'Ç',\n\t\tv: '√', _v: '◊',\n\t\tb: '∫', _b: 'ı',\n\t\tn: 5, _n: '˜',\n\t\tm: 'µ', _m: 'Â',\n\t\tcomma: '≤', _comma: '¯',\n\t\tperiod: '≥', _period: '˘',\n\t\tslash: '÷', _slash: '¿'\n\t};\n\n\tthis.keydown = function (v) {\n\t\tvar keyboard = this.screen.keyboard;\n\t\tkeyboard.textareaFocus();\n\t\tvar name = 'key' + v.name[0].toUpperCase() + v.name.slice(1);\n\t\tthis.undo_group++;\n\n\t\tif (keyboard.meta) name += 'Cmd';\n\t\tif (keyboard.ctrl) name += 'Ctrl';\n\t\tif (keyboard.alt) name += 'Alt';\n\t\tif (keyboard.shift) name += 'Shift';\n\n\t\tif (this[name]) this[name](v);else if (keyboard.alt) {\n\t\t\tname = v.name;\n\t\t\tif (keyboard.shift) name = '_' + name;\n\t\t\tvar trans = utfmap[name];\n\t\t\tif (typeof trans == 'number') {\n\t\t\t\t// we have to do a 2 step unicode\n\t\t\t\tconsole.log('2 step unicode not implemented');\n\t\t\t} else if (trans !== undefined) {\n\t\t\t\tif (this.readonly) return;\n\t\t\t\tthis.cursorset.insert(trans);\n\t\t\t\tthis.change = 'keypress';\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.onpointerstart = function (event) {\n\t\tvar pos = this.globalToLocal(event.position);\n\t\t// TODO(aki): consider doing in globalToLocal by default\n\t\tpos = vec2.add(pos, this.scroll);\n\t\tthis.cursorset.fusing = false;\n\t\t// TODO(aki): fix alt and meta selection\n\t\tif (event.alt) {\n\t\t\t// if (pointer.leftmeta || pointer.rightmeta) clone = this.cursorset.list\n\t\t\tthis.cursorset.rectSelect(pos[0], pos[1], pos[0], pos[1], clone);\n\t\t} else if (event.meta) {\n\t\t\tcursor = this.cursorset.addCursor();\n\t\t\t// in that case what we need to\n\t\t\tcursor.moveTo(pos[0], pos[1]);\n\t\t\t// lets make it select the word\n\t\t\tif (event.clicker == 2) cursor.selectWord();\n\t\t\tif (event.clicker == 3) cursor.selectLine();\n\t\t\tthis.cursorset.update();\n\t\t} else {\n\t\t\tthis.cursorset.fusing = true;\n\t\t\tthis.cursorset.moveTo(pos[0], pos[1]);\n\t\t\t// TODO(aki): implement clicker in pointer\n\t\t\tif (event.clicker == 2) this.cursorset.selectWord();\n\t\t\tif (event.clicker == 3) this.cursorset.selectLine();\n\t\t}\n\t\tthis.doCursor();\n\t};\n\n\tthis.onpointermove = function (event) {\n\t\tvar pos = this.globalToLocal(event.position);\n\t\tvar min = this.globalToLocal(event.min);\n\t\tvar max = this.globalToLocal(event.max);\n\t\tpos = vec2.add(pos, this.scroll);\n\t\tmin = vec2.add(min, this.scroll);\n\t\tmax = vec2.add(max, this.scroll);\n\t\tif (event.alt) {\n\t\t\t// console.log(min[0], min[1], max[0], max[1])\n\t\t\t// this.cursorset.rectSelect(min[0], min[1], max[0], max[1], clone)\n\t\t} else if (event.meta) {\n\t\t\t// cursor.moveTo(pos[0], pos[1], true)\n\t\t\t// this.cursorset.update()\n\t\t} else {\n\t\t\tthis.cursorset.moveTo(pos[0], pos[1], true);\n\t\t}\n\t\tthis.doCursor();\n\t};\n\n\tthis.onpointerend = function (event) {\n\t\tthis.cursorset.fusing = true;\n\t\tthis.cursorset.update();\n\t\t// we are done. serialize to clipboard\n\t\tthis.doCursor();\n\t\tthis.selectionToClipboard();\n\t};\n\n\t// alright so. undo.\n\tthis.keyZCtrl = this.keyZCmd = function () {\n\t\tif (this.readonly) return;\n\t\tthis.undoRedo(this.undo_stack, this.redo_stack);\n\t\tthis.change = 'undoredo';\n\t\t//doCursor()\n\t};\n\n\tthis.keyYCtrl = this.keyYCmd = function () {\n\t\tif (this.readonly) return;\n\t\tthis.undoRedo(this.redo_stack, this.undo_stack);\n\t\tthis.change = 'undoredo';\n\t\t//change = Change.undoRedo\n\t\t//doCursor()\n\t};\n\n\tthis.keyACtrl = this.keyACmd = function () {\n\t\t// select all\n\t\tthis.cursorset.selectAll();\n\t\tthis.selectionToClipboard();\n\t};\n\n\tthis.keyXCtrl = this.keyXCmd = function () {\n\t\tif (this.readonly) return;\n\t\t// cut the crap\n\t\tthis.change = 'delete';\n\t\tthis.cursorset.delete();\n\t};\n\n\tthis.keyBackspace = function () {\n\t\tif (this.readonly) return;\n\t\tthis.cursorset.backspace();\n\t\tthis.change = 'delete';\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\t// move selection up one line\n\tthis.keyDownarrowAlt = function () {};\n\n\t// move selection down one line\n\tthis.keyUparrowAlt = function () {};\n\n\tthis.keyDelete = function () {\n\t\tif (this.readonly) return;\n\t\tthis.change = 'delete';\n\t\tthis.cursorset.delete();\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyDeleteCtrl = this.keyDeleteAlt = function () {\n\t\tif (this.readonly) return;\n\t\tthis.cursorset.deleteWord();\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyBackspaceCtrl = this.keyBackspaceAlt = function () {\n\t\tif (this.readonly) return;\n\t\tthis.cursorset.backspaceWord();\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyBackspaceCmd = function () {\n\t\tif (this.readonly) return;\n\t\tthis.cursorset.backspaceLine();\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyDeleteCmd = function () {\n\t\tif (this.readonly) return;\n\t\tthis.cursorset.deleteLine();\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyLeftArrowAltShift = this.keyLeftArrowCtrlShift = this.keyLeftArrowCtrl = this.keyLeftarrowAlt = function () {\n\t\tthis.cursorset.moveLeftWord(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyRightArrowAltShift = this.keyRightArrowCtrlShift = this.keyRightArrowCtrl = this.keyRightarrowAlt = function () {\n\t\tthis.cursorset.moveRightWord(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyLeftarrowCmdShift = this.keyLeftarrowCmd = function () {\n\t\tthis.cursorset.moveLeftLine(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyRightarrowCmdShift = this.keyRightarrowCmd = function () {\n\t\tthis.cursorset.moveRightLine(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyHome = this.keyUparrowCmdShift = this.keyUparrowCmd = function () {\n\t\tthis.cursorset.moveTop(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyEnd = this.keyDownarrowCmdShift = this.keyDownarrowCmd = function () {\n\t\tthis.cursorset.moveBottom(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyLeftarrowShift = this.keyLeftarrow = function () {\n\t\tthis.cursorset.moveLeft(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyRightarrowShift = this.keyRightarrow = function () {\n\t\tthis.cursorset.moveRight(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyUparrowShift = this.keyUparrow = function () {\n\t\tthis.cursorset.moveUp(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n\n\tthis.keyDownarrowShift = this.keyDownarrow = function () {\n\t\tthis.cursorset.moveDown(this.screen.keyboard.shift);\n\t\tthis.selectionToClipboard();\n\t\tthis.doCursor();\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/textbox/textboximpl.js\n// module id = 229\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/textbox/textboximpl.js?");

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Parts copyright 2012 Google, Inc. All Rights Reserved. (APACHE 2.0 license)\n\ndefineDreem.class('$system/platform/$platform/shader$platform', function (requireDreem) {\n\tthis.view = { totalmatrix: mat4(), viewmatrix: mat4(), cursorcolor: vec4() };\n\n\tthis.position = function () {\n\t\treturn mesh.pos * view.totalmatrix * view.viewmatrix;\n\t};\n\n\tthis.color = function () {\n\t\treturn view.cursorcolor;\n\t\t//var rel = mesh.edge//cursor_pos\n\t\t//var edge = 0.1\n\t\t//var dpdx = dFdx(rel)\n\t\t//var dpdy = dFdy(rel)\n\t\t//var edge = min(length(vec2(length(dpdx), length(dpdy))) * SQRT_1_2, 1.)\n\t\t//if(edge > 0.04){\n\t\t//\tif(rel.x < dpdx.x) return vec4(fgcolor.rgb,1.)\n\t\t//\treturn vec4(0.)\n\t\t//}\n\t\t//return vec4(view.cursorcolor.rgb, smoothstep(edge, -edge, shape.box(rel, 0,0,0.15,1.)))\n\t};\n\n\tthis.vertexstruct = defineDreem.struct({\n\t\tpos: vec2,\n\t\tedge: vec2\n\t}).extend(function () {\n\n\t\tthis.addCursor = function (textbuf, start) {\n\t\t\tvar pos = textbuf.cursorRect(start);\n\n\t\t\tpos.w = textbuf.fontsize * 0.1;\n\n\t\t\tthis.pushQuad(pos.x, pos.y, 0, 0, pos.x + pos.w, pos.y, 1, 0, pos.x, pos.y + pos.h, 0, 1, pos.x + pos.w, pos.y + pos.h, 1, 1);\n\t\t};\n\t});\n\n\tthis.mesh = this.vertexstruct.array();\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/typeface/cursorshader.js\n// module id = 230\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/typeface/cursorshader.js?");

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n\ndefineDreem(function (requireDreem, exports, module) {\n\n  module.exports = function generateSDFCache(font) {\n    throw \"SETH FIXME: This function disabled because it wasn't valid JS\";\n    /*\n    vec4[] buf = vec4[]()\n    buf.quad.length = font.count\n    buf.length = 0\n    // we have to allocate actual texture positions\n    var font_size = .2\n    // if we render to a font we go -1,-1 bottom left to 1,1 top right\n    var width = 2048\n    var height = 2048\n    var margin = 8. / width\n    var glyphs = font.glyphs\n    var left = -1  + 0.03\n    var top = -1 + font_size\n    var px = left\n    var py = 1\n    var o = 0\n    var maxh = 0\n    var ct = 0\n    for(var k in glyphs){\n    var info = glyphs[k]\n    // 0___14 \n    // |   /|\n    // |  / |\n    // | /  |\n    // |/   | \n    // 23---5\n    // lets add some vertices\n    var gx = ((info.atlas_x<<6) | info.nominal_w)<<1\n    var gy = ((info.atlas_y<<6) | info.nominal_h)<<1\n    var o = buf.quad.length++\n    buf.quad_tl[o] = vec4(info.tmin_x = px, info.tmin_y = py, gx, gy)\n    buf.quad_tr[o] = vec4(info.tmax_x = px + font_size * info.width, py, gx|1, gy)\n    buf.quad_bl[o] = vec4(px, info.tmax_y = py - font_size * info.height, gx, gy|1)\n    buf.quad_br[o] = vec4(px + font_size * info.width, py - font_size * info.height, gx|1, gy|1)\n    px += (info.tmax_x - info.tmin_x) + margin//glyph.advance * font_size\n    // scale it into texture coordinates\n    var my_h = (info.tmin_y - info.tmax_y) + margin\n    if(my_h > maxh) maxh = my_h\n    info.tmin_x = info.tmin_x *.5 + .5\n    info.tmin_y = info.tmin_y *.5 + .5\n    info.tmax_x = info.tmax_x *.5 + .5\n    info.tmax_y = info.tmax_y *.5 + .5\n    if(px + font_size > 1) px = left, py -= maxh, maxh = 0\n    }\n    genWhitespace(font)\n    // lets do a font scaling, and then just stack em horizontally\n    sdf_texture = Texture.rgba(width, height)\n    sdf_mesh = buf\n    font.sdf_texture = sdf_texture\n    \tif(dump_sdf){\n    mymesh = vec2Rect(0,0,1,1)\n    vertex: mymesh[]*vec2(8.,8.) * (m_mesh * m_world * device.m_camera)\n    pixel: sdf_texture.sample(pixel mymesh[])// + mix(#black,#red,pixel mymesh[].y)\n    }\n    glyphy_coords: sdf_mesh[].zw\n    if(sdf_bake){\n    // lets re-encode our glyph table\n    var header = 12 + font.count * 10 * 4 \n    var body = sdf_texture.w_ * sdf_texture.h_ * 4\n    var data = new Uint8Array(header + body)\n    var vuint32 = new Uint32Array(data.buffer)\n    var vfloat32 = new Float32Array(data.buffer)\n    var vuint16 = new Uint16Array(data.buffer)\n    var off = 0\n    vuint32[off++] = 0x02F01175\n    vuint16[2] = sdf_texture.w_\n    vuint16[3] = sdf_texture.h_\n    off++\n    vuint32[off++] = font.count\n    var glyphs = font.glyphs\n    var check = 0\n    for(var unicode in glyphs){\n    var info = glyphs[unicode]\n    check++\n    vuint32[off++] = unicode\n    vfloat32[off++] = info.min_x\n    vfloat32[off++] = info.min_y\n    vfloat32[off++] = info.max_x\n    vfloat32[off++] = info.max_y\n    vfloat32[off++] = info.advance\n    vfloat32[off++] = info.tmin_x\n    vfloat32[off++] = info.tmin_y\n    vfloat32[off++] = info.tmax_x\n    vfloat32[off++] = info.tmax_y\n    }\n    data._t_ = 1\n    // lets send the data over\n    sdf_header = data\n    sdf_header_offset = header\n    once:(){\n    // in this once, we generate our font texture.\n    sdf_texture{\n    \tclearAll(#black)\n    \tthis{\n    \t\tvertex:sdf_mesh[].xy\n    \t\tpixel: glyphy_sdf_generate(pixel sdf_mesh[])\n    \t}\n    \tvar data = sdf_header.subarray(sdf_header_offset)\n    \tthis.gl.readPixels(0,0,sdf_texture.w, sdf_texture.h, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data)\n    \tconsole.log(sdf_texture.w, sdf_texture.h)\n    \n    \t// ok lets dump the header and the data to disk\n    \tvar xhr = new XMLHttpRequest()\n    \txhr.open(\"POST\", \"/bake\", false)\n    \txhr.send(sdf_header)\n    }\n    }\n    }\n    else{\n    once:(){\n    // in this once, we generate our font texture.\n    sdf_texture{\n    \tclearAll(#black)\n    \tthis{\n    \t\tvertex:sdf_mesh[].xy\n    \t\tpixel: glyphy_sdf_generate(pixel sdf_mesh[])\n    \t}\n    }\n    }\t\t\t\n    }\n    */\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/typeface/fontsdfgen.js\n// module id = 231\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/typeface/fontsdfgen.js?");

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Parts copyright 2012 Google, Inc. All Rights Reserved. (APACHE 2.0 license)\n\ndefineDreem.class('$system/platform/$platform/shader$platform', function (requireDreem) {\n\tthis.view = { totalmatrix: mat4(), viewmatrix: mat4(), markercolor: vec4() };\n\n\tthis.border_radius = 2.5;\n\tthis.gloop = 8;\n\n\tthis.position = function () {\n\t\treturn mesh.pos * view.totalmatrix * view.viewmatrix;\n\t};\n\n\tthis.color = function () {\n\t\tvar pos = mesh.pos;\n\t\tvar rect = mesh.rect;\n\t\tvar rel = pos - rect.xy;\n\t\t// do pixel antialias calc\n\t\tvar edge = 0.1; //min(length(vec2(length(dFdx(rel)), length(dFdy(rel)))) * SQRT_1_2,1.)\n\n\t\tvar other = mesh.other;\n\t\tvar px1 = other.x;\n\t\tvar px2 = other.y;\n\t\tvar nx1 = other.z;\n\t\tvar nx2 = other.w;\n\t\t// main shape\n\n\t\tvar field = shape.roundbox(rel, 0, 0, rect.z, rect.w, border_radius);\n\t\tif (px1 != px2) {\n\t\t\tvar field2 = shape.roundbox(rel, px1 - rect.x, -rect.w, px2 - px1, rect.w, border_radius);\n\t\t\tfield = shape.smoothpoly(field, field2, gloop);\n\t\t}\n\t\tif (nx1 != nx2) {\n\t\t\tvar field2 = shape.roundbox(rel, nx1 - rect.x, rect.w, nx2 - nx1, rect.w, border_radius);\n\t\t\tfield = shape.smoothpoly(field, field2, gloop);\n\t\t}\n\n\t\t//dump = field\n\t\t//field = marker_style(field, pos)\n\t\tvar alpha = smoothstep(edge, -edge, field);\n\n\t\tif (alpha < 0.001) discard;\n\n\t\treturn vec4(view.markercolor.rgb, alpha);\n\t};\n\n\tthis.vertexstruct = defineDreem.struct({\n\t\tpos: vec2,\n\t\trect: vec4,\n\t\tother: vec4,\n\t\tdata: float,\n\t\tcorner: float\n\t}).extend(function (struct) {\n\t\t// static helper function to pull out marker set from text\n\t\tstruct.getMarkersFromText = function (textbuf, start, end, deltay) {\n\t\t\tvar array = [];\n\t\t\tif (deltay === undefined) deltay = 0;\n\t\t\tif (end < start) {\n\t\t\t\tvar t = start;\n\t\t\t\tstart = end;\n\t\t\t\tend = t;\n\t\t\t}\n\t\t\t// lets access the textbuf geometry\n\t\t\tvar length = textbuf.lengthQuad();\n\t\t\tif (end > length) end = length;\n\t\t\tvar min = Infinity;\n\t\t\t//if(textbuf.charCodeAt(start) === 10) start--\n\n\t\t\t//console.log(\">>>\", textbuf.cursorRect(start), start, end, deltay)\n\n\t\t\tvar ch, lasty;\n\t\t\tfor (var o = start, last = o; o < end; o++) {\n\t\t\t\tch = textbuf.charCodeAt(o);\n\t\t\t\t//next = textbuf.charCodeAt(o+1)\n\t\t\t\tif (o == end - 1 || ch == 10) {\n\t\t\t\t\tvar r = textbuf.cursorRect(last);\n\t\t\t\t\tvar r2 = textbuf.cursorRect(o);\n\t\t\t\t\tif (!lasty) {\n\t\t\t\t\t\tlasty = r.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar prev = array[array.length - 1];\n\t\t\t\t\tif (lasty < r.y) {\n\t\t\t\t\t\tvar coords = textbuf.charCoords(last - 2);\n\t\t\t\t\t\tif (prev) {\n\t\t\t\t\t\t\tprev.w = coords.x + coords.w - prev.x;\n\t\t\t\t\t\t\tprev.x2 = prev.x + prev.w;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlasty = r.y;\n\n\t\t\t\t\tvar x = ch === 10 ? r2.x : r2.x + r2.w; //ch === 10? textbuf.char_tl_x(o-1): textbuf.char_tr_x(o)\n\t\t\t\t\tr.start = last + 1;\n\t\t\t\t\tr.end = o;\n\t\t\t\t\tif (r.x < min) min = r.x;\n\t\t\t\t\tr.x = min;\n\t\t\t\t\tr.w = x - r.x;\n\t\t\t\t\tif (r.w < 4) r.w = 4;\n\t\t\t\t\tr.x2 = r.x + r.w;\n\t\t\t\t\tr.y2 = r.y + r.h;\n\t\t\t\t\tr.y += deltay;\n\t\t\t\t\tr.y2 += deltay;\n\n\t\t\t\t\t// check if the previous item is on the same r.y\n\t\t\t\t\t// ifso fuse it with this marker\n\t\t\t\t\tif (prev && abs(prev.y - r.y) < 1e-4) {\n\t\t\t\t\t\t// fuse marker\n\t\t\t\t\t\tprev.x2 = r.x2;\n\t\t\t\t\t\tprev.w += r.w;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarray.push(r);\n\t\t\t\t\t}\n\t\t\t\t\tlast = o + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array;\n\t\t};\n\n\t\tthis.addMarker = function (prev, self, next, font_size, data) {\n\t\t\tvar px1 = 0,\n\t\t\t    px2 = 0,\n\t\t\t    nx1 = 0,\n\t\t\t    nx2 = 0;\n\t\t\tif (prev) px1 = prev.x, px2 = prev.x2;\n\t\t\tif (next) nx1 = next.x, nx2 = next.x2;\n\t\t\tthis.pushQuad(self.x - font_size * 3, self.y, self.x, self.y, self.w, self.h, px1, px2, nx1, nx2, data, 0, self.x2 + font_size * 3, self.y, self.x, self.y, self.w, self.h, px1, px2, nx1, nx2, data, 1, self.x - font_size * 3, self.y2, self.x, self.y, self.w, self.h, px1, px2, nx1, nx2, data, 2, self.x2 + font_size * 3, self.y2, self.x, self.y, self.w, self.h, px1, px2, nx1, nx2, data, 3);\n\t\t};\n\t});\n\n\tthis.mesh = this.vertexstruct.array();\n\tthis.fgcolor = vec4(\"oceanboatblue\");\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/typeface/markershader.js\n// module id = 232\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/typeface/markershader.js?");

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* DreemGL is a collaboration between Teeming Society & Samsung Electronics, sponsored by Samsung and others.\n   Copyright 2015-2016 Teeming Society. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License.\n   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,\n   software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and limitations under the License.*/\n// Parts copyright 2012 Google, Inc. All Rights Reserved. (APACHE 2.0 license)\n\ndefineDreem.class('$system/platform/$platform/shader$platform', function (requireDreem, exports, baseclass) {\n\t//internal\n\n\t// the font\n\tthis.font = requireDreem('$resources/fonts/opensans_regular_ascii.glf');\n\n\t// initial pixel and vertex shaders\n\tthis.position = \"glyphy_mesh()\";\n\tthis.color = \"glyphy_pixel()\";\n\n\t//this.fgcolor = vec4(\"blue\")\n\t//this.boldness = 0\n\t//this.outline = false\n\tthis.pixel_contrast = 1.4;\n\tthis.pixel_gamma_adjust = vec3(1.2);\n\tthis.subpixel_off = 1.0115;\n\tthis.subpixel_distance = 3.;\n\n\t// forward ref of things we need on view\n\tthis.view = {\n\t\t_fgcolor: vec4(),\n\t\t_bgcolor: vec4(),\n\t\t_totalmatrix: mat4(),\n\t\t_viewmatrix: mat4(),\n\t\t_polygonoffset: 0.0,\n\t\t_outlinecolor: vec4(),\n\t\t_outlinethickness: 0.0,\n\t\t_boldness: 0.0,\n\t\t_outline: false,\n\t\t_opacity: 1.0,\n\t\ttextstyle: function textstyle(style, tag) {\n\t\t\treturn style;\n\t\t},\n\t\t//textstyle: function(fgcolor, pos, tag){return fgcolor;},\n\t\t//textpositionfn:function(pos, tag){return pos;},\n\t\tscreen: {\n\t\t\tdevice: {\n\t\t\t\tframe: {\n\t\t\t\t\tsize: vec2()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lets define a custom struct and subclass the array\n\t\t} };this.textgeom = defineDreem.struct({\n\t\tpos: vec4, // x y z w unicode in w\n\t\ttex: vec2,\n\t\ttag: vec4\n\t}).extend(function (exports, self) {\n\n\t\tthis.align = \"left\";\n\t\tthis.start_x = 0;\n\t\tthis.start_y = 0;\n\t\tthis.text_x = 0;\n\t\tthis.text_y = 0;\n\t\tthis.shift = vec2(0);\n\t\tthis.add_x = 0;\n\t\tthis.add_y = 0;\n\n\t\tthis.fontsize = 10;\n\t\tthis.linespacing = 1.0;\n\t\tthis.italic_ness = 0;\n\t\t// defines the line\n\t\tthis.cursorspacing = 1.3;\n\t\tthis.cursor_sink = 0.32;\n\n\t\tthis.scaling = 0;\n\t\tthis.distance = 0;\n\n\t\tthis.debug = false;\n\n\t\t//this.bgcolor = vec3('black')\n\t\t//this.fgcolor = vec4('white')\n\n\t\tthis.__defineGetter__('line_height', function () {\n\t\t\treturn this.fontsize * this.linespacing;\n\t\t});\n\n\t\tthis.__defineGetter__('min_y', function () {\n\t\t\treturn this.fontsize * this.linespacing;\n\t\t});\n\n\t\tthis.__defineGetter__('block_y', function () {\n\t\t\treturn this.add_y - this.line_height + this.cursor_sink * this.fontsize;\n\t\t});\n\n\t\tthis.__defineGetter__('bound_w', function () {\n\t\t\treturn this.text_w;\n\t\t});\n\n\t\tthis.__defineGetter__('bound_h', function () {\n\t\t\treturn this.text_h + this.cursor_sink * this.fontsize;\n\t\t});\n\n\t\tthis.clear = function () {\n\t\t\tthis.text_w = 0;\n\t\t\tthis.text_h = 0;\n\t\t\tthis.add_x = this.start_x;\n\t\t\tthis.add_y = this.start_y; //=== null? this.min_y:0\n\t\t};\n\n\t\tthis.measurestring = function (string) {\n\t\t\tvar res = { w: 0, h: 0 };\n\t\t\tif (!string || string.length == 0) return res;\n\n\t\t\tvar length = string.length;\n\t\t\t// alright lets convert some text babeh!\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar unicode = string.struct ? string.array[i * 4] : string.charCodeAt(i);\n\t\t\t\tvar info = this.font.glyphs[unicode];\n\t\t\t\tif (!info) info = this.font.glyphs[32];\n\t\t\t\tres.w += info.advance * this.fontsize;\n\t\t\t}\n\n\t\t\treturn res;\n\t\t};\n\n\t\tthis.addWithinWidth = function (string, maxwidth, indent, m1, m2, m3) {\n\n\t\t\tif (!indent) indent = 0;\n\t\t\tvar words = string.split(' ');\n\t\t\tvar lines = [];\n\t\t\tvar widths = [];\n\t\t\tvar currentline = [];\n\t\t\tvar currentw = this.add_x;\n\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar s = this.measurestring(\"_\" + words[i]);\n\t\t\t\tif (currentw > 0) {\n\t\t\t\t\tif (currentw + s.w > maxwidth) {\n\t\t\t\t\t\tlines.push(currentline);\n\t\t\t\t\t\twidths.push(currentw);\n\t\t\t\t\t\tcurrentw = indent;\n\t\t\t\t\t\tcurrentline = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentw += s.w;\n\t\t\t\tcurrentline.push(words[i]);\n\t\t\t}\n\n\t\t\tif (currentline.length > 0) {\n\t\t\t\tlines.push(currentline);\n\t\t\t\twidths.push(currentw);\n\t\t\t}\n\n\t\t\tif (this.align === \"left\") {\n\t\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t\t\tvar line = lines[i];\n\t\t\t\t\tfor (var j = 0; j < line.length; j++) {\n\t\t\t\t\t\tthis.add(line[j] + (j < line.length - 1 ? ' ' : ''), m1, m2, m3);\n\t\t\t\t\t}if (i < lines.length - 1) {\n\t\t\t\t\t\tthis.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t\t\tthis.add_x = indent;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (this.align === \"right\") {\n\t\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t\t\tthis.add_x = maxwidth - widths[i];\n\t\t\t\t\tvar line = lines[i];\n\t\t\t\t\tfor (var j = 0; j < line.length; j++) {\n\t\t\t\t\t\tthis.add(line[j] + ' ', m1, m2, m3);\n\t\t\t\t\t}this.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t}\n\t\t\t} else if (this.align === \"center\") {\n\t\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t\t\tthis.add_x = maxwidth / 2 - widths[i] / 2;\n\t\t\t\t\tvar line = lines[i];\n\t\t\t\t\tfor (var j = 0; j < line.length; j++) {\n\t\t\t\t\t\tthis.add(line[j] + ' ', m1, m2, m3);\n\t\t\t\t\t}this.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t}\n\t\t\t} else if (this.align === \"justify\") {\n\t\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t\t\tthis.add_x = 0;\n\t\t\t\t\tvar line = lines[i];\n\t\t\t\t\tvar spacer = 0;\n\n\t\t\t\t\tif (line.length > 1) spacer = (maxwidth - widths[i]) / (line.length - 1);\n\n\t\t\t\t\tfor (var j = 0; j < line.length; j++) {\n\t\t\t\t\t\tthis.add(line[j] + ' ', m1, m2, m3);\n\t\t\t\t\t\tthis.add_x += spacer;\n\t\t\t\t\t}\n\t\t\t\t\tthis.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.pushQuad = function () {\n\t\t\tthis.clean = false;\n\t\t\tvar slots = this.slots;\n\t\t\tif (arguments.length !== slots * 4) throw new Error('Please use individual components to set a quad for ' + slots);\n\t\t\tvar off = this.length * slots;\n\t\t\tthis.length += 6;\n\t\t\tif (this.length >= this.allocated) {\n\t\t\t\tthis.ensureSize(this.length);\n\t\t\t}\n\t\t\t// ok so lets just write it out\n\t\t\tvar out = this.array;\n\t\t\tfor (var i = 0; i < slots; i++) {\n\t\t\t\t// iterate the components\n\t\t\t\tout[off + i] = arguments[i];\n\t\t\t\tout[off + i + 1 * slots] = out[off + i + 4 * slots] = arguments[i + 1 * slots];\n\t\t\t\tout[off + i + 2 * slots] = out[off + i + 3 * slots] = arguments[i + 2 * slots];\n\t\t\t\tout[off + i + 5 * slots] = arguments[i + 3 * slots];\n\t\t\t}\n\t\t};\n\n\t\t// what do we need to know?\n\n\n\t\tthis.addGlyph = function (info, unicode, m1, m2, m3) {\n\n\t\t\tvar fontsize = this.fontsize;\n\t\t\tvar x1 = this.add_x + fontsize * info.min_x;\n\t\t\tvar x2 = this.add_x + fontsize * info.max_x;\n\t\t\tvar y1 = this.add_y - fontsize * info.min_y;\n\t\t\tvar y2 = this.add_y - fontsize * info.max_y;\n\t\t\tvar advance = info.advance;\n\t\t\tvar italic = this.italic_ness * info.height * fontsize;\n\t\t\tvar cz = this.add_z ? this.add_z : 0;\n\t\t\tvar dx = 0;\n\t\t\tthis.clean = false;\n\t\t\tvar slots = this.slots;\n\t\t\t//if(arguments.length !== slots * 4) throw new Error('Please use individual components to set a quad for '+slots)\n\n\t\t\tvar o = this.length * slots;\n\t\t\tthis.length += 6;\n\t\t\tif (this.length >= this.allocated) {\n\t\t\t\tthis.ensureSize(this.length);\n\t\t\t}\n\n\t\t\t// m1 is the formatting layout\n\t\t\tif (m1 < 0) {\n\t\t\t\tvar format = m1 * -1;\n\t\t\t\t//var m1info = unicode === 10?this.font.glyphs[9]:info\n\t\t\t\t//var indent = parseInt(m1/65536)\n\t\t\t\tvar mode = Math.floor(format / 256) % 256;\n\t\t\t\tvar padding = format % 256;\n\t\t\t\t// mode is 1, space left\n\t\t\t\t// mode is 2, space right\n\t\t\t\t// mode is 3, space left/right\n\t\t\t\t// mode is 4, scale indent\n\t\t\t\tif (mode) {\n\t\t\t\t\tvar padskip = padding * info.advance * fontsize;\n\t\t\t\t\tif (mode & 1) x1 += padskip, x2 += padskip, dx += padskip;\n\t\t\t\t\tif (mode & 2) dx += padskip;\n\t\t\t\t\tif (mode == 4) {\n\t\t\t\t\t\tx2 += padskip, dx = (padding - 1) * info.advance * fontsize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (unicode === 10) {\n\t\t\t\tx2 = 0;\n\t\t\t\tadvance = 0;\n\t\t\t}\n\t\t\tvar a = this.array;\n\n\t\t\tif (this.font.baked) {\n\t\t\t\t// INLINED for optimization.\n\t\t\t\ta[o + 2] = a[o + 12] = a[o + 32] = a[o + 22] = a[o + 52] = a[o + 42] = cz;\n\t\t\t\ta[o + 3] = a[o + 13] = a[o + 33] = a[o + 23] = a[o + 53] = a[o + 43] = fontsize;\n\t\t\t\ta[o + 6] = a[o + 16] = a[o + 36] = a[o + 26] = a[o + 56] = a[o + 46] = unicode;\n\t\t\t\ta[o + 7] = a[o + 17] = a[o + 37] = a[o + 27] = a[o + 57] = a[o + 47] = m1;\n\t\t\t\ta[o + 8] = a[o + 18] = a[o + 38] = a[o + 28] = a[o + 58] = a[o + 48] = m2;\n\t\t\t\ta[o + 9] = a[o + 19] = a[o + 39] = a[o + 29] = a[o + 59] = a[o + 49] = m3;\n\t\t\t\t// top left\n\t\t\t\ta[o + 0] = x1;\n\t\t\t\ta[o + 1] = y1;\n\t\t\t\ta[o + 4] = info.tmin_x;\n\t\t\t\ta[o + 5] = info.tmin_y;\n\n\t\t\t\t// top right\n\t\t\t\ta[o + 10] = a[o + 30] = x2;\n\t\t\t\ta[o + 11] = a[o + 31] = y1;\n\t\t\t\ta[o + 14] = a[o + 34] = info.tmax_x;\n\t\t\t\ta[o + 15] = a[o + 35] = info.tmin_y;\n\t\t\t\t// bottom left\n\t\t\t\ta[o + 20] = a[o + 50] = x1 + italic;\n\t\t\t\ta[o + 21] = a[o + 51] = y2;\n\t\t\t\ta[o + 24] = a[o + 54] = info.tmin_x;\n\t\t\t\ta[o + 25] = a[o + 55] = info.tmax_y;\n\t\t\t\t// bottom right\n\t\t\t\ta[o + 40] = x2 + italic;\n\t\t\t\ta[o + 41] = y2;\n\t\t\t\ta[o + 44] = info.tmax_x;\n\t\t\t\ta[o + 45] = info.tmax_y;\n\n\t\t\t\t/*\n    this.pushQuad(\n    \tx1, y1, cz, fontsize, info.tmin_x, info.tmin_y, unicode, m1, m2, m3,\n    \tx2, y1, cz, fontsize, info.tmax_x, info.tmin_y, unicode, m1, m2, m3,\n    \tx1 + italic, y2, cz, fontsize, info.tmin_x, info.tmax_y, unicode, m1, m2, m3,\n    \tx2 + italic, y2, cz, fontsize, info.tmax_x, info.tmax_y, unicode, m1, m2, m3\n    )*/\n\t\t\t} else {\n\t\t\t\tvar gx = (info.atlas_x << 6 | info.nominal_w) << 1;\n\t\t\t\tvar gy = (info.atlas_y << 6 | info.nominal_h) << 1;\n\n\t\t\t\t// INLINED for optimization. text is used a lot\n\t\t\t\ta[o + 2] = a[o + 12] = a[o + 32] = a[o + 22] = a[o + 52] = a[o + 42] = cz;\n\t\t\t\ta[o + 3] = a[o + 13] = a[o + 33] = a[o + 23] = a[o + 53] = a[o + 43] = fontsize;\n\t\t\t\ta[o + 6] = a[o + 16] = a[o + 36] = a[o + 26] = a[o + 56] = a[o + 46] = unicode;\n\t\t\t\ta[o + 7] = a[o + 17] = a[o + 37] = a[o + 27] = a[o + 57] = a[o + 47] = m1;\n\t\t\t\ta[o + 8] = a[o + 18] = a[o + 38] = a[o + 28] = a[o + 58] = a[o + 48] = m2;\n\t\t\t\ta[o + 9] = a[o + 19] = a[o + 39] = a[o + 29] = a[o + 59] = a[o + 49] = m3;\n\t\t\t\t// top left\n\t\t\t\ta[o + 0] = x1;\n\t\t\t\ta[o + 1] = y1;\n\t\t\t\ta[o + 4] = gx;\n\t\t\t\ta[o + 5] = gy;\n\n\t\t\t\t// top right\n\t\t\t\ta[o + 10] = a[o + 30] = x2;\n\t\t\t\ta[o + 11] = a[o + 31] = y1;\n\t\t\t\ta[o + 14] = a[o + 34] = gx | 1;\n\t\t\t\ta[o + 15] = a[o + 35] = gy;\n\t\t\t\t// bottom left\n\t\t\t\ta[o + 20] = a[o + 50] = x1 + italic;\n\t\t\t\ta[o + 21] = a[o + 51] = y2;\n\t\t\t\ta[o + 24] = a[o + 54] = gx;\n\t\t\t\ta[o + 25] = a[o + 55] = gy | 1;\n\t\t\t\t// bottom right\n\t\t\t\ta[o + 40] = x2 + italic;\n\t\t\t\ta[o + 41] = y2;\n\t\t\t\ta[o + 44] = gx | 1;\n\t\t\t\ta[o + 45] = gy | 1;\n\t\t\t\t/*\n    this.pushQuad(\n    \tx1, y1, cz, fontsize, gx, gy, unicode, m1, m2, m3,\n    \tx2, y1, cz, fontsize, gx|1, gy, unicode, m1, m2, m3,\n    \tx1 + italic, y2, cz,fontsize, gx, gy|1, unicode, m1, m2, m3,\n    \tx2 + italic, y2, cz, fontsize, gx|1, gy|1, unicode, m1, m2, m3\n    )*/\n\t\t\t}\n\t\t\tthis.add_x += advance * fontsize + dx;\n\t\t\tif (this.add_x > this.text_w) this.text_w = this.add_x;\n\t\t};\n\n\t\tthis.computeBounds = function (with_cursor) {\n\t\t\tvar text_w = 0;\n\t\t\tvar text_h = 0;\n\t\t\tvar length = this.lengthQuad();\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar o = i * 6 * 10;\n\t\t\t\tvar x1 = this.array[o];\n\t\t\t\tvar y1 = this.array[o + 1];\n\t\t\t\tvar fontsize = this.array[o + 3];\n\t\t\t\tvar unicode = this.array[o + 6];\n\t\t\t\tvar info = this.font.glyphs[unicode];\n\t\t\t\tif (!info) info = this.font.glyphs[32];\n\t\t\t\tvar add_x = x1 - fontsize * info.min_x + (unicode === 10 ? 0 : info.advance * fontsize);\n\t\t\t\tvar add_y = y1 + fontsize * info.min_x; //+ this.fontsize * this.linespacing\n\t\t\t\tif (add_x > text_w) text_w = add_x;\n\t\t\t\tif (add_y > text_h) text_h = add_y;\n\t\t\t}\n\t\t\tif (with_cursor) {\n\t\t\t\tvar info = this.font.glyphs[32];\n\t\t\t\tif (info) {\n\t\t\t\t\ttext_w += info.advance * this.fontsize;\n\t\t\t\t\tif (!text_h) text_h = this.fontsize * this.linespacing;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.text_w = text_w;\n\t\t\tthis.text_h = text_h;\n\t\t};\n\n\t\t// lets add some strings\n\t\tthis.add = function (string, im1, im2, im3) {\n\t\t\tvar length = string.length;\n\t\t\tthis.ensureSize(this.length + length);\n\n\t\t\tvar m1 = im1,\n\t\t\t    m2 = im2,\n\t\t\t    m3 = im3;\n\t\t\t// alright lets convert some text babeh!\n\t\t\tvar array;\n\t\t\tif (string.struct) array = string.array;\n\t\t\tvar glyphs = this.font.glyphs;\n\t\t\tfor (var i = string.start || 0; i < length; i++) {\n\t\t\t\tvar unicode;\n\t\t\t\tif (array) {\n\t\t\t\t\tunicode = array[i * 4];\n\t\t\t\t\tm1 = array[i * 4 + 1];\n\t\t\t\t\tm2 = array[i * 4 + 2];\n\t\t\t\t\tm3 = array[i * 4 + 3];\n\t\t\t\t} else {\n\t\t\t\t\tunicode = string.charCodeAt(i);\n\t\t\t\t}\n\n\t\t\t\tvar info = glyphs[unicode];\n\t\t\t\tif (!info) info = glyphs[32], unicode = 32;\n\n\t\t\t\t// lets add some vertices\n\t\t\t\tif (unicode == 10) {\n\t\t\t\t\t// newline\n\t\t\t\t\tthis.add_x = this.start_x;\n\t\t\t\t\tthis.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t}\n\n\t\t\t\tthis.addGlyph(info, unicode, m1, m2, m3);\n\t\t\t\t//if(!(m1<0) &&  unicode == 10){ // newline\n\t\t\t\t//\tthis.add_x = this.start_x\n\t\t\t\t//\tthis.add_y += this.fontsize * this.linespacing\n\t\t\t\t//}\n\t\t\t}\n\t\t\tif (this.add_y > this.text_h) this.text_h = this.add_y;\n\t\t};\n\n\t\t// lets add some strings\n\t\tthis.addAtPos = function (string, pos, m1, m2, m3) {\n\t\t\tvar length = string.length;\n\n\t\t\tthis.add_x = pos[0];\n\t\t\tthis.add_y = pos[1];\n\t\t\tthis.add_z = pos[2];\n\n\t\t\t// alright lets convert some text babeh!\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar unicode = string.struct ? string.array[i * 4] : string.charCodeAt(i);\n\t\t\t\tvar info = this.font.glyphs[unicode];\n\t\t\t\tif (!info) info = this.font.glyphs[32];\n\t\t\t\t// lets add some vertices\n\t\t\t\tthis.addGlyph(info, unicode, m1, m2, m3);\n\t\t\t\tif (unicode == 10) {\n\t\t\t\t\t// newline\n\t\t\t\t\tthis.add_x = this.start_x;\n\t\t\t\t\tthis.add_y += this.fontsize * this.cursorspacing;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.add_y > this.text_h) this.text_h = this.add_y;\n\t\t};\n\n\t\tthis.__defineGetter__('char_count', function () {\n\t\t\treturn this.lengthQuad();\n\t\t});\n\n\t\t// get the character coordinates\n\t\tthis.charCoords = function (off) {\n\t\t\tif (off >= this.lengthQuad()) {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.add_x,\n\t\t\t\t\ty: this.add_y, //- this.line_height +this.fontsize * this.cursor_sink,\n\t\t\t\t\tw: 0,\n\t\t\t\t\th: this.line_height\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar info = this.font.glyphs[this.charCodeAt(off)];\n\t\t\tif (!info) info = this.font.glyphs[32];\n\t\t\tif (isNaN(off)) debugger;\n\t\t\tvar coords = {\n\t\t\t\tx: this.array[off * 6 * 10 + 0] - this.fontsize * info.min_x,\n\t\t\t\ty: this.array[off * 6 * 10 + 1] + this.fontsize * info.min_y,\n\t\t\t\tw: info.advance * this.fontsize,\n\t\t\t\th: this.line_height\n\t\t\t};\n\t\t\treturn coords;\n\t\t};\n\n\t\tthis.char_tl_x = function (off) {\n\t\t\treturn this.array[off * 6 * 10 + 0];\n\t\t};\n\n\t\tthis.char_tr_x = function (off) {\n\t\t\treturn this.array[off * 6 * 10 + 0 + 10];\n\t\t};\n\n\t\tthis.tagAt = function (off, tagid) {\n\t\t\treturn this.array[off * 6 * 10 + 6 + (tagid || 0)];\n\t\t};\n\n\t\tthis.offsetFromTag = function (tagid, tag, start) {\n\t\t\tvar off = start || 0,\n\t\t\t    len = this.length;\n\t\t\twhile (Math.abs(this.array[off * 6 * 10 + 7 + tagid] - tag) > 0.001) {\n\n\t\t\t\tif (off >= len) return -1;\n\t\t\t\toff++;\n\t\t\t}\n\t\t\treturn off;\n\t\t};\n\n\t\tthis.offsetFromPos = function (x, y) {\n\t\t\tvar height = this.line_height;\n\t\t\t//console.log(x, y)\n\t\t\t//if(y < 0) return -2\n\t\t\tvar array = this.array;\n\t\t\tvar fontsize = this.fontsize;\n\t\t\tvar line_height = this.line_height;\n\t\t\tvar glyphs = this.font.glyphs;\n\t\t\tvar sink = fontsize * this.cursor_sink;\n\n\t\t\tfor (var len = this.lengthQuad(), o = len - 1; o >= 0; o--) {\n\n\t\t\t\tvar char_code = parseInt(array[o * 6 * 10 + 6]);\n\t\t\t\tvar info = glyphs[char_code];\n\n\t\t\t\tvar y2 = array[o * 6 * 10 + 1] + fontsize * info.min_y + sink;\n\t\t\t\tvar y1 = y2 - line_height;\n\n\t\t\t\tif (y >= y1 && y <= y2) {\n\t\t\t\t\tvar tl_x = this.array[o * 6 * 10 + 0];\n\t\t\t\t\tvar tr_x = this.array[o * 6 * 10 + 0 + 10];\n\t\t\t\t\tvar hx = (tl_x + tr_x) / 2;\n\n\t\t\t\t\t// lets debug paint these 2\n\t\t\t\t\tif (this.debug_mesh) {\n\t\t\t\t\t\tthis.debug_mesh.length = 0;\n\t\t\t\t\t\tthis.debug_mesh.add(tl_x, y1, 3, 3, 0.);\n\t\t\t\t\t\tthis.debug_mesh.add(tr_x, y2, 3, 3, 1.);\n\t\t\t\t\t\tthis.debug_mesh.add(x, y, 3, 3, 2.);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.charCodeAt(o - 1) == 10 && x < tl_x) {\n\t\t\t\t\t\treturn o;\n\t\t\t\t\t}\n\t\t\t\t\tif (x >= tl_x && x <= hx) {\n\t\t\t\t\t\treturn o;\n\t\t\t\t\t}\n\t\t\t\t\tif (o == 0 && x < tl_x) {\n\t\t\t\t\t\treturn -1; // to the left\n\t\t\t\t\t}\n\t\t\t\t\tif (o == len - 1 && x > tr_x) {\n\t\t\t\t\t\t//if(char_code ==10) return o\n\t\t\t\t\t\treturn -4; // to the right of self\n\t\t\t\t\t}\n\t\t\t\t\tif (x > hx) {\n\t\t\t\t\t\t//if(char_code == 10) return o\n\t\t\t\t\t\treturn o + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (y > y2) {\n\t\t\t\t\t//console.log(y, y2, -3)\n\t\t\t\t\treturn -3; // below self\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -2; // above self\n\t\t};\n\n\t\tthis.cursorRect = function (off) {\n\t\t\tvar coords = this.charCoords(off);\n\t\t\t// do a little bit of alignment fixery\n\t\t\tvar m1 = this.tagAt(off, 1);\n\t\t\tif (m1 < 0) {\n\n\t\t\t\t// lets check the alignment mode\n\t\t\t\tvar format = m1 * -1;\n\t\t\t\t//var indent = parseInt(m1/65536)\n\t\t\t\tvar mode = Math.floor(format / 256) % 256;\n\n\t\t\t\tif (this.charCodeAt(off) === 10) {\n\t\t\t\t\tcoords = this.charCoords(off - 1);\n\t\t\t\t\tif (this.charCodeAt(off - 1) !== 10) {\n\t\t\t\t\t\tcoords.x = coords.x + coords.w;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// add padd\n\t\t\t\t\t\tcoords.x = coords.x + coords.w;\n\t\t\t\t\t\tvar padding = format % 256;\n\t\t\t\t\t\tvar info = this.font.glyphs[10];\n\t\t\t\t\t\tvar fontsize = this.array[off * 6 * 10 + 3];\n\t\t\t\t\t\tcoords.x += (padding - 1) * info.advance * fontsize;\n\t\t\t\t\t}\n\t\t\t\t} else if (mode & 1) {\n\t\t\t\t\tvar coords1 = this.charCoords(off - 1);\n\t\t\t\t\tcoords.x = coords1.x + coords1.w;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcoords.y -= coords.h - this.fontsize * this.cursor_sink;\n\t\t\treturn coords;\n\t\t};\n\n\t\tthis.charCodeAt = function (off) {\n\t\t\treturn this.array[off * 6 * 10 + 6];\n\t\t};\n\n\t\tthis.charAt = function (off) {\n\t\t\treturn String.fromCharCode(this.charCodeAt(off));\n\t\t};\n\n\t\tthis.serializeText = function (start, end) {\n\t\t\tvar str = '';\n\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\tstr += String.fromCharCode(this.charCodeAt(i));\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tthis.serializeTags = function (start, end) {\n\t\t\t// lets serialize the tags array\n\t\t\tvar out = vec4.array(end - start);\n\t\t\tvar a = this.array;\n\t\t\tvar o = out.array;\n\t\t\tfor (var i = start, x = 0; i < end; x += 4, i++) {\n\t\t\t\to[x] = a[i * 6 * 10 + 6];\n\t\t\t\to[x + 1] = a[i * 6 * 10 + 7];\n\t\t\t\to[x + 2] = a[i * 6 * 10 + 8];\n\t\t\t\to[x + 3] = a[i * 6 * 10 + 9];\n\t\t\t}\n\t\t\tout.length = x >> 2;\n\t\t\treturn out;\n\t\t};\n\n\t\tthis.setLength = function (len) {\n\n\t\t\t// if we are inserting at a newline, we need to grab the previous\n\t\t\tvar off = len;\n\t\t\tif (this.charCodeAt(len) === 10) off -= 1;\n\t\t\tvar m1 = this.array[off * 6 * 10 + 7];\n\t\t\t// if its a padded character we need to compute the new add_x differently\n\t\t\tif (m1 < 0 && -m1 & 65535) {\n\n\t\t\t\tvar format = m1 * -1;\n\t\t\t\t//var indent = parseInt(m1/65536)\n\t\t\t\tvar mode = Math.floor(format / 256) % 256;\n\t\t\t\tvar rect = this.charCoords(off);\n\n\t\t\t\tthis.length = len * 6;\n\t\t\t\tthis.add_x = rect.x; //+ rect.w\n\t\t\t\tthis.add_y = rect.y;\n\t\t\t\t// rip off padding\n\n\t\t\t\tif (mode & 1) {\n\t\t\t\t\tvar padding = format % 256;\n\t\t\t\t\tvar info = this.font.glyphs[this.array[off * 6 * 10 + 6]];\n\t\t\t\t\tvar fontsize = this.array[off * 6 * 10 + 3];\n\t\t\t\t\tthis.add_x -= padding * info.advance * fontsize; //- rect.w\n\t\t\t\t} else if (mode & 2) {\n\t\t\t\t\tconsole.log(2);\n\t\t\t\t\tvar padding = format % 256;\n\t\t\t\t\tvar info = this.font.glyphs[this.array[off * 6 * 10 + 6]];\n\t\t\t\t\tvar fontsize = this.array[off * 6 * 10 + 3];\n\t\t\t\t\tthis.add_x += padding * info.advance * fontsize; //- rect.w\n\t\t\t\t} else if (mode === 4) {\n\t\t\t\t\tconsole.log(4);\n\t\t\t\t\tvar padding = format % 256;\n\t\t\t\t\tvar info = this.font.glyphs[this.array[off * 6 * 10 + 6]];\n\t\t\t\t\tvar fontsize = this.array[off * 6 * 10 + 3];\n\t\t\t\t\tthis.add_x += padding * info.advance * fontsize - rect.w;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar rect = this.charCoords(off);\n\t\t\tthis.length = len * 6;\n\t\t\tthis.add_x = rect.x;\n\t\t\tthis.add_y = rect.y;\n\t\t\tif (off !== len) this.add_x += rect.w;\n\t\t};\n\n\t\tthis.insertText = function (off, text) {\n\t\t\t// ok lets pull in the 'rest' as string\n\t\t\t//var str = this.serializeText(off, this.lengthQuad())\n\t\t\tvar tags = this.serializeTags(off, this.lengthQuad());\n\t\t\t// lets set the length and start adding\n\t\t\tvar rect = this.charCoords(off);\n\t\t\tthis.setLength(off);\n\t\t\tthis.add(text);\n\t\t\tthis.add(tags);\n\t\t\tthis.computeBounds(true);\n\t\t\treturn text.length;\n\t\t};\n\n\t\tthis.removeText = function (off, end) {\n\t\t\tvar tags = this.serializeTags(end, this.lengthQuad());\n\t\t\tthis.setLength(off);\n\t\t\tthis.add(tags);\n\t\t\t// recompute the bounds\n\t\t\tthis.computeBounds(true);\n\n\t\t\treturn tags.length;\n\t\t};\n\t});\n\n\t// for type information\n\tthis.mesh = this.textgeom.array();\n\n\t// this thing makes a new text array buffer\n\tthis.newText = function (length) {\n\t\tvar buf = this.textgeom.array((length || 0) * 6);\n\t\tbuf.font = this.font;\n\t\tbuf.clear();\n\t\treturn buf;\n\t};\n\n\tthis.subpixel = false;\n\n\tthis.glyphy_mesh_sdf = function () {\n\t\treturn glyphy_compute_position();\n\t};\n\n\tthis.glyphy_mesh_atlas = function () {\n\t\tglyph = glyph_vertex_transcode(mesh.tex);\n\t\treturn glyphy_compute_position();\n\t};\n\n\t// glyphy shader library\n\tthis.GLYPHY_INFINITY = '1e9';\n\tthis.GLYPHY_EPSILON = '1e-5';\n\tthis.GLYPHY_MAX_NUM_ENDPOINTS = '32';\n\n\t//this.paint = function(p, m, pixelscale){\n\t//\tif(abs(mesh.tag.x-32.)<0.01 || abs(mesh.tag.x-10.)<0.01) discard\n\t//\treturn vec4(-1.)\n\t//}\n\n\tthis.moddist = function (pos, dist) {\n\t\treturn dist;\n\t};\n\n\tthis.glyphy_arc_t = defineDreem.struct({\n\t\tp0: vec2,\n\t\tp1: vec2,\n\t\td: float\n\t}, 'glyphy_arc_t');\n\n\tthis.glyphy_arc_endpoint_t = defineDreem.struct({\n\t\t/* Second arc endpoint */\n\t\tp: vec2,\n\t\t/* Infinity if this endpoint does not form an arc with the previous\n   * endpoint.  Ie. a \"move_to\".  Test with glyphy_isinf().\n   * Arc depth otherwise.  */\n\t\td: float\n\t}, 'glyphy_arc_endpoint_t');\n\n\tthis.glyphy_arc_list_t = defineDreem.struct({\n\t\t/* Number of endpoints in the list.\n   * Will be zero if we're far away inside or outside, in which case side is set.\n   * Will be -1 if this arc-list encodes a single line, in which case line_* are set. */\n\t\tnum_endpoints: int,\n\n\t\t/* If num_endpoints is zero, this specifies whether we are inside(-1)\n   * or outside(+1).  Otherwise we're unsure(0). */\n\t\tside: int,\n\t\t/* Offset to the arc-endpoints from the beginning of the glyph blob */\n\t\toffset: int,\n\n\t\t/* A single line is all we care about.  It's right here. */\n\t\tline_angle: float,\n\t\tline_distance: float /* From nominal glyph center */\n\t}, 'glyphy_arc_list_t');\n\n\tthis.glyphy_isinf = function (v) {\n\t\treturn abs(v) >= GLYPHY_INFINITY * .5;\n\t};\n\n\tthis.glyphy_iszero = function (v) {\n\t\treturn abs(v) <= GLYPHY_EPSILON * 2.;\n\t};\n\n\tthis.glyphy_ortho = function (v) {\n\t\treturn vec2(-v.y, v.x);\n\t};\n\n\tthis.glyphy_float_to_byte = function (v) {\n\t\treturn int(v * (256. - GLYPHY_EPSILON));\n\t};\n\n\tthis.glyphy_vec4_to_bytes = function (v) {\n\t\treturn ivec4(v * (256. - GLYPHY_EPSILON));\n\t};\n\n\tthis.glyphy_float_to_two_nimbles = function (v) {\n\t\tvar f = glyphy_float_to_byte(v);\n\t\treturn ivec2(f / 16, int(mod(float(f), 16.)));\n\t};\n\n\t/* returns tan(2 * atan(d)) */\n\tthis.glyphy_tan2atan = function (d) {\n\t\tvar a = 2. * d;\n\t\tvar b = 1. - d * d;\n\t\treturn a / b;\n\t};\n\n\tthis.glyphy_arc_endpoint_decode = function (v, nominal_size) {\n\t\tvar p = (vec2(glyphy_float_to_two_nimbles(v.a)) + v.gb) / 16.;\n\t\tvar d = v.r;\n\t\tif (d == 0.) d = GLYPHY_INFINITY;else d = float(glyphy_float_to_byte(d) - 128) * .5 / 127.;\n\n\t\treturn glyphy_arc_endpoint_t(p * vec2(nominal_size), d);\n\t};\n\n\tthis.glyphy_arc_center = function (a) {\n\t\treturn mix(a.p0, a.p1, .5) + glyphy_ortho(a.p1 - a.p0) / (2. * glyphy_tan2atan(a.d));\n\t};\n\n\tthis.glyphy_arc_wedge_contains = function (a, p) {\n\t\tvar d2 = glyphy_tan2atan(a.d);\n\t\treturn dot(p - a.p0, (a.p1 - a.p0) * mat2(1, d2, -d2, 1)) >= 0. && dot(p - a.p1, (a.p1 - a.p0) * mat2(1, -d2, d2, 1)) <= 0.;\n\t};\n\n\tthis.glyphy_arc_wedge_signed_dist_shallow = function (a, p) {\n\t\tvar v = normalize(a.p1 - a.p0);\n\n\t\tvar line_d = dot(p - a.p0, glyphy_ortho(v)); // * .1abs on sin(time.sec+p.x)\n\n\t\tif (a.d == 0.) return line_d;\n\t\tvar d0 = dot(p - a.p0, v);\n\t\tif (d0 < 0.) return sign(line_d) * distance(p, a.p0);\n\n\t\tvar d1 = dot(a.p1 - p, v);\n\t\tif (d1 < 0.) return sign(line_d) * distance(p, a.p1);\n\n\t\tvar d2 = d0 * d1;\n\t\tvar r = 2. * a.d * d2;\n\t\tr = r / d2;\n\t\tif (r * line_d > 0.) return sign(line_d) * min(abs(line_d + r), min(distance(p, a.p0), distance(p, a.p1)));\n\n\t\treturn line_d + r;\n\t};\n\n\tthis.glyphy_arc_wedge_signed_dist = function (a, p) {\n\t\tif (abs(a.d) <= .03) return glyphy_arc_wedge_signed_dist_shallow(a, p);\n\t\tvar c = glyphy_arc_center(a);\n\t\treturn sign(a.d) * (distance(a.p0, c) - distance(p, c));\n\t};\n\n\tthis.glyphy_arc_extended_dist = function (a, p) {\n\t\t/* Note: this doesn't handle points inside the wedge. */\n\t\tvar m = mix(a.p0, a.p1, .5);\n\t\tvar d2 = glyphy_tan2atan(a.d);\n\t\tif (dot(p - m, a.p1 - m) < 0.) return dot(p - a.p0, normalize((a.p1 - a.p0) * mat2(+d2, -1, +1, +d2)));else return dot(p - a.p1, normalize((a.p1 - a.p0) * mat2(-d2, -1, +1, -d2)));\n\t};\n\n\tthis.glyphy_arc_list_offset = function (p, nominal_size) {\n\t\tvar cell = ivec2(clamp(floor(p), vec2(0., 0.), vec2(nominal_size - 1)));\n\t\treturn cell.y * nominal_size.x + cell.x;\n\t};\n\n\tthis.glyphy_arc_list_decode = function (v, nominal_size) {\n\n\t\tvar l = glyphy_arc_list_t();\n\t\tvar iv = glyphy_vec4_to_bytes(v);\n\n\t\tl.side = 0; /* unsure */\n\n\t\tif (iv.r == 0) {\n\t\t\t/* arc-list encoded */\n\t\t\tl.offset = iv.g * 256 + iv.b;\n\t\t\tl.num_endpoints = iv.a;\n\t\t\tif (l.num_endpoints == 255) {\n\t\t\t\tl.num_endpoints = 0;\n\t\t\t\tl.side = -1;\n\t\t\t} else if (l.num_endpoints == 0) {\n\t\t\t\tl.side = 1;\n\t\t\t}\n\t\t} else {\n\t\t\t/* single line encoded */\n\t\t\tl.num_endpoints = -1;\n\t\t\tl.line_distance = float((iv.r - 128) * 256 + iv.g - 0x4000) / float(0x1FFF) * max(float(nominal_size.x), float(nominal_size.y));\n\t\t\tl.line_angle = float(-(iv.b * 256 + iv.a - 0x8000)) / float(0x7FFF) * 3.14159265358979;\n\t\t}\n\t\treturn l;\n\t};\n\n\tthis.glyphy_antialias = function (d) {\n\t\treturn smoothstep(-.75, +.75, d);\n\t};\n\n\tthis.glyphy_arc_list = function (p, nominal_size, _atlas_pos) {\n\t\tvar cell_offset = glyphy_arc_list_offset(p, nominal_size);\n\t\tvar arc_list_data = glyphy_atlas_lookup(cell_offset, _atlas_pos);\n\t\treturn glyphy_arc_list_decode(arc_list_data, nominal_size);\n\t};\n\n\tthis.glyphy_sdf = function (p, nominal_size, _atlas_pos) {\n\n\t\tvar arc_list = glyphy_arc_list(p, nominal_size, _atlas_pos);\n\n\t\t/* Short-circuits */\n\t\tif (arc_list.num_endpoints == 0) {\n\t\t\t/* far-away cell */\n\t\t\treturn GLYPHY_INFINITY * float(arc_list.side);\n\t\t}\n\t\tif (arc_list.num_endpoints == -1) {\n\t\t\t/* single-line */\n\t\t\tvar angle = arc_list.line_angle; //+ 90.*time\n\t\t\tvar n = vec2(cos(angle), sin(angle));\n\t\t\treturn dot(p - vec2(nominal_size) * .5, n) - arc_list.line_distance;\n\t\t}\n\n\t\tvar side = float(arc_list.side);\n\t\tvar min_dist = GLYPHY_INFINITY;\n\t\tvar closest_arc = glyphy_arc_t();\n\t\tvar endpoint = glyphy_arc_endpoint_t();\n\t\tvar endpoint_prev = glyphy_arc_endpoint_decode(glyphy_atlas_lookup(arc_list.offset, _atlas_pos), nominal_size);\n\n\t\tfor (var i = 1; i < GLYPHY_MAX_NUM_ENDPOINTS; i++) {\n\t\t\tif (i >= arc_list.num_endpoints) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tendpoint = glyphy_arc_endpoint_decode(glyphy_atlas_lookup(arc_list.offset + i, _atlas_pos), nominal_size);\n\n\t\t\tvar a = glyphy_arc_t(endpoint_prev.p, endpoint.p, endpoint.d);\n\t\t\ta.p0 = endpoint_prev.p;\n\t\t\ta.p1 = endpoint.p;\n\t\t\ta.d = endpoint.d;\n\n\t\t\tendpoint_prev = endpoint;\n\n\t\t\tif (!glyphy_isinf(a.d)) {\n\n\t\t\t\tif (glyphy_arc_wedge_contains(a, p)) {\n\t\t\t\t\tvar sdist = glyphy_arc_wedge_signed_dist(a, p);\n\t\t\t\t\tvar udist = abs(sdist) * (1. - GLYPHY_EPSILON);\n\t\t\t\t\tif (udist <= min_dist) {\n\t\t\t\t\t\tmin_dist = udist;\n\n\t\t\t\t\t\tside = sdist <= 0. ? -1. : +1.;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar udist = min(distance(p, a.p0), distance(p, a.p1));\n\t\t\t\t\tif (udist < min_dist) {\n\t\t\t\t\t\tmin_dist = udist;\n\t\t\t\t\t\tside = 0.; /* unsure */\n\t\t\t\t\t\tclosest_arc = a;\n\t\t\t\t\t} else if (side == 0. && udist == min_dist) {\n\t\t\t\t\t\t/* If this new distance is the same as the current minimum,\n      * compare extended distances.  Take the sign from the arc\n      * with larger extended distance. */\n\t\t\t\t\t\tvar old_ext_dist = glyphy_arc_extended_dist(closest_arc, p);\n\t\t\t\t\t\tvar new_ext_dist = glyphy_arc_extended_dist(a, p);\n\n\t\t\t\t\t\tvar ext_dist = abs(new_ext_dist) <= abs(old_ext_dist) ? old_ext_dist : new_ext_dist;\n\n\t\t\t\t\t\t//#ifdef GLYPHY_SDF_PSEUDO_DISTANCE\n\t\t\t\t\t\t/* For emboldening and stuff: */\n\t\t\t\t\t\tmin_dist = abs(ext_dist);\n\t\t\t\t\t\t//#endif\n\t\t\t\t\t\tside = sign(ext_dist);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (side == 0.) {\n\t\t\t// Technically speaking this should not happen, but it does.  So try to fix it.\n\t\t\tvar ext_dist = glyphy_arc_extended_dist(closest_arc, p);\n\t\t\tside = sign(ext_dist);\n\t\t}\n\n\t\treturn min_dist * side;\n\t};\n\n\tthis.glyphy_point_dist = function (p, nominal_size, _atlas_pos) {\n\t\tvar arc_list = glyphy_arc_list(p, nominal_size, _atlas_pos);\n\n\t\tvar side = float(arc_list.side);\n\t\tvar min_dist = GLYPHY_INFINITY;\n\n\t\tif (arc_list.num_endpoints == 0) {\n\t\t\treturn min_dist;\n\t\t}\n\t\tvar endpoint = glyphy_arc_endpoint_t();\n\t\tvar endpoint_prev = glyphy_arc_endpoint_decode(glyphy_atlas.lookup(arc_list.offset, _atlas_pos), nominal_size);\n\t\tfor (var i = 1; i < GLYPHY_MAX_NUM_ENDPOINTS; i++) {\n\t\t\tif (i >= arc_list.num_endpoints) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tendpoint = glyphy_arc_endpoint_decode(glyphy_atlas.lookup(arc_list.offset + i, _atlas_pos), nominal_size);\n\t\t\tif (glyphy_isinf(endpoint.d)) continue;\n\t\t\tmin_dist = min(min_dist, distance(p, endpoint.p));\n\t\t}\n\t\treturn min_dist;\n\t};\n\n\tthis.glyph_vertex_transcode = function (v) {\n\t\tvar g = ivec2(v);\n\t\tvar corner = ivec2(mod(v, 2.));\n\t\tg /= 2;\n\t\tvar nominal_size = ivec2(mod(vec2(g), 64.));\n\t\treturn vec4(corner * nominal_size, g * 4);\n\t};\n\n\tthis.glyphy_sdf_encode = function (value) {\n\t\tvar enc = .75 - .25 * value;\n\t\treturn vec4(enc, enc, enc, 1.);\n\t};\n\n\tthis.glyphy_sdf_decode = function (value) {\n\t\treturn (.75 - value.r) * 4.;\n\t};\n\n\tthis.glyphy_sdf_generate = function () {\n\t\tvar glyph = glyph_vertex_transcode(glyphy_coords);\n\t\tvar nominal_size = (ivec2(mod(glyph.zw, 256.)) + 2) / 4;\n\t\tvar atlas_pos = ivec2(glyph.zw) / 256;\n\n\t\tvar p = glyph.xy;\n\t\treturn glyphy_sdf_encode(glyphy_sdf(p, nominal_size, atlas_pos));\n\t};\n\n\tthis.glyphy_sdf_lookup = function (pos) {\n\t\treturn texture2D(mesh.font.texture, pos, {\n\t\t\tMIN_FILTER: 'LINEAR',\n\t\t\tMAG_FILTER: 'LINEAR',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\tthis.glyphy_atlas_lookup = function (offset, _atlas_pos) {\n\t\tvar pos = (vec2(_atlas_pos.xy * mesh.font.item_geom + ivec2(mod(float(offset), mesh.font.item_geom_f.x), offset / mesh.font.item_geom.x)) + vec2(.5, .5)) / mesh.font.tex_geom_f;\n\n\t\treturn texture2D(mesh.font.texture, pos, {\n\t\t\tMIN_FILTER: 'NEAREST',\n\t\t\tMAG_FILTER: 'NEAREST',\n\t\t\tWRAP_S: 'CLAMP_TO_EDGE',\n\t\t\tWRAP_T: 'CLAMP_TO_EDGE'\n\t\t});\n\t};\n\n\t// draw using atlas\n\tthis.time = 0;\n\n\tthis.atExtend = function () {\n\t\tthis.mesh.font = this.font;\n\t\tbaseclass.atExtend.call(this);\n\t};\n\n\tthis.font_style_t = defineDreem.struct({\n\t\tpos: vec3,\n\t\tfgcolor: vec4,\n\t\toutlinecolor: vec4,\n\t\tboldness: float,\n\t\toutlinethickness: float,\n\t\toutline: bool,\n\t\tvisible: bool\n\t}, \"font_style_t\");\n\n\t// default text style\n\tthis.style = function (style, tag) {\n\t\treturn style;\n\t};\n\n\tthis.glyphy_compute_position = function () {\n\t\t// we want to compute a measure of scale relative to the actual pixels\n\t\tvar matrix = view.totalmatrix * view.viewmatrix;\n\n\t\tvar s = font_style_t(vec3(mesh.pos.x + mesh.shift.x, mesh.pos.y + mesh.shift.y, mesh.pos.z), view.fgcolor, view.outlinecolor, view.boldness, view.outlinethickness, view.outline, abs(mesh.tag.x - 10.) < 0.001 || abs(mesh.tag.x - 32.) < 0.001 ? false : true);\n\n\t\ts = view.textstyle(s, mesh.tag);\n\t\t// plug it into varyings\n\t\tstylefgcolor = s.fgcolor;\n\t\tstyleoutlinecolor = s.outlinecolor;\n\t\tstylepack = vec3(s.boldness, s.outlinethickness, s.outline ? 1.0 : 0.0);\n\n\t\t// hide it\n\t\tif (!s.visible) return vec4(0.);\n\n\t\tvar pos1 = vec4(s.pos, 1.) * matrix;\n\t\tpos1.w += view.polygonoffset;\n\t\treturn pos1;\n\t};\n\n\t// draw using SDF texture\n\tthis.glyphy_sdf_draw = function () {\n\t\tvar pos = mesh.tex;\n\n\t\tvar m = length(vec2(length(dFdx(mesh.tex)), length(dFdy(mesh.tex)))) * 0.25;\n\n\t\tvar dist = glyphy_sdf_decode(glyphy_sdf_lookup(pos)) * 0.0012;\n\n\t\tdist -= stylepack.x / 300.;\n\t\tdist = dist / m * pixel_contrast;\n\n\t\t//dist = moddist(pos, dist)\n\t\t// TODO(aki): verify that this is correct\n\t\tif (dist >= 1. + stylepack.y) {\n\t\t\tdiscard;\n\t\t}\n\n\t\tvar alpha = glyphy_antialias(-dist);\n\n\t\tif (stylepack.z > 0.) {\n\t\t\tvar dist2 = abs(dist) - stylepack.y + 4.;\n\n\t\t\tvar alpha2 = glyphy_antialias(-dist2);\n\n\t\t\tvar rgb = mix(stylefgcolor.rgb, styleoutlinecolor.rgb, alpha2);\n\n\t\t\treturn vec4(rgb, alpha * stylefgcolor.a * view.opacity);\n\t\t}\n\n\t\treturn vec4(stylefgcolor.rgb, alpha * stylefgcolor.a * view.opacity);\n\n\t\t//if(mesh.gamma_adjust.r != 1.){\n\t\t//\talpha = pow(alpha, 1. / mesh.gamma_adjust.r)\n\t\t//}\n\n\t\t//return vec4(col.rgb, pow(glyphy_antialias(-dist), mesh.gamma_adjust.x))\n\t};\n\n\tthis.glyphy_sdf_draw_subpixel_aa = function () {\n\t\tvar pos = mesh.tex;\n\n\t\tvar m = length(vec2(length(dFdx(pos)), length(dFdy(pos)))) * SQRT_1_2;\n\t\t//var m = pixelscale*.5//0.005\n\t\t// screenspace length\n\t\tmesh.scaling = 500. * m;\n\n\t\tvar sub_delta = vec2(m / subpixel_distance * 0.1, 0);\n\n\t\tvar v1 = glyphy_sdf_decode(glyphy_sdf_lookup(pos - sub_delta * 2.));\n\t\tvar v2 = glyphy_sdf_decode(glyphy_sdf_lookup(pos - sub_delta));\n\t\tvar v3 = glyphy_sdf_decode(glyphy_sdf_lookup(pos));\n\t\tvar v4 = glyphy_sdf_decode(glyphy_sdf_lookup(pos + sub_delta));\n\t\tvar v5 = glyphy_sdf_decode(glyphy_sdf_lookup(pos + sub_delta * 2.));\n\n\t\tvar dist = vec3(v1 + v2 + v3, v2 + v3 + v4, v3 + v4 + v5) * 0.001;\n\n\t\tdist -= stylepack.x / 300.;\n\t\tdist = dist / m * pixel_contrast;\n\n\t\tif (stylepack.z > 0.) {\n\t\t\tdist = abs(dist) - stylepack.y;\n\t\t}\n\n\t\t// TODO(aki): verify that this is correct\n\t\tif (dist.y > 1. + stylepack.y) {\n\t\t\tdiscard;\n\t\t}\n\n\t\tvar alpha = glyphy_antialias(-dist);\n\n\t\talpha = pow(alpha, pixel_gamma_adjust);\n\t\t//var max_alpha = max(max(alpha.r,alpha.g),alpha.b)\n\t\t//if(max_alpha >0.5) max_alpha = 1.\n\t\t//return vec4(alpha.b<0.?'yellow'.rgb:'blue'.rgb, 1)\n\t\treturn vec4(mix(view.bgcolor.rgb, stylefgcolor.rgb, alpha.rgb), view.opacity); //max_alpha)\n\t};\n\n\tthis.glyphy_atlas_draw = function () {\n\t\t//'trace'\n\t\tvar nominal_size = (ivec2(mod(glyph.zw, 256.)) + 2) / 4;\n\t\tvar atlas_pos = ivec2(glyph.zw) / 256;\n\t\tvar pos = glyph.xy;\n\t\t/* isotropic antialiasing */\n\t\tvar m = length(vec2(length(dFdx(pos)), length(dFdy(pos)))) * SQRT_1_2; //*0.1\n\n\t\tvar dist = glyphy_sdf(glyph.xy, nominal_size, atlas_pos); //+ noise.noise3d(vec3(glyph.x, glyph.y, time))*0.6\n\n\t\tdist -= stylepack.x;\n\t\t//debug(mesh.distance)\n\t\tdist = dist / m * pixel_contrast;\n\n\t\tvar dist2 = dist;\n\t\tif (stylepack.z > 0.) {\n\t\t\tdist2 = abs(dist) - stylepack.y;\n\t\t}\n\n\t\t// TODO(aki): verify that this is correct\n\t\tif (dist > 1. + stylepack.y) {\n\t\t\tdiscard;\n\t\t}\n\n\t\tvar alpha = glyphy_antialias(-dist);\n\t\tvar alpha2 = glyphy_antialias(-dist2);\n\n\t\t//if(mesh.gamma_adjust.r != 1.){\n\t\t//\talpha = pow(alpha, 1. / mesh.gamma_adjust.r)\n\t\t//}\n\n\t\tvar rgb = mix(stylefgcolor.rgb, styleoutlinecolor.rgb, alpha2 - alpha);\n\n\t\treturn vec4(this.textpixel(rgb, pos, dist), max(alpha, alpha2) * stylefgcolor.a * view.opacity);\n\t};\n\n\tthis.glyphy_mesh = this.glyphy_mesh_sdf;\n\tthis.glyphy_pixel = this.glyphy_sdf_draw;\n\n\tthis.textpixel = function (col, pos, dist) {\n\t\treturn col;\n\t};\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/typeface/typefaceshader.js\n// module id = 233\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/typeface/typefaceshader.js?");

/***/ }),
/* 234 */,
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 235\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/base64-js/index.js?");

/***/ }),
/* 236 */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 236\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/ieee754/index.js?");

/***/ }),
/* 237 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 237\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/isarray/index.js?");

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 238\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/setimmediate/setImmediate.js?");

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

eval("var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(238);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 239\n// module chunks = 0\n\n//# sourceURL=webpack:///./~/timers-browserify/main.js?");

/***/ })
/******/ ]);